From b5d6803f0898e931cf772d3d0755704ab8488e63 Mon Sep 17 00:00:00 2001
From: erouault <erouault>
Date: Sun, 9 Oct 2016 11:03:36 +0000
Subject: [PATCH] * tools/tiff2pdf.c: fix write buffer overflow of 2 bytes on
 JPEG compressed images. Reported by Tyler Bohan of Cisco Talos as
 TALOS-CAN-0187 / CVE-2016-5652. Also prevents writing 2 extra uninitialized
 bytes to the file stream.

---
 ChangeLog        |  7 +++++++
 tools/tiff2pdf.c | 17 ++++++++++-------
 2 files changed, 17 insertions(+), 7 deletions(-)

diff --git a/ChangeLog b/ChangeLog
index d38f3a5..d6e718d 100644
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,3 +1,10 @@
+2016-10-09 Even Rouault <even.rouault at spatialys.com>
+
+	* tools/tiff2pdf.c: fix write buffer overflow of 2 bytes on JPEG
+	compressed images. Reported by Tyler Bohan of Cisco Talos as
+	TALOS-CAN-0187 / CVE-2016-5652.
+	Also prevents writing 2 extra uninitialized bytes to the file stream.
+
 2016-10-08 Even Rouault <even.rouault at spatialys.com>
 
 	* tools/tiffcp.c: fix out-of-bounds write on tiled images with odd
diff --git a/tools/tiff2pdf.c b/tools/tiff2pdf.c
index 829d4cb..308235a 100644
--- a/tools/tiff2pdf.c
+++ b/tools/tiff2pdf.c
@@ -2834,21 +2834,24 @@ tsize_t t2p_readwrite_pdf_image_tile(T2P
 				return(0);
 			}
 			if(TIFFGetField(input, TIFFTAG_JPEGTABLES, &count, &jpt) != 0) {
-				if (count > 0) {
-					_TIFFmemcpy(buffer, jpt, count);
+				if (count >= 4) {
+                    /* Ignore EOI marker of JpegTables */
+					_TIFFmemcpy(buffer, jpt, count - 2);
 					bufferoffset += count - 2;
+                    /* Store last 2 bytes of the JpegTables */
 					table_end[0] = buffer[bufferoffset-2];
 					table_end[1] = buffer[bufferoffset-1];
-				}
-				if (count > 0) {
 					xuint32 = bufferoffset;
+                    bufferoffset -= 2;
 					bufferoffset += TIFFReadRawTile(
 						input, 
 						tile, 
-						(tdata_t) &(((unsigned char*)buffer)[bufferoffset-2]), 
+						(tdata_t) &(((unsigned char*)buffer)[bufferoffset]), 
 						-1);
-						buffer[xuint32-2]=table_end[0];
-						buffer[xuint32-1]=table_end[1];
+                    /* Overwrite SOI marker of image scan with previously */
+                    /* saved end of JpegTables */
+					buffer[xuint32-2]=table_end[0];
+					buffer[xuint32-1]=table_end[1];
 				} else {
 					bufferoffset += TIFFReadRawTile(
 						input, 
