From e9bd1b06fe25219cf0873fca70e46f01843fd9f4 Mon Sep 17 00:00:00 2001
From: erouault <erouault>
Date: Thu, 27 Apr 2017 17:29:26 +0000
Subject: [PATCH] =?UTF-8?q?*=20libtiff/tif=5Fojpeg.c:=20fix=20potential=20?=
 =?UTF-8?q?memory=20leak=20in=20OJPEGReadHeaderInfoSecTablesQTable,=20OJPE?=
 =?UTF-8?q?GReadHeaderInfoSecTablesDcTable=20and=20OJPEGReadHeaderInfoSecT?=
 =?UTF-8?q?ablesAcTable=20Patch=20by=20Nicol=C3=A1s=20Pe=C3=B1a.=20Fixes?=
 =?UTF-8?q?=20http://bugzilla.maptools.org/show=5Fbug.cgi=3Fid=3D2670?=
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

---
 ChangeLog           | 11 ++++++++++-
 libtiff/tif_ojpeg.c |  6 ++++++
 2 files changed, 16 insertions(+), 1 deletion(-)

diff --git a/ChangeLog b/ChangeLog
index 11639b98..cb25b006 100644
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,4 +1,13 @@
-2017-04-27
+2017-04-27 Even Rouault <even.rouault at spatialys.com>
+
+	* libtiff/tif_ojpeg.c: fix potential memory leak in
+	OJPEGReadHeaderInfoSecTablesQTable, OJPEGReadHeaderInfoSecTablesDcTable
+	and OJPEGReadHeaderInfoSecTablesAcTable
+	Patch by Nicolás Peña.
+	Fixes http://bugzilla.maptools.org/show_bug.cgi?id=2670
+
+2017-04-27 Even Rouault <even.rouault at spatialys.com>
+
 	* libtiff/tif_dirread.c: fix memory leak in non DEFER_STRILE_LOAD
 	mode (ie default) when there is both a StripOffsets and
 	TileOffsets tag, or a StripByteCounts and TileByteCounts
diff --git a/libtiff/tif_ojpeg.c b/libtiff/tif_ojpeg.c
index 5f6c684c..e79b5429 100644
--- a/libtiff/tif_ojpeg.c
+++ b/libtiff/tif_ojpeg.c
@@ -1783,6 +1783,8 @@ OJPEGReadHeaderInfoSecTablesQTable(TIFF*
                                 _TIFFfree(ob);
  				return(0);
                         }
+			if (sp->qtable[m]!=0)
+				_TIFFfree(sp->qtable[m]);
 			sp->qtable[m]=ob;
 			sp->sof_tq[m]=m;
 		}
@@ -1850,6 +1852,8 @@ OJPEGReadHeaderInfoSecTablesDcTable(TIFF
                                 _TIFFfree(rb);
  				return(0);
                         }
+			if (sp->dctable[m]!=0)
+				_TIFFfree(sp->dctable[m]);
 			sp->dctable[m]=rb;
 			sp->sos_tda[m]=(m<<4);
 		}
@@ -1917,6 +1921,8 @@ OJPEGReadHeaderInfoSecTablesAcTable(TIFF
                                 _TIFFfree(rb);
  				return(0);
                         }
+			if (sp->actable[m]!=0)
+				_TIFFfree(sp->actable[m]);
 			sp->actable[m]=rb;
 			sp->sos_tda[m]=(sp->sos_tda[m]|m);
 		}
