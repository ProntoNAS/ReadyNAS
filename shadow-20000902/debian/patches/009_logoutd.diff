--- shadow-19990827.orig/lib/port.c	Sun Dec  7 18:26:54 1997
+++ shadow-19990827/lib/port.c	Fri Apr 28 18:26:13 2000
@@ -169,16 +169,25 @@
 
 	buf[strlen (buf) - 1] = 0;
 
+	/* Wind past the first ';' to pass the "service" names used by
+	 * pam_time.so - Ben */
+	for (cp = buf ; *cp && *cp != ';' ; cp++)
+	    /* nothing */;
+	if (! *(++cp))
+	    goto again; /* line format error */
+	else
+	    *cp = '\0';
+
 	port.pt_names = ttys;
-	for (cp = buf, j = 0;j < PORT_TTY;j++) {
+	for (j = 0;j < PORT_TTY;j++) {
 		port.pt_names[j] = cp;
-		while (*cp && *cp != ':' && *cp != ',')
+		while (*cp && *cp != ';' && *cp != ',')
 			cp++;
 
 		if (! *cp)
 			goto again;	/* line format error */
 
-		if (*cp == ':')		/* end of tty name list */
+		if (*cp == ';')		/* end of tty name list */
 			break;
 
 		if (*cp == ',')		/* end of current tty name */
@@ -194,11 +203,11 @@
 	 * The last entry in the list is a (char *) 0 pointer.
 	 */
 
-	if (*cp != ':') {
+	if (*cp != ';') {
 		port.pt_users = users;
 		port.pt_users[0] = cp;
 
-		for (j = 1;*cp != ':';cp++) {
+		for (j = 1;*cp != ';';cp++) {
 			if (*cp == ',' && j < PORT_IDS) {
 				*cp++ = 0;
 				port.pt_users[j++] = cp;
@@ -208,7 +217,7 @@
 	} else
 		port.pt_users = 0;
 
-	if (*cp != ':')
+	if (*cp != ';')
 		goto again;
 
 	*cp++ = 0;
--- shadow-19990827.orig/lib/port.h	Thu May  1 19:14:43 1997
+++ shadow-19990827/lib/port.h	Fri Apr 28 18:19:42 2000
@@ -50,7 +50,7 @@
  * PORT_DAY - Day of the week to a bit value (0 = Sunday).
  */
 
-#define	PORTS	"/etc/porttime"
+#define	PORTS	"/etc/security/time.conf"
 #define	PORT_IDS	64
 #define	PORT_TTY	64
 #define	PORT_TIMES	24
--- shadow-19990827.orig/man/logoutd.8	Mon Dec 28 15:35:14 1998
+++ shadow-19990827/man/logoutd.8	Fri Apr 28 18:12:18 2000
@@ -35,16 +35,16 @@
 .SH DESCRIPTION
 .B logoutd
 enforces the login time and port restrictions specified in
-.IR /etc/porttime .
+.IR /etc/security/time.conf .
 .B logoutd
 should be started from \fI/etc/rc\fR.
-The \fI/etc/utmp\fR file is scanned periodically and each user name
+The \fI/var/run/utmp\fR file is scanned periodically and each user name
 is checked to see if the named user is permitted on the named port
 at the current time.
-Any login session which is violating the restrictions in \fI/etc/porttime\fR
+Any login session which is violating the restrictions in \fI/etc/security/time.conf\fR
 is terminated.
 .SH FILES
-/etc/porttime \- login and port permissions
+/etc/security/time.conf \- login and port permissions
 .br
-/etc/utmp \- current login sessions
+/var/run/utmp \- current login sessions
 .SH AUTHOR
--- shadow-19990827.orig/src/logoutd.c	Fri Aug 27 15:02:51 1999
+++ shadow-19990827/src/logoutd.c	Fri Apr 28 18:14:13 2000
@@ -90,7 +90,7 @@
 	/*
 	 * Check for how long they are allowed to stay logged in.
 	 * XXX - not implemented yet.  Need to add a new field to
-	 * /etc/porttime (login time limit in minutes, or no limit,
+	 * /etc/security/time.conf (login time limit in minutes, or no limit,
 	 * based on username, tty, and time of login).
 	 */
 	if (now - ut->ut_time > get_time_limit(user, ut->ut_line, ut->ut_time))
@@ -141,12 +141,12 @@
 
 
 /*
- * logoutd - logout daemon to enforce /etc/porttime file policy
+ * logoutd - logout daemon to enforce /etc/security/time.conf file policy
  *
  *	logoutd is started at system boot time and enforces the login
- *	time and port restrictions specified in /etc/porttime.  The
- *	utmp file is periodically scanned and offending users are logged
- *	off from the system.
+ *	time and port restrictions specified in /etc/security/time.conf.
+ *	The utmp file is periodically scanned and offending users are
+ *	logged off from the system.
  */
 
 int
