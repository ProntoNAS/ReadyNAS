From 41a55c909a7df9ee1d986a010351d23e19b39bba Mon Sep 17 00:00:00 2001
From: "H.Merijn Brand" <h.m.brand@xs4all.nl>
Date: Tue, 14 Jun 2011 20:12:01 +0200
Subject: Update PerlCheat to 5.14

Origin: upstream, http://perl5.git.perl.org/perl.git/commit/ab0ae0ad72e5601626d0b408edd884d7bd14d7dd
Bug-Debian: http://bugs.debian.org/691112
Patch-Name: fixes/perlcheat-update.diff

See the discussion at
 http://www.nntp.perl.org/group/perl.perl5.porters/2011/06/msg173391.html
---
 pod/perlcheat.pod |  118 +++++++++++++++++++++++++++--------------------------
 1 file changed, 60 insertions(+), 58 deletions(-)

diff --git a/pod/perlcheat.pod b/pod/perlcheat.pod
index d210fa0..deee2fe 100644
--- a/pod/perlcheat.pod
+++ b/pod/perlcheat.pod
@@ -10,68 +10,70 @@ already be overwhelming.
 
 =head2 The sheet
 
-  CONTEXTS  SIGILS             ARRAYS        HASHES
-  void      $scalar   whole:   @array        %hash
-  scalar    @array    slice:   @array[0, 2]  @hash{'a', 'b'}
-  list      %hash     element: $array[0]     $hash{'a'}
-            &sub
-            *glob    SCALAR VALUES
-                     number, string, reference, glob, undef
+  CONTEXTS  SIGILS  ref        ARRAYS        HASHES
+  void      $scalar SCALAR     @array        %hash
+  scalar    @array  ARRAY      @array[0, 2]  @hash{'a', 'b'}
+  list      %hash   HASH       $array[0]     $hash{'a'}
+            &sub    CODE
+            *glob   GLOB       SCALAR VALUES
+                    FORMAT     number, string, ref, glob, undef
   REFERENCES
-  \     references      $$foo[1]       aka $foo->[1]
-  $@%&* dereference     $$foo{bar}     aka $foo->{bar}
-  []    anon. arrayref  ${$$foo[1]}[2] aka $foo->[1]->[2]
-  {}    anon. hashref   ${$$foo[1]}[2] aka $foo->[1][2]
-  \()   list of refs
-                          NUMBERS vs STRINGS  LINKS
-  OPERATOR PRECEDENCE     =          =        perl.plover.com
-  ->                      +          .        search.cpan.org
-  ++ --                   == !=      eq ne         cpan.org
-  **                      < > <= >=  lt gt le ge   pm.org
-  ! ~ \ u+ u-             <=>        cmp           tpj.com
-  =~ !~                                            perldoc.com
-  * / % x                 SYNTAX
-  + - .                   for    (LIST) { }, for (a;b;c) { }
-  << >>                   while  ( ) { }, until ( ) { }
-  named uops              if     ( ) { } elsif ( ) { } else { }
-  < > <= >= lt gt le ge   unless ( ) { } elsif ( ) { } else { }
-  == != <=> eq ne cmp ~~  for equals foreach (ALWAYS)
+  \      reference       $$foo[1]       aka $foo->[1]
+  $@%&*  dereference     $$foo{bar}     aka $foo->{bar}
+  []     anon. arrayref  ${$$foo[1]}[2] aka $foo->[1]->[2]
+  {}     anon. hashref   ${$$foo[1]}[2] aka $foo->[1][2]
+  \()    list of refs
+                         NUMBERS vs STRINGS    LINKS
+  OPERATOR PRECEDENCE    =          =          perldoc.perl.org
+  ->                     +          .           search.cpan.org
+  ++ --                  == !=      eq ne              cpan.org
+  **                     < > <= >=  lt gt le ge          pm.org
+  ! ~ \ u+ u-            <=>        cmp                p3rl.org
+  =~ !~                                           perlmonks.org
+  * / % x                SYNTAX
+  + - .                  foreach (LIST) { }     for (a;b;c) { }
+  << >>                  while   (e) { }        until (e)   { }
+  named uops             if      (e) { } elsif (e) { } else { }
+  < > <= >= lt gt le ge  unless  (e) { } elsif (e) { } else { }
+  == != <=> eq ne cmp ~~ given   (e) { when (e) {} default {} }
   &
-  | ^              REGEX METACHARS            REGEX MODIFIERS
-  &&               ^     string begin         /i case insens.
-  || //            $     str. end (before \n) /m line based ^$
-  .. ...           +     one or more          /s . includes \n
-  ?:               *     zero or more         /x ign. wh.space
-  = += -= *= etc.  ?     zero or one          /g global
-  , =>             {3,7} repeat in range      /o cmpl pat. once
-  list ops         ()    capture
-  not              (?:)  no capture       REGEX CHARCLASSES
-  and              []    character class  .  == [^\n]
-  or xor           |     alternation      \s == whitespace
-                   \b    word boundary    \w == word characters
-                   \z    string end       \d == digits
-  DO                                      \S, \W and \D negate
-  use strict;        DON'T
-  use warnings;      "$foo"           LINKS
-  my $var;           $$variable_name  perl.com
-  open() or die $!;  `$userinput`     use.perl.org
-  use Modules;       /$userinput/     perl.apache.org
-
+  | ^             REGEX METACHARS          REGEX MODIFIERS
+  &&              ^      string begin      /i case insensitive
+  || //           $      str end (bfr \n)  /m line based ^$
+  .. ...          +      one or more       /s . includes \n
+  ?:              *      zero or more      /x ignore wh.space
+  = += -= *= etc  ?      zero or one       /p preserve
+  , =>            {3,7}  repeat in range   /a ASCII    /aa safe
+  list ops        |      alternation       /l locale   /d  dual
+  not             []     character class   /u Unicode
+  and             \b     word boundary     /e evaluate /ee rpts
+  or xor          \z     string end        /g global
+                  ()     capture           /o compile pat once
+  DEBUG           (?:p)  no capture
+   -MO=Deparse    (?#t)  comment           REGEX CHARCLASSES
+   -MO=Terse      (?=p)  ZW pos ahead      .   [^\n]
+   -D##           (?!p)  ZW neg ahead      \s  whitespace
+   -d:Trace       (?<=p) ZW pos behind \K  \w  word chars
+                  (?<!p) ZW neg behind     \d  digits
+  CONFIGURATION   (?>p)  no backtrack      \pP named property
+  perl -V:ivsize  (?|p|p)branch reset      \h  horiz.wh.space
+                  (?&NM) cap to name       \R  linebreak
+                                           \S \W \D \H negate
   FUNCTION RETURN LISTS
   stat      localtime    caller         SPECIAL VARIABLES
-   0 dev    0 second     0 package      $_    default variable
-   1 ino    1 minute     1 filename     $0    program name
-   2 mode   2 hour       2 line         $/    input separator
-   3 nlink  3 day        3 subroutine   $\    output separator
-   4 uid    4 month-1    4 hasargs      $|    autoflush
-   5 gid    5 year-1900  5 wantarray    $!    sys/libcall error
-   6 rdev   6 weekday    6 evaltext     $@    eval error
-   7 size   7 yearday    7 is_require   $$    process ID
-   8 atime  8 is_dst     8 hints        $.    line number
-   9 mtime               9 bitmask      @ARGV command line args
-  10 ctime  just use                    @INC  include paths
-  11 blksz  POSIX::      3..9 only      @_    subroutine args
-  12 blcks  strftime!    with EXPR      %ENV  environment
+   0 dev    0 second      0 package     $_    default variable
+   1 ino    1 minute      1 filename    $0    program name
+   2 mode   2 hour        2 line        $/    input separator
+   3 nlink  3 day         3 subroutine  $\    output separator
+   4 uid    4 month-1     4 hasargs     $|    autoflush
+   5 gid    5 year-1900   5 wantarray   $!    sys/libcall error
+   6 rdev   6 weekday     6 evaltext    $@    eval error
+   7 size   7 yearday     7 is_require  $$    process ID
+   8 atime  8 is_dst      8 hints       $.    line number
+   9 mtime                9 bitmask     @ARGV command line args
+  10 ctime               10 hinthash    @INC  include paths
+  11 blksz               3..10 only     @_    subroutine args
+  12 blcks               with EXPR      %ENV  environment
 
 =head1 ACKNOWLEDGEMENTS
 
