dnl Process this file with autoconf to produce a configure script.
AC_INIT(src/ypbind-mt.c)
AM_INIT_AUTOMAKE(ypbind-mt, 1.8)
AM_CONFIG_HEADER(config.h)
AC_PREFIX_DEFAULT(/usr)

dnl Set of available languages.
ALL_LINGUAS="de"

AC_SUBST(PACKAGE)
AC_SUBST(VERSION)

AC_CANONICAL_HOST


dnl Checks for programs.
AC_PROG_CC
dnl If we're using gcc, we want warning flags
test -n "$GCC" && WARNFLAGS="-Wall"
#test -n "$GCC" && WARNFLAGS="-W -Wall -Wbad-function-cast -Wcast-align -Winline -Wmissing-declarations -Wmissing-prototypes -Wnested-externs -Wpointer-arith -Wshadow -Wstrict-prototypes -Wundef"
AC_SUBST(WARNFLAGS)
AC_ISC_POSIX
AC_PROG_INSTALL
AC_PROG_MAKE_SET
AC_PROG_RANLIB

AM_WITH_DMALLOC
AM_WITH_EFENCE

dnl Checks for libraries.
AC_CHECK_LIB(nsl, yp_get_default_domain)
AC_CHECK_LIB(socket, bind)
AC_CHECK_LIB(pthread, pthread_create)

dnl The difficult part: could we reconfigure NSS or must we use DNS ?
AC_CHECK_FUNCS(__nss_configure_lookup)
if eval "test \"`echo '$ac_cv_func___nss_configure_lookup'`\" != yes"; then
   AC_CHECK_LIB(resolv, res_gethostbyname)
fi

dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST

AC_MSG_CHECKING([wether <sys/socket.h> defiens socklen_t])
AC_TRY_COMPILE([#include <sys/socket.h>], [socklen_t sock;],
		 SOCKLEN_T=yes, SOCKLEN_T=no)
if test x"$SOCKLEN_T" = x"yes"; then
   AC_MSG_RESULT("yes")
   AC_DEFINE(HAVE_SOCKLEN_T)
else
   AC_MSG_RESULT("no")
fi

dnl Checks for header files.
AC_CHECK_HEADERS(paths.h sys/filio.h rpc/svc_soc.h rpc/clnt_soc.h nss.h)

dnl Checks for library functions.
AC_CHECK_FUNCS(getline getdelim vsyslog res_gethostbyname _dns_gethostbyname)

dnl internationalization macros
AM_GNU_GETTEXT

dnl By default, don't send a ping to all server at the same time
dnl It doesn't work in the moment
USE_BROADCAST=0

dnl glibc 2.0 needs our patched clnt_udp.c, glibc 2.1 not.
dnl The following check is stupid, since the glibc could be ported to
dnl other platforms in the future, but in the moment, it works.
case "$host_os" in
  linux*libc1)
    dnl send a ping to all server at the same time:
    USE_BROADCAST=1
    LIBOBJS="$LIBOBJS clnt_udp.o"
    echo "***"
    echo "***"
    echo "*** ypbind-mt is currently not well tested with Linux libc5."
    echo "*** libc5 is not really threadsafe, and you need a working"
    echo "*** pthread package for it. I'm using linuxthreads 0.7.1 for"
    echo "*** development."
    echo "***"
    echo "***"
    ;;
  linux*)
    dnl send a ping to all server at the same time:
    USE_BROADCAST=1
    dnl Test, if we have glibc 2.0 or glibc 2.1
	AC_MSG_CHECKING([wether we have glibc 2.1 or later])
	AC_TRY_COMPILE([#include <features.h>], [#if defined(__GLIBC__) && \
	(((__GLIBC__ == 2) && (__GLIBC_MINOR__ > 0)) || (__GLIBC__ > 2))
	#else
	#error Library needs fixed clntudp_call
	#endif], CLNTUDPSRC=yes, CLNTUDPSRC=no)
	if test x"$CLNTUDPSRC" = x"yes"; then
	   AC_MSG_RESULT("yes")
	else
	   AC_MSG_RESULT("no")
	   LIBOBJS="$LIBOBJS clnt_udp.o"
	fi
    ;;
  solaris2.6 | solaris2.5.1 | solaris2.5)
    dnl Solaris 2 works without special hacking if it has the pthread library
    ;;
  *)
    echo "***"
    echo "***"
    echo "*** ypbind-mt is currently not tested on this platform."
    echo "*** I don't know if it will work. If it works, please send"
    echo "*** an email to <kukuk@suse.de> and tell me"
    echo "*** that this program will work on the platform"
    echo "*** "$host_cpu-$host_vendor-$host_os", so that I could add it."
    echo "***"
    echo "*** Thanks,"
    echo "***    Thorsten Kukuk"
    echo "***"
    echo "***"
    ;;
esac

AC_SUBST(LIBOBJS)
AC_SUBST(USE_BROADCAST)

AC_OUTPUT([Makefile intl/Makefile lib/Makefile src/Makefile man/Makefile \
	   po/Makefile.in man/sedscript],\
          [chmod +x man/sedscript])
