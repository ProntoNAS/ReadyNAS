.\" dpkg manual page - dpkg-source(1)
.\"
.\" Copyright 息 1995-1996 Ian Jackson <ian@chiark.chu.cam.ac.uk>
.\" Copyright 息 2000 Wichert Akkerman <wakkerma@debian.org>
.\" Copyright 息 2006-2007 Frank Lichtenheld <djpig@debian.org>
.\" Copyright 息 2006-2012 Guillem Jover <guillem@debian.org>
.\" Copyright 息 2008-2011 Rapha谷l Hertzog <hertzog@debian.org>
.\" Copyright 息 2010 Joey Hess <joeyh@debian.org>
.\"
.\" This is free software; you can redistribute it and/or modify
.\" it under the terms of the GNU General Public License as published by
.\" the Free Software Foundation; either version 2 of the License, or
.\" (at your option) any later version.
.\"
.\" This is distributed in the hope that it will be useful,
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\" GNU General Public License for more details.
.\"
.\" You should have received a copy of the GNU General Public License
.\" along with this program.  If not, see <http://www.gnu.org/licenses/>.
.
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH dpkg\-source 1 2012\-05\-04 "Debian Project" "dpkg ユーティリティ"
.SH 名前
dpkg\-source \- Debian ソースパッケージ (.dsc) 操作ツール
.
.SH 書式
\fBdpkg\-source\fP [\fIoption\fP...] \fIcommand\fP
.
.SH 説明
\fBdpkg\-source\fP は、Debian ソースアーカイブの作成、展開を行う。

これらの \fIcommand\fP では複数のオプションを 1
つに結合することはできず、オプションの値をオプション名から分離した引数として指定することもできない。
.
.SH コマンド
.TP 
\fB\-x \fP\fIfilename\fP\fB.dsc \fP[\fIoutput\-directory\fP]
ソースパッケージを展開する。Debian ソースコントロールファイル (\fB.dsc\fP) 名として、オプション形式ではない引数を 1
つ指定する必要がある。それに続きオプション形式ではない引数を指定することで、ソースパッケージの展開先となるディレクトリを指定することができる。このディレクトリは既存であってはならない。ディレクトリが指定されなかった場合、ソースパッケージは、現在のワーキングディレクトリ以下の
\fIsource\fP\-\fIversion\fP というディレクトリに展開される。

\fBdpkg\-source\fP は制御ファイルからソースパッケージの設定を行うためのファイル名を取得する。これらは \fB.dsc\fP
ファイルと同じディレクトリに配置されているものとみなされる。

展開されたパッケージのファイルには、ファイルやディレクトリを単に作成したときに設定されるであろうものと同様のパーミッションや所有者が設定される。ディレクトリ及び実行ファイルのパーミッションは
0777 に、普通のファイルは 0666 に設定されるが、展開したユーザの umask の影響を受ける。親ディレクトリが setgid
されていた場合、展開されたディレクトリもそれに従い、ファイルやディレクトリには、グループの所有者情報が引き継がれる。

ソースパッケージが標準以外の形式 (現在のところ "1.0" 以外のすべての形式を意味する) を使用している場合、形式の名称は
\fBdebian/source/format\fP に格納され、以降のソースパッケージのビルドでは、デフォルトで同じ形式が使用される。

.TP 
\fB\-b\fP \fIdirectory\fP [\fIformat\-specific\-parameters\fP]
ソースパッケージをビルドする。先頭のオプション形式ではない引数は Debian 化されたソースツリー (debian
サブディレクトリとオリジナルのファイルに対する変更物)
の格納されたディレクトリ名になる。パッケージのビルドに使用されるソースパッケージ形式によって、この他の引数が存在する場合もあるだろう。

\fBdpkg\-source\fP は、コマンドライン引数の \fI\-\-format\fP で指定した形式、\fBdebian/source/format\fP
で指定した形式、"1.0" の順で形式を確認し、最初に確認できた形式にに基づいてソースパッケージをビルドする。"1.0"
は廃止予定であり、将来的には削除されるため、常に \fBdebian/source/format\fP
でソースパッケージ形式を指定するようにすべきである。ソースパッケージ形式についての詳細な解説は、\fBソースパッケージ形式\fPセクションを参照のこと。

.TP 
\fB\-\-print\-format\fP \fIdirectory\fP
\fBdpkg\-source \-b \fP\fIdirectory\fP が 呼び出された際に、ソースパッケージのビルドに用いられるソース形式を表示する。

.TP 
\fB\-\-before\-build\fP \fIdirectory\fP
ソースパッケージ形式に合致するフックを実行する。このフックはパッケージのビルド開始前に呼び出される (\fBdpkg\-buildpackage\fP
は、\fBdebian/rules clean\fP
実行前の非常に早い段階でこれを呼び出す)。このコマンドは冪等であり、複数回呼び出されてもよい。すべてのソース形式がこのフックを実装しているわけではない。実装される場合は、通常、Debian
のパッチが適用されていることを確認するといったビルド前のソースツリーの準備に用いられる。

.TP 
\fB\-\-after\-build\fP \fIdirectory\fP
ソースパッケージ形式に合致するフックを実行する。このフックはパッケージのビルド完了後に呼び出される (\fBdpkg\-buildpackage\fP
は、これを最後に呼び出す)
このコマンドは冪等であり、複数回呼び出されてもよい。すべてのソース形式がこのフックを実装しているわけではない。実装される場合は、通常、\fB\-\-before\-build\fP
が行った変更を元に戻すために用いられる。

.TP 
\fB\-\-commit\fP [\fIdirectory\fP] ...
\fIdirectory\fP
に展開されたソースツリーの変更を記録する。このコマンドはソース形式に応じて追加の引数を取ることができる。この操作が意味を持たない形式については、エラーとなる。

.TP 
\fB\-?\fP, \fB\-\-help\fP
利用方法を表示して終了する。
.TP 
\fB\-\-version\fP
バージョン情報を表示して終了する。
.
.SH 一般的なビルドオプション
.TP 
\fB\-c\fP\fIcontrol\-file\fP
情報の読み取り元となるメインのソース制御ファイルを指定する。デフォルトは \fBdebian/control\fP
である。相対パス名で指定された場合は、ソースツリーのトップのディレクトリを起点として解釈される。
.TP 
\fB\-l\fP\fIchangelog\-file\fP
情報の読み取り元となる changelog ファイルを指定する。デフォルトは \fBdebian/changelog\fP
である。相対パス名で指定された場合は、ソースツリーのトップのディレクトリを起点として解釈される。
.TP 
\fB\-F\fP\fIchangelog\-format\fP
changelog ファイルのフォーマットを指定する。指定可能なフォーマットについての情報は、\fBdpkg\-parsechangelog\fP(1)
を参照のこと。
.TP 
\fB\-\-format=\fP\fIvalue\fP
ソースパッケージのビルドに指定した形式を使用する。これは \fBdebian/source/format\fP で指定された形式に優先する。
.TP 
\fB\-V\fP\fIname\fP\fB=\fP\fIvalue\fP
変数を設定する。出力時の置換に関する詳細は、\fBdeb\-substvars\fP(5) を参照のこと。
.TP 
\fB\-T\fP\fIsubstvars\-file\fP
\fIsubstvars\-file\fP
にある変数を読み込む。デフォルトではいかなるファイルも読み込まれない。このオプションは複数のファイルから変数を読み取るために複数回指定することができる。
.TP 
\fB\-D\fP\fIfield\fP\fB=\fP\fIvalue\fP
出力制御ファイルのフィールドを上書きもしくは追加する。
.TP 
\fB\-U\fP\fIfield\fP
出力制御ファイルのフィールドを削除する。
.TP 
\fB\-Z\fP\fIcompression\fP, \fB\-\-compression\fP=\fIcompression\fP
ファイル作成 (tar アーカイブや diff) の際に使用する圧縮形式を指定する。このオプションは、新規の圧縮時にのみ適用される。既存の tar
アーカイブが再圧縮されることはない。指定可能な値は次のとおり: \fIgzip\fP, \fIbzip2\fP, \fIlzma\fP, \fIxz\fP。デフォルトは
\fIgzip\fP である。\fIxz\fP は dpkg\-dev 1.15.5 以降でのみ指定できる。
.TP 
\fB\-z\fP\fIlevel\fP, \fB\-\-compression\-level\fP=\fIlevel\fP
使用する圧縮レベル。\fB\-Z\fP と併せて指定する。これは新規の圧縮時にのみ適用される。指定可能な値は次のとおり: \fI1\fP から \fI9\fP,
\fIbest\fP, \fIfast\fP。デフォルトは gzip および bzip2 の場合 \fI9\fP、xz および lzma の場合 \fI6\fP である。
.TP 
\fB\-i\fP[\fIregexp\fP], \fB\-\-diff\-ignore\fP[=\fIregexp\fP]
perl 形式の正規表現を用いて diff に含まれるファイルから指定したファイルを除外することができる (除外リストは find
コマンドで生成される)。 (ソースパッケージが VCS のバージョン 3
形式のソースパッケージとしてビルドされている場合、これを指定したファイルに対するコミットされていない変更を無視するために使用することができる。\-i.*
を使用することで、それらすべてを無視することもできる)。\fB\-i\fP
を指定することでオプションが有効となり、デフォルトの正規表現により、制御ファイルと一般的なバージョン管理システムのディレクトリ、バックアップファイル、スワップファイル、libtool
の出力ディレクトリが除外される。正規表現は 1 つしか有効にならない。\fB\-i\fP オプションを複数回指定した場合、最後に指定したものしか有効にならない。

これは diff
に含まれている無関係なファイルを除外する際に非常に有用である。例えばバージョン管理システムでソース管理しており、ソースパッケージのビルドにチェックアウトしたファイルを使用したい場合に、無関係なファイルやディレクトリ
(例えば CVS/, .cvsignore, .svn/ など)
を除外したい場合などが該当する。これらはデフォルトの正規表現でほぼ網羅されているが、デフォルトを変更したい場合は、正規表現はパスの任意の箇所にマッチするため、ファイル名の先頭やフルパスにマッチさせたい場合は、必要なアンカー
('(^|/)' や '($|/)') を自分で指定する必要がある点に留意して行うこと。
.TP 
\fB\-\-extend\-diff\-ignore\fP=\fIregexp\fP
指定された perl 形式の正規表現により \fB\-\-diff\-ignore\fP のデフォルト値および (設定されている場合)
現在の値が拡張される。これは、現在の値に "\fB|\fP\fIregexp\fP"
を結合することで行われる。このオプションは、\fBdebian/source/options\fP
にて、自動パッチ生成によって自動的に生成されるファイルを除外したい場合に有用である。
.TP 
\fB\-I\fP[\fIfile\-pattern\fP], \fB\-\-tar\-ignore\fP[=\fIfile\-pattern\fP]
このオプションが指定された場合、\fBtar\fP(1) が .orig.tar や .tar ファイルを生成する際に呼び出される際の \-\-exclude
オプションに、\fIfile\-pattern\fP が引き渡される。例えば \-ICVS を指定すると、tar は .tar.gz
ファイルを生成する際に、CVS ディレクトリをスキップする。複数の除外パターンを指定するために、このオプションを複数回指定してもよい。

\fB\-I\fP を指定することで、デフォルトの \-\-exclude
オプションが設定され、制御ファイルと一般的なバージョン管理システムのディレクトリ、バックアップファイル、スワップファイル、libtool
の出力ディレクトリが除外される。
.PP
\fB注記:\fP \fB\-i\fP と \fB\-I\fP は類似の目的で用いられるが、文法と意味はまったく異なっている。\fB\-i\fP
は複数回指定することができず、各ファイルの相対パス全体をマッチ対象として perl 形式の正規表現により指定する。\fB\-I\fP
は複数回指定することができ、シェルのワイルドカードによるファイル名パターンにより指定する。パターンは相対パス全体に適用されるが、パスの個々の部分毎にチェックが行われる。tar
の \-\-exclude
オプションの指定は、若干面倒である。網羅的な記述についてはhttp://www.gnu.org/software/tar/manual/tar.html#wildcards
を参照のこと。

両オプションのデフォルトの正規表現やパターンについては、\fB\-\-help\fP コマンドの出力で確認できる。
.SH 一般的な展開オプション
.TP 
\fB\-\-no\-copy\fP
展開されたソースパッケージ以外に、オリジナルの tar アーカイブをコピーしない。
.TP 
\fB\-\-no\-check\fP
展開前に、署名やチェックサムの検証を行わない。
.TP 
\fB\-\-require\-valid\-signature\fP
展開するユーザの \fItrustedkeys.gpg\fP keyring、ベンダ固有の keyring のいずれか、official Debian
keyring (\fI/usr/share/keyrings/debian\-keyring.gpg\fP
もしくは\fI/usr/share/keyrings/debian\-maintainers.gpg\fP) のいずれかによって検証可能な OpenPGP
の署名が含まれない場合に、ソースパッケージの展開を拒否する。

.SH ソースパッケージ形式
使用しているソース形式が分からない場合は、"3.0 (quilt)" もしくは "3.0 (native)" のいずれかであろう。Debian
においてこれらの形式を使用するための情報については、http://wiki.debian.org/Projects/DebSrc3.0 を参照のこと。

.SS "1.0 形式"
この形式のソースパッケージには、\fB.diff.gz\fP と対応する \fB.orig.tar.gz\fP、もしくは\fB.tar.gz\fP のみ (この形態を
\fIネイティブ\fP と称する) が含まれる。

\fB展開\fP

ネイティブパッケージの展開は、単一の tar アーカイブをターゲットディレクトリに単に展開するだけである。非ネイティブなパッケージの展開は、先に
\&\fB.orig.tar.gz\fP を展開した上で、\fB.diff.gz\fP
ファイルに含まれるパッチを適用する。パッチされたファイルのタイムスタンプは、ソースパッケージを展開した時刻に再設定される
(これにより、自動生成されたファイルにパッチする際に、タイムスタンプが逆転してしまうことによる問題の発生を回避する)。diff
により新しいファイルを作成することもできる (debian ディレクトリ自体も、これにより作成される) が、ファイルを削除することはできない
(空ファイルはそのまま残される)。

\fBビルド\fP

ネイティブパッケージのビルドは、ソースディレクトリに単一の tar アーカイブを作成するだけである。非ネイティブパッケージのビルドは、オリジナルの
tar アーカイブを ".orig" ディレクトリに展開し、 \fIdirectory\fP にあるソースパッケージと .orig ディレクトリを比較して
\&\fB.diff.gz\fP ファイルを再生成することにより行われる。

.TP 
\fBビルドオプション (\-b と併用):\fP
.PP
2 番目のオプションでない引数が存在する場合は、オリジナルのソースディレクトリか tar ファイル名を意味する。ただし、パッケージが Debian
固有のものであり、Debian 化するための diff が存在しない場合は空文字列となる。2 番目の引数が存在する場合、\fBdpkg\-source\fP は
\fB\-sX\fP 引数に応じて、オリジナルのソース tar ファイル
\fIpackage\fP\fB_\fP\fIupstream\-version\fP\fB.orig.tar.gz\fP もしくはオリジナルのソースディレクトリ
\fIdirectory\fP\fB.orig\fP を検索する。

\fB\-sa\fP, \fB\-sp\fP, \fB\-sk\fP, \fB\-su\fP, \fB\-sr\fP は、既存の tar
ファイルやディレクトリを上書きしない。上書きさせたい場合は、代わりに \fB\-sA\fP, \fB\-sP\fP, \fB\-sK\fP, \fB\-sU\fP, \fB\-sR\fP
を使用すること。
.TP 
\fB\-sk\fP
オリジナルのソースが、デフォルトでは
\fIpackage\fP\fB_\fP\fIupstream\-version\fP\fB.orig.tar.\fP\fIextension\fP という名前の tar
ファイルであることを指示する。このオリジナルのソースは適切な場所にtar
ファイルのまま残され、カレントディレクトリに存在していない場合はそこにコピーされる。tar ファイルは diff
を生成するために、\fIdirectory\fP\fB.orig\fP に展開される。
.TP 
\fB\-sp\fP
\fB\-sk\fP と同様だが、最後にディレクトリを削除する。
.TP 
\fB\-su\fP
オリジナルのソースが、デフォルトでは \fIpackage\fP\fB\-\fP\fIupstream\-version\fP\fB.orig\fP
という名前のディレクトリにあることを指示する。\fBdpkg\-source\fP は、ここから新しいソースアーカイブを作成する。
.TP 
\fB\-sr\fP
\fB\-su\fP と同様だが、使用後にディレクトリを削除する。
.TP 
\fB\-ss\fP
オリジナルのソースが、ディレクトリと tar ファイルの両方に存在することを指示する。dpkg\-source はディレクトリにあるファイルを用いて
diff を作成するが、\fB.dsc\fP ファイル作成の際は tar ファイルを使用する。このオプションは注意して用いること。ディレクトリと tar
ファイルの整合性が取れていない場合、不正なソースアーカイブが生成されてしまう。
.TP 
\fB\-sn\fP
オリジナルのソースを参照せず、diff も生成しないことを指示する。2
番目の引数が存在する場合、それは空文字列である必要がある。これは、アップストリームのソースが存在せず、Debian 化するための差分が存在しない
Debian 固有のパッケージに用いられる。
.TP 
\fB\-sa\fP もしくは \fB\-sA\fP
オリジナルのソースアーカイブが tar ファイルもしくはディレクトリであることを指示する。2
番目の引数が指定されている場合、それは上記のいずれであってもよいし、空文字列でもよい (その場合は、\fB\-sn\fP (訳注: \fB\-sp\fP
の誤りと思われる) と同等である)。tar ファイルが存在した場合は、diff 生成のために展開され、最後に削除される (これは \fB\-sp\fP
と同等である)。ディレクトリが存在した場合は、オリジナルのソースを作成するためにアーカイブ化され最後に削除される (これは、\fB\-sr\fP
と同等である)。いずれも存在しなかった場合、パッケージは Debian 化の diff を持たず、ソースアーカイブのみが存在すると見なされる (これは、
\fB\-sn\fP と同等である)。いずれも存在した場合、\fBdpkg\-source\fP はディレクトリの存在を無視して、\fB\-sA\fP
が指定されていた場合はこれを上書きし (これは \fB\-sP\fP と同等である)、\fB\-sa\fP が指定されていた場合はエラーを発生させる。デフォルトは
\fB\-sA\fP である。
.TP 
\fB\-\-abort\-on\-upstream\-changes\fP
生成された diff に Debian サブディレクトリ外にあるファイルへの変更が含まれていた場合、処理を失敗させる。このオプションは
\fBdebian/source/options\fP で指定できない。\fBdebian/source/local\-options\fP
で指定することは可能である。

.TP 
\fB展開オプション (\-x と併用):\fP
.PP
いずれの場合も、既存のオリジナルのソースツリーはすべて削除される。
.TP 
\fB\-sp\fP
オリジナルのソースを tar ファイルとして残す
(存在する場合)。カレントディレクトリに配置されていない場合や、存在しているが異なるファイルである場合は、オリジナルのソースがコピーされる
(\fBこれはデフォルトの挙動である\fP)。
.TP 
\fB\-su\fP
オリジナルのソースツリーを展開する。
.TP 
\fB\-sn\fP
オリジナルのソースをカレントディレクトリにコピーさせず、展開もさせない。カレントディレクトリに存在するオリジナルのソースツリーは削除される。
.PP
\fB\-s\fP\fIX\fP オプションは相互排他である。複数回指定された場合、最後に指定されたものが使用される。
.TP 
\fB\-\-skip\-debianization\fP
アップストリームのソースのトップに存在する Debian 化の diff を適用しない。
.
.SS "2.0 形式"
wig&pen という名称でも知られている。この形式は広範な使用を推奨されておらず、"3.0 (quilt)" が代替している。wig&pen
は新世代のソースパッケージ形式の最初の仕様である。

この形式の挙動は、明示的なパッチ一覧を使用しない点を除き、"3.0 (quilt)" 形式と同等である。perl 形式の正規表現 \fB[\ew\-]+\fP
にマッチする \fBdebian/patches/\fP に存在するすべてのファイルは、適切なパッチである必要がある。これらは展開時に適用される。

新しいソースパッケージをビルドする際にアップストリームのソースに対する変更が発生した場合、\fBzz_debian\-diff\-auto\fP
という名前のパッチとして保存する。
.
.SS "3.0 (native) 形式"
この形式は 1.0 形式で定義されたネイティブパッケージ形式の拡張版である。これはすべての圧縮方式をサポートし、デフォルトでは、多くの一時ファイル
(デフォルト値は \fB\-\-help\fP 出力の \fB\-I\fP オプションを参照のこと) やバージョン管理システム固有のファイルやディレクトリを無視する。
.
.SS "3.0 (quilt) 形式"
この形式のソースパッケージには、オリジナルの tar アーカイブ (\fB.orig.tar.\fP\fIext\fP。\fIext\fP は \fBgz\fP,
\fBbz2\fP, \fBlzma\fP, \fBxz\fP のいずれか)  および debian tar アーカイブ (\fB.debian.tar.\fP\fIext\fP)
が最低でも含まれる。追加のオリジナルの tar アーカイブ (\fB.orig\-\fP\fIcomponent\fP\fB.tar.\fP\fIext\fP)
を含んでもよい。\fIcomponent\fP には、英数文字とダッシュ ("\-") のみを含めることができる。
.PP
\fB展開\fP
.PP
主たるオリジナルの tar アーカイブが最初に展開され、ついで追加のオリジナル tar アーカイブが、ファイル名の \fIcomponent\fP
からとった名前のサブディレクトリに展開される (既存のディレクトリがあった場合、上書きされる)。debian tar アーカイブは、既存の
\fBdebian\fP ディレクトリの削除後、ソースディレクトリのトップに展開される。debian tar アーカイブには、\fBdebian\fP
サブディレクトリが必要だが、ディレクトリ外にバイナリファイルを含めることもできる (\fB\-\-include\-binaries)\fP
オプションを参照のこと)。
.PP
引き続き、\fBdebian/patches/debian.series\fP もしくは \fBdebian/patches/series\fP
にあるパッチがすべて適用される。前者のファイルが使用され、後者が存在しない場合
(もしくはシンボリックリンクの場合)、後者は前者に対するシンボリックリンクに置き換えられる。これは、一連のパッチを管理する上での quilt
の使用を単純化する意図である。\fBdpkg\-source\fP は、パッチ適用の際に使用されるオプションが (各行毎にパッチファイル名と 1
つ以上のスペースの後に格納する形で) 明示的に指定されたseries ファイルであっても解析するが、指定されたオプションを無視し、常に \fBpatch\fP
コマンドの \fB\-p1\fP
オプションを指定して適用すべきものとみなす点に留意すること。このようなオプションが指定されていた場合は、警告が出力され、ビルドは恐らく失敗するだろう。
.PP
quilt のデフォルトの動作とは相反するが、パッチは fuzz なしで適用されることが期待される。さもなくば、これらのパッチを quilt
で更新しない限り、dpkg\-source によるパッチ適用時にエラーとなる。
.PP
quilt のデフォルトの挙動と同様、パッチによってファイルを削除することもできる。
.PP
展開の際にパッチが適用された場合、\fB.pc/applied\-patches\fP ファイルが作成される。
.PP
\fBビルド\fP
.PP
カレントディレクトリにあるオリジナルの tar アーカイブが、展開の際と同じロジックで一時ディレクトリに展開され、debian
ディレクトリが一時ディレクトリからコピーされる。さらに、自動パッチ (\fB\-\-single\-debian\-patch\fP
の指定により、\fBdebian\-changes\-\fP\fIversion\fP もしくは \fBdebian\-changes\fP)
を除くすべてのパッチが適用される。一時ディレクトリはソースパッケージのディレクトリと比較される。diff
が空でない場合、\fB\-\-single\-debian\-patch\fP もしくは \fB\-\-auto\-commit\fP が指定され、diff
が自動パッチの中に保存されていない限り、ビルドは失敗する。自動パッチが作成/削除される場合は、series ファイルと quilt
のメタデータからも追加/削除される。

バイナリファイルに対する変更は diff では表現できないため、メンテナが修正されたバイナリファイルを debian tar アーカイブに
(\fBdebian/source/include\-binaries\fP に格納することで)
含めておくことを熟考の上決定しない限り、処理の失敗を引き起こす。debian
サブディレクトリ内にバイナリファイルがあった場合も、\fBdebian/source/include\-binaries\fP
によりホワイトリスト設定されていない限り、ビルドの失敗を引き起こす。

設定を行うことで、debian tar アーカイブを生成する際に、更新された debian ディレクトリと修正されたバイナリのリストが使用される。

自動的に生成された diff には、多くの一時ファイル (デフォルト値は \fB\-\-help\fP 出力の \fB\-i\fP オプションを参照のこと)
やバージョン管理システム固有のファイルやディレクトリは含まれない。特に quilt が使用する \fB.pc\fP
ディレクトリは、自動パッチの生成時には無視される。

\fBdpkg\-source\fP \fB\-\-before\-build\fP (および \fB\-b\fP) は、series
ファイルにリストされているすべてのパッチが適用され、パッケージのビルドが常にすべてのパッチが適用された状態で行われることを担保する。これは、適用されなかったパッチ
(\fBseries\fP ファイルにリストされているが、\fB.pc/applied\-patches\fP にリストされていないもの)
を確認することで行われる。これらのうち、最初のパッチがエラーなく適用可能であれば、残りのすべても適用する。この挙動を抑止する場合は、\fB\-\-no\-preparation\fP
オプションを使用すること。

.PP
\fB変更の記録\fP
.TP 
\fB\-\-commit\fP [\fIdirectory\fP] [\fIpatch\-name\fP] [\fIpatch\-file\fP]
quilt パッチシステムによって管理されていないローカルな変更に対応するパッチを生成し、\fIpatch\-name\fP
というファイル名でパッチシステムに統合する。\fIpatch\-name\fP を指定しなかった場合は、対話的に確認される。\fIpatch\-file\fP
が指定された場合は、統合されるローカルな変更に関連するパッチファイル名として用いられる。パッチ統合の際にはエディタが起動され、パッチのヘッダにおけるメタ情報を編集することができる。

\fIpatch\-file\fP
の指定は、予め生成されたパッチファイルを用いたビルドに失敗した際に有用であり、そのため、指定されたファイルは統合後に削除される。パッチファイルに含まれている変更点は、ツリーに予め適用されている必要があり、パッチによって修正されるファイルは、その他の記録されていない変更が行われていてはならない点にも留意すること。

パッチの生成により、バイナリファイルの変更が必要と認識された場合、それらは自動的に \fBdebian/source/include\-binaries\fP
に追加されるため、最終的に debian tar アーカイブに追加される (\fBdpkg\-source \-\-include\-binaries \-b\fP
と似た動作となる)。
.PP
\fBビルドオプション\fP
.TP 
\fB\-\-allow\-version\-of\-quilt\-db=\fP\fIversion\fP
\fBdpkg\-source\fP が、quilt メタデータのバージョンが指定したものであった場合に、\fBdpkg\-source\fP
がそれを確認できない場合でも、ソースパッケージをビルドすることを可能とする。指定された quilt メタデータのバージョンは、
\fBdpkg\-source\fP が現在サポートしているバージョン 2 と互換であることが事実上必要である。quilt メタデータのバージョンは
\&\fB.pc/.version\fP に保存されている。
.TP 
\fB\-\-include\-removal\fP
削除されたファイルを無視せず、それらを自動生成されたパッチに含める。
.TP 
\fB\-\-include\-timestamp\fP
タイムスタンプを自動生成されたパッチに含める。
.TP 
\fB\-\-include\-binaries\fP
debian tar アーカイブに修正されたバイナリをすべて追加し、併せて \fBdebian/source/include\-binaries\fP
にも追加する。これらはその後のビルドの際にデフォルトで追加されるため、このオプションは不要である。
.TP 
\fB\-\-no\-preparation\fP
明らかに適用されていないパッチを適用することによるビルドツリーの準備を行わない。
.TP 
\fB\-\-single\-debian\-patch\fP
ビルドの際に生成される自動パッチの名前として、\fBdebian/patches/debian\-changes\-\fP\fIversion\fP の代わりに
\fBdebian/patches/debian\-changes\fP
を使用する。このオプションは、パッケージがバージョン管理システムで維持されているために、パッチセットが安定して生成できない場合特に有用であり、アップストリームと現状との差分を単一のパッチに格納する。このオプションを\fBdebian/source/local\-options\fP
に設定した上で、例えば使用しているバージョン管理システムなどで Debian における変更点を確認するのに最適な方法を説明する
\fBdebian/source/local\-patch\-header\fP ファイルを添付しておく。
.TP 
\fB\-\-create\-empty\-orig\fP
主たるオリジナルの tar
アーカイブについて、作成できない場合や補助のものが存在する場合であっても、空のファイルを自動的に生成する。このオプションは、ソースパッケージに複数のアップストリームのソフトウェアを単に集めたものであり、"主たる"
ソフトウェアが存在しない場合に用いられることを想定している。
.TP 
\fB\-\-no\-unapply\-patches, \-\-unapply\-patches\fP
dpkg\-source のデフォルトでは、\fB\-\-before\-build\fP フックでパッチが適用された場合、\fB\-\-after\-build\fP
フックにおいてパッチを自動適用はしない。これらのオプションにより、パッチ適用の処理を強制的に有効化、無効化することができる。これらのオプションは
\fBdebian/source/local\-options\fP
においてのみ有効であるため、生成されたすべてのソースパッケージがデフォルトでは同じ挙動を示す。
.TP 
\fB\-\-abort\-on\-upstream\-changes\fP
自動パッチが生成された場合に処理を失敗させる。このオプションは、ソースパッケージのビルド以前に、すべての変更点が個別の quilt
パッチに適切に保存されることを担保したい場合に使用することができる。このオプションは \fBdebian/source/options\fP
で指定できない。\fBdebian/source/local\-options\fP で指定することは可能である。
.TP 
\fB\-\-auto\-commit\fP
自動パッチが生成された場合に処理を失敗させず、即座に quilt の series ファイルに保存する。

.PP
\fB展開オプション\fP
.TP 
\fB\-\-skip\-debianization\fP
アップストリームのソース上に、debian tar アーカイブの上書き展開を行わない。
.TP 
\fB\-\-skip\-patches\fP
展開の最後に、パッチの適用を行わない。
.
.SS "3.0 (custom) 形式"
これは特別な形式である。特定のソースパッケージ形式を示すものではなく、任意のファイルを用いてソースパッケージを作成する際に使用する形式である。
.PP
\fBビルドオプション\fP
.PP
すべてのオプション形式ではない引数は、生成されたソースパッケージに統合するファイルとみなされる。ファイルはあらかじめ存在している必要があり、カレントディレクトリに存在していることが望ましい。最低
1 つのファイルを指定すること。
.TP 
\fB\-\-target\-format=\fP\fIvalue\fP
\fB必須\fP。ソースパッケージの生成に使用する実際の形式を指定する。生成された .dsc ファイルの \fIFormat\fP フィールドには、" 3.0
(custom)" ではなく、ここで指定した値が設定される。
.
.SS "3.0 (git) 形式"
この形式は実験段階のものである。
.PP
この形式のソースパッケージは、パッケージのソースを保持する単一の git bundle である、git リポジトリ \fB.git\fP
から構成される。shallow git clone がリビジョン保持に使用する \fB.gitshallow\fP ファイルも含まれる場合がある。
.PP
\fB展開\fP
.PP
この git bundle は git リポジトリとしてターゲットディレクトリに複製される。gitshallow ファイルがある場合は、複製された
git リポジトリ内に `.git/shallow` としてインストールされる。
.PP
デフォルトで、新しいリポジトリはオリジナルのソースがチェックアウトされたものと同じブランチとなっている。(通常は "master"
だが、それに限らない。) それ以外のブランチは `remotes/origin` から利用することができる。
.PP
\fBビルド\fP
.PP
先に進む前に、無視すべきもの以外でコミットされていない変更がないことを担保するためのチェックが行われる。
.PP
git リポジトリの bundle を生成する際には \fBgit\-bundle\fP(1)
が使用される。デフォルトで、リポジトリ内のすべてのブランチとタグが bundle に含められる。
.PP
\fBビルドオプション\fP
.TP 
\fB\-\-git\-ref=\fP\fIref\fP
git bundle に含める git ref
を指定する。このオプションにより、すべてのブランチとタグを含めるというデフォルトの挙動が無効となる。これは複数回指定してもよい。\fIref\fP は、git
bundle に含めるブランチ名もしくはタグ名となるが、\fBgit\-rev\-list\fP(1)
に渡すことが可能な任意の引数を指定してもよい。一例として、master ブランチのみを含めたい場合は \-\-git\-ref=master
と指定する。private ブランチ以外すべてのタグとブランチを含めたい場合は、 \-\-git\-ref=\-\-all \-\-git\-ref=^private
と指定する。
.TP 
\fB\-\-git\-depth=\fP\fInumber\fP
shallow clone を作成する。作成の際、ヒストリを指定したリビジョン数に切り詰める。
.SS "3.0 (bzr) 形式"
この形式は実験段階である。これは bzr リポジトリを含む単一の tar アーカイブを生成する。
.PP
\fB展開\fP
.PP
tar アーカイブを展開した上で、現在のブランチをチェックアウトするために bzr が使用される。
.PP
\fBビルド\fP
.PP
先に進む前に、無視すべきもの以外でコミットされていない変更がないことを担保するためのチェックが行われる。
.PP
その後、ソースディレクトリ内のバージョン管理システム固有のファイルが一時ディレクトリにコピーされる。一時ディレクトリが tar
アーカイブにされる前に、領域を節約するために、様々なクリーンアップ処理が行われる。
.SH 警告とエラー
.SS "no source format specified in debian/source/format"
\fBdebian/source/format\fP
ファイルは、ソース形式を指定するために、常に存在しているべきである。後方互換性のため、ファイルが存在していない場合は、"1.0"
形式であると見なされるが、これに依存すべきではない。将来的には、dpkg\-source
が修正されて、ファイルが存在していないと処理が失敗するようになるかもしれない。

"1.0" 形式は既に推奨される形式から外れており、新しい形式 ("3.0 (quilt)", "3.0 (native)")
のいずれかを使用すべきであるが、\fBdpkg\-source\fP
は、これを自動的には行わない。古い形式の使用を継続する場合、\fBdebian/source/format\fP 中で "1.0" を明示すべきである。
.SS "the diff modifies the following upstream files"
ソース形式として "1.0" を使用する場合、アップストリームのファイルを直接修正することは通常勧められない。これは変更点が隠蔽され、diff.gz
ファイル内でドキュメント化されないままとなってしまうためである。変更点については、 debian
ディレクトリ内にパッチとして保存し、ビルド時にこれを適用することが勧められる。複雑化を避ける意味では、この処理が組み込まれている "3.0
(quilt)" 形式を使用してもよい。
.SS "cannot represent change to \fIfile\fP"
アップストリームのソースに対する変更は、通常パッチファイルに保存されるが、パッチでは、すべての変更を保持できるわけではない。パッチは平文テキストファイルの内容しか変更できない。これ以外の形式のファイルの内容を変更しようとすると
(例えば普通のファイルをシンボリックリンクやディレクトリに変更するなど) 、このエラーメッセージが表示される。
.SS "newly created empty file \fIfile\fP will not be represented in diff"
パッチファイルでは空ファイルを作成することができないため、この変更はソースパッケージに保持されない。そのため警告が表示される。
.SS "executable mode \fIperms\fP of \fIfile\fP will not be represented in diff"
.SS "special mode \fIperms\fP of \fIfile\fP will not be represented in diff"
パッチファイルにファイルのパーミッション情報は保存されないため、パーミッションの変更はソースパッケージに保持されない。そのため警告が表示される。
.SH ファイルフォーマット
.SS debian/source/format
このファイルはソースパッケージのビルドの際に使用される形式を記載した 1 行からなる (指定可能な形式は前述のとおり)。前後に空白を入れてはならない。
.SS debian/source/include\-binaries
このファイルには、debian tar アーカイブに含まれるバイナリファイルが (1 行に 1 ファイルずつ)
リストされる。前後の空白は削除される。"#" で始まる行はコメント行と見なされスキップされる。空行も無視される。
.SS debian/source/options
このファイルには、\fBdpkg\-source \-b\fP や \fBdpkg\-source \-\-print\-format\fP
が実行される際に自動的に付加されるコマンドラインオプションを長いオプション形式でリストしたものが含まれる。このファイルは、\fB\-\-compression\fP
や \fB\-\-compression\-level\fP といったオプションを指定するのに適している。
.P
各オプションは別々の行に記載する。空行や "#" から始まる行は無視される。記載の際に、先頭の "\-\-"
は省略する必要がある。また短いオプションは指定できない。"="
の前後に空白を入れることは可能である。また値を囲むためにクオートを行うこともできる。以下にファイルへの設定例を示す:
.P
  # let dpkg\-source create a debian.tar.bz2 with maximal compression
  compression = "bzip2"
  compression\-level = 9
  # use debian/patches/debian\-changes as automatic patch
  single\-debian\-patch
  # ignore changes on config.{sub,guess}
  extend\-diff\-ignore = "(^|/)(config.sub|config.guess)$"
.P
注記: \fBformat\fP オプションをこのファイルで設定することはできない。代わりに \fBdebian/source/format\fP を使用すること。
.SS debian/source/local\-options
ファイルが生成されたソースパッケージに含まれない点を除き、\fBdebian/source/options\fP
とまったく同等である。これはメンテナ固有の設定や、ソースパッケージを管理しているバージョン管理システム固有の設定を保持する際に有用である。
.SS debian/source/local\-patch\-header
.SS debian/source/patch\-header
"2.0" もしくは "3.0 (quilt)"
形式で生成される自動パッチのトップに配置する、フリーフォーマットのテキスト。\fBlocal\-patch\-header\fP
は生成されたソースパッケージに含まれないが、\fBpatch\-header\fP は含まれる。
.SS debian/patches/series
このファイルには、アップストリームのソースパッケージに対して適用すべきすべてのパッチが (適用順序に従って)
並べられる。パッチ名前後の空白は削除される。"#"
で始まる行はコメント行と見なされスキップされる。空行も無視される。その他の行は、(\fBdebian/patches/\fP
ディレクトリからの相対パスによる) パッチのファイル名から始まり、これは最初の空白文字もしくは行末まで続く。それに続き quilt
のオプションを任意で設定することができる。これは最初に空白文字に続いて (それ以降が行末までコメントであることを示す) "#"
が現れた位置もしくは行末まで続く。
.SH バグ
標準の出力フィールドの設定と比較すると、フィールドの上書きが発生する箇所は混乱を引き起こす。
.SH 関連項目
\fBdpkg\-deb\fP(1), \fBdpkg\fP(1), \fBdselect\fP(1).
.SH 翻訳者
高橋 基信 <monyo@monyo.com>.
喜瀬 浩 <kise@fuyuneko.jp>.
関戸 幸一 <sekido@mbox.kyoto-inet.or.jp>.
鍋谷 栄展 <nabe@debian.or.jp>.
倉澤 望 <nabetaro@debian.or.jp>.
石川 睦 <ishikawa@linux.or.jp>.
鵜飼 文敏 <ukai@debian.or.jp>.
中野 武雄 <nakano@apm.seikei.ac.jp>.
.SH 翻訳校正
Debian JP Documentation ML <debian-doc@debian.or.jp>.
