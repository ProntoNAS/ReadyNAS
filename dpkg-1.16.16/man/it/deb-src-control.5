.\" dpkg manual page - deb-src-control(5)
.\"
.\" Copyright Â© 2010 Oxan van Leeuwen <oxan@oxanvanleeuwen.nl>
.\" Copyright Â© 2011 RaphaÃ«l Hertzog <hertzog@debian.org>
.\" Copyright Â© 2011-2012 Guillem Jover <guillem@debian.org>
.\"
.\" This is free software; you can redistribute it and/or modify
.\" it under the terms of the GNU General Public License as published by
.\" the Free Software Foundation; either version 2 of the License, or
.\" (at your option) any later version.
.\"
.\" This is distributed in the hope that it will be useful,
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\" GNU General Public License for more details.
.\"
.\" You should have received a copy of the GNU General Public License
.\" along with this program.  If not, see <http://www.gnu.org/licenses/>.
.
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH deb\-src\-control 5 "16 giugno 2012" "Progetto Debian" Debian
.SH NOME
deb\-src\-control \- formato del file principale di controllo dei pacchetti
sorgente Debian
.
.SH SINTASSI
control
.
.SH DESCRIZIONE
Ogni pacchetto sorgente Debian contiene il file «control» principale che
contiene almeno 2 paragrafi, separati da una riga vuota. Il primo paragrafo
elenca tutte le informazioni sul pacchetto sorgente in generale, mentre
ciascun paragrafo seguente descrive esattamente un pacchetto binario. Ogni
paragrafo consiste di almeno un campo. Un campo inizia con un nome di campo,
come \fBPackage\fP o \fBSection\fP (le maiuscole e minuscole non hanno
importanza), seguito da due punti («:»), il corpo del campo e un ritorno a
capo. Sono permessi anche campi con più righe, ma ogni riga aggiuntiva senza
un nome di campo deve iniziare con almeno uno spazio. Il contenuto dei campi
multi riga viene generalmente riunito in un'unica riga dagli strumenti
(tranne nel caso del campo \fBDescription\fP, come descritto in seguito). Per
inserire righe vuote in un campo composto da più righe, inserire un punto
dopo lo spazio. Le righe che iniziano con un \fB«#»\fP sono considerate
commenti.
.
.SH "CAMPI DEL SORGENTE"
.TP 
\fBSource:\fP \fInome\-pacchetto\-sorgente\fP (richiesto)
Il valore di questo campo è il nome del pacchetto sorgente e deve
corrispondere al nome del pacchetto sorgente nel file debian/changelog. Un
nome di pacchetto è formato soltanto da lettere minuscole (a\-z), cifre
(0\-9), segni più (+) e meno (\-) e punti (.). I nomi di pacchetto devono
essere lunghi almeno due caratteri e devono iniziare con un carattere
alfanumerico.

.TP 
\fBMaintainer:\fP \fInomecompleto\-email\fP (richiesto)
Dovrebbe essere nel formato «Tizio Caio <tcaio@foo.com>» e si
riferisce alla persona che attualmente mantiene il pacchetto, piuttosto che
all'autore del software o al creatore originale del pacchetto.

.TP 
\fBUploaders:\fP\fI nomecompleto\-email\fP
Elenca tutti i nomi ed indirizzi di posta elettronica dei co\-manutentori del
pacchetto, nello stesso formato del campo Maintainer. Più manutentori devono
essere separati da una virgola.

.TP 
\fBStandards\-Version:\fP\fI stringa\-versione\fP
Questo indica la più recente versione degli standard (che consistono nel
manuale Debian Policy e dei testi a cui esso fa riferimento, nel pacchetto
\fBdebian\-policy\fP) a cui è conforme questo pacchetto.

.TP 
\fBDM\-Upload\-Allowed:\fP \fByes\fP|\fBno\fP
Questo campo indica se un pacchetto può essere caricato dai Debian
Maintainer che sono presenti nel campo Maintainer o Uploader. Il valore
predefinito è «no».

.TP 
\fBHomepage:\fP\fI url\fP
L'URL della home page del progetto originale.

.TP 
\fBBugs:\fP\fI url\fP
L'\fIurl\fP per questo pacchetto nel sistema di tracciamento dei bug. Il
formato attualmente utilizzato è \fItipo\-bts\fP\fB://\fP\fIindirizzo\-bts\fP, come in
\fBdebbugs://bugs.debian.org\fP. Questo campo solitamente non è necessario.

.TP 
\fBVcs\-*:\fP\fI url\fP
L'\fIurl\fP del repository del sistema di controllo di versione usato per
manutenere questo pacchetto. Attualmente sono supportati \fBArch\fP, \fBBzr\fP
(Bazaar), \fBCvs\fP, \fBDarcs\fP, \fBGit\fP, \fBHg\fP (Mercurial), \fBMtn\fP (Monotone) e
\fBSvn\fP (Subversion). Solitamente questo campo punta alla versione più
recente del pacchetto, ad esempio al ramo principale o al tronco.

.TP 
\fBVcs\-Browser:\fP\fI url\fP
L'\fIurl\fP di un'interfaccia web per navigare nel repository del sistema di
controllo di versione.

.TP 
\fBOrigin:\fP\fI nome\fP
Il nome della distribuzione da cui ha origine questo pacchetto. Questo campo
solitamente non è necessario.

.TP 
\fBSection:\fP\fI sezione\fP
Questo è un campo generico che assegna al pacchetto una categoria in base al
software che esso installa. Alcune sezioni comuni sono: «utils», «net»,
«mail», «text», «x11», ecc.

.TP 
\fBPriority:\fP\fI priorità\fP
Imposta l'importanza di questo pacchetto in relazione all'intero
sistema. Priorità comuni sono: «required», «standard», «optional», «extra»,
ecc.

In Debian, i campi \fBSection\fP e \fBPriority\fP hanno un insieme definito di
valori accettati in base al manuale Debian Policy. È possibile ottenere un
elenco di tali valori dalla versione più recente del pacchetto
\fBdebian\-policy\fP.

.TP 
\fBBuild\-Depends:\fP\fI elenco\-pacchetti\fP
Un elenco di pacchetti che devono essere installati e configurati per poter
compilare il pacchetto sorgente. Includere una dipendenza in questo elenco
ha lo stesso effetto di includerla in entrambi \fBBuild\-Depends\-Arch\fP e
\fBBuild\-Depends\-Indep\fP, con l'effetto aggiuntivo di essere usata per la
creazione di archivi solo\-sorgenti.

.TP 
\fBBuild\-Depends\-Arch:\fP\fI elenco\-pacchetti\fP
Come \fBBuild\-Depends\fP, ma sono necessari solamente quando si compilano i
pacchetti dipendenti dall'architettura. In questo caso vengono installati
anche i \fBBuild\-Depends\fP. Questo campo è stato introdotto nella versione
1.16.4 di dpkg; per poter compilare con versioni più vecchie di dpkg, deve
essere invece usato \fBBuild\-Depends\fP.

.TP 
\fBBuild\-Depends\-Indep:\fP\fI elenco\-pacchetti\fP
Come \fBBuild\-Depends\fP, ma sono necessari solamente quando si compilano i
pacchetti indipendenti dall'architettura. In questo caso vengono installati
anche i \fBBuild\-Depends\fP.

.TP 
\fBBuild\-Conflicts:\fP\fI elenco\-pacchetti\fP
Un elenco di pacchetti che non devono essere installati quando il pacchetto
è compilato, ad esempio perché interferiscono con il sistema di compilazione
usato. Includere una dipendenza in questo elenco ha lo stesso effetto di
includerla sia in \fBBuild\-Conflicts\-Arch\fP sia in \fBBuild\-Conflicts\-Indep\fP,
con l'effetto aggiuntivo di essere usata per le compilazioni solo\-sorgente.

.TP 
\fBBuild\-Conflicts\-Arch:\fP\fI elenco\-pacchetti\fP
Come \fBBuild\-Conflicts\fP, ma solo quando si compilano i pacchetti dipendenti
dall'architettura. Questo campo è stato introdotto nella versione 1.16.4 di
dpkg; per poter compilare con versioni più vecchie di dpkg, deve essere
invece usato \fBBuild\-Conflicts\fP.

.TP 
\fBBuild\-Conflicts\-Indep:\fP\fI elenco\-pacchetti\fP
Come \fBBuild\-Conflicts\fP, ma solo quando si compilano i pacchetti
indipendenti dall'architettura.

.PP
La sintassi dei campi \fBBuild\-Depends\fP, \fBBuild\-Depends\-Arch\fP e
\fBBuild\-Depends\-Indep\fP è un elenco di gruppi di pacchetti alternativi. Ogni
gruppo è un elenco di pacchetti separati da una barra verticale (o «pipe»):
«|». I gruppi sono separati da virgole. Le virgole devono essere lette come
«AND» e le pipe come «OR», con le pipe che hanno la precedenza. Ogni nome di
pacchetto è seguito opzionalmente da un numero di versione specificato tra
parentesi e da un'architettura specificata tra parentesi quadre.

La sintassi dei campi \fBBuild\-Conflicts\fP, \fBBuild\-Conflicts\-Arch\fP e
\fBBuild\-Conflicts\-Indep\fP è un elenco di gruppi di pacchetti separati da
virgole, dove la virgola viene letta come un «AND». Non è supportato
specificare pacchetti alternativi usando una «pipe». Ogni nome di pacchetto
è seguito opzionalmente da un numero di versione specificato tra parentesi e
da un'architettura specificata tra parentesi quadre.

Un numero di versione può iniziare con «>>», nel qual caso
corrisponde ad ogni versione successiva e può specificare o meno la
revisione Debian del pacchetto (separata da un trattino). Le relazioni
accettate per le versioni sono «>>» per maggiore di, «<<»
per minore di, «>=» per maggiore o uguale a, «<=» per minore o
uguale a e «=» per uguale a.

L'indicazione di un'architettura è formata da uno o più nomi di
architettura, separati da spazi bianchi. Ciascun nome può essere fatto
precedere da un punto esclamativo col significato di «NOT».

Notare che le dipendenze dai pacchetti nell'insieme \fBbuild\-essential\fP
possono essere omesse e che dichiarare conflitti di compilazione con essi è
impossibile. Un elenco di tali pacchetti è nel pacchetto build\-essential.


.SH "CAMPI BINARI"

.LP
Notare che i campi \fBPriority\fP, \fBSection\fP e \fBHomepage\fP possono anche
essere in un paragrafo di un binario per sovrascrivere il valore globale del
pacchetto sorgente.

.TP 
\fBPackage:\fP \fInome\-pacchetto\-binario\fP (richiesto)
Questo campo viene usato per indicare il nome del pacchetto binario. Valgono
le stesse restrizioni usate per i nomi dei pacchetti sorgenti.

.TP 
\fBArchitecture:\fP \fIarch\fP|\fBall\fP|\fBany\fP (richiesto)
L'architettura specifica su quale tipo di hardware funziona questo
pacchetto. Per i pacchetti che funzionano su tutte le architetture, usare il
valore \fBany\fP. Per i pacchetti che sono indipendenti dall'architettura, come
gli script Perl e di shell o la documentazione, usare il valore \fBall\fP. Per
limitare i pacchetti ad un determinato insieme di architetture, specificare
i nomi delle architetture, separate da uno spazio. In tale elenco è anche
possibile usare caratteri jolly per le architetture (per maggiori
informazioni vedere \fBdpkg\-architecture\fP(1)).

.TP 
\fBPackage\-Type:\fP \fBdeb\fP|\fBudeb\fP
Questo campo definisce il tipo di pacchetto. «udeb» è per pacchetti di
dimensioni limitate usati dall'installatore debian. «deb» è il valore
predefinito che viene usato se il campo non è presente. Ulteriori tipi
potrebbero essere aggiunti in futuro.

.TP 
.PD 0
\fBSubarchitecture:\fP\fI valore\fP
.TP 
.PD 0
\fBKernel\-Version:\fP\fI valore\fP
.TP 
.PD 0
\fBInstaller\-Menu\-Item:\fP\fI valore\fP
Questi campi sono usati dall'installatore Debian e non sono solitamente
necessari. Per maggiori dettagli su di essi, guardare il file
/usr/share/doc/debian\-installer/devel/modules.txt nel pacchetto
\fBdebian\-installer\fP.

.TP 
.PD 0
\fBEssential:\fP \fByes\fP|\fBno\fP
.TP 
.PD 0
\fBMulti\-Arch:\fP \fBsame\fP|\fBforeign\fP|\fBallowed\fP
.TP 
.PD 0
\fBTag:\fP\fI elenco\-etichette\fP
.TP 
.PD 0
\fBDescription:\fP\fI descrizione\-breve\fP (richiesto)
Questi campi sono descritti nella pagina di manuale \fBdeb\-control\fP(5), dato
che sono copiati in modo letterale nel file di controllo del pacchetto
binario.

.TP 
.PD 0
\fBDepends:\fP\fI elenco\-pacchetti\fP
.TP 
.PD 0
\fBPre\-Depends:\fP\fI elenco\-pacchetti\fP
.TP 
.PD 0
\fBRecommends:\fP\fI elenco\-pacchetti\fP
.TP 
.PD 0
\fBSuggests:\fP\fI elenco\-pacchetti\fP
.TP 
.PD 0
\fBBreaks:\fP\fI elenco\-pacchetti\fP
.TP 
.PD 0
\fBEnhances:\fP\fI elenco\-pacchetti\fP
.TP 
.PD 0
\fBReplaces:\fP\fI elenco\-pacchetti\fP
.TP 
.PD 0
\fBConflicts:\fP\fI elenco\-pacchetti\fP
.TP 
.PD 0
\fBProvides:\fP\fI elenco\-pacchetti\fP
.TP 
.PD 0
\fBBuilt\-Using:\fP\fI elenco\-pacchetti\fP
.br
Questi campi dichiarano relazioni tra i pacchetti. Sono descritti nella
pagina di manuale \fBdeb\-control\fP(5) e nel pacchetto \fBdebian\-policy\fP.

.SH "CAMPI DEFINITI DALL'UTENTE"
È permesso aggiungere al file control campi addizionali definiti dall'utente
che saranno ignorati dagli strumenti. Se si desidera che i campi vengano
copiati nei file di output, come ad esempio i pacchetti binari, è necessario
usare uno schema dei nomi personalizzato: i campi devono iniziare con una
lettera X, seguita da una o più tra le lettere BCS e un trattino. Se viene
usata la lettera B, il campo sarà presente nel file di controllo del
pacchetto binario, vedere \fBdeb\-control\fP(5); se è usata la lettera S sarà
nel file di controllo del pacchetto sorgente come creato da
\fBdpkg\-source\fP(1); nel caso della lettera C nel file di controllo del
caricamento (.changes). Notare che i prefissi X[BCS]\- vengono rimossi quando
i campi sono copiati nei file di output. Un campo \fBXC\-Approved\-By\fP apparirà
come \fBApproved\-By\fP nel file changes e non sarà presente nel file di
controllo del pacchetto binario o di quello sorgente.

Tenere a mente che questi campi definiti dall'utente useranno lo spazio dei
nomi globale, che potrebbe in futuro andare in conflitto con i campi
ufficialmente riconosciuti. Per evitare una potenziale situazione di questo
tipo, si possono far iniziare questi campi con \fBPrivate\-\fP, come in
\fBXB\-Private\-Nuovo\-Campo\fP; l'effetto collaterale è che \fBdpkg\-deb\fP non
avvertirà della loro presenza come campi sconosciuti.

.SH ESEMPIO
.\" .RS
.nf
# Commento
Source: dpkg
Section: admin
Priority: required
Maintainer: Dpkg Developers <debian\-dpkg@lists.debian.org>
# questo campo viene copiato nei pacchetti binario e sorgente
XBS\-Upstream\-Release\-Status: stable
Homepage: http://wiki.debian.org/Teams/Dpkg
Vcs\-Browser: http://git.debian.org/?p=dpkg/dpkg.git
Vcs\-Git: git://git.debian.org/git/dpkg/dpkg.git
Standards\-Version: 3.7.3
Build\-Depends: pkg\-config, debhelper (>= 4.1.81),
 libselinux1\-dev (>= 1.28\-4) [!linux\-any]

Package: dpkg\-dev
Section: utils
Priority: optional
Architecture: all
# questo è un campo personalizzato nel pacchetto binario
XB\-Mentoring\-Contact: Raphael Hertzog <hertzog@debian.org>
Depends: dpkg (>= 1.14.6), perl5, perl\-modules, cpio (>= 2.4.2\-2),
 bzip2, lzma, patch (>= 2.2\-1), make, binutils, libtimedate\-perl
Recommends: gcc | c\-compiler, build\-essential
Suggests: gnupg, debian\-keyring
Conflicts: dpkg\-cross (<< 2.0.0), devscripts (<< 2.10.26)
Replaces: manpages\-pl (<= 20051117\-1)
Description: Debian package development tools
 This package provides the development tools (including dpkg\-source)
 required to unpack, build and upload Debian source packages.
 .
 Most Debian source packages will require additional tools to build;
 for example, most packages need make and the C compiler gcc.
.fi


.\" .RE
.SH "VEDERE ANCHE"
\fBdeb\-control\fP(5), \fBdeb\-version\fP(5), \fBdpkg\-source\fP(1)
