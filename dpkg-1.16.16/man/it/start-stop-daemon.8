.\" dpkg manual page - start-stop-daemon(8)
.\"
.\" Copyright Â© 1999 Klee Dienes <klee@mit.edu>
.\" Copyright Â© 1999 Ben Collins <bcollins@debian.org>
.\" Copyright Â© 2000-2001 Wichert Akkerman <wakkerma@debian.org>
.\" Copyright Â© 2002-2003 Adam Heath <doogie@debian.org>
.\" Copyright Â© 2004 Scott James Remnant <keybuk@debian.org>
.\" Copyright Â© 2008-2012 Guillem Jover <guillem@debian.org>
.\"
.\" This is free software; you can redistribute it and/or modify
.\" it under the terms of the GNU General Public License as published by
.\" the Free Software Foundation; either version 2 of the License, or
.\" (at your option) any later version.
.\"
.\" This is distributed in the hope that it will be useful,
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\" GNU General Public License for more details.
.\"
.\" You should have received a copy of the GNU General Public License
.\" along with this program.  If not, see <http://www.gnu.org/licenses/>.
.
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH start\-stop\-daemon 8 "17 giugno 2012" "Progetto Debian" "utilità dpkg"
.SH NOME
start\-stop\-daemon \- avvia e ferma i programmi demone di sistema
.
.SH SINTASSI
\fBstart\-stop\-daemon\fP [\fIopzione\fP...] \fIcomando\fP
.
.SH DESCRIZIONE
\fBstart\-stop\-daemon\fP viene usato per controllare la creazione e la
terminazione dei processi a livello di sistema. Usando una delle opzioni
corrispondenti, \fBstart\-stop\-daemon\fP può essere configurato per trovare le
istanze esistenti di un processo in esecuzione.
.PP
Nota: a meno che non venga specificata l'opzione \fB\-\-pidfile\fP,
\fBstart\-stop\-daemon\fP si comporta in modo simile a
\fBkillall\fP(1). \fBstart\-stop\-daemon\fP analizza la tabella dei processi
cercando qualsiasi processo che corrisponde al nome, UID o GID (se
specificati) di processo. Ogni processo che corrisponde impedirà a
\fB\-\-start\fP di avviare il demone. Se viene specificata l'opzione \fB\-\-stop\fP a
tutti i processi che corrispondono verrà inviato il segnale TERM (o quello
specificato con \fB\-\-signal\fP o \fB\-\-retry\fP). Per i demoni che hanno processi
figli di lunga vita che devono sopravvivere ad uno \fB\-\-stop\fP è necessario
specificare un file PID.
.
.SH COMANDI
.TP 
\fB\-S\fP, \fB\-\-start\fP [\fB\-\-\fP] \fIargomenti\fP
Controlla l'esistenza di un processo specifico. Se tale processo esiste,
\fBstart\-stop\-daemon\fP non fa nulla ed esce con lo stato di errore 1 (0 se
viene specificato \fB\-\-oknodo\fP). Se tale processo non esiste, viene avviata
un'istanza usando l'eseguibile specificato da \fB\-\-exec\fP oppure, se presente,
da \fB\-\-startas\fP. Tutti gli argomenti specificati dopo \fB\-\-\fP sulla riga di
comando vengono passati immutati al programma che viene avviato.
.TP 
\fB\-K\fP, \fB\-\-stop\fP
Controlla l'esistenza di un processo specificato. Se un tale processo
esiste, \fBstart\-stop\-daemon\fP gli invia il segnale specificato da \fB\-\-signal\fP
ed esce con lo stato di errore 0. Se tale processo non esiste,
\fBstart\-stop\-daemon\fP esce con stato di errore 1 (0 se viene specificato
\fB\-\-oknodo\fP). Se viene usata l'opzione \fB\-\-retry\fP, allora
\fBstart\-stop\-daemon\fP controllerà che i processi siano stati terminati.
.TP 
\fB\-T\fP, \fB\-\-status\fP
Controlla l'esistenza di un processo specificato e restituisce un codice di
stato di uscita in base alle LSB Init Script Actions.
.TP 
\fB\-H\fP, \fB\-\-help\fP
Visualizza informazioni sull'uso ed esce.
.TP 
\fB\-V\fP, \fB\-\-version\fP
Visualizza la versione del programma ed esce.
.
.SH "OPZIONI PER LA CORRISPONDENZA"
.TP 
\fB\-p\fP, \fB\-\-pidfile\fP \fIfile\-pid\fP
Controlla se un processo ha creato il file \fIfile\-pid\fP. Nota: usare questa
opzione di corrispondenza da sola può causare effetti su processi non
desiderati, se il vecchio processo è stato terminato senza aver potuto
rimuovere il \fIfile\-pid\fP.
.TP 
\fB\-x\fP, \fB\-\-exec\fP \fIeseguibile\fP
Cerca i processi che sono istanze di questo \fIeseguibile\fP. L'argomento
\fIeseguibile\fP dovrebbe essere un nome di percorso assoluto. Nota: questo
potrebbe non funzionare come atteso con gli script interpretati, dato che
l'eseguibile punterà all'interprete. Tenere in considerazione che faranno
corrispondenza anche i processi in esecuzione in una chroot, perciò
potrebbero essere necessarie altre restrizioni della corrispondenza.
.TP 
\fB\-n\fP, \fB\-\-name\fP \fInome\-processo\fP
Cerca i processi con nome \fInome\-processo\fP. Questo è solitamente il nome del
file del processo, ma potrebbe essere stato cambiato dal processo
stesso. Nota: nella maggior parte dei sistemi questa informazione viene
recuperata del nome comm del processo nel kernel, che tende ad avere limiti
di lunghezza piuttosto limitati (nell'assunzione che più di 15 caratteri non
siano portabili).
.TP 
\fB\-u\fP, \fB\-\-user\fP \fInomeutente\fP|\fIuid\fP
Cerca i processi di proprietà dell'utente specificato da \fInomeutente\fP o
\fIuid\fP. Nota: l'uso di questa opzione di corrispondenza da sola farà sì che
l'azione abbia effetto su tutti i processi corrispondenti all'utente.
.
.SH OPZIONI
.TP 
\fB\-g\fP, \fB\-\-group\fP \fIgruppo\fP|\fIgid\fP
Modifica in \fIgroup\fP o \fIgid\fP quando avvia il processo.
.TP 
\fB\-s\fP, \fB\-\-signal\fP \fIsegnale\fP
Con \fB\-\-stop\fP specifica il segnale da inviare ai processi che vengono
fermati (quello predefinito è TERM).
.TP 
\fB\-R\fP, \fB\-\-retry\fP \fIscadenza\fP|\fIpianificazione\fP
Con \fB\-\-stop\fP specifica che \fBstart\-stop\-daemon\fP deve controllare se i
processi terminano effettivamente. Controlla ripetutamente se qualsiasi
processo corrispondente è in esecuzione fino a che nessuno lo è più. Se i
processi non terminano, effettua altre azioni in base alla pianificazione.

Se viene specificata una \fIscadenza\fP invece di una \fIpianificazione\fP, allora
viene usata la pianificazione \fIsegnale\fP\fB/\fP\fIscadenza\fP\fB/KILL/\fP\fIscadenza\fP,
dove \fIsegnale\fP è il segnale specificato da \fB\-\-signal\fP.

\fIpianificazione\fP è un elenco di almeno due elementi separati da barre
(\fB/\fP); ciascun elemento può essere \fB\-\fP\fInumero\-segnale\fP o
[\fB\-\fP]\fInome\-segnale\fP, che significa inviare quel segnale, o \fIscadenza\fP,
che significa aspettare che il processo termini per quel numero di secondi,
oppure \fBforever\fP, che significa ripetere il resto della pianificazione
all'infinito, se necessario.

Se viene raggiunta la fine della pianificazione e non viene specificato
\fBforever\fP, allora \fBstart\-stop\-daemon\fP esce con stato di errore 2. Se viene
specificata una pianificazione, allora viene ignorato qualsiasi segnale
specificato con \fB\-\-signal\fP.
.TP 
\fB\-a\fP, \fB\-\-startas\fP \fInomepercorso\fP
Con \fB\-\-start\fP, avvia il processo specificato da \fInomepercorso\fP. Se non
specificato, viene usato in modo predefinito l'argomento fornito a
\fB\-\-exec\fP.
.TP 
\fB\-t\fP, \fB\-\-test\fP
Visualizza le azioni che sarebbero effettuate e imposta il valore restituito
appropriato, ma non fa alcuna azione.
.TP 
\fB\-o\fP, \fB\-\-oknodo\fP
Restituisce lo stato di uscita 0 invece di 1 se non viene (o non verrebbe)
fatta alcuna azione.
.TP 
\fB\-q\fP, \fB\-\-quiet\fP
Non visualizza messaggi informativi; mostra solo i messaggi di errore.
.TP 
\fB\-c\fP, \fB\-\-chuid\fP \fInomeutente\fP|\fIuid\fP[\fB:\fP\fIgruppo\fP|\fIgid\fP]
Cambia a questo nome utente/UID prima di avviare il processo. Si può anche
specificare un gruppo aggiungendo in fondo un carattere \fB:\fP, seguito dal
gruppo o GID nello stesso modo usato per il comando «chown»
(\fIutente\fP\fB:\fP\fIgruppo\fP). Se un utente viene specificato senza un gruppo,
viene usato il GID primario di tale utente. Quando si usa questa opzione si
deve avere ben chiaro che, anche se non viene specificata l'opzione
\fB\-\-group\fP, vengono impostati anche il gruppo primario e quelli
supplementari. L'opzione \fB\-\-group\fP è solo per i gruppi di cui l'utente non
fa normalmente parte (ad esempio aggiungere l'appartenenza ad un gruppo per
singoli processi, per gli utenti generici come \fBnobody\fP).
.TP 
\fB\-r\fP, \fB\-\-chroot\fP \fIroot\fP
Cambia la directory e la chroot a \fIroot\fP prima di avviare il
processo. Notare che anche il filepid viene scritto dopo chroot.
.TP 
\fB\-d\fP, \fB\-\-chdir\fP \fIpercorso\fP
Cambia la directory a \fIpercorso\fP prima di avviare il processo. Questo viene
fatto dopo chroot, se viene usata l'opzione \fB\-r\fP|\fB\-\-chroot\fP. Quando non
specificato, start\-stop\-daemon cambia la directory in quella root prima di
avviare il processo.
.TP 
\fB\-b\fP, \fB\-\-background\fP
Usata tipicamente con i programmi che non si scollegano da soli. Questa
opzione forza \fBstart\-stop\-daemon\fP a fare il fork prima di avviare il
processo e a forzarlo sullo sfondo. \fBATTENZIONE: start\-stop\-daemon\fP non può
controllare lo stato di uscita se il processo fallisce l'esecuzione per
\fBqualsiasi\fP ragione. Questa è un rimedio estremo, ed è pensato solamente
per i programmi che non ha senso facciano il fork da soli o quando non è
possibile aggiungere il codice per far sì che lo facciano da soli.
.TP 
\fB\-C\fP, \fB\-\-no\-close\fP
Non chiude alcun descrittore di file quando forza il demone sullo
sfondo. Usato a scopo di debug per vedere l'output del processo, o per
ridirigere i descrittori di file per registrare l'output del processo. Ha
importanza solo quando viene usato \fB\-\-background\fP.
.TP 
\fB\-N\fP, \fB\-\-nicelevel\fP \fIint\fP
Modifica la priorità del processo prima di avviarlo.
.TP 
\fB\-P\fP, \fB\-\-procsched\fP \fIpolitica\fP\fB:\fP\fIpriorità\fP
Modifica la politica e la priorità per la pianificazione del processo prima
di avviarlo. La priorità può essere facoltativamente specificata aggiungendo
in fondo un carattere \fB:\fP seguito dal valore. Il valore predefinito di
\fIpriorità\fP è 0. I valori per la politica attualmente supportati sono
\fBother\fP, \fBfifo\fP e \fBrr\fP.
.TP 
\fB\-I\fP, \fB\-\-iosched\fP \fIclasse\fP\fB:\fP\fIpriorità\fP
Modifica la classe e la priorità del pianificatore di I/O del processo prima
di avviarlo. La priorità può essere facoltativamente specificata aggiungendo
in fondo un carattere \fB:\fP seguito dal valore. Il valore predefinito di
\fIpriorità\fP è 4, a meno che \fIclasse\fP non sia \fBidle\fP nel qual caso
\fIpriorità\fP è sempre 7. I valori attualmente supportati per \fIclasse\fP sono
\fBidle\fP, \fBbest\-effort\fP e \fBreal\-time\fP.
.TP 
\fB\-k\fP, \fB\-\-umask\fP \fImaschera\fP
Imposta l'umask del processo prima di avviarlo.
.TP 
\fB\-m\fP, \fB\-\-make\-pidfile\fP
Usata quando si avvia un processo che non crea il proprio file PID. Questa
opzione fa sì che \fBstart\-stop\-daemon\fP crei il file specificato con
\fB\-\-pidfile\fP e che vi metta il PID immediatamente prima di eseguire il
processo. Notare che il file non verrà rimosso quando il programma viene
fermato. \fBNOTA:\fP questa funzionalità può non funzionare in tutti i casi. In
particolar modo quando il programma eseguito fa il fork dal suo processo
principale. Per questo è di solito utile solo quando usato in combinazione
con l'opzione \fB\-\-background\fP.
.TP 
\fB\-v\fP, \fB\-\-verbose\fP
Visualizza messaggi informativi dettagliati.
.
.SH "STATO D'USCITA"
.TP 
\fB0\fP
L'azione richiesta è stata effettuata. Se è stata specificata \fB\-\-oknodo\fP, è
anche possibile che non sia stato necessario fare nulla. Ciò può avvenire
quando viene specificata l'opzione \fB\-\-start\fP e un processo corrispondente è
già in esecuzione, oppure quando viene specificata \fB\-\-stop\fP e non c'è alcun
processo corrispondente.
.TP 
\fB1\fP
Se non è stata specificata \fB\-\-oknodo\fP e non è stato fatto nulla.
.TP 
\fB2\fP
Se sono state specificate \fB\-\-stop\fP e \fB\-\-retry\fP, ma è stata raggiunta la
fine della pianificazione e il processo era ancora in esecuzione.
.TP 
\fB3\fP
Qualsiasi altro errore.
.PP
Quando si usa il comando \fB\-\-status\fP, vengono restituiti i seguenti codici
di stato:
.TP 
\fB0\fP
Il programma è in esecuzione.
.TP 
\fB1\fP
Il programma non è in esecuzione e il file PID esiste.
.TP 
\fB3\fP
Il programma non è in esecuzione.
.TP 
\fB4\fP
Non è stato possibile determinare lo stato del programma.
.
.SH ESEMPIO
Avvia il demone \fBpippod\fP, a meno che uno non sia già in esecuzione (un
processo chiamato pippod, in esecuzione come utente pippod, con PID in
pippod.pid):
.IP
.nf
start\-stop\-daemon \-\-start \-\-oknodo \-\-user pippod \-\-name pippod \e
	\-\-pidfile /run/pippod.pid \-\-startas /usr/sbin/pippod \e
	\-\-chuid pippod \-\- \-\-daemon
.fi
.PP
Invia \fBSIGTERM\fP a \fBpippod\fP e attende fino a 5 secondi che esso si fermi:
.IP
.nf
start\-stop\-daemon \-\-stop \-\-oknodo \-\-user pippod \-\-name pippod \e
	\-\-pidfile /run/pippod.pid \-\-retry 5
.fi
.PP
Dimostrazione di una pianificazione personalizzata per fermare \fBpippod\fP:
.IP
.nf
start\-stop\-daemon \-\-stop \-\-oknodo \-\-user pippod \-\-name pippod \e
	\-\-pidfile /run/pippod.pid \-\-retry=TERM/30/KILL/5
.fi
