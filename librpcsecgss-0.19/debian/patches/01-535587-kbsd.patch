http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=535587

FTBFS on GNU/kFreeBSD

Fix FTBFS on GNU/kFreeBSD by using getpid() (rather than arc4random())
not only if __linux__ is defined, but also if __GLIBC__ is defined, in
both src/clnt_{tcp,udp}.c (Closes: #535587).

Signed-off-by: Cyril Brulebois <kibi@debian.org>

--- a/src/clnt_udp.c	2009-07-30 02:24:50.000000000 +1000
+++ b/src/clnt_udp.c	2009-08-20 14:12:46.000000000 +1000
@@ -153,7 +153,7 @@ clntudp_bufcreate(raddr, program, versio
 	cu->cu_total.tv_usec = -1;
 	cu->cu_sendsz = sendsz;
 	cu->cu_recvsz = recvsz;
-#ifdef __linux__
+#if defined (__linux__) || defined(__GLIBC__)
 	call_msg.rm_xid = getpid() ^ now.tv_sec ^ now.tv_usec;
 #else
 	call_msg.rm_xid = arc4random();
--- a/src/clnt_tcp.c	2009-07-30 02:24:50.000000000 +1000
+++ b/src/clnt_tcp.c	2009-08-20 14:12:46.000000000 +1000
@@ -225,7 +225,7 @@ clnttcp_create(raddr, prog, vers, sockp,
 	 * Initialize call message
 	 */
 	(void)gettimeofday(&now, (struct timezone *)0);
-#ifdef __linux__
+#if defined (__linux__) || defined(__GLIBC__)
 	call_msg.rm_xid = getpid() ^ now.tv_sec ^ now.tv_usec;
 #else
 	call_msg.rm_xid = arc4random();
