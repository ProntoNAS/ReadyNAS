<!doctype linuxdoc system>

<article>

<title>devices created by makedev
<author> Andreas Jellinghaus <tt>aj@debian.org</tt>
<date> version 0.3, based on Linux allocated device 2.1.62
<abstract>
	some devices are created by default, some are left out on boot
	floppies, other devices are only created on demand and some
	devices are obsolete or have new names. 
</abstract>

<sect> batches <p>

call out devices are not generated by default. however if you need them,
you can generate them (see below).

<descrip>
<tag/generic/all standard batches for normal Linux\/i386 systems.
	(standard misc devices, ttyS[0-3], mouse, printer, tapes
	(scsi, qic, qic117), audio, scsi generic, standard disk, cdroms
	and ttys) 
<tag/generic-m68k/all generic devices for m68k (additional
	framebuffer, some mouse devices and m68k scsi disk devices are
	included,
	but busmouse devices and qic and qic117 are left out).
<tag/boot-floppy/a subset of generic. (no audio, less ttys)
<tag/std-hd/standard hard disks (hd[a-h,xd[ab],sd[a-h],ram disk,md,loop)
<tag/std-cdrom/standard cdroms (scsi, old non-scsi non-atapi cdroms)
<tag/compatiblity/collection of old devices. It is usefull to remove them, but
make sure, that you have generated the new ones, and that you know, what
you are doing !  serial-cu, printer-old, mouse-old, sr-old,
qic-old, misc-old, sg-old
<tag/update/special tag : reads \/proc\/devices and generates new devices
	found there.
</descrip>

<sect> Limits (standard devices) <p>

There are some limits in this version of devinfo : it will only create a
special number of devices (e.g. ramdisks, hda partitions). If one of
these limits is unrealistic, please tell me. Most limits have no good
reason, I just didn't want to create hundreds of devices, so I only
created a few. If a limit is too low for you : a) please tell me and b)
modify /etc/devinfo (should be easy). <p>

<descrip>
<tag/ramdisks/8 devices ram[0-7]
<tag/ide harddisks/20 partitions each (devices hd[a-h])
<tag/xt harddisks/20 partitions each (devices xd[ab]
<tag/loopback/8 devices loop[0-7] 
<tag/metadisk/4 devices md[0-3]
<tag/scsi cdrom/scd: 8 devices scd[0-7] 
<tag/scsi cdrom/scd-all : 16 devices scd[0-15] 
<tag/scsi generic/sg : 8 devices sg[0-7]
<tag/scsi generic/sg-all : 16 devices sg[0-15]
<tag/scsi tapes/8 devices st[0-7] 
<tag/mscdex/4 cdrom devices dos_cd[0-3] 
<tag/joysticks/2 devices each js[0-1] djs[0-1]
<tag/other cdroms/only one device created : sonycd, gscd, optcd, sjcd,
hitcd, mcd, cdu535, aztcd, cm206cd, bpcd (if there are several cdroms
possible : please tell me !)          
<tag/serial/default bootdisks and base system will only have ttyS[0-3],
but you can create all possible devices ttyS[0-63] with "MAKEDEV serial"
or several additional devices with "MAKEDEV ttyS4 ttyS5 ...".
</descrip>

<sect> additional devices <p>

you can create these devices with "MAKEDEV name" and delete them with
"MAKEDEV -d name". you can either use the name listed here (this will
create all possible devices), or individual devices (use the device
name) e.g. "serial" will create all 64 serial devices ttyS[0-63] but
"ttyS0" will only create this one. 

<sect1> serial devices <p>

<descrip>
<tag/isdn-tty/isdn terminal devices. 8 devices : ttyI[0-7]
<tag/isdn-tty-all/isdn terminal devices. 64 devices : ttyI[0-63]

<tag/isdn-ppp/isdn sync ppp network devices. 8 devices : ippp[0-7]
<tag/isdn-ppp-all/isdn sync ppp network devices. 64 devices : ippp[0-63]

<tag/isdn-io/isdn raw and control devices. 18 devices : 
	isdn[0-7] isdnctrl[0-7] isdnctrl isdninfo
<tag/isdn-io-all/isdn raw and control devices. 130 devices : 
	isdn[0-63] isdnctrl[0-63] isdnctrl isdninfo

<tag/serial-cu/serial callout devices. they are only for compatibility,
most people don't need them. 64 devices : cua[0-63]

<tag/isdn-cu/isdn call out devices. they are only for compatibility,
most people don't need them. 64 devices : cui[0-7]
<tag/isdn-cu-all/isdn call out devices. they are only for compatibility,
most people don't need them. 64 devices : cui[0-63]

<tag/chase{-cu}/devices for chase serial card (append -cu to create
call out devices). 32 devices ttyH[0-31] (cuh[0-31])

<tag/cyclades{-cu}/devices for cyclades serial card (append -cu to create
call out devices). 32 devices ttyC[0-31] (cub[0-31])

<tag/digiboard{-cu}/devices for digiboard serial card (append -cu to create
call out devices). 32 devices ttyD[0-31] (cud[0-31])

<tag/stallion{-cu}/devices for stallion serial card (append -cu to create
callout devices). 32 devices ttyE[0-31] (cue[0-31])

<tag/stallion-mem/devices to access stallion serial card. 4 devices
stallionmem[0-3]

<tag/specialix{-cu}/devices for specialix serial card (append -cu to create
call out devices). 32 devices ttyX[0-31] (cux[0-31])

<tag/rockport{-cu}/devices for rockport serial card (append -cu to create
call out devices). 32 devices ttyR[0-31] (cur[0-31])

<tag/riscom{-cu}/devices for riscom serial card (append -cu to create
call out devices). 32 devices ttyL[0-31] (cul[0-31])

<tag/hayes{-cu}/devices for hayes serial card (append -cu to create
call out devices). 32 devices ttyP[0-31] (cup[0-31])

<tag/baycom/devices for baycom radio modem. 32 devices bc[0-31]

<tag/computone{-cu}/devices for computone intelliport II serial card
(append -cu to create call out devices). 32 devices ttyF[0-31]
(cuf[0-31])

<tag/computone-ctrl/devices to access computone intelliport II serial
card. 8 devices ip2ipl[0-3] and ip2stat[0-3]

<tag/dcbri/spellcaster datacomm\/bri isdn card. 4 devices dcbri[0-3]
<tag/specialix{-cu}/devices for specialix IO8+ serial card. 32 devices
ttyW[0-31] (cuw[0-32])
<tag/pam{-cu}/devices for PAM Software's mulitmodem boards. 32 devices
ttyM[0-31] (cum[0-31])
</descrip>

<sect1> misc devices <p>

<descrip>
<tag/pty[p-za-e]/master pty devices. 16 devices pty?[0-9a-f] each
<tag/tty[p-za-e]/slave tty devices. 16 devices pty?[0-9a-f] each
<tag/floppy-all/generic only includes the fd0 and fd1 devices. this way
you can generate devices for the 3rd ... 8th floppies. i recommend to
install fdutils and use MAKEFLOPPIES to create the floppy devices you
need. 30 devices each fd[0-7]*

<tag/framebuffer/universal frame buffer (68k,sparc).
	22 devices fb0* fb1*
<tag/other-arch/amigamouse, atarimouse, sunmouse, openprom, kbd
<tag/double/"double" compressed disk. 16 devices [c]double[0-7]
<tag/ez[a-d]/syquest ex135 parallel port removable drive. 
	20 partitions each
<tag/ed[ab]/mca esdi hard disk. 20 partitions ed?* each

<tag/sbpcd[234]/2nd,3rd,4th sound blaster cdrom controller. 4 devices sbpcdXX each
<tag/mscdex/MSCDEX CD-ROM callback support. 4 devices dos_cd[0-3]
<tag/cm205cd/cm205 cdrom devices (not supported in 2.x).
	2 device cm205cd lmscd
<tag/ad[a-p]/acsi disc\/cdrom (68k\/atari). 16 devices ad?* each
<tag/gs4500/genius 4500 handheld scanner. 1 device gs4500
<tag/slm/atari sm asci laser printer (68k\/atari). 4 devices slm[0-3]
<tag/ht/ide tape. 2 devices ht0 nht0
<tag/z2ram/zorro II ramdisk. 1 device z2ram
<tag/cfs/coda network file-system.
	1 device cfs0
<tag/dtlk/DoubleTalk PC speech synthesizer, from RC Systems. 1 device dtlk

<tag/ibcs2/ibcs2 devices as described in "Linux Allocated Devices".
you need to create the directory /dev/inet before running makedev.
ibcs2-unoff has lots more devices (i don't know if all are needed, or
not. in doubt use ibcs2-unoff). 9 devices (socksys spx nfsd X0R inet/*).

<tag/ibcs2-unoff/ibcs2 devices as described in the ibcs2 package. you
need to create the directories "X" and "inet" before creating these
devices. 74 devices (arp egp ggp icmp ip ipip pup rawip rip tcp udp nfsd
X0R socksys spx pty[10-47] inet/* X/*)

<tag/nvram/some special m68k hardware ? 1 device nvram

<tag/system-sgi/devices for linux/sgi. 5 devices graphics opengl gfx
input/mouse input/keyboard

<tag/nb/network block devices. 8 devices nb*
<tag/ftl/flash translatio layer (FTL) filesystems. max. 16 drives a-p
with each 15 partitions (like scsi disks sd*).
<tag/qng/Quantum Noice Generator. 1 device qng
<tag/at200/Photometrics AT200 CCD camera. 1 device at200
<tag/bttv/Brooktree Bt848 frame grabbers. 12 devices bttv[0-3]
bttvc[0-3] bttv-vbi[0-3]
<tag/winradio/WiNRADiO communications receiver card. 4 devices
winradio[0-3]
<tag/videotext/Teletext/videotext interfaces 2 devices vtx vttuner
<tag/ihcp/ikon 1011[57] Versatec Greensheet Interface. 2devices ihcp[0-1]
<tag/shimq/Linux/SGI shared memory input queue. 5 devices shmiq
qcntl[0-3]
<tag/sch/SCSI media changer. 8 devices sch[0-7]
<tag/controla/Sony control-a1 stereo control bus. 
</descrip>

<sect1> sound <p>
<descrip>
<tag/mpu401/mpu401 MIDI data & status ports. 
	2 devices mpu401{data,stat}
<tag/tclmidi/tclmidi midi driver. 
	12 devices midi[0-3] rmidi[0-3] smpte[0-3]
</descrip>

<sect1> misc <p>
<descrip>
<tag/wvisfgrab/quanta winvision frame grabber. 
	1 device wvisfrab
<tag/mmetfgrab/matrox meteor frame grabber.
	1 device mmetfgrab
<tag/ml16p[abc]/ml-16p experimental i\/o board.
	20 device ml16p?* each
<tag/scc/Z8530 HDLC driver. 8 devices scc[0-7]
<tag/rom/rom\/flash memory card. 
	32 devices rom[0-7] rrom[0-7] flash[0-7] rflash[0-7]
<tag/netlink/netlink support. 2 devices route skip
<tag/mlanai/myricom pci myrinet board. 8 devices mlanai[0-7]
<tag/yamm/yet another micro monitor. 1 device yamm
<tag/bdm/bdm interface for remote debugging MC683xx mc. 
	6 devices pd_bdm[0-2] icd_bdm[0-2]
<tag/holter/electrocardiognosis holter serial port.
	3 devices holter[0-2]
<tag/dsp56k/dsp56001 digital signal processor.
	1 device dsp56k
<tag/adbus/apple desktop bus. this was disabled, because it clashes with
ab[b], the second acsi device (m68k/atari acsi disk).
	1 device adb
<tag/firewall/sf firewall package.
	1 device firewall
<tag/plink/sundance plink transputer boards.
	12 devices [r]plink[0-3][d]
<tag/enskip/enskip kernel encryption package
<tag/yppcpci/yarc powerpc pci coprocessor card
<tag/capi20/CAPI 2.0 interface.
	21 devices capi20 capi20.[01-19]
<tag/ma16/ma16 numeric accelerator card
<tag/aps/spellcaster protocol service interface.
	7 devices aps*
<tag/sci/dolphin interconnect solutions' pci-sci bridge.
	4 devices SCI\/[0-3]
</descrip>

<sect> compatibility <p>

not all devices have a standard device name shared by all linux
distributions, and many names have changed in the past. here is a list,
so you can find new names, create the old devices (if you want), or
remove them (to get rid of duplicates).

<descrip>
<tag/call out devices/cu* devices are not created by default. but you
can create or remove them : serial-cu chase-cu cyclades-cu digiboard-cu
stallion-cu specialix-cu isdn-cu     rockport-cu riscom-cu  hayes-cu
computone-cu  
<tag/printer-old/parallel port devices, standard name is lp[0-3], not par[0-3]
<tag/mouse-old/(bus-)mouse devices : logimouse(logibm) psmouse(psaux)
msmouse(inportbm) atimouse(atibm) jmouse(jbm)
<tag/sr-old/scsi cdrom devices (now called scd)
<tag/qic-old/qic streamer devices : nqt qt nqt11 qt11 nqt24 qt24 nqt120
qt120 nqt150 qt150 qt-reset
<tag/misc-old/for standardized names, some devices got renamed. old :
midi, sbpcd, aztcd0, vcs0, lmscd, ramdisk
new : midi00, sbpcd0, aztcd, vcs, ram0, cm205cd, ram0
<tag/sg-old/scsi generic devices now use numbers (sg[0-7]), not letters
sg[a-h])
<tag/isdn-old/an old version created ipp* devices. this was a typo, they
are called ippp*
</descrip>

i left some links : even if they are for compatibility, removing them
might break existing software.

<descrip>
<tag/isdnctrl/link to "isdnctrl0"
<tag/mfd0/m68k amiga hd floppy device
</descrip>

<sect> note about console and tty0 <p>

New standard is : /dev/tty0 is a device (char,4,0).
console should be a symlink : to tty0, or whatever your console is.
If it is not a symlink, makedev will replace it with a symlink to tty0.
Someday there will be a kernel managed device /dev/console to handle
this (it will be char 5 1).

</article> 
