#! /bin/sh -e

if [ $# -eq 3 -a "$2" = '-d' ]; then
    pdir="-d $3"
elif [ $# -ne 1 ]; then
    echo >&2 "`basename $0`: script expects -patch|-unpatch as argument"
    exit 1
fi
case "$1" in
    -patch) patch $pdir -f --no-backup-if-mismatch -p1 < $0;;
    -unpatch) patch $pdir -f --no-backup-if-mismatch -R -p1 < $0;;
    *)
	echo >&2 "`basename $0`: script expects -patch|-unpatch as argument"
	exit 1
esac
exit 0

# DP: Changed compile time configuration options:
# DP: 
# DP: - Set the default path to comply with Debian policy
# DP: 
# DP: - Enable System-wide .bashrc file for interactive shells.
# DP: 
# DP: - Enable System-wide .bash.logout  file for interactive shells.
# DP: 
# DP: - make non-interactive shells begun with argv[0][0] == '-'
# DP:   run the startup files when not in posix mode.
# DP: 
# DP: - try to check whether bash is being run by sshd and source
# DP:   the .bashrc if so (like the rshd behavior).
# DP: 
# DP: - don't define a default DEFAULT_MAIL_DIRECTORY, because it
# DP:   can cause a timeout on NFS mounts.

--- bash/config-bot.h~	2003-09-19 21:57:38.000000000 +0200
+++ bash/config-bot.h	2003-10-09 21:06:01.000000000 +0200
@@ -178,4 +178,4 @@
 /******************************************************************/
 
 /* If you don't want bash to provide a default mail file to check. */
-/* #undef DEFAULT_MAIL_DIRECTORY */
+#undef DEFAULT_MAIL_DIRECTORY
--- bash-3.1-alpha1/config-top.h	2005-04-29 20:36:34.000000000 +0000
+++ bash/config-top.h	2005-09-09 19:26:41.923569456 +0000
@@ -52,14 +52,14 @@
 /* The default value of the PATH variable. */
 #ifndef DEFAULT_PATH_VALUE
 #define DEFAULT_PATH_VALUE \
-  "/usr/gnu/bin:/usr/local/bin:/bin:/usr/bin:."
+  "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
 #endif
 
 /* The value for PATH when invoking `command -p'.  This is only used when
    the Posix.2 confstr () function, or CS_PATH define are not present. */
 #ifndef STANDARD_UTILS_PATH
 #define STANDARD_UTILS_PATH \
-  "/bin:/usr/bin:/sbin:/usr/sbin:/etc:/usr/etc"
+  "/bin:/usr/bin:/sbin:/usr/sbin"
 #endif
 
 /* Default primary and secondary prompt strings. */
@@ -73,15 +73,15 @@
 #define KSH_COMPATIBLE_SELECT
 
 /* System-wide .bashrc file for interactive shells. */
-/* #define SYS_BASHRC "/etc/bash.bashrc" */
+#define SYS_BASHRC "/etc/bash.bashrc"
 
 /* System-wide .bash_logout for login shells. */
-/* #define SYS_BASH_LOGOUT "/etc/bash.bash_logout" */
+#define SYS_BASH_LOGOUT "/etc/bash.bash_logout"
 
 /* Define this to make non-interactive shells begun with argv[0][0] == '-'
    run the startup files when not in posix mode. */
-/* #define NON_INTERACTIVE_LOGIN_SHELLS */
+#define NON_INTERACTIVE_LOGIN_SHELLS
 
 /* Define this if you want bash to try to check whether it's being run by
    sshd and source the .bashrc if so (like the rshd behavior). */
-/* #define SSH_SOURCE_BASHRC */
+#define SSH_SOURCE_BASHRC
