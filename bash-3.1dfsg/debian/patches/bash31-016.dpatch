#! /bin/sh -e

if [ $# -eq 3 -a "$2" = '-d' ]; then
    pdir="-d $3"
elif [ $# -ne 1 ]; then
    echo >&2 "`basename $0`: script expects -patch|-unpatch as argument"
    exit 1
fi
case "$1" in
    -patch) patch $pdir -f --no-backup-if-mismatch -p0 < $0;;
    -unpatch) patch $pdir -f --no-backup-if-mismatch -R -p0 < $0;;
    *)
	echo >&2 "`basename $0`: script expects -patch|-unpatch as argument"
	exit 1
esac
exit 0

# DP: Upstream patch bash31-016

			     BASH PATCH REPORT
			     =================

Bash-Release: 3.1
Patch-ID: bash31-016

Bug-Reported-by: Nikita Danilov <nikita@clusterfs.com>
Bug-Reference-ID: <17397.51015.769854.541057@gargle.gargle.HOWL>
Bug-Reference-URL: http://lists.gnu.org/archive/html/bug-bash/2006-02/msg00064.html

Bug-Description:

Bash will dump core when attempting to perform globbing in directories with
very large numbers of files.

Patch:

*** ../bash-3.1-patched/lib/glob/glob.c	Thu Mar 24 12:42:27 2005
--- lib/glob/glob.c	Fri Mar  3 16:54:12 2006
***************
*** 361,364 ****
--- 361,365 ----
  
    firstmalloc = 0;
+   nalloca = 0;
  
    /* If PAT is empty, skip the loop, but return one (empty) filename. */
***************
*** 547,550 ****
--- 551,556 ----
  	      tmplink = lastlink;
  	    }
+ 	  else
+ 	    tmplink = 0;
  	  free (lastlink->name);
  	  lastlink = lastlink->next;
*** ../bash-3.1/patchlevel.h	Wed Jul 20 13:58:20 2005
--- patchlevel.h	Wed Dec  7 13:48:42 2005
***************
*** 26,30 ****
     looks for to find the patch level (for the sccs version string). */
  
! #define PATCHLEVEL 15
  
  #endif /* _PATCHLEVEL_H_ */
--- 26,30 ----
     looks for to find the patch level (for the sccs version string). */
  
! #define PATCHLEVEL 16
  
  #endif /* _PATCHLEVEL_H_ */
