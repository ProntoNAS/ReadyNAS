#! /bin/sh -e

if [ $# -eq 3 -a "$2" = '-d' ]; then
    pdir="-d $3"
elif [ $# -ne 1 ]; then
    echo >&2 "`basename $0`: script expects -patch|-unpatch as argument"
    exit 1
fi
case "$1" in
    -patch) patch $pdir -f --no-backup-if-mismatch -p0 < $0;;
    -unpatch) patch $pdir -f --no-backup-if-mismatch -R -p0 < $0;;
    *)
	echo >&2 "`basename $0`: script expects -patch|-unpatch as argument"
	exit 1
esac
exit 0

			     BASH PATCH REPORT
			     =================

Bash-Release: 3.1
Patch-ID: bash31-002

Bug-Reported-by: vapier@gentoo.org
Bug-Reference-ID: <20051210223218.GD3324@toucan.gentoo.org>
Bug-Reference-URL:http://lists.gnu.org/archive/html/bug-bash/2005-12/msg00021.html

Bug-Description:

This corrects several omissions in the bash documentation:  It adds the new
options to `ulimit', the exact expansions for `case' patterns, clarification
of the language concerning the return value of `[[', and updated version
information.

Patch:

*** ../bash-3.1/doc/bash.1	Wed Oct 12 11:40:52 2005
--- doc/bash.1	Wed Dec 28 19:58:54 2005
***************
*** 7,16 ****
  .\"	chet@po.cwru.edu
  .\"
! .\"	Last Change: Sat Aug 27 13:28:44 EDT 2005
  .\"
  .\" bash_builtins, strip all but Built-Ins section
  .if \n(zZ=1 .ig zZ
  .if \n(zY=1 .ig zY
! .TH BASH 1 "2005 Aug 27" "GNU Bash-3.1-beta1"
  .\"
  .\" There's some problem with having a `@'
--- 7,16 ----
  .\"	chet@po.cwru.edu
  .\"
! .\"	Last Change: Wed Dec 28 19:58:45 EST 2005
  .\"
  .\" bash_builtins, strip all but Built-Ins section
  .if \n(zZ=1 .ig zZ
  .if \n(zY=1 .ig zY
! .TH BASH 1 "2005 Dec 28" "GNU Bash-3.1"
  .\"
  .\" There's some problem with having a `@'
***************
*** 678,683 ****
  is enabled, the match is performed without regard to the case
  of alphabetic characters.
! The return value is 0 if the string matches or does not match
! the pattern, respectively, and 1 otherwise.
  Any part of the pattern may be quoted to force it to be matched as a
  string.
--- 678,683 ----
  is enabled, the match is performed without regard to the case
  of alphabetic characters.
! The return value is 0 if the string matches (\fB==\fP) or does not match
! (\fB!=\fP) the pattern, and 1 otherwise.
  Any part of the pattern may be quoted to force it to be matched as a
  string.
***************
*** 808,811 ****
--- 808,817 ----
  .B Pathname Expansion
  below).
+ The \fIword\fP is expanded using tilde
+ expansion, parameter and variable expansion, arithmetic substituion,
+ command substitution, process substitution and quote removal.
+ Each \fIpattern\fP examined is expanded using tilde
+ expansion, parameter and variable expansion, arithmetic substituion,
+ command substitution, and process substitution.
  If the shell option
  .B nocasematch
***************
*** 8485,8489 ****
  none are found.
  .TP
! \fBulimit\fP [\fB\-SHacdflmnpstuv\fP [\fIlimit\fP]]
  Provides control over the resources available to the shell and to
  processes started by it, on systems that allow such control.
--- 8485,8489 ----
  none are found.
  .TP
! \fBulimit\fP [\fB\-SHacdfilmnpqstuvx\fP [\fIlimit\fP]]
  Provides control over the resources available to the shell and to
  processes started by it, on systems that allow such control.
***************
*** 8524,8527 ****
--- 8524,8530 ----
  The maximum size of files created by the shell
  .TP
+ .B \-i
+ The maximum number of pending signals
+ .TP
  .B \-l
  The maximum size that may be locked into memory
***************
*** 8537,8540 ****
--- 8540,8546 ----
  The pipe size in 512-byte blocks (this may not be set)
  .TP
+ .B \-q
+ The maximum number of bytes in POSIX message queues
+ .TP
  .B \-s
  The maximum stack size
***************
*** 8548,8551 ****
--- 8554,8560 ----
  .B \-v
  The maximum amount of virtual memory available to the shell
+ .TP
+ .B \-x
+ The maximum number of file locks
  .PD
  .PP
*** ../bash-3.1/patchlevel.h	Wed Jul 20 13:58:20 2005
--- patchlevel.h	Wed Dec  7 13:48:42 2005
***************
*** 26,30 ****
     looks for to find the patch level (for the sccs version string). */
  
! #define PATCHLEVEL 1
  
  #endif /* _PATCHLEVEL_H_ */
--- 26,30 ----
     looks for to find the patch level (for the sccs version string). */
  
! #define PATCHLEVEL 2
  
  #endif /* _PATCHLEVEL_H_ */
