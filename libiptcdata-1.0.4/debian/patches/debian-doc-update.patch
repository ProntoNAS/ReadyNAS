Description: <short summary of the patch>
 TODO: Put a short summary on the line above and replace this paragraph
 with a longer explanation of this change. Complete the meta-information
 with other relevant fields (see below for details). To make it easier, the
 information below has been extracted from the changelog. Adjust it or drop
 it.
 .
 libiptcdata (1.0.4-4+0.netgear1) unstable; urgency=medium
 .
   * Non-maintainer upload.
   * Multi-archify.
Author: Justin Maggard <justin.maggard@netgear.com>

---
The information above should follow the Patch Tagging Guidelines, please
checkout http://dep.debian.net/deps/dep3/ to learn about the format. Here
are templates for supplementary fields that you might want to add:

Origin: <vendor|upstream|other>, <url of original patch>
Bug: <url in upstream bugtracker>
Bug-Debian: https://bugs.debian.org/<bugnumber>
Bug-Ubuntu: https://launchpad.net/bugs/<bugnumber>
Forwarded: <no|not-needed|url proving that it has been forwarded>
Reviewed-By: <name and email of someone who approved the patch>
Last-Update: <YYYY-MM-DD>

--- libiptcdata-1.0.4.orig/docs/reference/html/ch01.html
+++ libiptcdata-1.0.4/docs/reference/html/ch01.html
@@ -2,30 +2,27 @@
 <html>
 <head>
 <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
-<title>IPTC Data Manipulation</title>
-<meta name="generator" content="DocBook XSL Stylesheets V1.74.0">
+<title>libiptcdata Reference Manual: IPTC Data Manipulation</title>
+<meta name="generator" content="DocBook XSL Stylesheets V1.78.1">
 <link rel="home" href="index.html" title="libiptcdata Reference Manual">
 <link rel="up" href="index.html" title="libiptcdata Reference Manual">
 <link rel="prev" href="iptc-i18n.html" title="Internationalization">
 <link rel="next" href="libiptcdata-data.html" title="IPTC Data">
-<meta name="generator" content="GTK-Doc V1.10 (XML mode)">
+<meta name="generator" content="GTK-Doc V1.21 (XML mode)">
 <link rel="stylesheet" href="style.css" type="text/css">
-<link rel="chapter" href="ch01.html" title="IPTC Data Manipulation">
-<link rel="chapter" href="ch02.html" title="Format-specific Functions">
-<link rel="chapter" href="ch03.html" title="Helper Functions">
 </head>
 <body bgcolor="white" text="black" link="#0000FF" vlink="#840084" alink="#0000FF">
-<table class="navigation" id="top" width="100%" summary="Navigation header" cellpadding="2" cellspacing="2"><tr valign="middle">
-<td><a accesskey="p" href="iptc-i18n.html"><img src="left.png" width="24" height="24" border="0" alt="Prev"></a></td>
-<td> </td>
-<td><a accesskey="h" href="index.html"><img src="home.png" width="24" height="24" border="0" alt="Home"></a></td>
-<th width="100%" align="center">libiptcdata Reference Manual</th>
-<td><a accesskey="n" href="libiptcdata-data.html"><img src="right.png" width="24" height="24" border="0" alt="Next"></a></td>
+<table class="navigation" id="top" width="100%" summary="Navigation header" cellpadding="2" cellspacing="5"><tr valign="middle">
+<td width="100%" align="left" class="shortcuts"></td>
+<td><a accesskey="h" href="index.html"><img src="home.png" width="16" height="16" border="0" alt="Home"></a></td>
+<td><img src="up-insensitive.png" width="16" height="16" border="0"></td>
+<td><a accesskey="p" href="iptc-i18n.html"><img src="left.png" width="16" height="16" border="0" alt="Prev"></a></td>
+<td><a accesskey="n" href="libiptcdata-data.html"><img src="right.png" width="16" height="16" border="0" alt="Next"></a></td>
 </tr></table>
-<div class="chapter" lang="en">
-<div class="titlepage"><div><div><h2 class="title">
-<a name="ch01"></a>IPTC Data Manipulation</h2></div></div></div>
-<div class="toc"><dl>
+<div class="chapter">
+<div class="titlepage"><div><div><h1 class="title">
+<a name="ch01"></a>IPTC Data Manipulation</h1></div></div></div>
+<div class="toc"><dl class="toc">
 <dt>
 <span class="refentrytitle"><a href="libiptcdata-data.html">IPTC Data</a></span><span class="refpurpose"> — creating, loading, saving, and editing a collection of IPTC datasets</span>
 </dt>
@@ -39,6 +36,6 @@
 </div>
 <div class="footer">
 <hr>
-          Generated by GTK-Doc V1.10</div>
+          Generated by GTK-Doc V1.21</div>
 </body>
-</html>
+</html>
\ No newline at end of file
--- libiptcdata-1.0.4.orig/docs/reference/html/ch02.html
+++ libiptcdata-1.0.4/docs/reference/html/ch02.html
@@ -2,35 +2,32 @@
 <html>
 <head>
 <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
-<title>Format-specific Functions</title>
-<meta name="generator" content="DocBook XSL Stylesheets V1.74.0">
+<title>libiptcdata Reference Manual: Format-specific Functions</title>
+<meta name="generator" content="DocBook XSL Stylesheets V1.78.1">
 <link rel="home" href="index.html" title="libiptcdata Reference Manual">
 <link rel="up" href="index.html" title="libiptcdata Reference Manual">
 <link rel="prev" href="libiptcdata-tag.html" title="Tag Specifications">
 <link rel="next" href="libiptcdata-jpeg.html" title="JPEG">
-<meta name="generator" content="GTK-Doc V1.10 (XML mode)">
+<meta name="generator" content="GTK-Doc V1.21 (XML mode)">
 <link rel="stylesheet" href="style.css" type="text/css">
-<link rel="chapter" href="ch01.html" title="IPTC Data Manipulation">
-<link rel="chapter" href="ch02.html" title="Format-specific Functions">
-<link rel="chapter" href="ch03.html" title="Helper Functions">
 </head>
 <body bgcolor="white" text="black" link="#0000FF" vlink="#840084" alink="#0000FF">
-<table class="navigation" id="top" width="100%" summary="Navigation header" cellpadding="2" cellspacing="2"><tr valign="middle">
-<td><a accesskey="p" href="libiptcdata-tag.html"><img src="left.png" width="24" height="24" border="0" alt="Prev"></a></td>
-<td> </td>
-<td><a accesskey="h" href="index.html"><img src="home.png" width="24" height="24" border="0" alt="Home"></a></td>
-<th width="100%" align="center">libiptcdata Reference Manual</th>
-<td><a accesskey="n" href="libiptcdata-jpeg.html"><img src="right.png" width="24" height="24" border="0" alt="Next"></a></td>
+<table class="navigation" id="top" width="100%" summary="Navigation header" cellpadding="2" cellspacing="5"><tr valign="middle">
+<td width="100%" align="left" class="shortcuts"></td>
+<td><a accesskey="h" href="index.html"><img src="home.png" width="16" height="16" border="0" alt="Home"></a></td>
+<td><img src="up-insensitive.png" width="16" height="16" border="0"></td>
+<td><a accesskey="p" href="libiptcdata-tag.html"><img src="left.png" width="16" height="16" border="0" alt="Prev"></a></td>
+<td><a accesskey="n" href="libiptcdata-jpeg.html"><img src="right.png" width="16" height="16" border="0" alt="Next"></a></td>
 </tr></table>
-<div class="chapter" lang="en">
-<div class="titlepage"><div><div><h2 class="title">
-<a name="ch02"></a>Format-specific Functions</h2></div></div></div>
-<div class="toc"><dl><dt>
+<div class="chapter">
+<div class="titlepage"><div><div><h1 class="title">
+<a name="ch02"></a>Format-specific Functions</h1></div></div></div>
+<div class="toc"><dl class="toc"><dt>
 <span class="refentrytitle"><a href="libiptcdata-jpeg.html">JPEG</a></span><span class="refpurpose"> — functions for loading and saving IPTC data from JPEG files</span>
 </dt></dl></div>
 </div>
 <div class="footer">
 <hr>
-          Generated by GTK-Doc V1.10</div>
+          Generated by GTK-Doc V1.21</div>
 </body>
-</html>
+</html>
\ No newline at end of file
--- libiptcdata-1.0.4.orig/docs/reference/html/ch03.html
+++ libiptcdata-1.0.4/docs/reference/html/ch03.html
@@ -2,30 +2,27 @@
 <html>
 <head>
 <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
-<title>Helper Functions</title>
-<meta name="generator" content="DocBook XSL Stylesheets V1.74.0">
+<title>libiptcdata Reference Manual: Helper Functions</title>
+<meta name="generator" content="DocBook XSL Stylesheets V1.78.1">
 <link rel="home" href="index.html" title="libiptcdata Reference Manual">
 <link rel="up" href="index.html" title="libiptcdata Reference Manual">
 <link rel="prev" href="libiptcdata-jpeg.html" title="JPEG">
 <link rel="next" href="libiptcdata-utils.html" title="Byte ordering">
-<meta name="generator" content="GTK-Doc V1.10 (XML mode)">
+<meta name="generator" content="GTK-Doc V1.21 (XML mode)">
 <link rel="stylesheet" href="style.css" type="text/css">
-<link rel="chapter" href="ch01.html" title="IPTC Data Manipulation">
-<link rel="chapter" href="ch02.html" title="Format-specific Functions">
-<link rel="chapter" href="ch03.html" title="Helper Functions">
 </head>
 <body bgcolor="white" text="black" link="#0000FF" vlink="#840084" alink="#0000FF">
-<table class="navigation" id="top" width="100%" summary="Navigation header" cellpadding="2" cellspacing="2"><tr valign="middle">
-<td><a accesskey="p" href="libiptcdata-jpeg.html"><img src="left.png" width="24" height="24" border="0" alt="Prev"></a></td>
-<td> </td>
-<td><a accesskey="h" href="index.html"><img src="home.png" width="24" height="24" border="0" alt="Home"></a></td>
-<th width="100%" align="center">libiptcdata Reference Manual</th>
-<td><a accesskey="n" href="libiptcdata-utils.html"><img src="right.png" width="24" height="24" border="0" alt="Next"></a></td>
+<table class="navigation" id="top" width="100%" summary="Navigation header" cellpadding="2" cellspacing="5"><tr valign="middle">
+<td width="100%" align="left" class="shortcuts"></td>
+<td><a accesskey="h" href="index.html"><img src="home.png" width="16" height="16" border="0" alt="Home"></a></td>
+<td><img src="up-insensitive.png" width="16" height="16" border="0"></td>
+<td><a accesskey="p" href="libiptcdata-jpeg.html"><img src="left.png" width="16" height="16" border="0" alt="Prev"></a></td>
+<td><a accesskey="n" href="libiptcdata-utils.html"><img src="right.png" width="16" height="16" border="0" alt="Next"></a></td>
 </tr></table>
-<div class="chapter" lang="en">
-<div class="titlepage"><div><div><h2 class="title">
-<a name="ch03"></a>Helper Functions</h2></div></div></div>
-<div class="toc"><dl>
+<div class="chapter">
+<div class="titlepage"><div><div><h1 class="title">
+<a name="ch03"></a>Helper Functions</h1></div></div></div>
+<div class="toc"><dl class="toc">
 <dt>
 <span class="refentrytitle"><a href="libiptcdata-utils.html">Byte ordering</a></span><span class="refpurpose"> — functions for decoding integer types of different byte-orders</span>
 </dt>
@@ -39,6 +36,6 @@
 </div>
 <div class="footer">
 <hr>
-          Generated by GTK-Doc V1.10</div>
+          Generated by GTK-Doc V1.21</div>
 </body>
-</html>
+</html>
\ No newline at end of file
--- libiptcdata-1.0.4.orig/docs/reference/html/index.html
+++ libiptcdata-1.0.4/docs/reference/html/index.html
@@ -2,19 +2,16 @@
 <html>
 <head>
 <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
-<title>libiptcdata Reference Manual</title>
-<meta name="generator" content="DocBook XSL Stylesheets V1.74.0">
+<title>libiptcdata Reference Manual: libiptcdata Reference Manual</title>
+<meta name="generator" content="DocBook XSL Stylesheets V1.78.1">
 <meta name="description" content="This manual documents the interfaces of the libiptcdata library and has some notes to help get you up to speed with using the library.">
 <link rel="home" href="index.html" title="libiptcdata Reference Manual">
 <link rel="next" href="iptc-about.html" title="About libiptcdata">
-<meta name="generator" content="GTK-Doc V1.10 (XML mode)">
+<meta name="generator" content="GTK-Doc V1.21 (XML mode)">
 <link rel="stylesheet" href="style.css" type="text/css">
-<link rel="chapter" href="ch01.html" title="IPTC Data Manipulation">
-<link rel="chapter" href="ch02.html" title="Format-specific Functions">
-<link rel="chapter" href="ch03.html" title="Helper Functions">
 </head>
 <body bgcolor="white" text="black" link="#0000FF" vlink="#840084" alink="#0000FF">
-<div class="book" lang="en">
+<div class="book">
 <div class="titlepage">
 <div>
 <div><table class="navigation" id="top" width="100%" cellpadding="2" cellspacing="0"><tr><th valign="middle"><p class="title">libiptcdata Reference Manual</p></th></tr></table></div>
@@ -26,7 +23,7 @@
 	    <code class="email">&lt;<a class="email" href="mailto:dcm@acm.org">dcm@acm.org</a>&gt;</code><br>
 	  </p></div></div>
 </div></div></div>
-<div><p class="releaseinfo">for libiptcdata 1.0.3
+<div><p class="releaseinfo">for libiptcdata 1.0.4
 </p></div>
 <div><p class="copyright">Copyright © 2005 David Moore</p></div>
 <div><div class="legalnotice">
@@ -55,7 +52,7 @@
 </div>
 <hr>
 </div>
-<div class="toc"><dl>
+<div class="toc"><dl class="toc">
 <dt>
 <span class="refentrytitle"><a href="iptc-about.html">About libiptcdata</a></span><span class="refpurpose"> — general information</span>
 </dt>
@@ -103,6 +100,6 @@
 </div>
 <div class="footer">
 <hr>
-          Generated by GTK-Doc V1.10</div>
+          Generated by GTK-Doc V1.21</div>
 </body>
-</html>
+</html>
\ No newline at end of file
--- libiptcdata-1.0.4.orig/docs/reference/html/index.sgml
+++ libiptcdata-1.0.4/docs/reference/html/index.sgml
@@ -16,10 +16,10 @@
 <ANCHOR id="iptc-i18n" href="libiptcdata/iptc-i18n.html">
 <ANCHOR id="i18n" href="libiptcdata/iptc-i18n.html#i18n">
 <ANCHOR id="libiptcdata-data" href="libiptcdata/libiptcdata-data.html">
-<ANCHOR id="libiptcdata-data.synopsis" href="libiptcdata/libiptcdata-data.html#libiptcdata-data.synopsis">
+<ANCHOR id="libiptcdata-data.functions" href="libiptcdata/libiptcdata-data.html#libiptcdata-data.functions">
+<ANCHOR id="libiptcdata-data.other" href="libiptcdata/libiptcdata-data.html#libiptcdata-data.other">
 <ANCHOR id="libiptcdata-data.description" href="libiptcdata/libiptcdata-data.html#libiptcdata-data.description">
-<ANCHOR id="libiptcdata-data.details" href="libiptcdata/libiptcdata-data.html#libiptcdata-data.details">
-<ANCHOR id="IptcData" href="libiptcdata/libiptcdata-data.html#IptcData">
+<ANCHOR id="libiptcdata-data.functions_details" href="libiptcdata/libiptcdata-data.html#libiptcdata-data.functions_details">
 <ANCHOR id="iptc-data-new" href="libiptcdata/libiptcdata-data.html#iptc-data-new">
 <ANCHOR id="iptc-data-new-mem" href="libiptcdata/libiptcdata-data.html#iptc-data-new-mem">
 <ANCHOR id="iptc-data-ref" href="libiptcdata/libiptcdata-data.html#iptc-data-ref">
@@ -39,20 +39,22 @@
 <ANCHOR id="IptcDataForeachDataSetFunc" href="libiptcdata/libiptcdata-data.html#IptcDataForeachDataSetFunc">
 <ANCHOR id="iptc-data-foreach-dataset" href="libiptcdata/libiptcdata-data.html#iptc-data-foreach-dataset">
 <ANCHOR id="iptc-data-sort" href="libiptcdata/libiptcdata-data.html#iptc-data-sort">
-<ANCHOR id="IptcEncoding" href="libiptcdata/libiptcdata-data.html#IptcEncoding">
 <ANCHOR id="iptc-data-get-encoding" href="libiptcdata/libiptcdata-data.html#iptc-data-get-encoding">
 <ANCHOR id="iptc-data-set-encoding-utf8" href="libiptcdata/libiptcdata-data.html#iptc-data-set-encoding-utf8">
-<ANCHOR id="IPTC-IIM-VERSION:CAPS" href="libiptcdata/libiptcdata-data.html#IPTC-IIM-VERSION:CAPS">
 <ANCHOR id="iptc-data-set-version" href="libiptcdata/libiptcdata-data.html#iptc-data-set-version">
 <ANCHOR id="iptc-data-add-dataset-with-value" href="libiptcdata/libiptcdata-data.html#iptc-data-add-dataset-with-value">
 <ANCHOR id="iptc-data-add-dataset-with-contents" href="libiptcdata/libiptcdata-data.html#iptc-data-add-dataset-with-contents">
 <ANCHOR id="iptc-data-dump" href="libiptcdata/libiptcdata-data.html#iptc-data-dump">
 <ANCHOR id="iptc-data-log" href="libiptcdata/libiptcdata-data.html#iptc-data-log">
+<ANCHOR id="libiptcdata-data.other_details" href="libiptcdata/libiptcdata-data.html#libiptcdata-data.other_details">
+<ANCHOR id="IptcData" href="libiptcdata/libiptcdata-data.html#IptcData">
+<ANCHOR id="IptcEncoding" href="libiptcdata/libiptcdata-data.html#IptcEncoding">
+<ANCHOR id="IPTC-IIM-VERSION:CAPS" href="libiptcdata/libiptcdata-data.html#IPTC-IIM-VERSION:CAPS">
 <ANCHOR id="libiptcdata-dataset" href="libiptcdata/libiptcdata-dataset.html">
-<ANCHOR id="libiptcdata-dataset.synopsis" href="libiptcdata/libiptcdata-dataset.html#libiptcdata-dataset.synopsis">
+<ANCHOR id="libiptcdata-dataset.functions" href="libiptcdata/libiptcdata-dataset.html#libiptcdata-dataset.functions">
+<ANCHOR id="libiptcdata-dataset.other" href="libiptcdata/libiptcdata-dataset.html#libiptcdata-dataset.other">
 <ANCHOR id="libiptcdata-dataset.description" href="libiptcdata/libiptcdata-dataset.html#libiptcdata-dataset.description">
-<ANCHOR id="libiptcdata-dataset.details" href="libiptcdata/libiptcdata-dataset.html#libiptcdata-dataset.details">
-<ANCHOR id="IptcDataSet" href="libiptcdata/libiptcdata-dataset.html#IptcDataSet">
+<ANCHOR id="libiptcdata-dataset.functions_details" href="libiptcdata/libiptcdata-dataset.html#libiptcdata-dataset.functions_details">
 <ANCHOR id="iptc-dataset-new" href="libiptcdata/libiptcdata-dataset.html#iptc-dataset-new">
 <ANCHOR id="iptc-dataset-new-mem" href="libiptcdata/libiptcdata-dataset.html#iptc-dataset-new-mem">
 <ANCHOR id="iptc-dataset-copy" href="libiptcdata/libiptcdata-dataset.html#iptc-dataset-copy">
@@ -65,46 +67,47 @@
 <ANCHOR id="iptc-dataset-get-date" href="libiptcdata/libiptcdata-dataset.html#iptc-dataset-get-date">
 <ANCHOR id="iptc-dataset-get-time" href="libiptcdata/libiptcdata-dataset.html#iptc-dataset-get-time">
 <ANCHOR id="iptc-dataset-set-tag" href="libiptcdata/libiptcdata-dataset.html#iptc-dataset-set-tag">
-<ANCHOR id="IptcValidate" href="libiptcdata/libiptcdata-dataset.html#IptcValidate">
 <ANCHOR id="iptc-dataset-set-data" href="libiptcdata/libiptcdata-dataset.html#iptc-dataset-set-data">
 <ANCHOR id="iptc-dataset-set-value" href="libiptcdata/libiptcdata-dataset.html#iptc-dataset-set-value">
 <ANCHOR id="iptc-dataset-set-date" href="libiptcdata/libiptcdata-dataset.html#iptc-dataset-set-date">
 <ANCHOR id="iptc-dataset-set-time" href="libiptcdata/libiptcdata-dataset.html#iptc-dataset-set-time">
 <ANCHOR id="iptc-dataset-get-as-str" href="libiptcdata/libiptcdata-dataset.html#iptc-dataset-get-as-str">
 <ANCHOR id="iptc-dataset-dump" href="libiptcdata/libiptcdata-dataset.html#iptc-dataset-dump">
+<ANCHOR id="libiptcdata-dataset.other_details" href="libiptcdata/libiptcdata-dataset.html#libiptcdata-dataset.other_details">
+<ANCHOR id="IptcDataSet" href="libiptcdata/libiptcdata-dataset.html#IptcDataSet">
+<ANCHOR id="IptcValidate" href="libiptcdata/libiptcdata-dataset.html#IptcValidate">
 <ANCHOR id="libiptcdata-tag" href="libiptcdata/libiptcdata-tag.html">
-<ANCHOR id="libiptcdata-tag.synopsis" href="libiptcdata/libiptcdata-tag.html#libiptcdata-tag.synopsis">
+<ANCHOR id="libiptcdata-tag.functions" href="libiptcdata/libiptcdata-tag.html#libiptcdata-tag.functions">
+<ANCHOR id="libiptcdata-tag.other" href="libiptcdata/libiptcdata-tag.html#libiptcdata-tag.other">
 <ANCHOR id="libiptcdata-tag.description" href="libiptcdata/libiptcdata-tag.html#libiptcdata-tag.description">
-<ANCHOR id="libiptcdata-tag.details" href="libiptcdata/libiptcdata-tag.html#libiptcdata-tag.details">
-<ANCHOR id="IptcRecord" href="libiptcdata/libiptcdata-tag.html#IptcRecord">
-<ANCHOR id="IptcTag" href="libiptcdata/libiptcdata-tag.html#IptcTag">
-<ANCHOR id="IptcTagInfo" href="libiptcdata/libiptcdata-tag.html#IptcTagInfo">
-<ANCHOR id="IptcFormat" href="libiptcdata/libiptcdata-tag.html#IptcFormat">
-<ANCHOR id="IptcMandatory" href="libiptcdata/libiptcdata-tag.html#IptcMandatory">
-<ANCHOR id="IptcRepeatable" href="libiptcdata/libiptcdata-tag.html#IptcRepeatable">
+<ANCHOR id="libiptcdata-tag.functions_details" href="libiptcdata/libiptcdata-tag.html#libiptcdata-tag.functions_details">
 <ANCHOR id="iptc-tag-get-name" href="libiptcdata/libiptcdata-tag.html#iptc-tag-get-name">
 <ANCHOR id="iptc-tag-get-title" href="libiptcdata/libiptcdata-tag.html#iptc-tag-get-title">
 <ANCHOR id="iptc-tag-get-description" href="libiptcdata/libiptcdata-tag.html#iptc-tag-get-description">
 <ANCHOR id="iptc-tag-get-info" href="libiptcdata/libiptcdata-tag.html#iptc-tag-get-info">
 <ANCHOR id="iptc-format-get-name" href="libiptcdata/libiptcdata-tag.html#iptc-format-get-name">
 <ANCHOR id="iptc-tag-find-by-name" href="libiptcdata/libiptcdata-tag.html#iptc-tag-find-by-name">
+<ANCHOR id="libiptcdata-tag.other_details" href="libiptcdata/libiptcdata-tag.html#libiptcdata-tag.other_details">
+<ANCHOR id="IptcRecord" href="libiptcdata/libiptcdata-tag.html#IptcRecord">
+<ANCHOR id="IptcTag" href="libiptcdata/libiptcdata-tag.html#IptcTag">
+<ANCHOR id="IptcTagInfo" href="libiptcdata/libiptcdata-tag.html#IptcTagInfo">
+<ANCHOR id="IptcFormat" href="libiptcdata/libiptcdata-tag.html#IptcFormat">
+<ANCHOR id="IptcMandatory" href="libiptcdata/libiptcdata-tag.html#IptcMandatory">
+<ANCHOR id="IptcRepeatable" href="libiptcdata/libiptcdata-tag.html#IptcRepeatable">
 <ANCHOR id="libiptcdata-jpeg" href="libiptcdata/libiptcdata-jpeg.html">
-<ANCHOR id="libiptcdata-jpeg.synopsis" href="libiptcdata/libiptcdata-jpeg.html#libiptcdata-jpeg.synopsis">
+<ANCHOR id="libiptcdata-jpeg.functions" href="libiptcdata/libiptcdata-jpeg.html#libiptcdata-jpeg.functions">
 <ANCHOR id="libiptcdata-jpeg.description" href="libiptcdata/libiptcdata-jpeg.html#libiptcdata-jpeg.description">
-<ANCHOR id="libiptcdata-jpeg.details" href="libiptcdata/libiptcdata-jpeg.html#libiptcdata-jpeg.details">
+<ANCHOR id="libiptcdata-jpeg.functions_details" href="libiptcdata/libiptcdata-jpeg.html#libiptcdata-jpeg.functions_details">
 <ANCHOR id="iptc-jpeg-read-ps3" href="libiptcdata/libiptcdata-jpeg.html#iptc-jpeg-read-ps3">
 <ANCHOR id="iptc-jpeg-ps3-find-iptc" href="libiptcdata/libiptcdata-jpeg.html#iptc-jpeg-ps3-find-iptc">
 <ANCHOR id="iptc-jpeg-ps3-save-iptc" href="libiptcdata/libiptcdata-jpeg.html#iptc-jpeg-ps3-save-iptc">
 <ANCHOR id="iptc-jpeg-save-with-ps3" href="libiptcdata/libiptcdata-jpeg.html#iptc-jpeg-save-with-ps3">
+<ANCHOR id="libiptcdata-jpeg.other_details" href="libiptcdata/libiptcdata-jpeg.html#libiptcdata-jpeg.other_details">
 <ANCHOR id="libiptcdata-utils" href="libiptcdata/libiptcdata-utils.html">
-<ANCHOR id="libiptcdata-utils.synopsis" href="libiptcdata/libiptcdata-utils.html#libiptcdata-utils.synopsis">
+<ANCHOR id="libiptcdata-utils.functions" href="libiptcdata/libiptcdata-utils.html#libiptcdata-utils.functions">
+<ANCHOR id="libiptcdata-utils.other" href="libiptcdata/libiptcdata-utils.html#libiptcdata-utils.other">
 <ANCHOR id="libiptcdata-utils.description" href="libiptcdata/libiptcdata-utils.html#libiptcdata-utils.description">
-<ANCHOR id="libiptcdata-utils.details" href="libiptcdata/libiptcdata-utils.html#libiptcdata-utils.details">
-<ANCHOR id="IptcByteOrder" href="libiptcdata/libiptcdata-utils.html#IptcByteOrder">
-<ANCHOR id="IptcByte" href="libiptcdata/libiptcdata-utils.html#IptcByte">
-<ANCHOR id="IptcShort" href="libiptcdata/libiptcdata-utils.html#IptcShort">
-<ANCHOR id="IptcLong" href="libiptcdata/libiptcdata-utils.html#IptcLong">
-<ANCHOR id="IptcSLong" href="libiptcdata/libiptcdata-utils.html#IptcSLong">
+<ANCHOR id="libiptcdata-utils.functions_details" href="libiptcdata/libiptcdata-utils.html#libiptcdata-utils.functions_details">
 <ANCHOR id="iptc-get-short" href="libiptcdata/libiptcdata-utils.html#iptc-get-short">
 <ANCHOR id="iptc-get-long" href="libiptcdata/libiptcdata-utils.html#iptc-get-long">
 <ANCHOR id="iptc-get-slong" href="libiptcdata/libiptcdata-utils.html#iptc-get-slong">
@@ -112,15 +115,21 @@
 <ANCHOR id="iptc-set-long" href="libiptcdata/libiptcdata-utils.html#iptc-set-long">
 <ANCHOR id="iptc-set-slong" href="libiptcdata/libiptcdata-utils.html#iptc-set-slong">
 <ANCHOR id="MIN:CAPS" href="libiptcdata/libiptcdata-utils.html#MIN:CAPS">
+<ANCHOR id="libiptcdata-utils.other_details" href="libiptcdata/libiptcdata-utils.html#libiptcdata-utils.other_details">
+<ANCHOR id="IptcByteOrder" href="libiptcdata/libiptcdata-utils.html#IptcByteOrder">
+<ANCHOR id="IptcByte" href="libiptcdata/libiptcdata-utils.html#IptcByte">
+<ANCHOR id="IptcShort" href="libiptcdata/libiptcdata-utils.html#IptcShort">
+<ANCHOR id="IptcLong" href="libiptcdata/libiptcdata-utils.html#IptcLong">
+<ANCHOR id="IptcSLong" href="libiptcdata/libiptcdata-utils.html#IptcSLong">
 <ANCHOR id="IPTC-TAG-SUBSEC-TIME:CAPS" href="libiptcdata/libiptcdata-utils.html#IPTC-TAG-SUBSEC-TIME:CAPS">
 <ANCHOR id="libiptcdata-mem" href="libiptcdata/libiptcdata-mem.html">
-<ANCHOR id="libiptcdata-mem.synopsis" href="libiptcdata/libiptcdata-mem.html#libiptcdata-mem.synopsis">
+<ANCHOR id="libiptcdata-mem.functions" href="libiptcdata/libiptcdata-mem.html#libiptcdata-mem.functions">
+<ANCHOR id="libiptcdata-mem.other" href="libiptcdata/libiptcdata-mem.html#libiptcdata-mem.other">
 <ANCHOR id="libiptcdata-mem.description" href="libiptcdata/libiptcdata-mem.html#libiptcdata-mem.description">
-<ANCHOR id="libiptcdata-mem.details" href="libiptcdata/libiptcdata-mem.html#libiptcdata-mem.details">
+<ANCHOR id="libiptcdata-mem.functions_details" href="libiptcdata/libiptcdata-mem.html#libiptcdata-mem.functions_details">
 <ANCHOR id="IptcMemAllocFunc" href="libiptcdata/libiptcdata-mem.html#IptcMemAllocFunc">
 <ANCHOR id="IptcMemReallocFunc" href="libiptcdata/libiptcdata-mem.html#IptcMemReallocFunc">
 <ANCHOR id="IptcMemFreeFunc" href="libiptcdata/libiptcdata-mem.html#IptcMemFreeFunc">
-<ANCHOR id="IptcMem" href="libiptcdata/libiptcdata-mem.html#IptcMem">
 <ANCHOR id="iptc-mem-new" href="libiptcdata/libiptcdata-mem.html#iptc-mem-new">
 <ANCHOR id="iptc-mem-ref" href="libiptcdata/libiptcdata-mem.html#iptc-mem-ref">
 <ANCHOR id="iptc-mem-unref" href="libiptcdata/libiptcdata-mem.html#iptc-mem-unref">
@@ -128,20 +137,24 @@
 <ANCHOR id="iptc-mem-realloc" href="libiptcdata/libiptcdata-mem.html#iptc-mem-realloc">
 <ANCHOR id="iptc-mem-free" href="libiptcdata/libiptcdata-mem.html#iptc-mem-free">
 <ANCHOR id="iptc-mem-new-default" href="libiptcdata/libiptcdata-mem.html#iptc-mem-new-default">
+<ANCHOR id="libiptcdata-mem.other_details" href="libiptcdata/libiptcdata-mem.html#libiptcdata-mem.other_details">
+<ANCHOR id="IptcMem" href="libiptcdata/libiptcdata-mem.html#IptcMem">
 <ANCHOR id="libiptcdata-log" href="libiptcdata/libiptcdata-log.html">
-<ANCHOR id="libiptcdata-log.synopsis" href="libiptcdata/libiptcdata-log.html#libiptcdata-log.synopsis">
+<ANCHOR id="libiptcdata-log.functions" href="libiptcdata/libiptcdata-log.html#libiptcdata-log.functions">
+<ANCHOR id="libiptcdata-log.other" href="libiptcdata/libiptcdata-log.html#libiptcdata-log.other">
 <ANCHOR id="libiptcdata-log.description" href="libiptcdata/libiptcdata-log.html#libiptcdata-log.description">
-<ANCHOR id="libiptcdata-log.details" href="libiptcdata/libiptcdata-log.html#libiptcdata-log.details">
-<ANCHOR id="IptcLog" href="libiptcdata/libiptcdata-log.html#IptcLog">
+<ANCHOR id="libiptcdata-log.functions_details" href="libiptcdata/libiptcdata-log.html#libiptcdata-log.functions_details">
 <ANCHOR id="iptc-log-new" href="libiptcdata/libiptcdata-log.html#iptc-log-new">
 <ANCHOR id="iptc-log-new-mem" href="libiptcdata/libiptcdata-log.html#iptc-log-new-mem">
 <ANCHOR id="iptc-log-ref" href="libiptcdata/libiptcdata-log.html#iptc-log-ref">
 <ANCHOR id="iptc-log-unref" href="libiptcdata/libiptcdata-log.html#iptc-log-unref">
 <ANCHOR id="iptc-log-free" href="libiptcdata/libiptcdata-log.html#iptc-log-free">
-<ANCHOR id="IptcLogCode" href="libiptcdata/libiptcdata-log.html#IptcLogCode">
 <ANCHOR id="iptc-log-code-get-title" href="libiptcdata/libiptcdata-log.html#iptc-log-code-get-title">
 <ANCHOR id="iptc-log-code-get-message" href="libiptcdata/libiptcdata-log.html#iptc-log-code-get-message">
 <ANCHOR id="IptcLogFunc" href="libiptcdata/libiptcdata-log.html#IptcLogFunc">
 <ANCHOR id="iptc-log-set-func" href="libiptcdata/libiptcdata-log.html#iptc-log-set-func">
 <ANCHOR id="iptc-log" href="libiptcdata/libiptcdata-log.html#iptc-log">
 <ANCHOR id="IPTC-LOG-NO-MEMORY:CAPS" href="libiptcdata/libiptcdata-log.html#IPTC-LOG-NO-MEMORY:CAPS">
+<ANCHOR id="libiptcdata-log.other_details" href="libiptcdata/libiptcdata-log.html#libiptcdata-log.other_details">
+<ANCHOR id="IptcLog" href="libiptcdata/libiptcdata-log.html#IptcLog">
+<ANCHOR id="IptcLogCode" href="libiptcdata/libiptcdata-log.html#IptcLogCode">
--- libiptcdata-1.0.4.orig/docs/reference/html/iptc-about.html
+++ libiptcdata-1.0.4/docs/reference/html/iptc-about.html
@@ -2,36 +2,33 @@
 <html>
 <head>
 <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
-<title>About libiptcdata</title>
-<meta name="generator" content="DocBook XSL Stylesheets V1.74.0">
+<title>libiptcdata Reference Manual: About libiptcdata</title>
+<meta name="generator" content="DocBook XSL Stylesheets V1.78.1">
 <link rel="home" href="index.html" title="libiptcdata Reference Manual">
 <link rel="up" href="index.html" title="libiptcdata Reference Manual">
 <link rel="prev" href="index.html" title="libiptcdata Reference Manual">
 <link rel="next" href="iptc-commandline.html" title="The IPTC Command-Line Utility">
-<meta name="generator" content="GTK-Doc V1.10 (XML mode)">
+<meta name="generator" content="GTK-Doc V1.21 (XML mode)">
 <link rel="stylesheet" href="style.css" type="text/css">
-<link rel="chapter" href="ch01.html" title="IPTC Data Manipulation">
-<link rel="chapter" href="ch02.html" title="Format-specific Functions">
-<link rel="chapter" href="ch03.html" title="Helper Functions">
 </head>
 <body bgcolor="white" text="black" link="#0000FF" vlink="#840084" alink="#0000FF">
-<table class="navigation" id="top" width="100%" summary="Navigation header" cellpadding="2" cellspacing="2"><tr valign="middle">
-<td><a accesskey="p" href="index.html"><img src="left.png" width="24" height="24" border="0" alt="Prev"></a></td>
-<td> </td>
-<td><a accesskey="h" href="index.html"><img src="home.png" width="24" height="24" border="0" alt="Home"></a></td>
-<th width="100%" align="center">libiptcdata Reference Manual</th>
-<td><a accesskey="n" href="iptc-commandline.html"><img src="right.png" width="24" height="24" border="0" alt="Next"></a></td>
+<table class="navigation" id="top" width="100%" summary="Navigation header" cellpadding="2" cellspacing="5"><tr valign="middle">
+<td width="100%" align="left" class="shortcuts"></td>
+<td><a accesskey="h" href="index.html"><img src="home.png" width="16" height="16" border="0" alt="Home"></a></td>
+<td><img src="up-insensitive.png" width="16" height="16" border="0"></td>
+<td><a accesskey="p" href="index.html"><img src="left.png" width="16" height="16" border="0" alt="Prev"></a></td>
+<td><a accesskey="n" href="iptc-commandline.html"><img src="right.png" width="16" height="16" border="0" alt="Next"></a></td>
 </tr></table>
-<div class="refentry" lang="en">
+<div class="refentry">
 <a name="iptc-about"></a><div class="titlepage"></div>
 <div class="refnamediv"><table width="100%"><tr>
 <td valign="top">
 <h2><span class="refentrytitle">About libiptcdata</span></h2>
 <p>About libiptcdata — general information</p>
 </td>
-<td valign="top" align="right"></td>
+<td class="gallery_image" valign="top" align="right"></td>
 </tr></table></div>
-<div class="refsect1" lang="en">
+<div class="refsect1">
 <a name="about"></a><h2>What is libiptcdata?</h2>
 <p>
 	 libiptcdata is a library for manipulating the International Press
@@ -47,7 +44,7 @@
 	 a complete set of tools for manipulating image metadata.
 	</p>
 </div>
-<div class="refsect1" lang="en">
+<div class="refsect1">
 <a name="compiling"></a><h2>Compiling libiptcdata</h2>
 <p>
         On UNIX, libiptcdata uses the standard GNU build system,
@@ -67,7 +64,7 @@
         </p></div>
 <p>
       </p>
-<div class="note" style="margin-left: 0.5in; margin-right: 0.5in;">
+<div class="note">
 <h3 class="title">Compiling on Mac OS X</h3>
 <p>
 	  On Mac OS X, it has been reported that internationalization support
@@ -86,6 +83,6 @@
 </div>
 <div class="footer">
 <hr>
-          Generated by GTK-Doc V1.10</div>
+          Generated by GTK-Doc V1.21</div>
 </body>
-</html>
+</html>
\ No newline at end of file
--- libiptcdata-1.0.4.orig/docs/reference/html/iptc-commandline.html
+++ libiptcdata-1.0.4/docs/reference/html/iptc-commandline.html
@@ -2,36 +2,33 @@
 <html>
 <head>
 <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
-<title>The IPTC Command-Line Utility</title>
-<meta name="generator" content="DocBook XSL Stylesheets V1.74.0">
+<title>libiptcdata Reference Manual: The IPTC Command-Line Utility</title>
+<meta name="generator" content="DocBook XSL Stylesheets V1.78.1">
 <link rel="home" href="index.html" title="libiptcdata Reference Manual">
 <link rel="up" href="index.html" title="libiptcdata Reference Manual">
 <link rel="prev" href="iptc-about.html" title="About libiptcdata">
 <link rel="next" href="iptc-overview.html" title="libiptcdata Overview">
-<meta name="generator" content="GTK-Doc V1.10 (XML mode)">
+<meta name="generator" content="GTK-Doc V1.21 (XML mode)">
 <link rel="stylesheet" href="style.css" type="text/css">
-<link rel="chapter" href="ch01.html" title="IPTC Data Manipulation">
-<link rel="chapter" href="ch02.html" title="Format-specific Functions">
-<link rel="chapter" href="ch03.html" title="Helper Functions">
 </head>
 <body bgcolor="white" text="black" link="#0000FF" vlink="#840084" alink="#0000FF">
-<table class="navigation" id="top" width="100%" summary="Navigation header" cellpadding="2" cellspacing="2"><tr valign="middle">
-<td><a accesskey="p" href="iptc-about.html"><img src="left.png" width="24" height="24" border="0" alt="Prev"></a></td>
-<td> </td>
-<td><a accesskey="h" href="index.html"><img src="home.png" width="24" height="24" border="0" alt="Home"></a></td>
-<th width="100%" align="center">libiptcdata Reference Manual</th>
-<td><a accesskey="n" href="iptc-overview.html"><img src="right.png" width="24" height="24" border="0" alt="Next"></a></td>
+<table class="navigation" id="top" width="100%" summary="Navigation header" cellpadding="2" cellspacing="5"><tr valign="middle">
+<td width="100%" align="left" class="shortcuts"></td>
+<td><a accesskey="h" href="index.html"><img src="home.png" width="16" height="16" border="0" alt="Home"></a></td>
+<td><img src="up-insensitive.png" width="16" height="16" border="0"></td>
+<td><a accesskey="p" href="iptc-about.html"><img src="left.png" width="16" height="16" border="0" alt="Prev"></a></td>
+<td><a accesskey="n" href="iptc-overview.html"><img src="right.png" width="16" height="16" border="0" alt="Next"></a></td>
 </tr></table>
-<div class="refentry" lang="en">
+<div class="refentry">
 <a name="iptc-commandline"></a><div class="titlepage"></div>
 <div class="refnamediv"><table width="100%"><tr>
 <td valign="top">
 <h2><span class="refentrytitle">The IPTC Command-Line Utility</span></h2>
 <p>The IPTC Command-Line Utility — how to modify IPTC data from the command-line</p>
 </td>
-<td valign="top" align="right"></td>
+<td class="gallery_image" valign="top" align="right"></td>
 </tr></table></div>
-<div class="refsect1" lang="en">
+<div class="refsect1">
 <a name="command-line"></a><h2>The IPTC Command-Line Utility</h2>
 <p>
 	 libiptcdata ships with a companion utility, <span class="application">iptc</span>,
@@ -93,6 +90,6 @@ Informative output:
 </div>
 <div class="footer">
 <hr>
-          Generated by GTK-Doc V1.10</div>
+          Generated by GTK-Doc V1.21</div>
 </body>
-</html>
+</html>
\ No newline at end of file
--- libiptcdata-1.0.4.orig/docs/reference/html/iptc-i18n.html
+++ libiptcdata-1.0.4/docs/reference/html/iptc-i18n.html
@@ -2,36 +2,33 @@
 <html>
 <head>
 <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
-<title>Internationalization</title>
-<meta name="generator" content="DocBook XSL Stylesheets V1.74.0">
+<title>libiptcdata Reference Manual: Internationalization</title>
+<meta name="generator" content="DocBook XSL Stylesheets V1.78.1">
 <link rel="home" href="index.html" title="libiptcdata Reference Manual">
 <link rel="up" href="index.html" title="libiptcdata Reference Manual">
 <link rel="prev" href="iptc-libjpeg.html" title="libjpeg Interoperability">
 <link rel="next" href="ch01.html" title="IPTC Data Manipulation">
-<meta name="generator" content="GTK-Doc V1.10 (XML mode)">
+<meta name="generator" content="GTK-Doc V1.21 (XML mode)">
 <link rel="stylesheet" href="style.css" type="text/css">
-<link rel="chapter" href="ch01.html" title="IPTC Data Manipulation">
-<link rel="chapter" href="ch02.html" title="Format-specific Functions">
-<link rel="chapter" href="ch03.html" title="Helper Functions">
 </head>
 <body bgcolor="white" text="black" link="#0000FF" vlink="#840084" alink="#0000FF">
-<table class="navigation" id="top" width="100%" summary="Navigation header" cellpadding="2" cellspacing="2"><tr valign="middle">
-<td><a accesskey="p" href="iptc-libjpeg.html"><img src="left.png" width="24" height="24" border="0" alt="Prev"></a></td>
-<td> </td>
-<td><a accesskey="h" href="index.html"><img src="home.png" width="24" height="24" border="0" alt="Home"></a></td>
-<th width="100%" align="center">libiptcdata Reference Manual</th>
-<td><a accesskey="n" href="ch01.html"><img src="right.png" width="24" height="24" border="0" alt="Next"></a></td>
+<table class="navigation" id="top" width="100%" summary="Navigation header" cellpadding="2" cellspacing="5"><tr valign="middle">
+<td width="100%" align="left" class="shortcuts"></td>
+<td><a accesskey="h" href="index.html"><img src="home.png" width="16" height="16" border="0" alt="Home"></a></td>
+<td><img src="up-insensitive.png" width="16" height="16" border="0"></td>
+<td><a accesskey="p" href="iptc-libjpeg.html"><img src="left.png" width="16" height="16" border="0" alt="Prev"></a></td>
+<td><a accesskey="n" href="ch01.html"><img src="right.png" width="16" height="16" border="0" alt="Next"></a></td>
 </tr></table>
-<div class="refentry" lang="en">
+<div class="refentry">
 <a name="iptc-i18n"></a><div class="titlepage"></div>
 <div class="refnamediv"><table width="100%"><tr>
 <td valign="top">
 <h2><span class="refentrytitle">Internationalization</span></h2>
 <p>Internationalization — using extended character sets with a libiptcdata application</p>
 </td>
-<td valign="top" align="right"></td>
+<td class="gallery_image" valign="top" align="right"></td>
 </tr></table></div>
-<div class="refsect1" lang="en">
+<div class="refsect1">
 <a name="i18n"></a><h2>Supporting Internationalization with libiptcdata</h2>
 <p>
 	 The IPTC IIM standard supports storing data with nearly any
@@ -44,14 +41,14 @@
 	 character sets.  However, there are several problems with this
 	 approach:
 	 </p>
-<div class="itemizedlist"><ul type="disc">
-<li><p>
+<div class="itemizedlist"><ul class="itemizedlist" style="list-style-type: disc; ">
+<li class="listitem"><p>
 	     Nearly all IPTC-aware applications written previously do not
 	     follow this standard.  They usually force all characters to
 	     ASCII or use the Latin-1 character set, without identifying
 	     it in dataset 1:90.
 	   </p></li>
-<li><p>
+<li class="listitem"><p>
 	     The ISO 2022 standard is very complicated and lacks a free
 	     reference implementation.  In addition, the standard
 	     is rarely used since Unicode provides a superior
@@ -65,23 +62,23 @@
 	 fact, it implements almost none of it), but can still be used
 	 successfully with multiple character sets.  Here's how:
 	 </p>
-<div class="orderedlist"><ol type="1">
-<li><p>
+<div class="orderedlist"><ol class="orderedlist" type="1">
+<li class="listitem"><p>
 	     When IPTC data is added to an image file for the first time,
 	     always store data in the UTF-8 character set.  It is the
 	     responsibility of the application to make sure that the
-	     <a class="link" href="libiptcdata-dataset.html#iptc-dataset-set-data" title="iptc_dataset_set_data ()"><code class="function">iptc_dataset_set_data()</code></a>
+	     <a class="link" href="libiptcdata-dataset.html#iptc-dataset-set-data" title="iptc_dataset_set_data ()"><code class="function">iptc_dataset_set_data()</code></a>
 	     function is always called with UTF-8
 	     encoded data.  This generally happens automatically with
 	     modern toolkits such as gtk+.  The application should call
-	     <a class="link" href="libiptcdata-data.html#iptc-data-set-encoding-utf8" title="iptc_data_set_encoding_utf8 ()"><code class="function">iptc_data_set_encoding_utf8()</code></a>
+	     <a class="link" href="libiptcdata-data.html#iptc-data-set-encoding-utf8" title="iptc_data_set_encoding_utf8 ()"><code class="function">iptc_data_set_encoding_utf8()</code></a>
 	     which sets the value of dataset 1:90, indicating that UTF-8 is
 	     being used.
 	   </p></li>
-<li><p>
+<li class="listitem"><p>
 	     When reading or modifying IPTC data saved by another application,
 	     first use the
-	     <a class="link" href="libiptcdata-data.html#iptc-data-get-encoding" title="iptc_data_get_encoding ()"><code class="function">iptc_data_get_encoding()</code></a>
+	     <a class="link" href="libiptcdata-data.html#iptc-data-get-encoding" title="iptc_data_get_encoding ()"><code class="function">iptc_data_get_encoding()</code></a>
 	     function to find out what encoding the data has been stored in.
 	     If it's not UTF-8, it may be hard to identify the character set,
 	     since the ISO 2022 standard is generally not followed.  Often,
@@ -95,6 +92,6 @@
 </div>
 <div class="footer">
 <hr>
-          Generated by GTK-Doc V1.10</div>
+          Generated by GTK-Doc V1.21</div>
 </body>
-</html>
+</html>
\ No newline at end of file
--- libiptcdata-1.0.4.orig/docs/reference/html/iptc-libjpeg.html
+++ libiptcdata-1.0.4/docs/reference/html/iptc-libjpeg.html
@@ -2,36 +2,33 @@
 <html>
 <head>
 <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
-<title>libjpeg Interoperability</title>
-<meta name="generator" content="DocBook XSL Stylesheets V1.74.0">
+<title>libiptcdata Reference Manual: libjpeg Interoperability</title>
+<meta name="generator" content="DocBook XSL Stylesheets V1.78.1">
 <link rel="home" href="index.html" title="libiptcdata Reference Manual">
 <link rel="up" href="index.html" title="libiptcdata Reference Manual">
 <link rel="prev" href="iptc-overview.html" title="libiptcdata Overview">
 <link rel="next" href="iptc-i18n.html" title="Internationalization">
-<meta name="generator" content="GTK-Doc V1.10 (XML mode)">
+<meta name="generator" content="GTK-Doc V1.21 (XML mode)">
 <link rel="stylesheet" href="style.css" type="text/css">
-<link rel="chapter" href="ch01.html" title="IPTC Data Manipulation">
-<link rel="chapter" href="ch02.html" title="Format-specific Functions">
-<link rel="chapter" href="ch03.html" title="Helper Functions">
 </head>
 <body bgcolor="white" text="black" link="#0000FF" vlink="#840084" alink="#0000FF">
-<table class="navigation" id="top" width="100%" summary="Navigation header" cellpadding="2" cellspacing="2"><tr valign="middle">
-<td><a accesskey="p" href="iptc-overview.html"><img src="left.png" width="24" height="24" border="0" alt="Prev"></a></td>
-<td> </td>
-<td><a accesskey="h" href="index.html"><img src="home.png" width="24" height="24" border="0" alt="Home"></a></td>
-<th width="100%" align="center">libiptcdata Reference Manual</th>
-<td><a accesskey="n" href="iptc-i18n.html"><img src="right.png" width="24" height="24" border="0" alt="Next"></a></td>
+<table class="navigation" id="top" width="100%" summary="Navigation header" cellpadding="2" cellspacing="5"><tr valign="middle">
+<td width="100%" align="left" class="shortcuts"></td>
+<td><a accesskey="h" href="index.html"><img src="home.png" width="16" height="16" border="0" alt="Home"></a></td>
+<td><img src="up-insensitive.png" width="16" height="16" border="0"></td>
+<td><a accesskey="p" href="iptc-overview.html"><img src="left.png" width="16" height="16" border="0" alt="Prev"></a></td>
+<td><a accesskey="n" href="iptc-i18n.html"><img src="right.png" width="16" height="16" border="0" alt="Next"></a></td>
 </tr></table>
-<div class="refentry" lang="en">
+<div class="refentry">
 <a name="iptc-libjpeg"></a><div class="titlepage"></div>
 <div class="refnamediv"><table width="100%"><tr>
 <td valign="top">
 <h2><span class="refentrytitle">libjpeg Interoperability</span></h2>
 <p>libjpeg Interoperability — an example of using libiptcdata together with libjpeg</p>
 </td>
-<td valign="top" align="right"></td>
+<td class="gallery_image" valign="top" align="right"></td>
 </tr></table></div>
-<div class="refsect1" lang="en">
+<div class="refsect1">
 <a name="i18n"></a><h2>Reading IPTC data from a file parsed with libjpeg</h2>
 <p>
 	 libjpeg is a popular library for parsing jpeg files because
@@ -91,6 +88,6 @@ fclose (infile);
 </div>
 <div class="footer">
 <hr>
-          Generated by GTK-Doc V1.10</div>
+          Generated by GTK-Doc V1.21</div>
 </body>
-</html>
+</html>
\ No newline at end of file
--- libiptcdata-1.0.4.orig/docs/reference/html/iptc-overview.html
+++ libiptcdata-1.0.4/docs/reference/html/iptc-overview.html
@@ -2,36 +2,33 @@
 <html>
 <head>
 <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
-<title>libiptcdata Overview</title>
-<meta name="generator" content="DocBook XSL Stylesheets V1.74.0">
+<title>libiptcdata Reference Manual: libiptcdata Overview</title>
+<meta name="generator" content="DocBook XSL Stylesheets V1.78.1">
 <link rel="home" href="index.html" title="libiptcdata Reference Manual">
 <link rel="up" href="index.html" title="libiptcdata Reference Manual">
 <link rel="prev" href="iptc-commandline.html" title="The IPTC Command-Line Utility">
 <link rel="next" href="iptc-libjpeg.html" title="libjpeg Interoperability">
-<meta name="generator" content="GTK-Doc V1.10 (XML mode)">
+<meta name="generator" content="GTK-Doc V1.21 (XML mode)">
 <link rel="stylesheet" href="style.css" type="text/css">
-<link rel="chapter" href="ch01.html" title="IPTC Data Manipulation">
-<link rel="chapter" href="ch02.html" title="Format-specific Functions">
-<link rel="chapter" href="ch03.html" title="Helper Functions">
 </head>
 <body bgcolor="white" text="black" link="#0000FF" vlink="#840084" alink="#0000FF">
-<table class="navigation" id="top" width="100%" summary="Navigation header" cellpadding="2" cellspacing="2"><tr valign="middle">
-<td><a accesskey="p" href="iptc-commandline.html"><img src="left.png" width="24" height="24" border="0" alt="Prev"></a></td>
-<td> </td>
-<td><a accesskey="h" href="index.html"><img src="home.png" width="24" height="24" border="0" alt="Home"></a></td>
-<th width="100%" align="center">libiptcdata Reference Manual</th>
-<td><a accesskey="n" href="iptc-libjpeg.html"><img src="right.png" width="24" height="24" border="0" alt="Next"></a></td>
+<table class="navigation" id="top" width="100%" summary="Navigation header" cellpadding="2" cellspacing="5"><tr valign="middle">
+<td width="100%" align="left" class="shortcuts"></td>
+<td><a accesskey="h" href="index.html"><img src="home.png" width="16" height="16" border="0" alt="Home"></a></td>
+<td><img src="up-insensitive.png" width="16" height="16" border="0"></td>
+<td><a accesskey="p" href="iptc-commandline.html"><img src="left.png" width="16" height="16" border="0" alt="Prev"></a></td>
+<td><a accesskey="n" href="iptc-libjpeg.html"><img src="right.png" width="16" height="16" border="0" alt="Next"></a></td>
 </tr></table>
-<div class="refentry" lang="en">
+<div class="refentry">
 <a name="iptc-overview"></a><div class="titlepage"></div>
 <div class="refnamediv"><table width="100%"><tr>
 <td valign="top">
 <h2><span class="refentrytitle">libiptcdata Overview</span></h2>
 <p>libiptcdata Overview — how to use libiptcdata in an application</p>
 </td>
-<td valign="top" align="right"></td>
+<td class="gallery_image" valign="top" align="right"></td>
 </tr></table></div>
-<div class="refsect1" lang="en">
+<div class="refsect1">
 <a name="jpeg-loading"></a><h2>Extracting IPTC data from a JPEG file</h2>
 <p>
 	 When using libiptcdata, the first task you are probably interested in
@@ -60,7 +57,7 @@
 	</p>
 <p>
 	 For the impatient, the IPTC data can be extracted with a single
-	 line of code using the <code class="function"><a class="link" href="libiptcdata-data.html#iptc-data-new-from-jpeg" title="iptc_data_new_from_jpeg ()">iptc_data_new_from_jpeg</a>()</code>
+	 line of code using the <code class="function"><a class="link" href="libiptcdata-data.html#iptc-data-new-from-jpeg" title="iptc_data_new_from_jpeg ()">iptc_data_new_from_jpeg</a>()</code>
 	 function if you have no need for fine-grained error checking or you don't
 	 want to share code with a pre-existing JPEG decoding routine in your
 	 application.  Here's an example:
@@ -78,7 +75,7 @@ if (!d) {
 <p>
 	 However, for all but the most simplistic of applications, you will probably
 	 want finer control of the process.  For that, you use three functions.
-	 The first, <code class="function"><a class="link" href="libiptcdata-jpeg.html#iptc-jpeg-read-ps3" title="iptc_jpeg_read_ps3 ()">iptc_jpeg_read_ps3</a>()</code>
+	 The first, <code class="function"><a class="link" href="libiptcdata-jpeg.html#iptc-jpeg-read-ps3" title="iptc_jpeg_read_ps3 ()">iptc_jpeg_read_ps3</a>()</code>
 	 extracts the
 	 Photoshop metadata from the APP13 header.  If your application already
 	 decodes the JPEG file, you don't need this function:  Simply store the
@@ -88,13 +85,13 @@ if (!d) {
 	</p>
 <p>
 	 The second function,
-	 <code class="function"><a class="link" href="libiptcdata-jpeg.html#iptc-jpeg-ps3-find-iptc" title="iptc_jpeg_ps3_find_iptc ()">iptc_jpeg_ps3_find_iptc</a>()</code>
+	 <code class="function"><a class="link" href="libiptcdata-jpeg.html#iptc-jpeg-ps3-find-iptc" title="iptc_jpeg_ps3_find_iptc ()">iptc_jpeg_ps3_find_iptc</a>()</code>
 	 extracts the IPTC data block from the Photoshop metadata.
 	</p>
 <p>
-	 The third function, <code class="function"><a class="link" href="libiptcdata-data.html#iptc-data-new-from-data" title="iptc_data_new_from_data ()">iptc_data_new_from_data</a>()</code>
+	 The third function, <code class="function"><a class="link" href="libiptcdata-data.html#iptc-data-new-from-data" title="iptc_data_new_from_data ()">iptc_data_new_from_data</a>()</code>
 	 takes the IPTC data block and decodes it into a data structure of type
-	 <span class="structname"><a class="link" href="libiptcdata-data.html#IptcData" title="IptcData">IptcData</a></span> which you can use with the rest of the
+	 <span class="structname"><a class="link" href="libiptcdata-data.html#IptcData" title="struct IptcData">IptcData</a></span> which you can use with the rest of the
 	 libiptcdata API.  Here's an example of all three functions in use:
 	</p>
 <pre class="programlisting">
@@ -140,11 +137,11 @@ if (!d) {
 }
 	</pre>
 </div>
-<div class="refsect1" lang="en">
+<div class="refsect1">
 <a name="creating-iptc"></a><h2>Creating IPTC data from scratch</h2>
 <p>
-	 If you want to create an empty <span class="structname"><a class="link" href="libiptcdata-data.html#IptcData" title="IptcData">IptcData</a></span> structure from scratch without
-	 reading it from a preexisting file, use the <code class="function"><a class="link" href="libiptcdata-data.html#iptc-data-new" title="iptc_data_new ()">iptc_data_new</a>()</code> function:
+	 If you want to create an empty <span class="structname"><a class="link" href="libiptcdata-data.html#IptcData" title="struct IptcData">IptcData</a></span> structure from scratch without
+	 reading it from a preexisting file, use the <code class="function"><a class="link" href="libiptcdata-data.html#iptc-data-new" title="iptc_data_new ()">iptc_data_new</a>()</code> function:
 	</p>
 <pre class="programlisting">
 IptcData * d;
@@ -152,7 +149,7 @@ IptcData * d;
 d = iptc_data_new ();
 	</pre>
 </div>
-<div class="refsect1" lang="en">
+<div class="refsect1">
 <a name="viewing-iptc"></a><h2>Viewing IPTC data</h2>
 <p>
 	 IPTC metadata is simply a list of "datasets."  Each dataset contains a
@@ -167,16 +164,16 @@ d = iptc_data_new ();
 	</p>
 <p>
 	 The following code snippet shows how to iterate through all the datasets in
-	 an <span class="structname"><a class="link" href="libiptcdata-data.html#IptcData" title="IptcData">IptcData</a></span> object
-	 and print their contents.  The <code class="function"><a class="link" href="libiptcdata-tag.html#iptc-tag-get-title" title="iptc_tag_get_title ()">iptc_tag_get_title</a>()</code>
+	 an <span class="structname"><a class="link" href="libiptcdata-data.html#IptcData" title="struct IptcData">IptcData</a></span> object
+	 and print their contents.  The <code class="function"><a class="link" href="libiptcdata-tag.html#iptc-tag-get-title" title="iptc_tag_get_title ()">iptc_tag_get_title</a>()</code>
 	 function gets the string name of a dataset from its record and dataset numbers.
-	 <code class="function"><a class="link" href="libiptcdata-dataset.html#iptc-dataset-get-format" title="iptc_dataset_get_format ()">iptc_dataset_get_format</a>()</code>
+	 <code class="function"><a class="link" href="libiptcdata-dataset.html#iptc-dataset-get-format" title="iptc_dataset_get_format ()">iptc_dataset_get_format</a>()</code>
 	 retrieves the type of the data contained in the dataset.  For datasets with
-	 integer types, <code class="function"><a class="link" href="libiptcdata-dataset.html#iptc-dataset-get-value" title="iptc_dataset_get_value ()">iptc_dataset_get_value</a>()</code>
+	 integer types, <code class="function"><a class="link" href="libiptcdata-dataset.html#iptc-dataset-get-value" title="iptc_dataset_get_value ()">iptc_dataset_get_value</a>()</code>
 	 gets the contents of the tag, and for datasets with string types,
-	 <code class="function"><a class="link" href="libiptcdata-dataset.html#iptc-dataset-get-data" title="iptc_dataset_get_data ()">iptc_dataset_get_data</a>()</code>
+	 <code class="function"><a class="link" href="libiptcdata-dataset.html#iptc-dataset-get-data" title="iptc_dataset_get_data ()">iptc_dataset_get_data</a>()</code>
 	 will do the same.
-	 <code class="function"><a class="link" href="libiptcdata-dataset.html#iptc-dataset-get-as-str" title="iptc_dataset_get_as_str ()">iptc_dataset_get_as_str</a>()</code>
+	 <code class="function"><a class="link" href="libiptcdata-dataset.html#iptc-dataset-get-as-str" title="iptc_dataset_get_as_str ()">iptc_dataset_get_as_str</a>()</code>
 	 formats the data as a string regardless of its type.
 	</p>
 <pre class="programlisting">
@@ -216,22 +213,22 @@ for (i=0; i &lt; d-&gt;count; i++) {
 	 This next code snippet prints out the list of keywords stored in the
 	 IPTC metadata.  First, in case we don't know the record and dataset
 	 numbers for the "Keywords" tag, the
-	 <code class="function"><a class="link" href="libiptcdata-tag.html#iptc-tag-find-by-name" title="iptc_tag_find_by_name ()">iptc_tag_find_by_name</a>()</code>
+	 <code class="function"><a class="link" href="libiptcdata-tag.html#iptc-tag-find-by-name" title="iptc_tag_find_by_name ()">iptc_tag_find_by_name</a>()</code>
 	 function retrieves them from the IPTC specification.  Next, the
-	 <code class="function"><a class="link" href="libiptcdata-data.html#iptc-data-get-next-dataset" title="iptc_data_get_next_dataset ()">iptc_data_get_next_dataset</a>()</code>
+	 <code class="function"><a class="link" href="libiptcdata-data.html#iptc-data-get-next-dataset" title="iptc_data_get_next_dataset ()">iptc_data_get_next_dataset</a>()</code>
 	 function iterates through each Keyword tag, printing out the contents.
 	</p>
 <p>
 	 Another important concept presented in this example is the use of reference
-	 counts.  Whenever a function, such as <code class="function"><a class="link" href="libiptcdata-data.html#iptc-data-get-next-dataset" title="iptc_data_get_next_dataset ()">iptc_data_get_next_dataset</a>()</code>
+	 counts.  Whenever a function, such as <code class="function"><a class="link" href="libiptcdata-data.html#iptc-data-get-next-dataset" title="iptc_data_get_next_dataset ()">iptc_data_get_next_dataset</a>()</code>
 	 returns a pointer, the reference count for the associated object is incremented by one.
 	 It is the application's responsibility to later unreference that pointer
 	 so that the count does not keep growing.  When the count reaches zero, the
 	 object is automatically freed.  This must be done for both
-	 <span class="structname"><a class="link" href="libiptcdata-data.html#IptcData" title="IptcData">IptcData</a></span>
-	 (with <code class="function"><a class="link" href="libiptcdata-data.html#iptc-data-unref" title="iptc_data_unref ()">iptc_data_unref</a></code>) and
-	 <span class="structname"><a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="IptcDataSet">IptcDataSet</a></span> (with
-	 <code class="function"><a class="link" href="libiptcdata-dataset.html#iptc-dataset-unref" title="iptc_dataset_unref ()">iptc_dataset_unref</a></code>) objects.
+	 <span class="structname"><a class="link" href="libiptcdata-data.html#IptcData" title="struct IptcData">IptcData</a></span>
+	 (with <code class="function"><a class="link" href="libiptcdata-data.html#iptc-data-unref" title="iptc_data_unref ()">iptc_data_unref</a></code>) and
+	 <span class="structname"><a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="struct IptcDataSet">IptcDataSet</a></span> (with
+	 <code class="function"><a class="link" href="libiptcdata-dataset.html#iptc-dataset-unref" title="iptc_dataset_unref ()">iptc_dataset_unref</a></code>) objects.
 	</p>
 <pre class="programlisting">
 IptcDataSet * ds = NULL;
@@ -254,20 +251,20 @@ while (1) {
 }
 	</pre>
 </div>
-<div class="refsect1" lang="en">
+<div class="refsect1">
 <a name="adding-tag"></a><h2>Adding a new tag</h2>
 <p>
 	 New tags can be added to an
-	 <span class="structname"><a class="link" href="libiptcdata-data.html#IptcData" title="IptcData">IptcData</a></span>
-	 object with the <code class="function"><a class="link" href="libiptcdata-data.html#iptc-data-add-dataset" title="iptc_data_add_dataset ()">iptc_data_add_dataset</a>()</code> function.
+	 <span class="structname"><a class="link" href="libiptcdata-data.html#IptcData" title="struct IptcData">IptcData</a></span>
+	 object with the <code class="function"><a class="link" href="libiptcdata-data.html#iptc-data-add-dataset" title="iptc_data_add_dataset ()">iptc_data_add_dataset</a>()</code> function.
 	 This new dataset can be obtained from another
-	 <span class="structname"><a class="link" href="libiptcdata-data.html#IptcData" title="IptcData">IptcData</a></span> object,
+	 <span class="structname"><a class="link" href="libiptcdata-data.html#IptcData" title="struct IptcData">IptcData</a></span> object,
 	 or it can be created from scratch with the
-	 <code class="function"><a class="link" href="libiptcdata-dataset.html#iptc-dataset-new" title="iptc_dataset_new ()">iptc_dataset_new</a>()</code> function.
+	 <code class="function"><a class="link" href="libiptcdata-dataset.html#iptc-dataset-new" title="iptc_dataset_new ()">iptc_dataset_new</a>()</code> function.
 	 If created from scratch,
-	 <code class="function"><a class="link" href="libiptcdata-dataset.html#iptc-dataset-set-tag" title="iptc_dataset_set_tag ()">iptc_dataset_set_tag</a>()</code>
+	 <code class="function"><a class="link" href="libiptcdata-dataset.html#iptc-dataset-set-tag" title="iptc_dataset_set_tag ()">iptc_dataset_set_tag</a>()</code>
 	 is first used to set the record and dataset number for the tag.  Next,
-	 <code class="function"><a class="link" href="libiptcdata-dataset.html#iptc-dataset-set-tag" title="iptc_dataset_set_tag ()">iptc_dataset_set_data</a>()</code>
+	 <code class="function"><a class="link" href="libiptcdata-dataset.html#iptc-dataset-set-tag" title="iptc_dataset_set_tag ()">iptc_dataset_set_data</a>()</code>
 	 is used to set the actual contents of the tag.  The following code snippet
 	 demonstrates adding a new keyword, "travel" to an existing set of IPTC
 	 data:
@@ -289,15 +286,15 @@ iptc_data_add_dataset (d, ds);
 iptc_dataset_unref (ds);
 	</pre>
 </div>
-<div class="refsect1" lang="en">
+<div class="refsect1">
 <a name="modifying-tag"></a><h2>Modifying an existing tag</h2>
 <p>
 	 Combining the functions we have seen above, the following code
 	 snippet modifies an existing caption in the IPTC data.  It first
 	 finds the Caption tag with the
-	 <code class="function"><a class="link" href="libiptcdata-data.html#iptc-data-get-dataset" title="iptc_data_get_dataset ()">iptc_data_get_dataset</a>()</code>
+	 <code class="function"><a class="link" href="libiptcdata-data.html#iptc-data-get-dataset" title="iptc_data_get_dataset ()">iptc_data_get_dataset</a>()</code>
 	 function and then changes the data with
-	 <code class="function"><a class="link" href="libiptcdata-dataset.html#iptc-dataset-set-data" title="iptc_dataset_set_data ()">iptc_dataset_set_data</a>()</code>:
+	 <code class="function"><a class="link" href="libiptcdata-dataset.html#iptc-dataset-set-data" title="iptc_dataset_set_data ()">iptc_dataset_set_data</a>()</code>:
 	</p>
 <pre class="programlisting">
 IptcDataSet * ds;
@@ -319,11 +316,11 @@ iptc_dataset_set_data (ds, str, strlen (
 iptc_dataset_unref (ds);
 	</pre>
 </div>
-<div class="refsect1" lang="en">
+<div class="refsect1">
 <a name="deleting-tag"></a><h2>Deleting a tag</h2>
 <p>
 	 A dataset can be deleted using the
-	 <code class="function"><a class="link" href="libiptcdata-data.html#iptc-data-remove-dataset" title="iptc_data_remove_dataset ()">iptc_data_remove_dataset</a>()</code> function, as seen in this example, which deletes the Caption from the
+	 <code class="function"><a class="link" href="libiptcdata-data.html#iptc-data-remove-dataset" title="iptc_data_remove_dataset ()">iptc_data_remove_dataset</a>()</code> function, as seen in this example, which deletes the Caption from the
 	 IPTC data:
 	</p>
 <pre class="programlisting">
@@ -345,10 +342,10 @@ iptc_data_remove_dataset (d, ds);
 iptc_dataset_unref (ds);
 	</pre>
 </div>
-<div class="refsect1" lang="en">
+<div class="refsect1">
 <a name="jpeg-saving"></a><h2>Saving IPTC data to a JPEG file</h2>
 <p>
-	 Saving an <span class="structname"><a class="link" href="libiptcdata-data.html#IptcData" title="IptcData">IptcData</a></span>
+	 Saving an <span class="structname"><a class="link" href="libiptcdata-data.html#IptcData" title="struct IptcData">IptcData</a></span>
 	 object back to a JPEG file is a multi-step process requiring several
 	 different function calls.  Although this may seem cumbersome at first,
 	 it allows you to integrate the process into any existing JPEG-saving
@@ -356,18 +353,18 @@ iptc_dataset_unref (ds);
 	</p>
 <p>
 	 First, a call to
-	 <code class="function"><a class="link" href="libiptcdata-data.html#iptc-data-sort" title="iptc_data_sort ()">iptc_data_sort</a>()</code>
+	 <code class="function"><a class="link" href="libiptcdata-data.html#iptc-data-sort" title="iptc_data_sort ()">iptc_data_sort</a>()</code>
 	 sorts the datasets by tag number prior to saving.  This step
      is optional.
 	</p>
 <p>
 	 Next, by calling
-	 <code class="function"><a class="link" href="libiptcdata-data.html#iptc-data-save" title="iptc_data_save ()">iptc_data_save</a>()</code>
+	 <code class="function"><a class="link" href="libiptcdata-data.html#iptc-data-save" title="iptc_data_save ()">iptc_data_save</a>()</code>
 	 we convert the
-	 <span class="structname"><a class="link" href="libiptcdata-data.html#IptcData" title="IptcData">IptcData</a></span>
+	 <span class="structname"><a class="link" href="libiptcdata-data.html#IptcData" title="struct IptcData">IptcData</a></span>
 	 object into a bytestream.  This IPTC data block is then encapsulated
 	 inside a Photoshop header using
-	 <code class="function"><a class="link" href="libiptcdata-jpeg.html#iptc-jpeg-ps3-save-iptc" title="iptc_jpeg_ps3_save_iptc ()">iptc_jpeg_ps3_save_iptc</a>()</code>.
+	 <code class="function"><a class="link" href="libiptcdata-jpeg.html#iptc-jpeg-ps3-save-iptc" title="iptc_jpeg_ps3_save_iptc ()">iptc_jpeg_ps3_save_iptc</a>()</code>.
 	 This function will use an existing Photoshop header, if available, so that
 	 all unrelated portions of the Photoshop header are preserved.  If no
 	 pre-existing Photoshop header is provided, a new one will be created from
@@ -376,7 +373,7 @@ iptc_dataset_unref (ds);
 <p>
 	 The new Photoshop header can be saved inside the APP13 header of the JPEG
 	 file using your application code, or you can use
-	 <code class="function"><a class="link" href="libiptcdata-jpeg.html#iptc-jpeg-save-with-ps3" title="iptc_jpeg_save_with_ps3 ()">iptc_jpeg_save_with_ps3</a>()</code> to do the same thing.
+	 <code class="function"><a class="link" href="libiptcdata-jpeg.html#iptc-jpeg-save-with-ps3" title="iptc_jpeg_save_with_ps3 ()">iptc_jpeg_save_with_ps3</a>()</code> to do the same thing.
 	</p>
 <p>
 	 The following example code demonstrates the entire process:
@@ -433,6 +430,6 @@ fprintf (stderr, "Image saved\n");
 </div>
 <div class="footer">
 <hr>
-          Generated by GTK-Doc V1.10</div>
+          Generated by GTK-Doc V1.21</div>
 </body>
-</html>
+</html>
\ No newline at end of file
--- libiptcdata-1.0.4.orig/docs/reference/html/libiptcdata-data.html
+++ libiptcdata-1.0.4/docs/reference/html/libiptcdata-data.html
@@ -2,788 +2,994 @@
 <html>
 <head>
 <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
-<title>IPTC Data</title>
-<meta name="generator" content="DocBook XSL Stylesheets V1.74.0">
+<title>libiptcdata Reference Manual: IPTC Data</title>
+<meta name="generator" content="DocBook XSL Stylesheets V1.78.1">
 <link rel="home" href="index.html" title="libiptcdata Reference Manual">
 <link rel="up" href="ch01.html" title="IPTC Data Manipulation">
 <link rel="prev" href="ch01.html" title="IPTC Data Manipulation">
 <link rel="next" href="libiptcdata-dataset.html" title="Datasets">
-<meta name="generator" content="GTK-Doc V1.10 (XML mode)">
+<meta name="generator" content="GTK-Doc V1.21 (XML mode)">
 <link rel="stylesheet" href="style.css" type="text/css">
-<link rel="chapter" href="ch01.html" title="IPTC Data Manipulation">
-<link rel="chapter" href="ch02.html" title="Format-specific Functions">
-<link rel="chapter" href="ch03.html" title="Helper Functions">
 </head>
 <body bgcolor="white" text="black" link="#0000FF" vlink="#840084" alink="#0000FF">
-<table class="navigation" id="top" width="100%" summary="Navigation header" cellpadding="2" cellspacing="2">
-<tr valign="middle">
-<td><a accesskey="p" href="ch01.html"><img src="left.png" width="24" height="24" border="0" alt="Prev"></a></td>
-<td><a accesskey="u" href="ch01.html"><img src="up.png" width="24" height="24" border="0" alt="Up"></a></td>
-<td><a accesskey="h" href="index.html"><img src="home.png" width="24" height="24" border="0" alt="Home"></a></td>
-<th width="100%" align="center">libiptcdata Reference Manual</th>
-<td><a accesskey="n" href="libiptcdata-dataset.html"><img src="right.png" width="24" height="24" border="0" alt="Next"></a></td>
-</tr>
-<tr><td colspan="5" class="shortcuts"><nobr><a href="#libiptcdata-data.synopsis" class="shortcut">Top</a>
-                   | 
-                  <a href="#libiptcdata-data.description" class="shortcut">Description</a></nobr></td></tr>
-</table>
-<div class="refentry" lang="en">
+<table class="navigation" id="top" width="100%" summary="Navigation header" cellpadding="2" cellspacing="5"><tr valign="middle">
+<td width="100%" align="left" class="shortcuts">
+<a href="#" class="shortcut">Top</a><span id="nav_description">  <span class="dim">|</span> 
+                  <a href="#libiptcdata-data.description" class="shortcut">Description</a></span>
+</td>
+<td><a accesskey="h" href="index.html"><img src="home.png" width="16" height="16" border="0" alt="Home"></a></td>
+<td><a accesskey="u" href="ch01.html"><img src="up.png" width="16" height="16" border="0" alt="Up"></a></td>
+<td><a accesskey="p" href="ch01.html"><img src="left.png" width="16" height="16" border="0" alt="Prev"></a></td>
+<td><a accesskey="n" href="libiptcdata-dataset.html"><img src="right.png" width="16" height="16" border="0" alt="Next"></a></td>
+</tr></table>
+<div class="refentry">
 <a name="libiptcdata-data"></a><div class="titlepage"></div>
 <div class="refnamediv"><table width="100%"><tr>
 <td valign="top">
 <h2><span class="refentrytitle"><a name="libiptcdata-data.top_of_page"></a>IPTC Data</span></h2>
 <p>IPTC Data — creating, loading, saving, and editing a collection of IPTC datasets</p>
 </td>
-<td valign="top" align="right"></td>
+<td class="gallery_image" valign="top" align="right"></td>
 </tr></table></div>
-<div class="refsynopsisdiv">
-<a name="libiptcdata-data.synopsis"></a><h2>Synopsis</h2>
-<pre class="synopsis">
-                    <a class="link" href="libiptcdata-data.html#IptcData" title="IptcData">IptcData</a>;
-<a class="link" href="libiptcdata-data.html#IptcData" title="IptcData">IptcData</a>*           <a class="link" href="libiptcdata-data.html#iptc-data-new" title="iptc_data_new ()">iptc_data_new</a>                       (void);
-<a class="link" href="libiptcdata-data.html#IptcData" title="IptcData">IptcData</a>*           <a class="link" href="libiptcdata-data.html#iptc-data-new-mem" title="iptc_data_new_mem ()">iptc_data_new_mem</a>                   (<a class="link" href="libiptcdata-mem.html#IptcMem" title="IptcMem">IptcMem</a> *mem);
-void                <a class="link" href="libiptcdata-data.html#iptc-data-ref" title="iptc_data_ref ()">iptc_data_ref</a>                       (<a class="link" href="libiptcdata-data.html#IptcData" title="IptcData">IptcData</a> *data);
-void                <a class="link" href="libiptcdata-data.html#iptc-data-unref" title="iptc_data_unref ()">iptc_data_unref</a>                     (<a class="link" href="libiptcdata-data.html#IptcData" title="IptcData">IptcData</a> *data);
-void                <a class="link" href="libiptcdata-data.html#iptc-data-free" title="iptc_data_free ()">iptc_data_free</a>                      (<a class="link" href="libiptcdata-data.html#IptcData" title="IptcData">IptcData</a> *data);
-
-<a class="link" href="libiptcdata-data.html#IptcData" title="IptcData">IptcData</a>*           <a class="link" href="libiptcdata-data.html#iptc-data-new-from-jpeg" title="iptc_data_new_from_jpeg ()">iptc_data_new_from_jpeg</a>             (const char *path);
-<a class="link" href="libiptcdata-data.html#IptcData" title="IptcData">IptcData</a>*           <a class="link" href="libiptcdata-data.html#iptc-data-new-from-data" title="iptc_data_new_from_data ()">iptc_data_new_from_data</a>             (unsigned char *buf,
-                                                         unsigned int size);
-
-int                 <a class="link" href="libiptcdata-data.html#iptc-data-load" title="iptc_data_load ()">iptc_data_load</a>                      (<a class="link" href="libiptcdata-data.html#IptcData" title="IptcData">IptcData</a> *data,
-                                                         unsigned char *buf,
-                                                         unsigned int size);
-int                 <a class="link" href="libiptcdata-data.html#iptc-data-save" title="iptc_data_save ()">iptc_data_save</a>                      (<a class="link" href="libiptcdata-data.html#IptcData" title="IptcData">IptcData</a> *data,
-                                                         unsigned char **buf,
-                                                         unsigned int *size);
-void                <a class="link" href="libiptcdata-data.html#iptc-data-free-buf" title="iptc_data_free_buf ()">iptc_data_free_buf</a>                  (<a class="link" href="libiptcdata-data.html#IptcData" title="IptcData">IptcData</a> *data,
-                                                         unsigned char *buf);
-
-<a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="IptcDataSet">IptcDataSet</a>*        <a class="link" href="libiptcdata-data.html#iptc-data-get-dataset" title="iptc_data_get_dataset ()">iptc_data_get_dataset</a>               (<a class="link" href="libiptcdata-data.html#IptcData" title="IptcData">IptcData</a> *data,
-                                                         <a class="link" href="libiptcdata-tag.html#IptcRecord" title="enum IptcRecord">IptcRecord</a> record,
-                                                         <a class="link" href="libiptcdata-tag.html#IptcTag" title="enum IptcTag">IptcTag</a> tag);
-<a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="IptcDataSet">IptcDataSet</a>*        <a class="link" href="libiptcdata-data.html#iptc-data-get-next-dataset" title="iptc_data_get_next_dataset ()">iptc_data_get_next_dataset</a>          (<a class="link" href="libiptcdata-data.html#IptcData" title="IptcData">IptcData</a> *data,
-                                                         <a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="IptcDataSet">IptcDataSet</a> *ds,
-                                                         <a class="link" href="libiptcdata-tag.html#IptcRecord" title="enum IptcRecord">IptcRecord</a> record,
-                                                         <a class="link" href="libiptcdata-tag.html#IptcTag" title="enum IptcTag">IptcTag</a> tag);
-int                 <a class="link" href="libiptcdata-data.html#iptc-data-add-dataset" title="iptc_data_add_dataset ()">iptc_data_add_dataset</a>               (<a class="link" href="libiptcdata-data.html#IptcData" title="IptcData">IptcData</a> *data,
-                                                         <a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="IptcDataSet">IptcDataSet</a> *ds);
-int                 <a class="link" href="libiptcdata-data.html#iptc-data-add-dataset-before" title="iptc_data_add_dataset_before ()">iptc_data_add_dataset_before</a>        (<a class="link" href="libiptcdata-data.html#IptcData" title="IptcData">IptcData</a> *data,
-                                                         <a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="IptcDataSet">IptcDataSet</a> *ds,
-                                                         <a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="IptcDataSet">IptcDataSet</a> *newds);
-int                 <a class="link" href="libiptcdata-data.html#iptc-data-add-dataset-after" title="iptc_data_add_dataset_after ()">iptc_data_add_dataset_after</a>         (<a class="link" href="libiptcdata-data.html#IptcData" title="IptcData">IptcData</a> *data,
-                                                         <a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="IptcDataSet">IptcDataSet</a> *ds,
-                                                         <a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="IptcDataSet">IptcDataSet</a> *newds);
-int                 <a class="link" href="libiptcdata-data.html#iptc-data-remove-dataset" title="iptc_data_remove_dataset ()">iptc_data_remove_dataset</a>            (<a class="link" href="libiptcdata-data.html#IptcData" title="IptcData">IptcData</a> *data,
-                                                         <a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="IptcDataSet">IptcDataSet</a> *ds);
-
-void                (<a class="link" href="libiptcdata-data.html#IptcDataForeachDataSetFunc" title="IptcDataForeachDataSetFunc ()">*IptcDataForeachDataSetFunc</a>)       (<a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="IptcDataSet">IptcDataSet</a> *dataset,
-                                                         void *user_data);
-void                <a class="link" href="libiptcdata-data.html#iptc-data-foreach-dataset" title="iptc_data_foreach_dataset ()">iptc_data_foreach_dataset</a>           (<a class="link" href="libiptcdata-data.html#IptcData" title="IptcData">IptcData</a> *data,
-                                                         <a class="link" href="libiptcdata-data.html#IptcDataForeachDataSetFunc" title="IptcDataForeachDataSetFunc ()">IptcDataForeachDataSetFunc</a> func,
-                                                         void *user_data);
-
-void                <a class="link" href="libiptcdata-data.html#iptc-data-sort" title="iptc_data_sort ()">iptc_data_sort</a>                      (<a class="link" href="libiptcdata-data.html#IptcData" title="IptcData">IptcData</a> *data);
-
-enum                <a class="link" href="libiptcdata-data.html#IptcEncoding" title="enum IptcEncoding">IptcEncoding</a>;
-<a class="link" href="libiptcdata-data.html#IptcEncoding" title="enum IptcEncoding">IptcEncoding</a>        <a class="link" href="libiptcdata-data.html#iptc-data-get-encoding" title="iptc_data_get_encoding ()">iptc_data_get_encoding</a>              (<a class="link" href="libiptcdata-data.html#IptcData" title="IptcData">IptcData</a> *data);
-int                 <a class="link" href="libiptcdata-data.html#iptc-data-set-encoding-utf8" title="iptc_data_set_encoding_utf8 ()">iptc_data_set_encoding_utf8</a>         (<a class="link" href="libiptcdata-data.html#IptcData" title="IptcData">IptcData</a> *data);
-
-#define             <a class="link" href="libiptcdata-data.html#IPTC-IIM-VERSION:CAPS" title="IPTC_IIM_VERSION">IPTC_IIM_VERSION</a>
-int                 <a class="link" href="libiptcdata-data.html#iptc-data-set-version" title="iptc_data_set_version ()">iptc_data_set_version</a>               (<a class="link" href="libiptcdata-data.html#IptcData" title="IptcData">IptcData</a> *data,
-                                                         unsigned int version);
-
-int                 <a class="link" href="libiptcdata-data.html#iptc-data-add-dataset-with-value" title="iptc_data_add_dataset_with_value ()">iptc_data_add_dataset_with_value</a>    (<a class="link" href="libiptcdata-data.html#IptcData" title="IptcData">IptcData</a> *data,
-                                                         <a class="link" href="libiptcdata-tag.html#IptcRecord" title="enum IptcRecord">IptcRecord</a> record,
-                                                         <a class="link" href="libiptcdata-tag.html#IptcTag" title="enum IptcTag">IptcTag</a> tag,
-                                                         unsigned int value,
-                                                         <a class="link" href="libiptcdata-dataset.html#IptcValidate" title="enum IptcValidate">IptcValidate</a> validate);
-int                 <a class="link" href="libiptcdata-data.html#iptc-data-add-dataset-with-contents" title="iptc_data_add_dataset_with_contents ()">iptc_data_add_dataset_with_contents</a> (<a class="link" href="libiptcdata-data.html#IptcData" title="IptcData">IptcData</a> *data,
-                                                         <a class="link" href="libiptcdata-tag.html#IptcRecord" title="enum IptcRecord">IptcRecord</a> record,
-                                                         <a class="link" href="libiptcdata-tag.html#IptcTag" title="enum IptcTag">IptcTag</a> tag,
-                                                         unsigned char *buf,
-                                                         unsigned int size,
-                                                         <a class="link" href="libiptcdata-dataset.html#IptcValidate" title="enum IptcValidate">IptcValidate</a> validate);
-
-void                <a class="link" href="libiptcdata-data.html#iptc-data-dump" title="iptc_data_dump ()">iptc_data_dump</a>                      (<a class="link" href="libiptcdata-data.html#IptcData" title="IptcData">IptcData</a> *data,
-                                                         unsigned int indent);
-void                <a class="link" href="libiptcdata-data.html#iptc-data-log" title="iptc_data_log ()">iptc_data_log</a>                       (<a class="link" href="libiptcdata-data.html#IptcData" title="IptcData">IptcData</a> *data,
-                                                         <a class="link" href="libiptcdata-log.html#IptcLog" title="IptcLog">IptcLog</a> *log);
-</pre>
-</div>
-<div class="refsect1" lang="en">
-<a name="libiptcdata-data.description"></a><h2>Description</h2>
-<p>
-The <a class="link" href="libiptcdata-data.html#IptcData" title="IptcData"><span class="type">IptcData</span></a> object is the top-level container for a collection of IPTC metadata tags.
-Each of these tags is stored in an <a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="IptcDataSet"><span class="type">IptcDataSet</span></a> object.
-</p>
-</div>
-<div class="refsect1" lang="en">
-<a name="libiptcdata-data.details"></a><h2>Details</h2>
-<div class="refsect2" lang="en">
-<a name="IptcData"></a><h3>IptcData</h3>
-<pre class="programlisting">typedef struct {
-        IptcDataSet **datasets;
-        unsigned int count;
-
-	IptcDataPrivate *priv;
-} IptcData;
-</pre>
-<p>
-Represents the collection of datasets that make up a IPTC data block.
-</p>
-<div class="variablelist"><table border="0">
-<col align="left" valign="top">
+<div class="refsect1">
+<a name="libiptcdata-data.functions"></a><h2>Functions</h2>
+<div class="informaltable"><table width="100%" border="0">
+<colgroup>
+<col width="150px" class="functions_return">
+<col class="functions_name">
+</colgroup>
 <tbody>
 <tr>
-<td><p><span class="term"><a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="IptcDataSet">IptcDataSet</a> **<em class="structfield"><code>datasets</code></em>;</span></p></td>
-<td>array of pointers to the datasets in the collection
+<td class="function_type">
+<a class="link" href="libiptcdata-data.html#IptcData" title="struct IptcData"><span class="returnvalue">IptcData</span></a> *
+</td>
+<td class="function_name">
+<a class="link" href="libiptcdata-data.html#iptc-data-new" title="iptc_data_new ()">iptc_data_new</a> <span class="c_punctuation">()</span>
 </td>
 </tr>
 <tr>
-<td><p><span class="term">unsigned int <em class="structfield"><code>count</code></em>;</span></p></td>
-<td>the number of datasets in the collection
+<td class="function_type">
+<a class="link" href="libiptcdata-data.html#IptcData" title="struct IptcData"><span class="returnvalue">IptcData</span></a> *
+</td>
+<td class="function_name">
+<a class="link" href="libiptcdata-data.html#iptc-data-new-mem" title="iptc_data_new_mem ()">iptc_data_new_mem</a> <span class="c_punctuation">()</span>
 </td>
 </tr>
 <tr>
-<td><p><span class="term">IptcDataPrivate *<em class="structfield"><code>priv</code></em>;</span></p></td>
-<td>private data
-
+<td class="function_type">
+<span class="returnvalue">void</span>
+</td>
+<td class="function_name">
+<a class="link" href="libiptcdata-data.html#iptc-data-ref" title="iptc_data_ref ()">iptc_data_ref</a> <span class="c_punctuation">()</span>
+</td>
+</tr>
+<tr>
+<td class="function_type">
+<span class="returnvalue">void</span>
+</td>
+<td class="function_name">
+<a class="link" href="libiptcdata-data.html#iptc-data-unref" title="iptc_data_unref ()">iptc_data_unref</a> <span class="c_punctuation">()</span>
+</td>
+</tr>
+<tr>
+<td class="function_type">
+<span class="returnvalue">void</span>
+</td>
+<td class="function_name">
+<a class="link" href="libiptcdata-data.html#iptc-data-free" title="iptc_data_free ()">iptc_data_free</a> <span class="c_punctuation">()</span>
+</td>
+</tr>
+<tr>
+<td class="function_type">
+<a class="link" href="libiptcdata-data.html#IptcData" title="struct IptcData"><span class="returnvalue">IptcData</span></a> *
+</td>
+<td class="function_name">
+<a class="link" href="libiptcdata-data.html#iptc-data-new-from-jpeg" title="iptc_data_new_from_jpeg ()">iptc_data_new_from_jpeg</a> <span class="c_punctuation">()</span>
+</td>
+</tr>
+<tr>
+<td class="function_type">
+<a class="link" href="libiptcdata-data.html#IptcData" title="struct IptcData"><span class="returnvalue">IptcData</span></a> *
+</td>
+<td class="function_name">
+<a class="link" href="libiptcdata-data.html#iptc-data-new-from-data" title="iptc_data_new_from_data ()">iptc_data_new_from_data</a> <span class="c_punctuation">()</span>
+</td>
+</tr>
+<tr>
+<td class="function_type">
+<span class="returnvalue">int</span>
+</td>
+<td class="function_name">
+<a class="link" href="libiptcdata-data.html#iptc-data-load" title="iptc_data_load ()">iptc_data_load</a> <span class="c_punctuation">()</span>
+</td>
+</tr>
+<tr>
+<td class="function_type">
+<span class="returnvalue">int</span>
+</td>
+<td class="function_name">
+<a class="link" href="libiptcdata-data.html#iptc-data-save" title="iptc_data_save ()">iptc_data_save</a> <span class="c_punctuation">()</span>
+</td>
+</tr>
+<tr>
+<td class="function_type">
+<span class="returnvalue">void</span>
+</td>
+<td class="function_name">
+<a class="link" href="libiptcdata-data.html#iptc-data-free-buf" title="iptc_data_free_buf ()">iptc_data_free_buf</a> <span class="c_punctuation">()</span>
+</td>
+</tr>
+<tr>
+<td class="function_type">
+<a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="struct IptcDataSet"><span class="returnvalue">IptcDataSet</span></a> *
+</td>
+<td class="function_name">
+<a class="link" href="libiptcdata-data.html#iptc-data-get-dataset" title="iptc_data_get_dataset ()">iptc_data_get_dataset</a> <span class="c_punctuation">()</span>
+</td>
+</tr>
+<tr>
+<td class="function_type">
+<a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="struct IptcDataSet"><span class="returnvalue">IptcDataSet</span></a> *
+</td>
+<td class="function_name">
+<a class="link" href="libiptcdata-data.html#iptc-data-get-next-dataset" title="iptc_data_get_next_dataset ()">iptc_data_get_next_dataset</a> <span class="c_punctuation">()</span>
+</td>
+</tr>
+<tr>
+<td class="function_type">
+<span class="returnvalue">int</span>
+</td>
+<td class="function_name">
+<a class="link" href="libiptcdata-data.html#iptc-data-add-dataset" title="iptc_data_add_dataset ()">iptc_data_add_dataset</a> <span class="c_punctuation">()</span>
+</td>
+</tr>
+<tr>
+<td class="function_type">
+<span class="returnvalue">int</span>
+</td>
+<td class="function_name">
+<a class="link" href="libiptcdata-data.html#iptc-data-add-dataset-before" title="iptc_data_add_dataset_before ()">iptc_data_add_dataset_before</a> <span class="c_punctuation">()</span>
+</td>
+</tr>
+<tr>
+<td class="function_type">
+<span class="returnvalue">int</span>
+</td>
+<td class="function_name">
+<a class="link" href="libiptcdata-data.html#iptc-data-add-dataset-after" title="iptc_data_add_dataset_after ()">iptc_data_add_dataset_after</a> <span class="c_punctuation">()</span>
+</td>
+</tr>
+<tr>
+<td class="function_type">
+<span class="returnvalue">int</span>
+</td>
+<td class="function_name">
+<a class="link" href="libiptcdata-data.html#iptc-data-remove-dataset" title="iptc_data_remove_dataset ()">iptc_data_remove_dataset</a> <span class="c_punctuation">()</span>
+</td>
+</tr>
+<tr>
+<td class="function_type">
+<span class="returnvalue">void</span>
+</td>
+<td class="function_name">
+<span class="c_punctuation">(</span><a class="link" href="libiptcdata-data.html#IptcDataForeachDataSetFunc" title="IptcDataForeachDataSetFunc ()">*IptcDataForeachDataSetFunc</a><span class="c_punctuation">)</span> <span class="c_punctuation">()</span>
+</td>
+</tr>
+<tr>
+<td class="function_type">
+<span class="returnvalue">void</span>
+</td>
+<td class="function_name">
+<a class="link" href="libiptcdata-data.html#iptc-data-foreach-dataset" title="iptc_data_foreach_dataset ()">iptc_data_foreach_dataset</a> <span class="c_punctuation">()</span>
+</td>
+</tr>
+<tr>
+<td class="function_type">
+<span class="returnvalue">void</span>
+</td>
+<td class="function_name">
+<a class="link" href="libiptcdata-data.html#iptc-data-sort" title="iptc_data_sort ()">iptc_data_sort</a> <span class="c_punctuation">()</span>
+</td>
+</tr>
+<tr>
+<td class="function_type">
+<a class="link" href="libiptcdata-data.html#IptcEncoding" title="enum IptcEncoding"><span class="returnvalue">IptcEncoding</span></a>
+</td>
+<td class="function_name">
+<a class="link" href="libiptcdata-data.html#iptc-data-get-encoding" title="iptc_data_get_encoding ()">iptc_data_get_encoding</a> <span class="c_punctuation">()</span>
+</td>
+</tr>
+<tr>
+<td class="function_type">
+<span class="returnvalue">int</span>
+</td>
+<td class="function_name">
+<a class="link" href="libiptcdata-data.html#iptc-data-set-encoding-utf8" title="iptc_data_set_encoding_utf8 ()">iptc_data_set_encoding_utf8</a> <span class="c_punctuation">()</span>
+</td>
+</tr>
+<tr>
+<td class="function_type">
+<span class="returnvalue">int</span>
+</td>
+<td class="function_name">
+<a class="link" href="libiptcdata-data.html#iptc-data-set-version" title="iptc_data_set_version ()">iptc_data_set_version</a> <span class="c_punctuation">()</span>
+</td>
+</tr>
+<tr>
+<td class="function_type">
+<span class="returnvalue">int</span>
+</td>
+<td class="function_name">
+<a class="link" href="libiptcdata-data.html#iptc-data-add-dataset-with-value" title="iptc_data_add_dataset_with_value ()">iptc_data_add_dataset_with_value</a> <span class="c_punctuation">()</span>
+</td>
+</tr>
+<tr>
+<td class="function_type">
+<span class="returnvalue">int</span>
+</td>
+<td class="function_name">
+<a class="link" href="libiptcdata-data.html#iptc-data-add-dataset-with-contents" title="iptc_data_add_dataset_with_contents ()">iptc_data_add_dataset_with_contents</a> <span class="c_punctuation">()</span>
+</td>
+</tr>
+<tr>
+<td class="function_type">
+<span class="returnvalue">void</span>
+</td>
+<td class="function_name">
+<a class="link" href="libiptcdata-data.html#iptc-data-dump" title="iptc_data_dump ()">iptc_data_dump</a> <span class="c_punctuation">()</span>
+</td>
+</tr>
+<tr>
+<td class="function_type">
+<span class="returnvalue">void</span>
+</td>
+<td class="function_name">
+<a class="link" href="libiptcdata-data.html#iptc-data-log" title="iptc_data_log ()">iptc_data_log</a> <span class="c_punctuation">()</span>
 </td>
 </tr>
 </tbody>
 </table></div>
 </div>
-<hr>
-<div class="refsect2" lang="en">
-<a name="iptc-data-new"></a><h3>iptc_data_new ()</h3>
-<pre class="programlisting"><a class="link" href="libiptcdata-data.html#IptcData" title="IptcData">IptcData</a>*           iptc_data_new                       (void);</pre>
+<div class="refsect1">
+<a name="libiptcdata-data.other"></a><h2>Types and Values</h2>
+<div class="informaltable"><table width="100%" border="0">
+<colgroup>
+<col width="150px" class="name">
+<col class="description">
+</colgroup>
+<tbody>
+<tr>
+<td class="datatype_keyword">struct</td>
+<td class="function_name"><a class="link" href="libiptcdata-data.html#IptcData" title="struct IptcData">IptcData</a></td>
+</tr>
+<tr>
+<td class="datatype_keyword">enum</td>
+<td class="function_name"><a class="link" href="libiptcdata-data.html#IptcEncoding" title="enum IptcEncoding">IptcEncoding</a></td>
+</tr>
+<tr>
+<td class="define_keyword">#define</td>
+<td class="function_name"><a class="link" href="libiptcdata-data.html#IPTC-IIM-VERSION:CAPS" title="IPTC_IIM_VERSION">IPTC_IIM_VERSION</a></td>
+</tr>
+</tbody>
+</table></div>
+</div>
+<div class="refsect1">
+<a name="libiptcdata-data.description"></a><h2>Description</h2>
 <p>
-Allocates a new collection of datasets, which is initialized to be
+The <a class="link" href="libiptcdata-data.html#IptcData" title="struct IptcData"><span class="type">IptcData</span></a> object is the top-level container for a collection of IPTC metadata tags.
+Each of these tags is stored in an <a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="struct IptcDataSet"><span class="type">IptcDataSet</span></a> object.
+</p>
+</div>
+<div class="refsect1">
+<a name="libiptcdata-data.functions_details"></a><h2>Functions</h2>
+<div class="refsect2">
+<a name="iptc-data-new"></a><h3>iptc_data_new ()</h3>
+<pre class="programlisting"><a class="link" href="libiptcdata-data.html#IptcData" title="struct IptcData"><span class="returnvalue">IptcData</span></a> *
+iptc_data_new (<em class="parameter"><code><span class="type">void</span></code></em>);</pre>
+<p>Allocates a new collection of datasets, which is initialized to be
 empty.  The default memory allocation functions (malloc, etc.) are
 used.  If you need custom memory management functions, use
-<a class="link" href="libiptcdata-data.html#iptc-data-new-mem" title="iptc_data_new_mem ()"><code class="function">iptc_data_new_mem()</code></a> instead.  This allocation will set the <a class="link" href="libiptcdata-data.html#IptcData" title="IptcData"><span class="type">IptcData</span></a>
-refcount to 1, so use <a class="link" href="libiptcdata-data.html#iptc-data-unref" title="iptc_data_unref ()"><code class="function">iptc_data_unref()</code></a> when finished with the pointer.</p>
-<p>
-
-</p>
-<div class="variablelist"><table border="0">
-<col align="left" valign="top">
-<tbody><tr>
-<td><p><span class="term"><span class="emphasis"><em>Returns</em></span> :</span></p></td>
-<td> pointer to the new <a class="link" href="libiptcdata-data.html#IptcData" title="IptcData"><span class="type">IptcData</span></a> object, NULL on error
-</td>
-</tr></tbody>
-</table></div>
+<a class="link" href="libiptcdata-data.html#iptc-data-new-mem" title="iptc_data_new_mem ()"><code class="function">iptc_data_new_mem()</code></a> instead.  This allocation will set the <a class="link" href="libiptcdata-data.html#IptcData" title="struct IptcData"><span class="type">IptcData</span></a>
+refcount to 1, so use <a class="link" href="libiptcdata-data.html#iptc-data-unref" title="iptc_data_unref ()"><code class="function">iptc_data_unref()</code></a> when finished with the pointer.</p>
+<div class="refsect3">
+<a name="id-1.7.2.6.2.5"></a><h4>Returns</h4>
+<p> pointer to the new <a class="link" href="libiptcdata-data.html#IptcData" title="struct IptcData"><span class="type">IptcData</span></a> object, NULL on error</p>
+<p></p>
+</div>
 </div>
 <hr>
-<div class="refsect2" lang="en">
-<a name="iptc-data-new-mem"></a><h3>iptc_data_new_mem ()</h3>
-<pre class="programlisting"><a class="link" href="libiptcdata-data.html#IptcData" title="IptcData">IptcData</a>*           iptc_data_new_mem                   (<a class="link" href="libiptcdata-mem.html#IptcMem" title="IptcMem">IptcMem</a> *mem);</pre>
-<p>
-Allocates a new collection of datasets, which is initialized to be
+<div class="refsect2">
+<a name="iptc-data-new-mem"></a><h3>iptc_data_new_mem ()</h3>
+<pre class="programlisting"><a class="link" href="libiptcdata-data.html#IptcData" title="struct IptcData"><span class="returnvalue">IptcData</span></a> *
+iptc_data_new_mem (<em class="parameter"><code><a class="link" href="libiptcdata-mem.html#IptcMem" title="IptcMem"><span class="type">IptcMem</span></a> *mem</code></em>);</pre>
+<p>Allocates a new collection of datasets, which is initialized to be
 empty, using custom memory management functions.  This allocation
-will set the <a class="link" href="libiptcdata-data.html#IptcData" title="IptcData"><span class="type">IptcData</span></a> refcount to 1, so use <a class="link" href="libiptcdata-data.html#iptc-data-unref" title="iptc_data_unref ()"><code class="function">iptc_data_unref()</code></a> when
+will set the <a class="link" href="libiptcdata-data.html#IptcData" title="struct IptcData"><span class="type">IptcData</span></a> refcount to 1, so use <a class="link" href="libiptcdata-data.html#iptc-data-unref" title="iptc_data_unref ()"><code class="function">iptc_data_unref()</code></a> when
 finished with the object.</p>
-<p>
-
-</p>
-<div class="variablelist"><table border="0">
-<col align="left" valign="top">
-<tbody>
-<tr>
-<td><p><span class="term"><em class="parameter"><code>mem</code></em> :</span></p></td>
-<td> Pointer to an <a class="link" href="libiptcdata-mem.html#IptcMem" title="IptcMem"><span class="type">IptcMem</span></a> object that defines custom memory managment
-functions.  The refcount of <em class="parameter"><code>mem</code></em> will be incremented.  It is decremented
-when the returned <a class="link" href="libiptcdata-data.html#IptcData" title="IptcData"><span class="type">IptcData</span></a> object is freed.
-</td>
-</tr>
-<tr>
-<td><p><span class="term"><span class="emphasis"><em>Returns</em></span> :</span></p></td>
-<td> pointer to the new <a class="link" href="libiptcdata-data.html#IptcData" title="IptcData"><span class="type">IptcData</span></a> object, NULL on error
-</td>
-</tr>
-</tbody>
+<div class="refsect3">
+<a name="id-1.7.2.6.3.5"></a><h4>Parameters</h4>
+<div class="informaltable"><table width="100%" border="0">
+<colgroup>
+<col width="150px" class="parameters_name">
+<col class="parameters_description">
+<col width="200px" class="parameters_annotations">
+</colgroup>
+<tbody><tr>
+<td class="parameter_name"><p>mem</p></td>
+<td class="parameter_description"><p>Pointer to an <a class="link" href="libiptcdata-mem.html#IptcMem" title="IptcMem"><span class="type">IptcMem</span></a> object that defines custom memory managment
+functions.  The refcount of <em class="parameter"><code>mem</code></em>
+will be incremented.  It is decremented
+when the returned <a class="link" href="libiptcdata-data.html#IptcData" title="struct IptcData"><span class="type">IptcData</span></a> object is freed.</p></td>
+<td class="parameter_annotations"> </td>
+</tr></tbody>
 </table></div>
 </div>
+<div class="refsect3">
+<a name="id-1.7.2.6.3.6"></a><h4>Returns</h4>
+<p> pointer to the new <a class="link" href="libiptcdata-data.html#IptcData" title="struct IptcData"><span class="type">IptcData</span></a> object, NULL on error</p>
+<p></p>
+</div>
+</div>
 <hr>
-<div class="refsect2" lang="en">
-<a name="iptc-data-ref"></a><h3>iptc_data_ref ()</h3>
-<pre class="programlisting">void                iptc_data_ref                       (<a class="link" href="libiptcdata-data.html#IptcData" title="IptcData">IptcData</a> *data);</pre>
-<p>
-Increments the reference count of an <a class="link" href="libiptcdata-data.html#IptcData" title="IptcData"><span class="type">IptcData</span></a> object.  This function
+<div class="refsect2">
+<a name="iptc-data-ref"></a><h3>iptc_data_ref ()</h3>
+<pre class="programlisting"><span class="returnvalue">void</span>
+iptc_data_ref (<em class="parameter"><code><a class="link" href="libiptcdata-data.html#IptcData" title="struct IptcData"><span class="type">IptcData</span></a> *data</code></em>);</pre>
+<p>Increments the reference count of an <a class="link" href="libiptcdata-data.html#IptcData" title="struct IptcData"><span class="type">IptcData</span></a> object.  This function
 should be called whenever a copy of a pointer is made by the application.
-<a class="link" href="libiptcdata-data.html#iptc-data-unref" title="iptc_data_unref ()"><code class="function">iptc_data_unref()</code></a> can then be used when the pointer is no longer needed
+<a class="link" href="libiptcdata-data.html#iptc-data-unref" title="iptc_data_unref ()"><code class="function">iptc_data_unref()</code></a> can then be used when the pointer is no longer needed
 to ensure that the object is freed once the object is completely unused.</p>
-<p>
-
-</p>
-<div class="variablelist"><table border="0">
-<col align="left" valign="top">
+<div class="refsect3">
+<a name="id-1.7.2.6.4.5"></a><h4>Parameters</h4>
+<div class="informaltable"><table width="100%" border="0">
+<colgroup>
+<col width="150px" class="parameters_name">
+<col class="parameters_description">
+<col width="200px" class="parameters_annotations">
+</colgroup>
 <tbody><tr>
-<td><p><span class="term"><em class="parameter"><code>data</code></em> :</span></p></td>
-<td> the referenced pointer
-</td>
+<td class="parameter_name"><p>data</p></td>
+<td class="parameter_description"><p>the referenced pointer</p></td>
+<td class="parameter_annotations"> </td>
 </tr></tbody>
 </table></div>
 </div>
+</div>
 <hr>
-<div class="refsect2" lang="en">
-<a name="iptc-data-unref"></a><h3>iptc_data_unref ()</h3>
-<pre class="programlisting">void                iptc_data_unref                     (<a class="link" href="libiptcdata-data.html#IptcData" title="IptcData">IptcData</a> *data);</pre>
-<p>
-Decrements the reference count of an <a class="link" href="libiptcdata-data.html#IptcData" title="IptcData"><span class="type">IptcData</span></a> object.  The object will
+<div class="refsect2">
+<a name="iptc-data-unref"></a><h3>iptc_data_unref ()</h3>
+<pre class="programlisting"><span class="returnvalue">void</span>
+iptc_data_unref (<em class="parameter"><code><a class="link" href="libiptcdata-data.html#IptcData" title="struct IptcData"><span class="type">IptcData</span></a> *data</code></em>);</pre>
+<p>Decrements the reference count of an <a class="link" href="libiptcdata-data.html#IptcData" title="struct IptcData"><span class="type">IptcData</span></a> object.  The object will
 automatically be freed when the count reaches 0.  This function should
 be called whenever a pointer is no longer needed by an application.  It
 is also good practice to set the local copy of the pointer to NULL to
 shield against accidently reusing the value.</p>
-<p>
-
-</p>
-<div class="variablelist"><table border="0">
-<col align="left" valign="top">
+<div class="refsect3">
+<a name="id-1.7.2.6.5.5"></a><h4>Parameters</h4>
+<div class="informaltable"><table width="100%" border="0">
+<colgroup>
+<col width="150px" class="parameters_name">
+<col class="parameters_description">
+<col width="200px" class="parameters_annotations">
+</colgroup>
 <tbody><tr>
-<td><p><span class="term"><em class="parameter"><code>data</code></em> :</span></p></td>
-<td> the unreferenced pointer
-</td>
+<td class="parameter_name"><p>data</p></td>
+<td class="parameter_description"><p>the unreferenced pointer</p></td>
+<td class="parameter_annotations"> </td>
 </tr></tbody>
 </table></div>
 </div>
+</div>
 <hr>
-<div class="refsect2" lang="en">
-<a name="iptc-data-free"></a><h3>iptc_data_free ()</h3>
-<pre class="programlisting">void                iptc_data_free                      (<a class="link" href="libiptcdata-data.html#IptcData" title="IptcData">IptcData</a> *data);</pre>
-<p>
-Frees an <a class="link" href="libiptcdata-data.html#IptcData" title="IptcData"><span class="type">IptcData</span></a> object.  This function should be used only for error
-handling since <a class="link" href="libiptcdata-data.html#iptc-data-unref" title="iptc_data_unref ()"><code class="function">iptc_data_unref()</code></a> provides a safer mechanism for freeing
+<div class="refsect2">
+<a name="iptc-data-free"></a><h3>iptc_data_free ()</h3>
+<pre class="programlisting"><span class="returnvalue">void</span>
+iptc_data_free (<em class="parameter"><code><a class="link" href="libiptcdata-data.html#IptcData" title="struct IptcData"><span class="type">IptcData</span></a> *data</code></em>);</pre>
+<p>Frees an <a class="link" href="libiptcdata-data.html#IptcData" title="struct IptcData"><span class="type">IptcData</span></a> object.  This function should be used only for error
+handling since <a class="link" href="libiptcdata-data.html#iptc-data-unref" title="iptc_data_unref ()"><code class="function">iptc_data_unref()</code></a> provides a safer mechanism for freeing
 that allows multiple components to have access to an object.  This
 function decrements the reference count of any datasets contained by the
 object.  This will generally cause them to be freed as well unless other
 parts of the application are referencing them individually.</p>
-<p>
-
-</p>
-<div class="variablelist"><table border="0">
-<col align="left" valign="top">
+<div class="refsect3">
+<a name="id-1.7.2.6.6.5"></a><h4>Parameters</h4>
+<div class="informaltable"><table width="100%" border="0">
+<colgroup>
+<col width="150px" class="parameters_name">
+<col class="parameters_description">
+<col width="200px" class="parameters_annotations">
+</colgroup>
 <tbody><tr>
-<td><p><span class="term"><em class="parameter"><code>data</code></em> :</span></p></td>
-<td> the object to free
-</td>
+<td class="parameter_name"><p>data</p></td>
+<td class="parameter_description"><p>the object to free</p></td>
+<td class="parameter_annotations"> </td>
 </tr></tbody>
 </table></div>
 </div>
+</div>
 <hr>
-<div class="refsect2" lang="en">
-<a name="iptc-data-new-from-jpeg"></a><h3>iptc_data_new_from_jpeg ()</h3>
-<pre class="programlisting"><a class="link" href="libiptcdata-data.html#IptcData" title="IptcData">IptcData</a>*           iptc_data_new_from_jpeg             (const char *path);</pre>
-<p>
-Allocates a new collection of datasets which is initialized by decoding
-the IPTC data in JPEG file <em class="parameter"><code>path</code></em>.  This allocation will set the <a class="link" href="libiptcdata-data.html#IptcData" title="IptcData"><span class="type">IptcData</span></a>
-refcount to 1, so use <a class="link" href="libiptcdata-data.html#iptc-data-unref" title="iptc_data_unref ()"><code class="function">iptc_data_unref()</code></a> when finished with the object.
+<div class="refsect2">
+<a name="iptc-data-new-from-jpeg"></a><h3>iptc_data_new_from_jpeg ()</h3>
+<pre class="programlisting"><a class="link" href="libiptcdata-data.html#IptcData" title="struct IptcData"><span class="returnvalue">IptcData</span></a> *
+iptc_data_new_from_jpeg (<em class="parameter"><code>const <span class="type">char</span> *path</code></em>);</pre>
+<p>Allocates a new collection of datasets which is initialized by decoding
+the IPTC data in JPEG file <em class="parameter"><code>path</code></em>
+.  This allocation will set the <a class="link" href="libiptcdata-data.html#IptcData" title="struct IptcData"><span class="type">IptcData</span></a>
+refcount to 1, so use <a class="link" href="libiptcdata-data.html#iptc-data-unref" title="iptc_data_unref ()"><code class="function">iptc_data_unref()</code></a> when finished with the object.
 This is a convenience function that reads the contents of the file,
-creates a new <a class="link" href="libiptcdata-data.html#IptcData" title="IptcData"><span class="type">IptcData</span></a> object, parses the file with
-<a class="link" href="libiptcdata-jpeg.html#iptc-jpeg-read-ps3" title="iptc_jpeg_read_ps3 ()"><code class="function">iptc_jpeg_read_ps3()</code></a> and <a class="link" href="libiptcdata-jpeg.html#iptc-jpeg-ps3-find-iptc" title="iptc_jpeg_ps3_find_iptc ()"><code class="function">iptc_jpeg_ps3_find_iptc()</code></a>, and loads the
-data with <a class="link" href="libiptcdata-data.html#iptc-data-load" title="iptc_data_load ()"><code class="function">iptc_data_load()</code></a>.  If more fine-grained error detection
+creates a new <a class="link" href="libiptcdata-data.html#IptcData" title="struct IptcData"><span class="type">IptcData</span></a> object, parses the file with
+<a class="link" href="libiptcdata-jpeg.html#iptc-jpeg-read-ps3" title="iptc_jpeg_read_ps3 ()"><code class="function">iptc_jpeg_read_ps3()</code></a> and <a class="link" href="libiptcdata-jpeg.html#iptc-jpeg-ps3-find-iptc" title="iptc_jpeg_ps3_find_iptc ()"><code class="function">iptc_jpeg_ps3_find_iptc()</code></a>, and loads the
+data with <a class="link" href="libiptcdata-data.html#iptc-data-load" title="iptc_data_load ()"><code class="function">iptc_data_load()</code></a>.  If more fine-grained error detection
 is needed, those functions should be used individually.</p>
-<p>
-
-</p>
-<div class="variablelist"><table border="0">
-<col align="left" valign="top">
-<tbody>
-<tr>
-<td><p><span class="term"><em class="parameter"><code>path</code></em> :</span></p></td>
-<td> filesystem path of the jpeg file to be read
-</td>
-</tr>
-<tr>
-<td><p><span class="term"><span class="emphasis"><em>Returns</em></span> :</span></p></td>
-<td> pointer to the new <a class="link" href="libiptcdata-data.html#IptcData" title="IptcData"><span class="type">IptcData</span></a> object.  NULL on error (including
-parsing errors or if the file did not include IPTC data).
-</td>
-</tr>
-</tbody>
+<div class="refsect3">
+<a name="id-1.7.2.6.7.5"></a><h4>Parameters</h4>
+<div class="informaltable"><table width="100%" border="0">
+<colgroup>
+<col width="150px" class="parameters_name">
+<col class="parameters_description">
+<col width="200px" class="parameters_annotations">
+</colgroup>
+<tbody><tr>
+<td class="parameter_name"><p>path</p></td>
+<td class="parameter_description"><p>filesystem path of the jpeg file to be read</p></td>
+<td class="parameter_annotations"> </td>
+</tr></tbody>
 </table></div>
 </div>
+<div class="refsect3">
+<a name="id-1.7.2.6.7.6"></a><h4>Returns</h4>
+<p> pointer to the new <a class="link" href="libiptcdata-data.html#IptcData" title="struct IptcData"><span class="type">IptcData</span></a> object.  NULL on error (including
+parsing errors or if the file did not include IPTC data).</p>
+<p></p>
+</div>
+</div>
 <hr>
-<div class="refsect2" lang="en">
-<a name="iptc-data-new-from-data"></a><h3>iptc_data_new_from_data ()</h3>
-<pre class="programlisting"><a class="link" href="libiptcdata-data.html#IptcData" title="IptcData">IptcData</a>*           iptc_data_new_from_data             (unsigned char *buf,
-                                                         unsigned int size);</pre>
-<p>
-Allocates a new collection of datasets which is initialized by decoding
-the contents of <em class="parameter"><code>buf</code></em>.  This allocation will set the <a class="link" href="libiptcdata-data.html#IptcData" title="IptcData"><span class="type">IptcData</span></a>
-refcount to 1, so use <a class="link" href="libiptcdata-data.html#iptc-data-unref" title="iptc_data_unref ()"><code class="function">iptc_data_unref()</code></a> when finished with the object.
+<div class="refsect2">
+<a name="iptc-data-new-from-data"></a><h3>iptc_data_new_from_data ()</h3>
+<pre class="programlisting"><a class="link" href="libiptcdata-data.html#IptcData" title="struct IptcData"><span class="returnvalue">IptcData</span></a> *
+iptc_data_new_from_data (<em class="parameter"><code>const unsigned <span class="type">char</span> *buf</code></em>,
+                         <em class="parameter"><code>unsigned <span class="type">int</span> size</code></em>);</pre>
+<p>Allocates a new collection of datasets which is initialized by decoding
+the contents of <em class="parameter"><code>buf</code></em>
+.  This allocation will set the <a class="link" href="libiptcdata-data.html#IptcData" title="struct IptcData"><span class="type">IptcData</span></a>
+refcount to 1, so use <a class="link" href="libiptcdata-data.html#iptc-data-unref" title="iptc_data_unref ()"><code class="function">iptc_data_unref()</code></a> when finished with the object.
 This is simply a convenience function that can be duplicated by calling
-<a class="link" href="libiptcdata-data.html#iptc-data-new" title="iptc_data_new ()"><code class="function">iptc_data_new()</code></a> followed by <a class="link" href="libiptcdata-data.html#iptc-data-load" title="iptc_data_load ()"><code class="function">iptc_data_load()</code></a>.</p>
-<p>
-
-</p>
-<div class="variablelist"><table border="0">
-<col align="left" valign="top">
+<a class="link" href="libiptcdata-data.html#iptc-data-new" title="iptc_data_new ()"><code class="function">iptc_data_new()</code></a> followed by <a class="link" href="libiptcdata-data.html#iptc-data-load" title="iptc_data_load ()"><code class="function">iptc_data_load()</code></a>.</p>
+<div class="refsect3">
+<a name="id-1.7.2.6.8.5"></a><h4>Parameters</h4>
+<div class="informaltable"><table width="100%" border="0">
+<colgroup>
+<col width="150px" class="parameters_name">
+<col class="parameters_description">
+<col width="200px" class="parameters_annotations">
+</colgroup>
 <tbody>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>buf</code></em> :</span></p></td>
-<td> the buffer of IPTC data to be decoded
-</td>
+<td class="parameter_name"><p>buf</p></td>
+<td class="parameter_description"><p>the buffer of IPTC data to be decoded</p></td>
+<td class="parameter_annotations"> </td>
 </tr>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>size</code></em> :</span></p></td>
-<td> the length to be read in bytes
-</td>
-</tr>
-<tr>
-<td><p><span class="term"><span class="emphasis"><em>Returns</em></span> :</span></p></td>
-<td> pointer to the new <a class="link" href="libiptcdata-data.html#IptcData" title="IptcData"><span class="type">IptcData</span></a> object.  NULL on error (including
-parsing errors in the contents of <em class="parameter"><code>buf</code></em>).
-</td>
+<td class="parameter_name"><p>size</p></td>
+<td class="parameter_description"><p>the length to be read in bytes</p></td>
+<td class="parameter_annotations"> </td>
 </tr>
 </tbody>
 </table></div>
 </div>
+<div class="refsect3">
+<a name="id-1.7.2.6.8.6"></a><h4>Returns</h4>
+<p> pointer to the new <a class="link" href="libiptcdata-data.html#IptcData" title="struct IptcData"><span class="type">IptcData</span></a> object.  NULL on error (including
+parsing errors in the contents of <em class="parameter"><code>buf</code></em>
+).</p>
+<p></p>
+</div>
+</div>
 <hr>
-<div class="refsect2" lang="en">
-<a name="iptc-data-load"></a><h3>iptc_data_load ()</h3>
-<pre class="programlisting">int                 iptc_data_load                      (<a class="link" href="libiptcdata-data.html#IptcData" title="IptcData">IptcData</a> *data,
-                                                         unsigned char *buf,
-                                                         unsigned int size);</pre>
-<p>
-Parses a buffer containing raw IPTC data and adds the datasets
-to the <a class="link" href="libiptcdata-data.html#IptcData" title="IptcData"><span class="type">IptcData</span></a> object <em class="parameter"><code>data</code></em>.</p>
-<p>
-
-</p>
-<div class="variablelist"><table border="0">
-<col align="left" valign="top">
+<div class="refsect2">
+<a name="iptc-data-load"></a><h3>iptc_data_load ()</h3>
+<pre class="programlisting"><span class="returnvalue">int</span>
+iptc_data_load (<em class="parameter"><code><a class="link" href="libiptcdata-data.html#IptcData" title="struct IptcData"><span class="type">IptcData</span></a> *data</code></em>,
+                <em class="parameter"><code>const unsigned <span class="type">char</span> *buf</code></em>,
+                <em class="parameter"><code>unsigned <span class="type">int</span> size</code></em>);</pre>
+<p>Parses a buffer containing raw IPTC data and adds the datasets
+to the <a class="link" href="libiptcdata-data.html#IptcData" title="struct IptcData"><span class="type">IptcData</span></a> object <em class="parameter"><code>data</code></em>
+.</p>
+<div class="refsect3">
+<a name="id-1.7.2.6.9.5"></a><h4>Parameters</h4>
+<div class="informaltable"><table width="100%" border="0">
+<colgroup>
+<col width="150px" class="parameters_name">
+<col class="parameters_description">
+<col width="200px" class="parameters_annotations">
+</colgroup>
 <tbody>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>data</code></em> :</span></p></td>
-<td> object to be populated with the loaded datasets
-</td>
-</tr>
-<tr>
-<td><p><span class="term"><em class="parameter"><code>buf</code></em> :</span></p></td>
-<td> data buffer to be parsed, containing IPTC data
-</td>
+<td class="parameter_name"><p>data</p></td>
+<td class="parameter_description"><p>object to be populated with the loaded datasets</p></td>
+<td class="parameter_annotations"> </td>
 </tr>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>size</code></em> :</span></p></td>
-<td> length of data buffer to be parsed
-</td>
+<td class="parameter_name"><p>buf</p></td>
+<td class="parameter_description"><p>data buffer to be parsed, containing IPTC data</p></td>
+<td class="parameter_annotations"> </td>
 </tr>
 <tr>
-<td><p><span class="term"><span class="emphasis"><em>Returns</em></span> :</span></p></td>
-<td> 0 on success, -1 on failure.  Note that in the failure
-case, some datasets may still have been added to <em class="parameter"><code>data</code></em>.
-</td>
+<td class="parameter_name"><p>size</p></td>
+<td class="parameter_description"><p>length of data buffer to be parsed</p></td>
+<td class="parameter_annotations"> </td>
 </tr>
 </tbody>
 </table></div>
 </div>
+<div class="refsect3">
+<a name="id-1.7.2.6.9.6"></a><h4>Returns</h4>
+<p> 0 on success, -1 on failure.  Note that in the failure
+case, some datasets may still have been added to <em class="parameter"><code>data</code></em>
+.</p>
+<p></p>
+</div>
+</div>
 <hr>
-<div class="refsect2" lang="en">
-<a name="iptc-data-save"></a><h3>iptc_data_save ()</h3>
-<pre class="programlisting">int                 iptc_data_save                      (<a class="link" href="libiptcdata-data.html#IptcData" title="IptcData">IptcData</a> *data,
-                                                         unsigned char **buf,
-                                                         unsigned int *size);</pre>
-<p>
-Outputs a collection of datasets as an IPTC bytestream.  No memory allocation
-is required in advance.  <em class="parameter"><code>buf</code></em> should point to a NULL pointer that will be set
-to the address of the output buffer by this function.  <em class="parameter"><code>size</code></em> will contain
-this buffer's length after completion.  The object <em class="parameter"><code>data</code></em> is unmodified by this
+<div class="refsect2">
+<a name="iptc-data-save"></a><h3>iptc_data_save ()</h3>
+<pre class="programlisting"><span class="returnvalue">int</span>
+iptc_data_save (<em class="parameter"><code><a class="link" href="libiptcdata-data.html#IptcData" title="struct IptcData"><span class="type">IptcData</span></a> *data</code></em>,
+                <em class="parameter"><code>unsigned <span class="type">char</span> **buf</code></em>,
+                <em class="parameter"><code>unsigned <span class="type">int</span> *size</code></em>);</pre>
+<p>Outputs a collection of datasets as an IPTC bytestream.  No memory allocation
+is required in advance.  <em class="parameter"><code>buf</code></em>
+ should point to a NULL pointer that will be set
+to the address of the output buffer by this function.  <em class="parameter"><code>size</code></em>
+ will contain
+this buffer's length after completion.  The object <em class="parameter"><code>data</code></em>
+ is unmodified by this
 function.  The application should free the output buffer using
-<a class="link" href="libiptcdata-data.html#iptc-data-free-buf" title="iptc_data_free_buf ()"><code class="function">iptc_data_free_buf()</code></a> when it is no longer needed.</p>
-<p>
-
-</p>
-<div class="variablelist"><table border="0">
-<col align="left" valign="top">
+<a class="link" href="libiptcdata-data.html#iptc-data-free-buf" title="iptc_data_free_buf ()"><code class="function">iptc_data_free_buf()</code></a> when it is no longer needed.</p>
+<div class="refsect3">
+<a name="id-1.7.2.6.10.5"></a><h4>Parameters</h4>
+<div class="informaltable"><table width="100%" border="0">
+<colgroup>
+<col width="150px" class="parameters_name">
+<col class="parameters_description">
+<col width="200px" class="parameters_annotations">
+</colgroup>
 <tbody>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>data</code></em> :</span></p></td>
-<td> collection of datasets to be saved
-</td>
+<td class="parameter_name"><p>data</p></td>
+<td class="parameter_description"><p>collection of datasets to be saved</p></td>
+<td class="parameter_annotations"> </td>
 </tr>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>buf</code></em> :</span></p></td>
-<td> pointer to a pointer that will hold the address of the output buffer
-</td>
-</tr>
-<tr>
-<td><p><span class="term"><em class="parameter"><code>size</code></em> :</span></p></td>
-<td> pointer to an integer that will hold the length of the output buffer
-</td>
+<td class="parameter_name"><p>buf</p></td>
+<td class="parameter_description"><p>pointer to a pointer that will hold the address of the output buffer</p></td>
+<td class="parameter_annotations"> </td>
 </tr>
 <tr>
-<td><p><span class="term"><span class="emphasis"><em>Returns</em></span> :</span></p></td>
-<td> 0 on success, -1 on failure.  In the failure case, <em class="parameter"><code>buf</code></em> should still
-be checked for a non-NULL value, and freed using <a class="link" href="libiptcdata-data.html#iptc-data-free-buf" title="iptc_data_free_buf ()"><code class="function">iptc_data_free_buf()</code></a> if
-necessary.
-</td>
+<td class="parameter_name"><p>size</p></td>
+<td class="parameter_description"><p>pointer to an integer that will hold the length of the output buffer</p></td>
+<td class="parameter_annotations"> </td>
 </tr>
 </tbody>
 </table></div>
 </div>
+<div class="refsect3">
+<a name="id-1.7.2.6.10.6"></a><h4>Returns</h4>
+<p> 0 on success, -1 on failure.  In the failure case, <em class="parameter"><code>buf</code></em>
+should still
+be checked for a non-NULL value, and freed using <a class="link" href="libiptcdata-data.html#iptc-data-free-buf" title="iptc_data_free_buf ()"><code class="function">iptc_data_free_buf()</code></a> if
+necessary.</p>
+<p></p>
+</div>
+</div>
 <hr>
-<div class="refsect2" lang="en">
-<a name="iptc-data-free-buf"></a><h3>iptc_data_free_buf ()</h3>
-<pre class="programlisting">void                iptc_data_free_buf                  (<a class="link" href="libiptcdata-data.html#IptcData" title="IptcData">IptcData</a> *data,
-                                                         unsigned char *buf);</pre>
-<p>
-Frees a temporary buffer created from an <a class="link" href="libiptcdata-data.html#IptcData" title="IptcData"><span class="type">IptcData</span></a> object by the
-<a class="link" href="libiptcdata-data.html#iptc-data-save" title="iptc_data_save ()"><code class="function">iptc_data_save()</code></a> function.</p>
-<p>
-
-</p>
-<div class="variablelist"><table border="0">
-<col align="left" valign="top">
+<div class="refsect2">
+<a name="iptc-data-free-buf"></a><h3>iptc_data_free_buf ()</h3>
+<pre class="programlisting"><span class="returnvalue">void</span>
+iptc_data_free_buf (<em class="parameter"><code><a class="link" href="libiptcdata-data.html#IptcData" title="struct IptcData"><span class="type">IptcData</span></a> *data</code></em>,
+                    <em class="parameter"><code>unsigned <span class="type">char</span> *buf</code></em>);</pre>
+<p>Frees a temporary buffer created from an <a class="link" href="libiptcdata-data.html#IptcData" title="struct IptcData"><span class="type">IptcData</span></a> object by the
+<a class="link" href="libiptcdata-data.html#iptc-data-save" title="iptc_data_save ()"><code class="function">iptc_data_save()</code></a> function.</p>
+<div class="refsect3">
+<a name="id-1.7.2.6.11.5"></a><h4>Parameters</h4>
+<div class="informaltable"><table width="100%" border="0">
+<colgroup>
+<col width="150px" class="parameters_name">
+<col class="parameters_description">
+<col width="200px" class="parameters_annotations">
+</colgroup>
 <tbody>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>data</code></em> :</span></p></td>
-<td> the <a class="link" href="libiptcdata-data.html#IptcData" title="IptcData"><span class="type">IptcData</span></a> object that allocated the buffer
-</td>
+<td class="parameter_name"><p>data</p></td>
+<td class="parameter_description"><p>the <a class="link" href="libiptcdata-data.html#IptcData" title="struct IptcData"><span class="type">IptcData</span></a> object that allocated the buffer</p></td>
+<td class="parameter_annotations"> </td>
 </tr>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>buf</code></em> :</span></p></td>
-<td> the buffer to free
-</td>
+<td class="parameter_name"><p>buf</p></td>
+<td class="parameter_description"><p>the buffer to free</p></td>
+<td class="parameter_annotations"> </td>
 </tr>
 </tbody>
 </table></div>
 </div>
+</div>
 <hr>
-<div class="refsect2" lang="en">
-<a name="iptc-data-get-dataset"></a><h3>iptc_data_get_dataset ()</h3>
-<pre class="programlisting"><a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="IptcDataSet">IptcDataSet</a>*        iptc_data_get_dataset               (<a class="link" href="libiptcdata-data.html#IptcData" title="IptcData">IptcData</a> *data,
-                                                         <a class="link" href="libiptcdata-tag.html#IptcRecord" title="enum IptcRecord">IptcRecord</a> record,
-                                                         <a class="link" href="libiptcdata-tag.html#IptcTag" title="enum IptcTag">IptcTag</a> tag);</pre>
-<p>
-Finds the first occurence of a dataset inside a collection with
+<div class="refsect2">
+<a name="iptc-data-get-dataset"></a><h3>iptc_data_get_dataset ()</h3>
+<pre class="programlisting"><a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="struct IptcDataSet"><span class="returnvalue">IptcDataSet</span></a> *
+iptc_data_get_dataset (<em class="parameter"><code><a class="link" href="libiptcdata-data.html#IptcData" title="struct IptcData"><span class="type">IptcData</span></a> *data</code></em>,
+                       <em class="parameter"><code><a class="link" href="libiptcdata-tag.html#IptcRecord" title="enum IptcRecord"><span class="type">IptcRecord</span></a> record</code></em>,
+                       <em class="parameter"><code><a class="link" href="libiptcdata-tag.html#IptcTag" title="enum IptcTag"><span class="type">IptcTag</span></a> tag</code></em>);</pre>
+<p>Finds the first occurence of a dataset inside a collection with
 the specified record and tag identifiers.</p>
-<p>
-
-</p>
-<div class="variablelist"><table border="0">
-<col align="left" valign="top">
+<div class="refsect3">
+<a name="id-1.7.2.6.12.5"></a><h4>Parameters</h4>
+<div class="informaltable"><table width="100%" border="0">
+<colgroup>
+<col width="150px" class="parameters_name">
+<col class="parameters_description">
+<col width="200px" class="parameters_annotations">
+</colgroup>
 <tbody>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>data</code></em> :</span></p></td>
-<td> collection to search
-</td>
+<td class="parameter_name"><p>data</p></td>
+<td class="parameter_description"><p>collection to search</p></td>
+<td class="parameter_annotations"> </td>
 </tr>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>record</code></em> :</span></p></td>
-<td> record identifier of dataset
-</td>
+<td class="parameter_name"><p>record</p></td>
+<td class="parameter_description"><p>record identifier of dataset</p></td>
+<td class="parameter_annotations"> </td>
 </tr>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>tag</code></em> :</span></p></td>
-<td> tag identifier (dataset number) of dataset
-</td>
-</tr>
-<tr>
-<td><p><span class="term"><span class="emphasis"><em>Returns</em></span> :</span></p></td>
-<td> pointer to dataset if found, NULL if no matching dataset found
-</td>
+<td class="parameter_name"><p>tag</p></td>
+<td class="parameter_description"><p>tag identifier (dataset number) of dataset</p></td>
+<td class="parameter_annotations"> </td>
 </tr>
 </tbody>
 </table></div>
 </div>
+<div class="refsect3">
+<a name="id-1.7.2.6.12.6"></a><h4>Returns</h4>
+<p> pointer to dataset if found, NULL if no matching dataset found</p>
+<p></p>
+</div>
+</div>
 <hr>
-<div class="refsect2" lang="en">
-<a name="iptc-data-get-next-dataset"></a><h3>iptc_data_get_next_dataset ()</h3>
-<pre class="programlisting"><a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="IptcDataSet">IptcDataSet</a>*        iptc_data_get_next_dataset          (<a class="link" href="libiptcdata-data.html#IptcData" title="IptcData">IptcData</a> *data,
-                                                         <a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="IptcDataSet">IptcDataSet</a> *ds,
-                                                         <a class="link" href="libiptcdata-tag.html#IptcRecord" title="enum IptcRecord">IptcRecord</a> record,
-                                                         <a class="link" href="libiptcdata-tag.html#IptcTag" title="enum IptcTag">IptcTag</a> tag);</pre>
-<p>
-Finds the next occurence of a dataset inside a collection with
-the specified record and tag identifiers following <em class="parameter"><code>ds</code></em>.  This is useful
+<div class="refsect2">
+<a name="iptc-data-get-next-dataset"></a><h3>iptc_data_get_next_dataset ()</h3>
+<pre class="programlisting"><a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="struct IptcDataSet"><span class="returnvalue">IptcDataSet</span></a> *
+iptc_data_get_next_dataset (<em class="parameter"><code><a class="link" href="libiptcdata-data.html#IptcData" title="struct IptcData"><span class="type">IptcData</span></a> *data</code></em>,
+                            <em class="parameter"><code><a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="struct IptcDataSet"><span class="type">IptcDataSet</span></a> *ds</code></em>,
+                            <em class="parameter"><code><a class="link" href="libiptcdata-tag.html#IptcRecord" title="enum IptcRecord"><span class="type">IptcRecord</span></a> record</code></em>,
+                            <em class="parameter"><code><a class="link" href="libiptcdata-tag.html#IptcTag" title="enum IptcTag"><span class="type">IptcTag</span></a> tag</code></em>);</pre>
+<p>Finds the next occurence of a dataset inside a collection with
+the specified record and tag identifiers following <em class="parameter"><code>ds</code></em>
+.  This is useful
 when a collection contains more than one dataset with the same record
 and tag identifier (for example, the keywords tag appears once for
-each keyword in the IPTC metadata).  When <em class="parameter"><code>ds</code></em> is NULL, this function
-is equivalent to <a class="link" href="libiptcdata-data.html#iptc-data-get-dataset" title="iptc_data_get_dataset ()"><code class="function">iptc_data_get_dataset()</code></a>.</p>
-<p>
-
-</p>
-<div class="variablelist"><table border="0">
-<col align="left" valign="top">
+each keyword in the IPTC metadata).  When <em class="parameter"><code>ds</code></em>
+ is NULL, this function
+is equivalent to <a class="link" href="libiptcdata-data.html#iptc-data-get-dataset" title="iptc_data_get_dataset ()"><code class="function">iptc_data_get_dataset()</code></a>.</p>
+<div class="refsect3">
+<a name="id-1.7.2.6.13.5"></a><h4>Parameters</h4>
+<div class="informaltable"><table width="100%" border="0">
+<colgroup>
+<col width="150px" class="parameters_name">
+<col class="parameters_description">
+<col width="200px" class="parameters_annotations">
+</colgroup>
 <tbody>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>data</code></em> :</span></p></td>
-<td> collection to search
-</td>
-</tr>
-<tr>
-<td><p><span class="term"><em class="parameter"><code>ds</code></em> :</span></p></td>
-<td> dataset where the search should originate (can be NULL)
-</td>
+<td class="parameter_name"><p>data</p></td>
+<td class="parameter_description"><p>collection to search</p></td>
+<td class="parameter_annotations"> </td>
 </tr>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>record</code></em> :</span></p></td>
-<td> record identifier of dataset
-</td>
+<td class="parameter_name"><p>ds</p></td>
+<td class="parameter_description"><p>dataset where the search should originate (can be NULL)</p></td>
+<td class="parameter_annotations"> </td>
 </tr>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>tag</code></em> :</span></p></td>
-<td> tag identifier (dataset number) of dataset
-</td>
+<td class="parameter_name"><p>record</p></td>
+<td class="parameter_description"><p>record identifier of dataset</p></td>
+<td class="parameter_annotations"> </td>
 </tr>
 <tr>
-<td><p><span class="term"><span class="emphasis"><em>Returns</em></span> :</span></p></td>
-<td> pointer to dataset if found, NULL if no matching dataset found
-</td>
+<td class="parameter_name"><p>tag</p></td>
+<td class="parameter_description"><p>tag identifier (dataset number) of dataset</p></td>
+<td class="parameter_annotations"> </td>
 </tr>
 </tbody>
 </table></div>
 </div>
+<div class="refsect3">
+<a name="id-1.7.2.6.13.6"></a><h4>Returns</h4>
+<p> pointer to dataset if found, NULL if no matching dataset found</p>
+<p></p>
+</div>
+</div>
 <hr>
-<div class="refsect2" lang="en">
-<a name="iptc-data-add-dataset"></a><h3>iptc_data_add_dataset ()</h3>
-<pre class="programlisting">int                 iptc_data_add_dataset               (<a class="link" href="libiptcdata-data.html#IptcData" title="IptcData">IptcData</a> *data,
-                                                         <a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="IptcDataSet">IptcDataSet</a> *ds);</pre>
-<p>
-Adds an <a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="IptcDataSet"><span class="type">IptcDataSet</span></a> at the end of an existing collection.  A
+<div class="refsect2">
+<a name="iptc-data-add-dataset"></a><h3>iptc_data_add_dataset ()</h3>
+<pre class="programlisting"><span class="returnvalue">int</span>
+iptc_data_add_dataset (<em class="parameter"><code><a class="link" href="libiptcdata-data.html#IptcData" title="struct IptcData"><span class="type">IptcData</span></a> *data</code></em>,
+                       <em class="parameter"><code><a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="struct IptcDataSet"><span class="type">IptcDataSet</span></a> *ds</code></em>);</pre>
+<p>Adds an <a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="struct IptcDataSet"><span class="type">IptcDataSet</span></a> at the end of an existing collection.  A
 dataset can only be a member of a single collection.  This
-function will increment the reference count of <em class="parameter"><code>dataset</code></em>, so if
-the application no longer intends to use <em class="parameter"><code>dataset</code></em> directly, it
-should call <a class="link" href="libiptcdata-dataset.html#iptc-dataset-unref" title="iptc_dataset_unref ()"><code class="function">iptc_dataset_unref()</code></a> immediately following this call.</p>
-<p>
-
-</p>
-<div class="variablelist"><table border="0">
-<col align="left" valign="top">
-<tbody>
-<tr>
-<td><p><span class="term"><em class="parameter"><code>data</code></em> :</span></p></td>
-<td> the collection to which the dataset will be added
-</td>
-</tr>
-<tr>
-<td><p><span class="term"><em class="parameter"><code>ds</code></em> :</span></p></td>
-<td> dataset to add
-</td>
-</tr>
-<tr>
-<td><p><span class="term"><span class="emphasis"><em>Returns</em></span> :</span></p></td>
-<td> 0 on success, -1 on error
-</td>
+function will increment the reference count of <em class="parameter"><code>dataset</code></em>
+, so if
+the application no longer intends to use <em class="parameter"><code>dataset</code></em>
+ directly, it
+should call <a class="link" href="libiptcdata-dataset.html#iptc-dataset-unref" title="iptc_dataset_unref ()"><code class="function">iptc_dataset_unref()</code></a> immediately following this call.</p>
+<div class="refsect3">
+<a name="id-1.7.2.6.14.5"></a><h4>Parameters</h4>
+<div class="informaltable"><table width="100%" border="0">
+<colgroup>
+<col width="150px" class="parameters_name">
+<col class="parameters_description">
+<col width="200px" class="parameters_annotations">
+</colgroup>
+<tbody>
+<tr>
+<td class="parameter_name"><p>data</p></td>
+<td class="parameter_description"><p>the collection to which the dataset will be added</p></td>
+<td class="parameter_annotations"> </td>
+</tr>
+<tr>
+<td class="parameter_name"><p>ds</p></td>
+<td class="parameter_description"><p>dataset to add</p></td>
+<td class="parameter_annotations"> </td>
 </tr>
 </tbody>
 </table></div>
 </div>
+<div class="refsect3">
+<a name="id-1.7.2.6.14.6"></a><h4>Returns</h4>
+<p> 0 on success, -1 on error</p>
+<p></p>
+</div>
+</div>
 <hr>
-<div class="refsect2" lang="en">
-<a name="iptc-data-add-dataset-before"></a><h3>iptc_data_add_dataset_before ()</h3>
-<pre class="programlisting">int                 iptc_data_add_dataset_before        (<a class="link" href="libiptcdata-data.html#IptcData" title="IptcData">IptcData</a> *data,
-                                                         <a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="IptcDataSet">IptcDataSet</a> *ds,
-                                                         <a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="IptcDataSet">IptcDataSet</a> *newds);</pre>
-<p>
-Same as <a class="link" href="libiptcdata-data.html#iptc-data-add-dataset" title="iptc_data_add_dataset ()"><code class="function">iptc_data_add_dataset()</code></a>, except the <em class="parameter"><code>dataset</code></em> will be added
-before an existing dataset <em class="parameter"><code>ds</code></em>, so that if they are enumerated,
-<em class="parameter"><code>newds</code></em> will appear before <em class="parameter"><code>ds</code></em> in the collection.  <em class="parameter"><code>ds</code></em> must be
+<div class="refsect2">
+<a name="iptc-data-add-dataset-before"></a><h3>iptc_data_add_dataset_before ()</h3>
+<pre class="programlisting"><span class="returnvalue">int</span>
+iptc_data_add_dataset_before (<em class="parameter"><code><a class="link" href="libiptcdata-data.html#IptcData" title="struct IptcData"><span class="type">IptcData</span></a> *data</code></em>,
+                              <em class="parameter"><code><a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="struct IptcDataSet"><span class="type">IptcDataSet</span></a> *ds</code></em>,
+                              <em class="parameter"><code><a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="struct IptcDataSet"><span class="type">IptcDataSet</span></a> *newds</code></em>);</pre>
+<p>Same as <a class="link" href="libiptcdata-data.html#iptc-data-add-dataset" title="iptc_data_add_dataset ()"><code class="function">iptc_data_add_dataset()</code></a>, except the <em class="parameter"><code>dataset</code></em>
+ will be added
+before an existing dataset <em class="parameter"><code>ds</code></em>
+, so that if they are enumerated,
+<em class="parameter"><code>newds</code></em>
+ will appear before <em class="parameter"><code>ds</code></em>
+ in the collection.  <em class="parameter"><code>ds</code></em>
+ must be
 a dataset already present in the collection.</p>
-<p>
-
-</p>
-<div class="variablelist"><table border="0">
-<col align="left" valign="top">
+<div class="refsect3">
+<a name="id-1.7.2.6.15.5"></a><h4>Parameters</h4>
+<div class="informaltable"><table width="100%" border="0">
+<colgroup>
+<col width="150px" class="parameters_name">
+<col class="parameters_description">
+<col width="200px" class="parameters_annotations">
+</colgroup>
 <tbody>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>data</code></em> :</span></p></td>
-<td> the collection to which the dataset will be added
-</td>
-</tr>
-<tr>
-<td><p><span class="term"><em class="parameter"><code>ds</code></em> :</span></p></td>
-<td> existing dataset before which <em class="parameter"><code>newds</code></em> will be added
-</td>
+<td class="parameter_name"><p>data</p></td>
+<td class="parameter_description"><p>the collection to which the dataset will be added</p></td>
+<td class="parameter_annotations"> </td>
 </tr>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>newds</code></em> :</span></p></td>
-<td> dataset to add
-</td>
+<td class="parameter_name"><p>ds</p></td>
+<td class="parameter_description"><p>existing dataset before which <em class="parameter"><code>newds</code></em>
+will be added</p></td>
+<td class="parameter_annotations"> </td>
 </tr>
 <tr>
-<td><p><span class="term"><span class="emphasis"><em>Returns</em></span> :</span></p></td>
-<td> 0 on success, -1 on error
-</td>
+<td class="parameter_name"><p>newds</p></td>
+<td class="parameter_description"><p>dataset to add</p></td>
+<td class="parameter_annotations"> </td>
 </tr>
 </tbody>
 </table></div>
 </div>
+<div class="refsect3">
+<a name="id-1.7.2.6.15.6"></a><h4>Returns</h4>
+<p> 0 on success, -1 on error</p>
+<p></p>
+</div>
+</div>
 <hr>
-<div class="refsect2" lang="en">
-<a name="iptc-data-add-dataset-after"></a><h3>iptc_data_add_dataset_after ()</h3>
-<pre class="programlisting">int                 iptc_data_add_dataset_after         (<a class="link" href="libiptcdata-data.html#IptcData" title="IptcData">IptcData</a> *data,
-                                                         <a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="IptcDataSet">IptcDataSet</a> *ds,
-                                                         <a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="IptcDataSet">IptcDataSet</a> *newds);</pre>
-<p>
-Same as <a class="link" href="libiptcdata-data.html#iptc-data-add-dataset" title="iptc_data_add_dataset ()"><code class="function">iptc_data_add_dataset()</code></a>, except the <em class="parameter"><code>dataset</code></em> will be added
-after an existing dataset <em class="parameter"><code>ds</code></em>, so that if they are enumerated,
-<em class="parameter"><code>newds</code></em> will appear after <em class="parameter"><code>ds</code></em> in the collection.  <em class="parameter"><code>ds</code></em> must be a
+<div class="refsect2">
+<a name="iptc-data-add-dataset-after"></a><h3>iptc_data_add_dataset_after ()</h3>
+<pre class="programlisting"><span class="returnvalue">int</span>
+iptc_data_add_dataset_after (<em class="parameter"><code><a class="link" href="libiptcdata-data.html#IptcData" title="struct IptcData"><span class="type">IptcData</span></a> *data</code></em>,
+                             <em class="parameter"><code><a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="struct IptcDataSet"><span class="type">IptcDataSet</span></a> *ds</code></em>,
+                             <em class="parameter"><code><a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="struct IptcDataSet"><span class="type">IptcDataSet</span></a> *newds</code></em>);</pre>
+<p>Same as <a class="link" href="libiptcdata-data.html#iptc-data-add-dataset" title="iptc_data_add_dataset ()"><code class="function">iptc_data_add_dataset()</code></a>, except the <em class="parameter"><code>dataset</code></em>
+ will be added
+after an existing dataset <em class="parameter"><code>ds</code></em>
+, so that if they are enumerated,
+<em class="parameter"><code>newds</code></em>
+ will appear after <em class="parameter"><code>ds</code></em>
+ in the collection.  <em class="parameter"><code>ds</code></em>
+ must be a
 dataset already present in the collection.</p>
-<p>
-
-</p>
-<div class="variablelist"><table border="0">
-<col align="left" valign="top">
+<div class="refsect3">
+<a name="id-1.7.2.6.16.5"></a><h4>Parameters</h4>
+<div class="informaltable"><table width="100%" border="0">
+<colgroup>
+<col width="150px" class="parameters_name">
+<col class="parameters_description">
+<col width="200px" class="parameters_annotations">
+</colgroup>
 <tbody>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>data</code></em> :</span></p></td>
-<td> the collection to which the dataset will be added
-</td>
-</tr>
-<tr>
-<td><p><span class="term"><em class="parameter"><code>ds</code></em> :</span></p></td>
-<td> existing dataset after which <em class="parameter"><code>newds</code></em> will be added
-</td>
+<td class="parameter_name"><p>data</p></td>
+<td class="parameter_description"><p>the collection to which the dataset will be added</p></td>
+<td class="parameter_annotations"> </td>
 </tr>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>newds</code></em> :</span></p></td>
-<td> dataset to add
-</td>
+<td class="parameter_name"><p>ds</p></td>
+<td class="parameter_description"><p>existing dataset after which <em class="parameter"><code>newds</code></em>
+will be added</p></td>
+<td class="parameter_annotations"> </td>
 </tr>
 <tr>
-<td><p><span class="term"><span class="emphasis"><em>Returns</em></span> :</span></p></td>
-<td> 0 on success, -1 on error
-</td>
+<td class="parameter_name"><p>newds</p></td>
+<td class="parameter_description"><p>dataset to add</p></td>
+<td class="parameter_annotations"> </td>
 </tr>
 </tbody>
 </table></div>
 </div>
+<div class="refsect3">
+<a name="id-1.7.2.6.16.6"></a><h4>Returns</h4>
+<p> 0 on success, -1 on error</p>
+<p></p>
+</div>
+</div>
 <hr>
-<div class="refsect2" lang="en">
-<a name="iptc-data-remove-dataset"></a><h3>iptc_data_remove_dataset ()</h3>
-<pre class="programlisting">int                 iptc_data_remove_dataset            (<a class="link" href="libiptcdata-data.html#IptcData" title="IptcData">IptcData</a> *data,
-                                                         <a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="IptcDataSet">IptcDataSet</a> *ds);</pre>
-<p>
-Removes a dataset from a collection.  This function also calls
-<a class="link" href="libiptcdata-dataset.html#iptc-dataset-unref" title="iptc_dataset_unref ()"><code class="function">iptc_dataset_unref()</code></a> on <em class="parameter"><code>ds</code></em>.</p>
-<p>
-
-</p>
-<div class="variablelist"><table border="0">
-<col align="left" valign="top">
+<div class="refsect2">
+<a name="iptc-data-remove-dataset"></a><h3>iptc_data_remove_dataset ()</h3>
+<pre class="programlisting"><span class="returnvalue">int</span>
+iptc_data_remove_dataset (<em class="parameter"><code><a class="link" href="libiptcdata-data.html#IptcData" title="struct IptcData"><span class="type">IptcData</span></a> *data</code></em>,
+                          <em class="parameter"><code><a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="struct IptcDataSet"><span class="type">IptcDataSet</span></a> *ds</code></em>);</pre>
+<p>Removes a dataset from a collection.  This function also calls
+<a class="link" href="libiptcdata-dataset.html#iptc-dataset-unref" title="iptc_dataset_unref ()"><code class="function">iptc_dataset_unref()</code></a> on <em class="parameter"><code>ds</code></em>
+.</p>
+<div class="refsect3">
+<a name="id-1.7.2.6.17.5"></a><h4>Parameters</h4>
+<div class="informaltable"><table width="100%" border="0">
+<colgroup>
+<col width="150px" class="parameters_name">
+<col class="parameters_description">
+<col width="200px" class="parameters_annotations">
+</colgroup>
 <tbody>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>data</code></em> :</span></p></td>
-<td> the collection from which to remove an entry
-</td>
+<td class="parameter_name"><p>data</p></td>
+<td class="parameter_description"><p>the collection from which to remove an entry</p></td>
+<td class="parameter_annotations"> </td>
 </tr>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>ds</code></em> :</span></p></td>
-<td> the dataset to remove from the collection
-</td>
-</tr>
-<tr>
-<td><p><span class="term"><span class="emphasis"><em>Returns</em></span> :</span></p></td>
-<td> 0 on success, -1 on error
-</td>
+<td class="parameter_name"><p>ds</p></td>
+<td class="parameter_description"><p>the dataset to remove from the collection</p></td>
+<td class="parameter_annotations"> </td>
 </tr>
 </tbody>
 </table></div>
 </div>
+<div class="refsect3">
+<a name="id-1.7.2.6.17.6"></a><h4>Returns</h4>
+<p> 0 on success, -1 on error</p>
+<p></p>
+</div>
+</div>
 <hr>
-<div class="refsect2" lang="en">
-<a name="IptcDataForeachDataSetFunc"></a><h3>IptcDataForeachDataSetFunc ()</h3>
-<pre class="programlisting">void                (*IptcDataForeachDataSetFunc)       (<a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="IptcDataSet">IptcDataSet</a> *dataset,
-                                                         void *user_data);</pre>
+<div class="refsect2">
+<a name="IptcDataForeachDataSetFunc"></a><h3>IptcDataForeachDataSetFunc ()</h3>
+<pre class="programlisting"><span class="returnvalue">void</span>
+<span class="c_punctuation">(</span>*IptcDataForeachDataSetFunc<span class="c_punctuation">)</span> (<em class="parameter"><code><a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="struct IptcDataSet"><span class="type">IptcDataSet</span></a> *dataset</code></em>,
+                               <em class="parameter"><code><span class="type">void</span> *user_data</code></em>);</pre>
 <p>
 Application callback executed for each dataset from
-<a class="link" href="libiptcdata-data.html#iptc-data-foreach-dataset" title="iptc_data_foreach_dataset ()"><code class="function">iptc_data_foreach_dataset()</code></a>.
+<a class="link" href="libiptcdata-data.html#iptc-data-foreach-dataset" title="iptc_data_foreach_dataset ()"><code class="function">iptc_data_foreach_dataset()</code></a>.
 </p>
-<div class="variablelist"><table border="0">
-<col align="left" valign="top">
+<div class="refsect3">
+<a name="id-1.7.2.6.18.5"></a><h4>Parameters</h4>
+<div class="informaltable"><table width="100%" border="0">
+<colgroup>
+<col width="150px" class="parameters_name">
+<col class="parameters_description">
+<col width="200px" class="parameters_annotations">
+</colgroup>
 <tbody>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>dataset</code></em> :</span></p></td>
-<td>the dataset
-</td>
+<td class="parameter_name"><p>dataset</p></td>
+<td class="parameter_description"><p>the dataset</p></td>
+<td class="parameter_annotations"> </td>
 </tr>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>user_data</code></em> :</span></p></td>
-<td>the same <em class="parameter"><code>user_data</code></em> passed to <a class="link" href="libiptcdata-data.html#iptc-data-foreach-dataset" title="iptc_data_foreach_dataset ()"><code class="function">iptc_data_foreach_dataset()</code></a>
-
-
-</td>
+<td class="parameter_name"><p>user_data</p></td>
+<td class="parameter_description"><p>the same <em class="parameter"><code>user_data</code></em>
+passed to <a class="link" href="libiptcdata-data.html#iptc-data-foreach-dataset" title="iptc_data_foreach_dataset ()"><code class="function">iptc_data_foreach_dataset()</code></a></p></td>
+<td class="parameter_annotations"> </td>
 </tr>
 </tbody>
 </table></div>
 </div>
+</div>
 <hr>
-<div class="refsect2" lang="en">
-<a name="iptc-data-foreach-dataset"></a><h3>iptc_data_foreach_dataset ()</h3>
-<pre class="programlisting">void                iptc_data_foreach_dataset           (<a class="link" href="libiptcdata-data.html#IptcData" title="IptcData">IptcData</a> *data,
-                                                         <a class="link" href="libiptcdata-data.html#IptcDataForeachDataSetFunc" title="IptcDataForeachDataSetFunc ()">IptcDataForeachDataSetFunc</a> func,
-                                                         void *user_data);</pre>
-<p>
-Iterates through each dataset in the collection and calls the
+<div class="refsect2">
+<a name="iptc-data-foreach-dataset"></a><h3>iptc_data_foreach_dataset ()</h3>
+<pre class="programlisting"><span class="returnvalue">void</span>
+iptc_data_foreach_dataset (<em class="parameter"><code><a class="link" href="libiptcdata-data.html#IptcData" title="struct IptcData"><span class="type">IptcData</span></a> *data</code></em>,
+                           <em class="parameter"><code><a class="link" href="libiptcdata-data.html#IptcDataForeachDataSetFunc" title="IptcDataForeachDataSetFunc ()"><span class="type">IptcDataForeachDataSetFunc</span></a> func</code></em>,
+                           <em class="parameter"><code><span class="type">void</span> *user_data</code></em>);</pre>
+<p>Iterates through each dataset in the collection and calls the
 callback function on that dataset.</p>
-<p>
-
-</p>
-<div class="variablelist"><table border="0">
-<col align="left" valign="top">
+<div class="refsect3">
+<a name="id-1.7.2.6.19.5"></a><h4>Parameters</h4>
+<div class="informaltable"><table width="100%" border="0">
+<colgroup>
+<col width="150px" class="parameters_name">
+<col class="parameters_description">
+<col width="200px" class="parameters_annotations">
+</colgroup>
 <tbody>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>data</code></em> :</span></p></td>
-<td> collection through which to iterate
-</td>
+<td class="parameter_name"><p>data</p></td>
+<td class="parameter_description"><p>collection through which to iterate</p></td>
+<td class="parameter_annotations"> </td>
 </tr>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>func</code></em> :</span></p></td>
-<td> callback function
-</td>
+<td class="parameter_name"><p>func</p></td>
+<td class="parameter_description"><p>callback function</p></td>
+<td class="parameter_annotations"> </td>
 </tr>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>user_data</code></em> :</span></p></td>
-<td> arbitrary user data to be passed to the callback
-</td>
+<td class="parameter_name"><p>user_data</p></td>
+<td class="parameter_description"><p>arbitrary user data to be passed to the callback</p></td>
+<td class="parameter_annotations"> </td>
 </tr>
 </tbody>
 </table></div>
 </div>
+</div>
 <hr>
-<div class="refsect2" lang="en">
-<a name="iptc-data-sort"></a><h3>iptc_data_sort ()</h3>
-<pre class="programlisting">void                iptc_data_sort                      (<a class="link" href="libiptcdata-data.html#IptcData" title="IptcData">IptcData</a> *data);</pre>
-<p>
-Sorts a collection of datasets in ascending order first by record
+<div class="refsect2">
+<a name="iptc-data-sort"></a><h3>iptc_data_sort ()</h3>
+<pre class="programlisting"><span class="returnvalue">void</span>
+iptc_data_sort (<em class="parameter"><code><a class="link" href="libiptcdata-data.html#IptcData" title="struct IptcData"><span class="type">IptcData</span></a> *data</code></em>);</pre>
+<p>Sorts a collection of datasets in ascending order first by record
 number and second by tag number.  It can be useful to call this
 function before saving IPTC data in order to maintain a more
 organized file.</p>
-<p>
-
-</p>
-<div class="variablelist"><table border="0">
-<col align="left" valign="top">
+<div class="refsect3">
+<a name="id-1.7.2.6.20.5"></a><h4>Parameters</h4>
+<div class="informaltable"><table width="100%" border="0">
+<colgroup>
+<col width="150px" class="parameters_name">
+<col class="parameters_description">
+<col width="200px" class="parameters_annotations">
+</colgroup>
 <tbody><tr>
-<td><p><span class="term"><em class="parameter"><code>data</code></em> :</span></p></td>
-<td> collection of datasets to sort
-</td>
+<td class="parameter_name"><p>data</p></td>
+<td class="parameter_description"><p>collection of datasets to sort</p></td>
+<td class="parameter_annotations"> </td>
 </tr></tbody>
 </table></div>
 </div>
-<hr>
-<div class="refsect2" lang="en">
-<a name="IptcEncoding"></a><h3>enum IptcEncoding</h3>
-<pre class="programlisting">typedef enum {
-	IPTC_ENCODING_UNKNOWN = 0,
-	IPTC_ENCODING_UNSPECIFIED = 1,
-	IPTC_ENCODING_UTF8 = 2
-} IptcEncoding;
-</pre>
-<p>
-
-</p>
 </div>
 <hr>
-<div class="refsect2" lang="en">
-<a name="iptc-data-get-encoding"></a><h3>iptc_data_get_encoding ()</h3>
-<pre class="programlisting"><a class="link" href="libiptcdata-data.html#IptcEncoding" title="enum IptcEncoding">IptcEncoding</a>        iptc_data_get_encoding              (<a class="link" href="libiptcdata-data.html#IptcData" title="IptcData">IptcData</a> *data);</pre>
-<p>
-Identifies the character encoding of the collection of datasets as
+<div class="refsect2">
+<a name="iptc-data-get-encoding"></a><h3>iptc_data_get_encoding ()</h3>
+<pre class="programlisting"><a class="link" href="libiptcdata-data.html#IptcEncoding" title="enum IptcEncoding"><span class="returnvalue">IptcEncoding</span></a>
+iptc_data_get_encoding (<em class="parameter"><code><a class="link" href="libiptcdata-data.html#IptcData" title="struct IptcData"><span class="type">IptcData</span></a> *data</code></em>);</pre>
+<p>Identifies the character encoding of the collection of datasets as
 specified by the "character set" dataset (1:90).  The specification
 allows this dataset to contain control sequences from the ISO 2022
 standard.  Unfortunately, this standard is very complicated and
@@ -791,82 +997,77 @@ generally not used by application writer
 attempt to decode any possible any possible control sequence, this
 function only attempts to recognize the control sequence that identifies
 the UTF-8 character set.  If found, this function will return
-<span class="type">IPTC_ENCODING_UTF8</span>.  All character-based datasets in record 2 and
+<a class="link" href="libiptcdata-data.html#IPTC-ENCODING-UTF8:CAPS"><span class="type">IPTC_ENCODING_UTF8</span></a>.  All character-based datasets in record 2 and
 higher are then expected to contain data encoded in the UTF-8
 character set.  Otherwise, this function will return
-<span class="type">IPTC_ENCODING_UNKNOWN</span>, meaning that any other character set
+<a class="link" href="libiptcdata-data.html#IPTC-ENCODING-UNKNOWN:CAPS"><span class="type">IPTC_ENCODING_UNKNOWN</span></a>, meaning that any other character set
 might be used, including ISO 2022 control sequences that have not
 been decoded.  If dataset 1:90 is not present, this function returns
-<span class="type">IPTC_ENCODING_UNSPECIFIED</span>, in which case character-based datasets
+<a class="link" href="libiptcdata-data.html#IPTC-ENCODING-UNSPECIFIED:CAPS"><span class="type">IPTC_ENCODING_UNSPECIFIED</span></a>, in which case character-based datasets
 will usually be plain ASCII, although broken applications may have
 used some other encoding.</p>
-<p>
-
-</p>
-<div class="variablelist"><table border="0">
-<col align="left" valign="top">
-<tbody>
-<tr>
-<td><p><span class="term"><em class="parameter"><code>data</code></em> :</span></p></td>
-<td> collection of datasets
-</td>
-</tr>
-<tr>
-<td><p><span class="term"><span class="emphasis"><em>Returns</em></span> :</span></p></td>
-<td> <span class="type">IPTC_ENCODING_UTF8</span>, <span class="type">IPTC_ENCODING_UNKNOWN</span>, or
-<span class="type">IPTC_ENCODING_UNSPECIFIED</span>.
-</td>
-</tr>
-</tbody>
+<div class="refsect3">
+<a name="id-1.7.2.6.21.5"></a><h4>Parameters</h4>
+<div class="informaltable"><table width="100%" border="0">
+<colgroup>
+<col width="150px" class="parameters_name">
+<col class="parameters_description">
+<col width="200px" class="parameters_annotations">
+</colgroup>
+<tbody><tr>
+<td class="parameter_name"><p>data</p></td>
+<td class="parameter_description"><p>collection of datasets</p></td>
+<td class="parameter_annotations"> </td>
+</tr></tbody>
 </table></div>
 </div>
+<div class="refsect3">
+<a name="id-1.7.2.6.21.6"></a><h4>Returns</h4>
+<p> <a class="link" href="libiptcdata-data.html#IPTC-ENCODING-UTF8:CAPS"><span class="type">IPTC_ENCODING_UTF8</span></a>, <a class="link" href="libiptcdata-data.html#IPTC-ENCODING-UNKNOWN:CAPS"><span class="type">IPTC_ENCODING_UNKNOWN</span></a>, or
+<a class="link" href="libiptcdata-data.html#IPTC-ENCODING-UNSPECIFIED:CAPS"><span class="type">IPTC_ENCODING_UNSPECIFIED</span></a>.</p>
+<p></p>
+</div>
+</div>
 <hr>
-<div class="refsect2" lang="en">
-<a name="iptc-data-set-encoding-utf8"></a><h3>iptc_data_set_encoding_utf8 ()</h3>
-<pre class="programlisting">int                 iptc_data_set_encoding_utf8         (<a class="link" href="libiptcdata-data.html#IptcData" title="IptcData">IptcData</a> *data);</pre>
-<p>
-Sets the contents of the "character set" dataset (1:90) to contain
+<div class="refsect2">
+<a name="iptc-data-set-encoding-utf8"></a><h3>iptc_data_set_encoding_utf8 ()</h3>
+<pre class="programlisting"><span class="returnvalue">int</span>
+iptc_data_set_encoding_utf8 (<em class="parameter"><code><a class="link" href="libiptcdata-data.html#IptcData" title="struct IptcData"><span class="type">IptcData</span></a> *data</code></em>);</pre>
+<p>Sets the contents of the "character set" dataset (1:90) to contain
 the control sequence that indicates UTF-8 as the character encoding
 for any character-based datasets in record 2 or higher.  If dataset
 1:90 is not present, it will be added to the collection.  Any prior
 value of dataset 1:90 will be overwritten by this function.
 Note that some third-party applications (notably Picasa) will ignore
 all your IPTC data if this option is set.</p>
-<p>
-
-</p>
-<div class="variablelist"><table border="0">
-<col align="left" valign="top">
-<tbody>
-<tr>
-<td><p><span class="term"><em class="parameter"><code>data</code></em> :</span></p></td>
-<td> collection of datasets for which to specify the encoding
-</td>
-</tr>
-<tr>
-<td><p><span class="term"><span class="emphasis"><em>Returns</em></span> :</span></p></td>
-<td> 0 on success, -1 on failure.
-</td>
-</tr>
-</tbody>
+<div class="refsect3">
+<a name="id-1.7.2.6.22.5"></a><h4>Parameters</h4>
+<div class="informaltable"><table width="100%" border="0">
+<colgroup>
+<col width="150px" class="parameters_name">
+<col class="parameters_description">
+<col width="200px" class="parameters_annotations">
+</colgroup>
+<tbody><tr>
+<td class="parameter_name"><p>data</p></td>
+<td class="parameter_description"><p>collection of datasets for which to specify the encoding</p></td>
+<td class="parameter_annotations"> </td>
+</tr></tbody>
 </table></div>
 </div>
-<hr>
-<div class="refsect2" lang="en">
-<a name="IPTC-IIM-VERSION:CAPS"></a><h3>IPTC_IIM_VERSION</h3>
-<pre class="programlisting">#define IPTC_IIM_VERSION	4
-</pre>
-<p>
-The version of the IPTC IIM specification implemented by this library.
-</p>
+<div class="refsect3">
+<a name="id-1.7.2.6.22.6"></a><h4>Returns</h4>
+<p> 0 on success, -1 on failure.</p>
+<p></p>
+</div>
 </div>
 <hr>
-<div class="refsect2" lang="en">
-<a name="iptc-data-set-version"></a><h3>iptc_data_set_version ()</h3>
-<pre class="programlisting">int                 iptc_data_set_version               (<a class="link" href="libiptcdata-data.html#IptcData" title="IptcData">IptcData</a> *data,
-                                                         unsigned int version);</pre>
-<p>
-Specifies the version of the IIM specification used by this library by
+<div class="refsect2">
+<a name="iptc-data-set-version"></a><h3>iptc_data_set_version ()</h3>
+<pre class="programlisting"><span class="returnvalue">int</span>
+iptc_data_set_version (<em class="parameter"><code><a class="link" href="libiptcdata-data.html#IptcData" title="struct IptcData"><span class="type">IptcData</span></a> *data</code></em>,
+                       <em class="parameter"><code>unsigned <span class="type">int</span> version</code></em>);</pre>
+<p>Specifies the version of the IIM specification used by this library by
 setting the value of datasets 1:00 and 2:00.  It is recommended to set the
 version number to <a class="link" href="libiptcdata-data.html#IPTC-IIM-VERSION:CAPS" title="IPTC_IIM_VERSION"><span class="type">IPTC_IIM_VERSION</span></a>, which specifies the version
 implemented by this library (currently 4).  If datasets 1:00 or 2:00 are
@@ -875,209 +1076,314 @@ the datasets will be overwritten by this
 compliance with the standard, this function should be called before
 saving a collection of datasets.  However, in practice, some applications
 (notably Picasa) will ignore all your IPTC data if this option is set.</p>
-<p>
-
-</p>
-<div class="variablelist"><table border="0">
-<col align="left" valign="top">
+<div class="refsect3">
+<a name="id-1.7.2.6.23.5"></a><h4>Parameters</h4>
+<div class="informaltable"><table width="100%" border="0">
+<colgroup>
+<col width="150px" class="parameters_name">
+<col class="parameters_description">
+<col width="200px" class="parameters_annotations">
+</colgroup>
 <tbody>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>data</code></em> :</span></p></td>
-<td> collection of datasets for which to specify the version
-</td>
+<td class="parameter_name"><p>data</p></td>
+<td class="parameter_description"><p>collection of datasets for which to specify the version</p></td>
+<td class="parameter_annotations"> </td>
 </tr>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>version</code></em> :</span></p></td>
-<td> version number to write
-</td>
-</tr>
-<tr>
-<td><p><span class="term"><span class="emphasis"><em>Returns</em></span> :</span></p></td>
-<td> 0 on success, -1 on failure.
-</td>
+<td class="parameter_name"><p>version</p></td>
+<td class="parameter_description"><p>version number to write</p></td>
+<td class="parameter_annotations"> </td>
 </tr>
 </tbody>
 </table></div>
 </div>
+<div class="refsect3">
+<a name="id-1.7.2.6.23.6"></a><h4>Returns</h4>
+<p> 0 on success, -1 on failure.</p>
+<p></p>
+</div>
+</div>
 <hr>
-<div class="refsect2" lang="en">
-<a name="iptc-data-add-dataset-with-value"></a><h3>iptc_data_add_dataset_with_value ()</h3>
-<pre class="programlisting">int                 iptc_data_add_dataset_with_value    (<a class="link" href="libiptcdata-data.html#IptcData" title="IptcData">IptcData</a> *data,
-                                                         <a class="link" href="libiptcdata-tag.html#IptcRecord" title="enum IptcRecord">IptcRecord</a> record,
-                                                         <a class="link" href="libiptcdata-tag.html#IptcTag" title="enum IptcTag">IptcTag</a> tag,
-                                                         unsigned int value,
-                                                         <a class="link" href="libiptcdata-dataset.html#IptcValidate" title="enum IptcValidate">IptcValidate</a> validate);</pre>
-<p>
-This is a convenience function that creates a new dataset with the given
+<div class="refsect2">
+<a name="iptc-data-add-dataset-with-value"></a><h3>iptc_data_add_dataset_with_value ()</h3>
+<pre class="programlisting"><span class="returnvalue">int</span>
+iptc_data_add_dataset_with_value (<em class="parameter"><code><a class="link" href="libiptcdata-data.html#IptcData" title="struct IptcData"><span class="type">IptcData</span></a> *data</code></em>,
+                                  <em class="parameter"><code><a class="link" href="libiptcdata-tag.html#IptcRecord" title="enum IptcRecord"><span class="type">IptcRecord</span></a> record</code></em>,
+                                  <em class="parameter"><code><a class="link" href="libiptcdata-tag.html#IptcTag" title="enum IptcTag"><span class="type">IptcTag</span></a> tag</code></em>,
+                                  <em class="parameter"><code>unsigned <span class="type">int</span> value</code></em>,
+                                  <em class="parameter"><code><a class="link" href="libiptcdata-dataset.html#IptcValidate" title="enum IptcValidate"><span class="type">IptcValidate</span></a> validate</code></em>);</pre>
+<p>This is a convenience function that creates a new dataset with the given
 record and tag, adds it to the specified collection of datasets, and
 stores the given numeric value as the contents of the dataset.  It is
-equivalent to calling this sequence of functions: <a class="link" href="libiptcdata-dataset.html#iptc-dataset-new" title="iptc_dataset_new ()"><code class="function">iptc_dataset_new()</code></a>,
-<a class="link" href="libiptcdata-dataset.html#iptc-dataset-set-tag" title="iptc_dataset_set_tag ()"><code class="function">iptc_dataset_set_tag()</code></a>, <a class="link" href="libiptcdata-data.html#iptc-data-add-dataset" title="iptc_data_add_dataset ()"><code class="function">iptc_data_add_dataset()</code></a>,
-and <a class="link" href="libiptcdata-dataset.html#iptc-dataset-set-value" title="iptc_dataset_set_value ()"><code class="function">iptc_dataset_set_value()</code></a>.</p>
-<p>
-
-</p>
-<div class="variablelist"><table border="0">
-<col align="left" valign="top">
+equivalent to calling this sequence of functions: <a class="link" href="libiptcdata-dataset.html#iptc-dataset-new" title="iptc_dataset_new ()"><code class="function">iptc_dataset_new()</code></a>,
+<a class="link" href="libiptcdata-dataset.html#iptc-dataset-set-tag" title="iptc_dataset_set_tag ()"><code class="function">iptc_dataset_set_tag()</code></a>, <a class="link" href="libiptcdata-data.html#iptc-data-add-dataset" title="iptc_data_add_dataset ()"><code class="function">iptc_data_add_dataset()</code></a>,
+and <a class="link" href="libiptcdata-dataset.html#iptc-dataset-set-value" title="iptc_dataset_set_value ()"><code class="function">iptc_dataset_set_value()</code></a>.</p>
+<div class="refsect3">
+<a name="id-1.7.2.6.24.5"></a><h4>Parameters</h4>
+<div class="informaltable"><table width="100%" border="0">
+<colgroup>
+<col width="150px" class="parameters_name">
+<col class="parameters_description">
+<col width="200px" class="parameters_annotations">
+</colgroup>
 <tbody>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>data</code></em> :</span></p></td>
-<td> collection to which the new dataset should be added
-</td>
-</tr>
-<tr>
-<td><p><span class="term"><em class="parameter"><code>record</code></em> :</span></p></td>
-<td> record number of the dataset to be added
-</td>
+<td class="parameter_name"><p>data</p></td>
+<td class="parameter_description"><p>collection to which the new dataset should be added</p></td>
+<td class="parameter_annotations"> </td>
 </tr>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>tag</code></em> :</span></p></td>
-<td> tag (dataset number) of the dataset to be added
-</td>
+<td class="parameter_name"><p>record</p></td>
+<td class="parameter_description"><p>record number of the dataset to be added</p></td>
+<td class="parameter_annotations"> </td>
 </tr>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>value</code></em> :</span></p></td>
-<td> value for the dataset
-</td>
+<td class="parameter_name"><p>tag</p></td>
+<td class="parameter_description"><p>tag (dataset number) of the dataset to be added</p></td>
+<td class="parameter_annotations"> </td>
 </tr>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>validate</code></em> :</span></p></td>
-<td> whether or not the passed value should be validated against
-the IPTC specification for this dataset's tag.
-</td>
+<td class="parameter_name"><p>value</p></td>
+<td class="parameter_description"><p>value for the dataset</p></td>
+<td class="parameter_annotations"> </td>
 </tr>
 <tr>
-<td><p><span class="term"><span class="emphasis"><em>Returns</em></span> :</span></p></td>
-<td> -1 on error, 0 if validation failed, the number of bytes copied
-on success
-</td>
+<td class="parameter_name"><p>validate</p></td>
+<td class="parameter_description"><p>whether or not the passed value should be validated against
+the IPTC specification for this dataset's tag.</p></td>
+<td class="parameter_annotations"> </td>
 </tr>
 </tbody>
 </table></div>
 </div>
+<div class="refsect3">
+<a name="id-1.7.2.6.24.6"></a><h4>Returns</h4>
+<p> -1 on error, 0 if validation failed, the number of bytes copied
+on success</p>
+<p></p>
+</div>
+</div>
 <hr>
-<div class="refsect2" lang="en">
-<a name="iptc-data-add-dataset-with-contents"></a><h3>iptc_data_add_dataset_with_contents ()</h3>
-<pre class="programlisting">int                 iptc_data_add_dataset_with_contents (<a class="link" href="libiptcdata-data.html#IptcData" title="IptcData">IptcData</a> *data,
-                                                         <a class="link" href="libiptcdata-tag.html#IptcRecord" title="enum IptcRecord">IptcRecord</a> record,
-                                                         <a class="link" href="libiptcdata-tag.html#IptcTag" title="enum IptcTag">IptcTag</a> tag,
-                                                         unsigned char *buf,
-                                                         unsigned int size,
-                                                         <a class="link" href="libiptcdata-dataset.html#IptcValidate" title="enum IptcValidate">IptcValidate</a> validate);</pre>
-<p>
-This is a convenience function that creates a new dataset with the given
+<div class="refsect2">
+<a name="iptc-data-add-dataset-with-contents"></a><h3>iptc_data_add_dataset_with_contents ()</h3>
+<pre class="programlisting"><span class="returnvalue">int</span>
+iptc_data_add_dataset_with_contents (<em class="parameter"><code><a class="link" href="libiptcdata-data.html#IptcData" title="struct IptcData"><span class="type">IptcData</span></a> *data</code></em>,
+                                     <em class="parameter"><code><a class="link" href="libiptcdata-tag.html#IptcRecord" title="enum IptcRecord"><span class="type">IptcRecord</span></a> record</code></em>,
+                                     <em class="parameter"><code><a class="link" href="libiptcdata-tag.html#IptcTag" title="enum IptcTag"><span class="type">IptcTag</span></a> tag</code></em>,
+                                     <em class="parameter"><code>const unsigned <span class="type">char</span> *buf</code></em>,
+                                     <em class="parameter"><code>unsigned <span class="type">int</span> size</code></em>,
+                                     <em class="parameter"><code><a class="link" href="libiptcdata-dataset.html#IptcValidate" title="enum IptcValidate"><span class="type">IptcValidate</span></a> validate</code></em>);</pre>
+<p>This is a convenience function that creates a new dataset with the given
 record and tag, adds it to the specified collection of datasets, and
 stores a copy of the given data buffer as the contents of the dataset.
-It is equivalent to calling this sequence of functions: <a class="link" href="libiptcdata-dataset.html#iptc-dataset-new" title="iptc_dataset_new ()"><code class="function">iptc_dataset_new()</code></a>,
-<a class="link" href="libiptcdata-dataset.html#iptc-dataset-set-tag" title="iptc_dataset_set_tag ()"><code class="function">iptc_dataset_set_tag()</code></a>, <a class="link" href="libiptcdata-data.html#iptc-data-add-dataset" title="iptc_data_add_dataset ()"><code class="function">iptc_data_add_dataset()</code></a>,
-and <a class="link" href="libiptcdata-dataset.html#iptc-dataset-set-data" title="iptc_dataset_set_data ()"><code class="function">iptc_dataset_set_data()</code></a>.</p>
-<p>
-
-</p>
-<div class="variablelist"><table border="0">
-<col align="left" valign="top">
+It is equivalent to calling this sequence of functions: <a class="link" href="libiptcdata-dataset.html#iptc-dataset-new" title="iptc_dataset_new ()"><code class="function">iptc_dataset_new()</code></a>,
+<a class="link" href="libiptcdata-dataset.html#iptc-dataset-set-tag" title="iptc_dataset_set_tag ()"><code class="function">iptc_dataset_set_tag()</code></a>, <a class="link" href="libiptcdata-data.html#iptc-data-add-dataset" title="iptc_data_add_dataset ()"><code class="function">iptc_data_add_dataset()</code></a>,
+and <a class="link" href="libiptcdata-dataset.html#iptc-dataset-set-data" title="iptc_dataset_set_data ()"><code class="function">iptc_dataset_set_data()</code></a>.</p>
+<div class="refsect3">
+<a name="id-1.7.2.6.25.5"></a><h4>Parameters</h4>
+<div class="informaltable"><table width="100%" border="0">
+<colgroup>
+<col width="150px" class="parameters_name">
+<col class="parameters_description">
+<col width="200px" class="parameters_annotations">
+</colgroup>
 <tbody>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>data</code></em> :</span></p></td>
-<td> collection to which the new dataset should be added
-</td>
+<td class="parameter_name"><p>data</p></td>
+<td class="parameter_description"><p>collection to which the new dataset should be added</p></td>
+<td class="parameter_annotations"> </td>
 </tr>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>record</code></em> :</span></p></td>
-<td> record number of the dataset to be added
-</td>
+<td class="parameter_name"><p>record</p></td>
+<td class="parameter_description"><p>record number of the dataset to be added</p></td>
+<td class="parameter_annotations"> </td>
 </tr>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>tag</code></em> :</span></p></td>
-<td> tag (dataset number) of the dataset to be added
-</td>
+<td class="parameter_name"><p>tag</p></td>
+<td class="parameter_description"><p>tag (dataset number) of the dataset to be added</p></td>
+<td class="parameter_annotations"> </td>
 </tr>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>buf</code></em> :</span></p></td>
-<td> buffer containing the value
-</td>
+<td class="parameter_name"><p>buf</p></td>
+<td class="parameter_description"><p>buffer containing the value</p></td>
+<td class="parameter_annotations"> </td>
 </tr>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>size</code></em> :</span></p></td>
-<td> number of bytes to copy
-</td>
+<td class="parameter_name"><p>size</p></td>
+<td class="parameter_description"><p>number of bytes to copy</p></td>
+<td class="parameter_annotations"> </td>
 </tr>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>validate</code></em> :</span></p></td>
-<td> whether or not the passed value should be validated against
-the IPTC specification for this dataset's tag.
-</td>
+<td class="parameter_name"><p>validate</p></td>
+<td class="parameter_description"><p>whether or not the passed value should be validated against
+the IPTC specification for this dataset's tag.</p></td>
+<td class="parameter_annotations"> </td>
 </tr>
+</tbody>
+</table></div>
+</div>
+<div class="refsect3">
+<a name="id-1.7.2.6.25.6"></a><h4>Returns</h4>
+<p> -1 on error, 0 if validation failed, the number of bytes copied
+on success</p>
+<p></p>
+</div>
+</div>
+<hr>
+<div class="refsect2">
+<a name="iptc-data-dump"></a><h3>iptc_data_dump ()</h3>
+<pre class="programlisting"><span class="returnvalue">void</span>
+iptc_data_dump (<em class="parameter"><code><a class="link" href="libiptcdata-data.html#IptcData" title="struct IptcData"><span class="type">IptcData</span></a> *data</code></em>,
+                <em class="parameter"><code>unsigned <span class="type">int</span> indent</code></em>);</pre>
+<p>A debugging aid that prints out the contents of a collection
+of datasets to standard output.</p>
+<div class="refsect3">
+<a name="id-1.7.2.6.26.5"></a><h4>Parameters</h4>
+<div class="informaltable"><table width="100%" border="0">
+<colgroup>
+<col width="150px" class="parameters_name">
+<col class="parameters_description">
+<col width="200px" class="parameters_annotations">
+</colgroup>
+<tbody>
 <tr>
-<td><p><span class="term"><span class="emphasis"><em>Returns</em></span> :</span></p></td>
-<td> -1 on error, 0 if validation failed, the number of bytes copied
-on success
-</td>
+<td class="parameter_name"><p>data</p></td>
+<td class="parameter_description"><p>collection of datasets to print</p></td>
+<td class="parameter_annotations"> </td>
+</tr>
+<tr>
+<td class="parameter_name"><p>indent</p></td>
+<td class="parameter_description"><p>indentation level of the printout</p></td>
+<td class="parameter_annotations"> </td>
 </tr>
 </tbody>
 </table></div>
 </div>
+</div>
 <hr>
-<div class="refsect2" lang="en">
-<a name="iptc-data-dump"></a><h3>iptc_data_dump ()</h3>
-<pre class="programlisting">void                iptc_data_dump                      (<a class="link" href="libiptcdata-data.html#IptcData" title="IptcData">IptcData</a> *data,
-                                                         unsigned int indent);</pre>
-<p>
-A debugging aid that prints out the contents of a collection
-of datasets to standard output.</p>
-<p>
+<div class="refsect2">
+<a name="iptc-data-log"></a><h3>iptc_data_log ()</h3>
+<pre class="programlisting"><span class="returnvalue">void</span>
+iptc_data_log (<em class="parameter"><code><a class="link" href="libiptcdata-data.html#IptcData" title="struct IptcData"><span class="type">IptcData</span></a> *data</code></em>,
+               <em class="parameter"><code><a class="link" href="libiptcdata-log.html#IptcLog" title="IptcLog"><span class="type">IptcLog</span></a> *log</code></em>);</pre>
+<p>Changes the logging object for a <a class="link" href="libiptcdata-data.html#IptcData" title="struct IptcData"><span class="type">IptcData</span></a> object.  The logging
+object determines how warning and error messages are relayed back
+to the application.  This function also calls <a class="link" href="libiptcdata-log.html#iptc-log-ref" title="iptc_log_ref ()"><code class="function">iptc_log_ref()</code></a> on
+the new log object and <a class="link" href="libiptcdata-log.html#iptc-log-unref" title="iptc_log_unref ()"><code class="function">iptc_log_unref()</code></a> on the previous log
+object.</p>
+<div class="refsect3">
+<a name="id-1.7.2.6.27.5"></a><h4>Parameters</h4>
+<div class="informaltable"><table width="100%" border="0">
+<colgroup>
+<col width="150px" class="parameters_name">
+<col class="parameters_description">
+<col width="200px" class="parameters_annotations">
+</colgroup>
+<tbody>
+<tr>
+<td class="parameter_name"><p>data</p></td>
+<td class="parameter_description"><p>collection for which the log object should be changed.</p></td>
+<td class="parameter_annotations"> </td>
+</tr>
+<tr>
+<td class="parameter_name"><p>log</p></td>
+<td class="parameter_description"><p>log object to use for the collection</p></td>
+<td class="parameter_annotations"> </td>
+</tr>
+</tbody>
+</table></div>
+</div>
+</div>
+</div>
+<div class="refsect1">
+<a name="libiptcdata-data.other_details"></a><h2>Types and Values</h2>
+<div class="refsect2">
+<a name="IptcData"></a><h3>struct IptcData</h3>
+<pre class="programlisting">struct IptcData {
+        IptcDataSet **datasets;
+        unsigned int count;
 
+	IptcDataPrivate *priv;
+};
+</pre>
+<p>
+Represents the collection of datasets that make up a IPTC data block.
 </p>
-<div class="variablelist"><table border="0">
-<col align="left" valign="top">
+<div class="refsect3">
+<a name="id-1.7.2.7.2.5"></a><h4>Members</h4>
+<div class="informaltable"><table width="100%" border="0">
+<colgroup>
+<col width="300px" class="struct_members_name">
+<col class="struct_members_description">
+<col width="200px" class="struct_members_annotations">
+</colgroup>
 <tbody>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>data</code></em> :</span></p></td>
-<td> collection of datasets to print
-</td>
+<td class="struct_member_name"><p><a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="struct IptcDataSet"><span class="type">IptcDataSet</span></a> **<em class="structfield"><code><a name="IptcData.datasets"></a>datasets</code></em>;</p></td>
+<td class="struct_member_description"><p>array of pointers to the datasets in the collection</p></td>
+<td class="struct_member_annotations"> </td>
 </tr>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>indent</code></em> :</span></p></td>
-<td> indentation level of the printout
-</td>
+<td class="struct_member_name"><p>unsigned <span class="type">int</span> <em class="structfield"><code><a name="IptcData.count"></a>count</code></em>;</p></td>
+<td class="struct_member_description"><p>the number of datasets in the collection</p></td>
+<td class="struct_member_annotations"> </td>
+</tr>
+<tr>
+<td class="struct_member_name"><p><span class="type">IptcDataPrivate</span> *<em class="structfield"><code><a name="IptcData.priv"></a>priv</code></em>;</p></td>
+<td class="struct_member_description"><p>private data</p></td>
+<td class="struct_member_annotations"> </td>
 </tr>
 </tbody>
 </table></div>
 </div>
+</div>
 <hr>
-<div class="refsect2" lang="en">
-<a name="iptc-data-log"></a><h3>iptc_data_log ()</h3>
-<pre class="programlisting">void                iptc_data_log                       (<a class="link" href="libiptcdata-data.html#IptcData" title="IptcData">IptcData</a> *data,
-                                                         <a class="link" href="libiptcdata-log.html#IptcLog" title="IptcLog">IptcLog</a> *log);</pre>
-<p>
-Changes the logging object for a <a class="link" href="libiptcdata-data.html#IptcData" title="IptcData"><span class="type">IptcData</span></a> object.  The logging
-object determines how warning and error messages are relayed back
-to the application.  This function also calls <a class="link" href="libiptcdata-log.html#iptc-log-ref" title="iptc_log_ref ()"><code class="function">iptc_log_ref()</code></a> on
-the new log object and <a class="link" href="libiptcdata-log.html#iptc-log-unref" title="iptc_log_unref ()"><code class="function">iptc_log_unref()</code></a> on the previous log
-object.</p>
+<div class="refsect2">
+<a name="IptcEncoding"></a><h3>enum IptcEncoding</h3>
 <p>
-
 </p>
-<div class="variablelist"><table border="0">
-<col align="left" valign="top">
+<div class="refsect3">
+<a name="id-1.7.2.7.3.4"></a><h4>Members</h4>
+<div class="informaltable"><table width="100%" border="0">
+<colgroup>
+<col width="300px" class="enum_members_name">
+<col class="enum_members_description">
+<col width="200px" class="enum_members_annotations">
+</colgroup>
 <tbody>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>data</code></em> :</span></p></td>
-<td> collection for which the log object should be changed.
-</td>
+<td class="enum_member_name"><p><a name="IPTC-ENCODING-UNKNOWN:CAPS"></a>IPTC_ENCODING_UNKNOWN</p></td>
+<td class="enum_member_description"> </td>
+<td class="enum_member_annotations"> </td>
 </tr>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>log</code></em> :</span></p></td>
-<td> log object to use for the collection
-</td>
+<td class="enum_member_name"><p><a name="IPTC-ENCODING-UNSPECIFIED:CAPS"></a>IPTC_ENCODING_UNSPECIFIED</p></td>
+<td class="enum_member_description"> </td>
+<td class="enum_member_annotations"> </td>
+</tr>
+<tr>
+<td class="enum_member_name"><p><a name="IPTC-ENCODING-UTF8:CAPS"></a>IPTC_ENCODING_UTF8</p></td>
+<td class="enum_member_description"> </td>
+<td class="enum_member_annotations"> </td>
 </tr>
 </tbody>
 </table></div>
 </div>
 </div>
+<hr>
+<div class="refsect2">
+<a name="IPTC-IIM-VERSION:CAPS"></a><h3>IPTC_IIM_VERSION</h3>
+<pre class="programlisting">#define IPTC_IIM_VERSION 4
+</pre>
+<p>
+The version of the IPTC IIM specification implemented by this library.
+</p>
+</div>
+</div>
 </div>
 <div class="footer">
 <hr>
-          Generated by GTK-Doc V1.10</div>
+          Generated by GTK-Doc V1.21</div>
 </body>
-</html>
+</html>
\ No newline at end of file
--- libiptcdata-1.0.4.orig/docs/reference/html/libiptcdata-dataset.html
+++ libiptcdata-1.0.4/docs/reference/html/libiptcdata-dataset.html
@@ -2,854 +2,1038 @@
 <html>
 <head>
 <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
-<title>Datasets</title>
-<meta name="generator" content="DocBook XSL Stylesheets V1.74.0">
+<title>libiptcdata Reference Manual: Datasets</title>
+<meta name="generator" content="DocBook XSL Stylesheets V1.78.1">
 <link rel="home" href="index.html" title="libiptcdata Reference Manual">
 <link rel="up" href="ch01.html" title="IPTC Data Manipulation">
 <link rel="prev" href="libiptcdata-data.html" title="IPTC Data">
 <link rel="next" href="libiptcdata-tag.html" title="Tag Specifications">
-<meta name="generator" content="GTK-Doc V1.10 (XML mode)">
+<meta name="generator" content="GTK-Doc V1.21 (XML mode)">
 <link rel="stylesheet" href="style.css" type="text/css">
-<link rel="chapter" href="ch01.html" title="IPTC Data Manipulation">
-<link rel="chapter" href="ch02.html" title="Format-specific Functions">
-<link rel="chapter" href="ch03.html" title="Helper Functions">
 </head>
 <body bgcolor="white" text="black" link="#0000FF" vlink="#840084" alink="#0000FF">
-<table class="navigation" id="top" width="100%" summary="Navigation header" cellpadding="2" cellspacing="2">
-<tr valign="middle">
-<td><a accesskey="p" href="libiptcdata-data.html"><img src="left.png" width="24" height="24" border="0" alt="Prev"></a></td>
-<td><a accesskey="u" href="ch01.html"><img src="up.png" width="24" height="24" border="0" alt="Up"></a></td>
-<td><a accesskey="h" href="index.html"><img src="home.png" width="24" height="24" border="0" alt="Home"></a></td>
-<th width="100%" align="center">libiptcdata Reference Manual</th>
-<td><a accesskey="n" href="libiptcdata-tag.html"><img src="right.png" width="24" height="24" border="0" alt="Next"></a></td>
-</tr>
-<tr><td colspan="5" class="shortcuts"><nobr><a href="#libiptcdata-dataset.synopsis" class="shortcut">Top</a>
-                   | 
-                  <a href="#libiptcdata-dataset.description" class="shortcut">Description</a></nobr></td></tr>
-</table>
-<div class="refentry" lang="en">
+<table class="navigation" id="top" width="100%" summary="Navigation header" cellpadding="2" cellspacing="5"><tr valign="middle">
+<td width="100%" align="left" class="shortcuts">
+<a href="#" class="shortcut">Top</a><span id="nav_description">  <span class="dim">|</span> 
+                  <a href="#libiptcdata-dataset.description" class="shortcut">Description</a></span>
+</td>
+<td><a accesskey="h" href="index.html"><img src="home.png" width="16" height="16" border="0" alt="Home"></a></td>
+<td><a accesskey="u" href="ch01.html"><img src="up.png" width="16" height="16" border="0" alt="Up"></a></td>
+<td><a accesskey="p" href="libiptcdata-data.html"><img src="left.png" width="16" height="16" border="0" alt="Prev"></a></td>
+<td><a accesskey="n" href="libiptcdata-tag.html"><img src="right.png" width="16" height="16" border="0" alt="Next"></a></td>
+</tr></table>
+<div class="refentry">
 <a name="libiptcdata-dataset"></a><div class="titlepage"></div>
 <div class="refnamediv"><table width="100%"><tr>
 <td valign="top">
 <h2><span class="refentrytitle"><a name="libiptcdata-dataset.top_of_page"></a>Datasets</span></h2>
 <p>Datasets — manipulating a tag identifier and its associated value</p>
 </td>
-<td valign="top" align="right"></td>
+<td class="gallery_image" valign="top" align="right"></td>
 </tr></table></div>
-<div class="refsynopsisdiv">
-<a name="libiptcdata-dataset.synopsis"></a><h2>Synopsis</h2>
-<pre class="synopsis">
-                    <a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="IptcDataSet">IptcDataSet</a>;
-<a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="IptcDataSet">IptcDataSet</a>*        <a class="link" href="libiptcdata-dataset.html#iptc-dataset-new" title="iptc_dataset_new ()">iptc_dataset_new</a>                    (void);
-<a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="IptcDataSet">IptcDataSet</a>*        <a class="link" href="libiptcdata-dataset.html#iptc-dataset-new-mem" title="iptc_dataset_new_mem ()">iptc_dataset_new_mem</a>                (<a class="link" href="libiptcdata-mem.html#IptcMem" title="IptcMem">IptcMem</a> *mem);
-<a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="IptcDataSet">IptcDataSet</a>*        <a class="link" href="libiptcdata-dataset.html#iptc-dataset-copy" title="iptc_dataset_copy ()">iptc_dataset_copy</a>                   (<a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="IptcDataSet">IptcDataSet</a> *dataset);
-void                <a class="link" href="libiptcdata-dataset.html#iptc-dataset-ref" title="iptc_dataset_ref ()">iptc_dataset_ref</a>                    (<a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="IptcDataSet">IptcDataSet</a> *dataset);
-void                <a class="link" href="libiptcdata-dataset.html#iptc-dataset-unref" title="iptc_dataset_unref ()">iptc_dataset_unref</a>                  (<a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="IptcDataSet">IptcDataSet</a> *dataset);
-void                <a class="link" href="libiptcdata-dataset.html#iptc-dataset-free" title="iptc_dataset_free ()">iptc_dataset_free</a>                   (<a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="IptcDataSet">IptcDataSet</a> *dataset);
-
-<a class="link" href="libiptcdata-tag.html#IptcFormat" title="enum IptcFormat">IptcFormat</a>          <a class="link" href="libiptcdata-dataset.html#iptc-dataset-get-format" title="iptc_dataset_get_format ()">iptc_dataset_get_format</a>             (<a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="IptcDataSet">IptcDataSet</a> *dataset);
-int                 <a class="link" href="libiptcdata-dataset.html#iptc-dataset-get-data" title="iptc_dataset_get_data ()">iptc_dataset_get_data</a>               (<a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="IptcDataSet">IptcDataSet</a> *dataset,
-                                                         unsigned char *buf,
-                                                         unsigned int size);
-unsigned int        <a class="link" href="libiptcdata-dataset.html#iptc-dataset-get-value" title="iptc_dataset_get_value ()">iptc_dataset_get_value</a>              (<a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="IptcDataSet">IptcDataSet</a> *dataset);
-int                 <a class="link" href="libiptcdata-dataset.html#iptc-dataset-get-date" title="iptc_dataset_get_date ()">iptc_dataset_get_date</a>               (<a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="IptcDataSet">IptcDataSet</a> *dataset,
-                                                         int *year,
-                                                         int *month,
-                                                         int *day);
-int                 <a class="link" href="libiptcdata-dataset.html#iptc-dataset-get-time" title="iptc_dataset_get_time ()">iptc_dataset_get_time</a>               (<a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="IptcDataSet">IptcDataSet</a> *dataset,
-                                                         int *hour,
-                                                         int *min,
-                                                         int *sec,
-                                                         int *tz);
-
-void                <a class="link" href="libiptcdata-dataset.html#iptc-dataset-set-tag" title="iptc_dataset_set_tag ()">iptc_dataset_set_tag</a>                (<a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="IptcDataSet">IptcDataSet</a> *dataset,
-                                                         <a class="link" href="libiptcdata-tag.html#IptcRecord" title="enum IptcRecord">IptcRecord</a> record,
-                                                         <a class="link" href="libiptcdata-tag.html#IptcTag" title="enum IptcTag">IptcTag</a> tag);
-enum                <a class="link" href="libiptcdata-dataset.html#IptcValidate" title="enum IptcValidate">IptcValidate</a>;
-int                 <a class="link" href="libiptcdata-dataset.html#iptc-dataset-set-data" title="iptc_dataset_set_data ()">iptc_dataset_set_data</a>               (<a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="IptcDataSet">IptcDataSet</a> *dataset,
-                                                         unsigned char *buf,
-                                                         unsigned int size,
-                                                         <a class="link" href="libiptcdata-dataset.html#IptcValidate" title="enum IptcValidate">IptcValidate</a> validate);
-int                 <a class="link" href="libiptcdata-dataset.html#iptc-dataset-set-value" title="iptc_dataset_set_value ()">iptc_dataset_set_value</a>              (<a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="IptcDataSet">IptcDataSet</a> *dataset,
-                                                         unsigned int value,
-                                                         <a class="link" href="libiptcdata-dataset.html#IptcValidate" title="enum IptcValidate">IptcValidate</a> validate);
-int                 <a class="link" href="libiptcdata-dataset.html#iptc-dataset-set-date" title="iptc_dataset_set_date ()">iptc_dataset_set_date</a>               (<a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="IptcDataSet">IptcDataSet</a> *dataset,
-                                                         int year,
-                                                         int month,
-                                                         int day,
-                                                         <a class="link" href="libiptcdata-dataset.html#IptcValidate" title="enum IptcValidate">IptcValidate</a> validate);
-int                 <a class="link" href="libiptcdata-dataset.html#iptc-dataset-set-time" title="iptc_dataset_set_time ()">iptc_dataset_set_time</a>               (<a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="IptcDataSet">IptcDataSet</a> *dataset,
-                                                         int hour,
-                                                         int min,
-                                                         int sec,
-                                                         int tz,
-                                                         <a class="link" href="libiptcdata-dataset.html#IptcValidate" title="enum IptcValidate">IptcValidate</a> validate);
-
-const char*         <a class="link" href="libiptcdata-dataset.html#iptc-dataset-get-as-str" title="iptc_dataset_get_as_str ()">iptc_dataset_get_as_str</a>             (<a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="IptcDataSet">IptcDataSet</a> *dataset,
-                                                         char *buf,
-                                                         unsigned int size);
-void                <a class="link" href="libiptcdata-dataset.html#iptc-dataset-dump" title="iptc_dataset_dump ()">iptc_dataset_dump</a>                   (<a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="IptcDataSet">IptcDataSet</a> *dataset,
-                                                         unsigned int indent);
-</pre>
-</div>
-<div class="refsect1" lang="en">
-<a name="libiptcdata-dataset.description"></a><h2>Description</h2>
-<p>
-The <a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="IptcDataSet"><span class="type">IptcDataSet</span></a> object contains a record number, dataset number, and
-data.  The record and dataset (tag) number uniquely define the purpose of
-the dataset according to the IPTC IIM specification.  The data is the
-contents of the tag.
-</p>
-</div>
-<div class="refsect1" lang="en">
-<a name="libiptcdata-dataset.details"></a><h2>Details</h2>
-<div class="refsect2" lang="en">
-<a name="IptcDataSet"></a><h3>IptcDataSet</h3>
-<pre class="programlisting">typedef struct {
-	IptcRecord record;
-        IptcTag tag;
-        const IptcTagInfo * info;
-
-        unsigned char *data;
-        unsigned int size;
-
-	/* Data containing this dataset */
-	IptcData *parent;
-
-	IptcDataSetPrivate *priv;
-} IptcDataSet;
-</pre>
-<p>
-An IPTC dataset, which associates a record/tag pair with a value.
-</p>
-<div class="variablelist"><table border="0">
-<col align="left" valign="top">
+<div class="refsect1">
+<a name="libiptcdata-dataset.functions"></a><h2>Functions</h2>
+<div class="informaltable"><table width="100%" border="0">
+<colgroup>
+<col width="150px" class="functions_return">
+<col class="functions_name">
+</colgroup>
 <tbody>
 <tr>
-<td><p><span class="term"><a class="link" href="libiptcdata-tag.html#IptcRecord" title="enum IptcRecord">IptcRecord</a> <em class="structfield"><code>record</code></em>;</span></p></td>
-<td>the record number
+<td class="function_type">
+<a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="struct IptcDataSet"><span class="returnvalue">IptcDataSet</span></a> *
+</td>
+<td class="function_name">
+<a class="link" href="libiptcdata-dataset.html#iptc-dataset-new" title="iptc_dataset_new ()">iptc_dataset_new</a> <span class="c_punctuation">()</span>
 </td>
 </tr>
 <tr>
-<td><p><span class="term"><a class="link" href="libiptcdata-tag.html#IptcTag" title="enum IptcTag">IptcTag</a> <em class="structfield"><code>tag</code></em>;</span></p></td>
-<td>the dataset number
+<td class="function_type">
+<a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="struct IptcDataSet"><span class="returnvalue">IptcDataSet</span></a> *
+</td>
+<td class="function_name">
+<a class="link" href="libiptcdata-dataset.html#iptc-dataset-new-mem" title="iptc_dataset_new_mem ()">iptc_dataset_new_mem</a> <span class="c_punctuation">()</span>
 </td>
 </tr>
 <tr>
-<td><p><span class="term">const <a class="link" href="libiptcdata-tag.html#IptcTagInfo" title="IptcTagInfo">IptcTagInfo</a> *<em class="structfield"><code>info</code></em>;</span></p></td>
-<td>information about the tag from the IPTC IIM specification
+<td class="function_type">
+<a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="struct IptcDataSet"><span class="returnvalue">IptcDataSet</span></a> *
+</td>
+<td class="function_name">
+<a class="link" href="libiptcdata-dataset.html#iptc-dataset-copy" title="iptc_dataset_copy ()">iptc_dataset_copy</a> <span class="c_punctuation">()</span>
 </td>
 </tr>
 <tr>
-<td><p><span class="term">unsigned char *<em class="structfield"><code>data</code></em>;</span></p></td>
-<td>the value of the tag
+<td class="function_type">
+<span class="returnvalue">void</span>
+</td>
+<td class="function_name">
+<a class="link" href="libiptcdata-dataset.html#iptc-dataset-ref" title="iptc_dataset_ref ()">iptc_dataset_ref</a> <span class="c_punctuation">()</span>
 </td>
 </tr>
 <tr>
-<td><p><span class="term">unsigned int <em class="structfield"><code>size</code></em>;</span></p></td>
-<td>the length of <em class="parameter"><code>data</code></em> in bytes
+<td class="function_type">
+<span class="returnvalue">void</span>
+</td>
+<td class="function_name">
+<a class="link" href="libiptcdata-dataset.html#iptc-dataset-unref" title="iptc_dataset_unref ()">iptc_dataset_unref</a> <span class="c_punctuation">()</span>
 </td>
 </tr>
 <tr>
-<td><p><span class="term"><a class="link" href="libiptcdata-data.html#IptcData" title="IptcData">IptcData</a> *<em class="structfield"><code>parent</code></em>;</span></p></td>
-<td>the <a class="link" href="libiptcdata-data.html#IptcData" title="IptcData"><span class="type">IptcData</span></a> object that contains this dataset or NULL
-if it is not contained
+<td class="function_type">
+<span class="returnvalue">void</span>
+</td>
+<td class="function_name">
+<a class="link" href="libiptcdata-dataset.html#iptc-dataset-free" title="iptc_dataset_free ()">iptc_dataset_free</a> <span class="c_punctuation">()</span>
 </td>
 </tr>
 <tr>
-<td><p><span class="term">IptcDataSetPrivate *<em class="structfield"><code>priv</code></em>;</span></p></td>
-<td>private data
-
+<td class="function_type">
+<a class="link" href="libiptcdata-tag.html#IptcFormat" title="enum IptcFormat"><span class="returnvalue">IptcFormat</span></a>
+</td>
+<td class="function_name">
+<a class="link" href="libiptcdata-dataset.html#iptc-dataset-get-format" title="iptc_dataset_get_format ()">iptc_dataset_get_format</a> <span class="c_punctuation">()</span>
+</td>
+</tr>
+<tr>
+<td class="function_type">
+<span class="returnvalue">int</span>
+</td>
+<td class="function_name">
+<a class="link" href="libiptcdata-dataset.html#iptc-dataset-get-data" title="iptc_dataset_get_data ()">iptc_dataset_get_data</a> <span class="c_punctuation">()</span>
+</td>
+</tr>
+<tr>
+<td class="function_type">unsigned <span class="returnvalue">int</span>
+</td>
+<td class="function_name">
+<a class="link" href="libiptcdata-dataset.html#iptc-dataset-get-value" title="iptc_dataset_get_value ()">iptc_dataset_get_value</a> <span class="c_punctuation">()</span>
+</td>
+</tr>
+<tr>
+<td class="function_type">
+<span class="returnvalue">int</span>
+</td>
+<td class="function_name">
+<a class="link" href="libiptcdata-dataset.html#iptc-dataset-get-date" title="iptc_dataset_get_date ()">iptc_dataset_get_date</a> <span class="c_punctuation">()</span>
+</td>
+</tr>
+<tr>
+<td class="function_type">
+<span class="returnvalue">int</span>
+</td>
+<td class="function_name">
+<a class="link" href="libiptcdata-dataset.html#iptc-dataset-get-time" title="iptc_dataset_get_time ()">iptc_dataset_get_time</a> <span class="c_punctuation">()</span>
+</td>
+</tr>
+<tr>
+<td class="function_type">
+<span class="returnvalue">void</span>
+</td>
+<td class="function_name">
+<a class="link" href="libiptcdata-dataset.html#iptc-dataset-set-tag" title="iptc_dataset_set_tag ()">iptc_dataset_set_tag</a> <span class="c_punctuation">()</span>
+</td>
+</tr>
+<tr>
+<td class="function_type">
+<span class="returnvalue">int</span>
+</td>
+<td class="function_name">
+<a class="link" href="libiptcdata-dataset.html#iptc-dataset-set-data" title="iptc_dataset_set_data ()">iptc_dataset_set_data</a> <span class="c_punctuation">()</span>
+</td>
+</tr>
+<tr>
+<td class="function_type">
+<span class="returnvalue">int</span>
+</td>
+<td class="function_name">
+<a class="link" href="libiptcdata-dataset.html#iptc-dataset-set-value" title="iptc_dataset_set_value ()">iptc_dataset_set_value</a> <span class="c_punctuation">()</span>
+</td>
+</tr>
+<tr>
+<td class="function_type">
+<span class="returnvalue">int</span>
+</td>
+<td class="function_name">
+<a class="link" href="libiptcdata-dataset.html#iptc-dataset-set-date" title="iptc_dataset_set_date ()">iptc_dataset_set_date</a> <span class="c_punctuation">()</span>
+</td>
+</tr>
+<tr>
+<td class="function_type">
+<span class="returnvalue">int</span>
+</td>
+<td class="function_name">
+<a class="link" href="libiptcdata-dataset.html#iptc-dataset-set-time" title="iptc_dataset_set_time ()">iptc_dataset_set_time</a> <span class="c_punctuation">()</span>
+</td>
+</tr>
+<tr>
+<td class="function_type">const <span class="returnvalue">char</span> *
+</td>
+<td class="function_name">
+<a class="link" href="libiptcdata-dataset.html#iptc-dataset-get-as-str" title="iptc_dataset_get_as_str ()">iptc_dataset_get_as_str</a> <span class="c_punctuation">()</span>
+</td>
+</tr>
+<tr>
+<td class="function_type">
+<span class="returnvalue">void</span>
+</td>
+<td class="function_name">
+<a class="link" href="libiptcdata-dataset.html#iptc-dataset-dump" title="iptc_dataset_dump ()">iptc_dataset_dump</a> <span class="c_punctuation">()</span>
 </td>
 </tr>
 </tbody>
 </table></div>
 </div>
-<hr>
-<div class="refsect2" lang="en">
-<a name="iptc-dataset-new"></a><h3>iptc_dataset_new ()</h3>
-<pre class="programlisting"><a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="IptcDataSet">IptcDataSet</a>*        iptc_dataset_new                    (void);</pre>
+<div class="refsect1">
+<a name="libiptcdata-dataset.other"></a><h2>Types and Values</h2>
+<div class="informaltable"><table width="100%" border="0">
+<colgroup>
+<col width="150px" class="name">
+<col class="description">
+</colgroup>
+<tbody>
+<tr>
+<td class="datatype_keyword">struct</td>
+<td class="function_name"><a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="struct IptcDataSet">IptcDataSet</a></td>
+</tr>
+<tr>
+<td class="datatype_keyword">enum</td>
+<td class="function_name"><a class="link" href="libiptcdata-dataset.html#IptcValidate" title="enum IptcValidate">IptcValidate</a></td>
+</tr>
+</tbody>
+</table></div>
+</div>
+<div class="refsect1">
+<a name="libiptcdata-dataset.description"></a><h2>Description</h2>
 <p>
-Allocates a new dataset, which is initialized to be empty (undefined tag and
+The <a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="struct IptcDataSet"><span class="type">IptcDataSet</span></a> object contains a record number, dataset number, and
+data.  The record and dataset (tag) number uniquely define the purpose of
+the dataset according to the IPTC IIM specification.  The data is the
+contents of the tag.
+</p>
+</div>
+<div class="refsect1">
+<a name="libiptcdata-dataset.functions_details"></a><h2>Functions</h2>
+<div class="refsect2">
+<a name="iptc-dataset-new"></a><h3>iptc_dataset_new ()</h3>
+<pre class="programlisting"><a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="struct IptcDataSet"><span class="returnvalue">IptcDataSet</span></a> *
+iptc_dataset_new (<em class="parameter"><code><span class="type">void</span></code></em>);</pre>
+<p>Allocates a new dataset, which is initialized to be empty (undefined tag and
 empty value).  The default memory allocation functions (malloc, etc.) are
 used.  If you need custom memory management functions, use
-<a class="link" href="libiptcdata-dataset.html#iptc-dataset-new-mem" title="iptc_dataset_new_mem ()"><code class="function">iptc_dataset_new_mem()</code></a> instead.  This allocation will set the <a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="IptcDataSet"><span class="type">IptcDataSet</span></a>
-refcount to 1, so use <a class="link" href="libiptcdata-dataset.html#iptc-dataset-unref" title="iptc_dataset_unref ()"><code class="function">iptc_dataset_unref()</code></a> when finished with the pointer.</p>
-<p>
-
-</p>
-<div class="variablelist"><table border="0">
-<col align="left" valign="top">
-<tbody><tr>
-<td><p><span class="term"><span class="emphasis"><em>Returns</em></span> :</span></p></td>
-<td> pointer to the new <a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="IptcDataSet"><span class="type">IptcDataSet</span></a> object, NULL on error
-</td>
-</tr></tbody>
-</table></div>
+<a class="link" href="libiptcdata-dataset.html#iptc-dataset-new-mem" title="iptc_dataset_new_mem ()"><code class="function">iptc_dataset_new_mem()</code></a> instead.  This allocation will set the <a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="struct IptcDataSet"><span class="type">IptcDataSet</span></a>
+refcount to 1, so use <a class="link" href="libiptcdata-dataset.html#iptc-dataset-unref" title="iptc_dataset_unref ()"><code class="function">iptc_dataset_unref()</code></a> when finished with the pointer.</p>
+<div class="refsect3">
+<a name="id-1.7.3.6.2.5"></a><h4>Returns</h4>
+<p> pointer to the new <a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="struct IptcDataSet"><span class="type">IptcDataSet</span></a> object, NULL on error</p>
+<p></p>
+</div>
 </div>
 <hr>
-<div class="refsect2" lang="en">
-<a name="iptc-dataset-new-mem"></a><h3>iptc_dataset_new_mem ()</h3>
-<pre class="programlisting"><a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="IptcDataSet">IptcDataSet</a>*        iptc_dataset_new_mem                (<a class="link" href="libiptcdata-mem.html#IptcMem" title="IptcMem">IptcMem</a> *mem);</pre>
-<p>
-Allocates a new dataset, which is initialized to be empty (undefined tag and
+<div class="refsect2">
+<a name="iptc-dataset-new-mem"></a><h3>iptc_dataset_new_mem ()</h3>
+<pre class="programlisting"><a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="struct IptcDataSet"><span class="returnvalue">IptcDataSet</span></a> *
+iptc_dataset_new_mem (<em class="parameter"><code><a class="link" href="libiptcdata-mem.html#IptcMem" title="IptcMem"><span class="type">IptcMem</span></a> *mem</code></em>);</pre>
+<p>Allocates a new dataset, which is initialized to be empty (undefined tag and
 empty value), using custom memory management functions.  This allocation
-will set the <a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="IptcDataSet"><span class="type">IptcDataSet</span></a> refcount to 1, so use <a class="link" href="libiptcdata-dataset.html#iptc-dataset-unref" title="iptc_dataset_unref ()"><code class="function">iptc_dataset_unref()</code></a> when
+will set the <a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="struct IptcDataSet"><span class="type">IptcDataSet</span></a> refcount to 1, so use <a class="link" href="libiptcdata-dataset.html#iptc-dataset-unref" title="iptc_dataset_unref ()"><code class="function">iptc_dataset_unref()</code></a> when
 finished with the pointer.</p>
-<p>
-
-</p>
-<div class="variablelist"><table border="0">
-<col align="left" valign="top">
-<tbody>
-<tr>
-<td><p><span class="term"><em class="parameter"><code>mem</code></em> :</span></p></td>
-<td> Pointer to an <a class="link" href="libiptcdata-mem.html#IptcMem" title="IptcMem"><span class="type">IptcMem</span></a> object that defines custom memory managment
-functions.  The refcount of <em class="parameter"><code>mem</code></em> will be incremented.  It is decremented
-when the returned <a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="IptcDataSet"><span class="type">IptcDataSet</span></a> object is freed.
-</td>
-</tr>
-<tr>
-<td><p><span class="term"><span class="emphasis"><em>Returns</em></span> :</span></p></td>
-<td> pointer to the new <a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="IptcDataSet"><span class="type">IptcDataSet</span></a> object, NULL on error
-</td>
-</tr>
-</tbody>
+<div class="refsect3">
+<a name="id-1.7.3.6.3.5"></a><h4>Parameters</h4>
+<div class="informaltable"><table width="100%" border="0">
+<colgroup>
+<col width="150px" class="parameters_name">
+<col class="parameters_description">
+<col width="200px" class="parameters_annotations">
+</colgroup>
+<tbody><tr>
+<td class="parameter_name"><p>mem</p></td>
+<td class="parameter_description"><p>Pointer to an <a class="link" href="libiptcdata-mem.html#IptcMem" title="IptcMem"><span class="type">IptcMem</span></a> object that defines custom memory managment
+functions.  The refcount of <em class="parameter"><code>mem</code></em>
+will be incremented.  It is decremented
+when the returned <a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="struct IptcDataSet"><span class="type">IptcDataSet</span></a> object is freed.</p></td>
+<td class="parameter_annotations"> </td>
+</tr></tbody>
 </table></div>
 </div>
+<div class="refsect3">
+<a name="id-1.7.3.6.3.6"></a><h4>Returns</h4>
+<p> pointer to the new <a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="struct IptcDataSet"><span class="type">IptcDataSet</span></a> object, NULL on error</p>
+<p></p>
+</div>
+</div>
 <hr>
-<div class="refsect2" lang="en">
-<a name="iptc-dataset-copy"></a><h3>iptc_dataset_copy ()</h3>
-<pre class="programlisting"><a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="IptcDataSet">IptcDataSet</a>*        iptc_dataset_copy                   (<a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="IptcDataSet">IptcDataSet</a> *dataset);</pre>
-<p>
-Allocates a new dataset and copies the contents of an existing dataset
+<div class="refsect2">
+<a name="iptc-dataset-copy"></a><h3>iptc_dataset_copy ()</h3>
+<pre class="programlisting"><a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="struct IptcDataSet"><span class="returnvalue">IptcDataSet</span></a> *
+iptc_dataset_copy (<em class="parameter"><code><a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="struct IptcDataSet"><span class="type">IptcDataSet</span></a> *dataset</code></em>);</pre>
+<p>Allocates a new dataset and copies the contents of an existing dataset
 into the new one.  Copied data includes record, tag, and the data payload.
 This is a "deep copy" so that a new copy of the data payload is created,
 not just a pointer duplication.  The new dataset has no parent collection,
 regardless of the parent of the copied dataset.  This allocation will set
-the <a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="IptcDataSet"><span class="type">IptcDataSet</span></a> refcount to 1, so use <a class="link" href="libiptcdata-dataset.html#iptc-dataset-unref" title="iptc_dataset_unref ()"><code class="function">iptc_dataset_unref()</code></a> when finished
+the <a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="struct IptcDataSet"><span class="type">IptcDataSet</span></a> refcount to 1, so use <a class="link" href="libiptcdata-dataset.html#iptc-dataset-unref" title="iptc_dataset_unref ()"><code class="function">iptc_dataset_unref()</code></a> when finished
 with the pointer.</p>
-<p>
-
-</p>
-<div class="variablelist"><table border="0">
-<col align="left" valign="top">
-<tbody>
-<tr>
-<td><p><span class="term"><em class="parameter"><code>dataset</code></em> :</span></p></td>
-<td> the dataset to duplicate
-</td>
-</tr>
-<tr>
-<td><p><span class="term"><span class="emphasis"><em>Returns</em></span> :</span></p></td>
-<td> pointer to the new <a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="IptcDataSet"><span class="type">IptcDataSet</span></a> object, NULL on error
-</td>
-</tr>
-</tbody>
+<div class="refsect3">
+<a name="id-1.7.3.6.4.5"></a><h4>Parameters</h4>
+<div class="informaltable"><table width="100%" border="0">
+<colgroup>
+<col width="150px" class="parameters_name">
+<col class="parameters_description">
+<col width="200px" class="parameters_annotations">
+</colgroup>
+<tbody><tr>
+<td class="parameter_name"><p>dataset</p></td>
+<td class="parameter_description"><p>the dataset to duplicate</p></td>
+<td class="parameter_annotations"> </td>
+</tr></tbody>
 </table></div>
 </div>
+<div class="refsect3">
+<a name="id-1.7.3.6.4.6"></a><h4>Returns</h4>
+<p> pointer to the new <a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="struct IptcDataSet"><span class="type">IptcDataSet</span></a> object, NULL on error</p>
+<p></p>
+</div>
+</div>
 <hr>
-<div class="refsect2" lang="en">
-<a name="iptc-dataset-ref"></a><h3>iptc_dataset_ref ()</h3>
-<pre class="programlisting">void                iptc_dataset_ref                    (<a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="IptcDataSet">IptcDataSet</a> *dataset);</pre>
-<p>
-Increments the reference count of an <a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="IptcDataSet"><span class="type">IptcDataSet</span></a> object.  This function
+<div class="refsect2">
+<a name="iptc-dataset-ref"></a><h3>iptc_dataset_ref ()</h3>
+<pre class="programlisting"><span class="returnvalue">void</span>
+iptc_dataset_ref (<em class="parameter"><code><a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="struct IptcDataSet"><span class="type">IptcDataSet</span></a> *dataset</code></em>);</pre>
+<p>Increments the reference count of an <a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="struct IptcDataSet"><span class="type">IptcDataSet</span></a> object.  This function
 should be called whenever a copy of a pointer is made by the application.
-<a class="link" href="libiptcdata-dataset.html#iptc-dataset-unref" title="iptc_dataset_unref ()"><code class="function">iptc_dataset_unref()</code></a> can then be used when the pointer is no longer needed
+<a class="link" href="libiptcdata-dataset.html#iptc-dataset-unref" title="iptc_dataset_unref ()"><code class="function">iptc_dataset_unref()</code></a> can then be used when the pointer is no longer needed
 to ensure that the object is freed once the object is completely unused.</p>
-<p>
-
-</p>
-<div class="variablelist"><table border="0">
-<col align="left" valign="top">
+<div class="refsect3">
+<a name="id-1.7.3.6.5.5"></a><h4>Parameters</h4>
+<div class="informaltable"><table width="100%" border="0">
+<colgroup>
+<col width="150px" class="parameters_name">
+<col class="parameters_description">
+<col width="200px" class="parameters_annotations">
+</colgroup>
 <tbody><tr>
-<td><p><span class="term"><em class="parameter"><code>dataset</code></em> :</span></p></td>
-<td> the referenced pointer
-</td>
+<td class="parameter_name"><p>dataset</p></td>
+<td class="parameter_description"><p>the referenced pointer</p></td>
+<td class="parameter_annotations"> </td>
 </tr></tbody>
 </table></div>
 </div>
+</div>
 <hr>
-<div class="refsect2" lang="en">
-<a name="iptc-dataset-unref"></a><h3>iptc_dataset_unref ()</h3>
-<pre class="programlisting">void                iptc_dataset_unref                  (<a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="IptcDataSet">IptcDataSet</a> *dataset);</pre>
-<p>
-Decrements the reference count of an <a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="IptcDataSet"><span class="type">IptcDataSet</span></a> object.  The object will
+<div class="refsect2">
+<a name="iptc-dataset-unref"></a><h3>iptc_dataset_unref ()</h3>
+<pre class="programlisting"><span class="returnvalue">void</span>
+iptc_dataset_unref (<em class="parameter"><code><a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="struct IptcDataSet"><span class="type">IptcDataSet</span></a> *dataset</code></em>);</pre>
+<p>Decrements the reference count of an <a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="struct IptcDataSet"><span class="type">IptcDataSet</span></a> object.  The object will
 automatically be freed when the count reaches 0.  This function should
 be called whenever a pointer is no longer needed by an application.  It
 is also good practice to set the local copy of the pointer to NULL to
 shield against accidently reusing the value.</p>
-<p>
-
-</p>
-<div class="variablelist"><table border="0">
-<col align="left" valign="top">
+<div class="refsect3">
+<a name="id-1.7.3.6.6.5"></a><h4>Parameters</h4>
+<div class="informaltable"><table width="100%" border="0">
+<colgroup>
+<col width="150px" class="parameters_name">
+<col class="parameters_description">
+<col width="200px" class="parameters_annotations">
+</colgroup>
 <tbody><tr>
-<td><p><span class="term"><em class="parameter"><code>dataset</code></em> :</span></p></td>
-<td> the unreferenced pointer
-</td>
+<td class="parameter_name"><p>dataset</p></td>
+<td class="parameter_description"><p>the unreferenced pointer</p></td>
+<td class="parameter_annotations"> </td>
 </tr></tbody>
 </table></div>
 </div>
+</div>
 <hr>
-<div class="refsect2" lang="en">
-<a name="iptc-dataset-free"></a><h3>iptc_dataset_free ()</h3>
-<pre class="programlisting">void                iptc_dataset_free                   (<a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="IptcDataSet">IptcDataSet</a> *dataset);</pre>
-<p>
-Frees an <a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="IptcDataSet"><span class="type">IptcDataSet</span></a> object and its contained data.  This function should
-be used only for error handling since <a class="link" href="libiptcdata-dataset.html#iptc-dataset-unref" title="iptc_dataset_unref ()"><code class="function">iptc_dataset_unref()</code></a> provides a
+<div class="refsect2">
+<a name="iptc-dataset-free"></a><h3>iptc_dataset_free ()</h3>
+<pre class="programlisting"><span class="returnvalue">void</span>
+iptc_dataset_free (<em class="parameter"><code><a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="struct IptcDataSet"><span class="type">IptcDataSet</span></a> *dataset</code></em>);</pre>
+<p>Frees an <a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="struct IptcDataSet"><span class="type">IptcDataSet</span></a> object and its contained data.  This function should
+be used only for error handling since <a class="link" href="libiptcdata-dataset.html#iptc-dataset-unref" title="iptc_dataset_unref ()"><code class="function">iptc_dataset_unref()</code></a> provides a
 safer mechanism for freeing that allows multiple components to have access
 to an object.</p>
-<p>
-
-</p>
-<div class="variablelist"><table border="0">
-<col align="left" valign="top">
+<div class="refsect3">
+<a name="id-1.7.3.6.7.5"></a><h4>Parameters</h4>
+<div class="informaltable"><table width="100%" border="0">
+<colgroup>
+<col width="150px" class="parameters_name">
+<col class="parameters_description">
+<col width="200px" class="parameters_annotations">
+</colgroup>
 <tbody><tr>
-<td><p><span class="term"><em class="parameter"><code>dataset</code></em> :</span></p></td>
-<td> the object to free
-</td>
+<td class="parameter_name"><p>dataset</p></td>
+<td class="parameter_description"><p>the object to free</p></td>
+<td class="parameter_annotations"> </td>
 </tr></tbody>
 </table></div>
 </div>
+</div>
 <hr>
-<div class="refsect2" lang="en">
-<a name="iptc-dataset-get-format"></a><h3>iptc_dataset_get_format ()</h3>
-<pre class="programlisting"><a class="link" href="libiptcdata-tag.html#IptcFormat" title="enum IptcFormat">IptcFormat</a>          iptc_dataset_get_format             (<a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="IptcDataSet">IptcDataSet</a> *dataset);</pre>
-<p>
-Retrieves the data format of a dataset tag according to the IPTC
+<div class="refsect2">
+<a name="iptc-dataset-get-format"></a><h3>iptc_dataset_get_format ()</h3>
+<pre class="programlisting"><a class="link" href="libiptcdata-tag.html#IptcFormat" title="enum IptcFormat"><span class="returnvalue">IptcFormat</span></a>
+iptc_dataset_get_format (<em class="parameter"><code><a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="struct IptcDataSet"><span class="type">IptcDataSet</span></a> *dataset</code></em>);</pre>
+<p>Retrieves the data format of a dataset tag according to the IPTC
 specification.</p>
-<p>
-
-</p>
-<div class="variablelist"><table border="0">
-<col align="left" valign="top">
-<tbody>
-<tr>
-<td><p><span class="term"><em class="parameter"><code>dataset</code></em> :</span></p></td>
-<td> pointer to an <a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="IptcDataSet"><span class="type">IptcDataSet</span></a>
-</td>
-</tr>
-<tr>
-<td><p><span class="term"><span class="emphasis"><em>Returns</em></span> :</span></p></td>
-<td> the format of the tag which will be <a class="link" href="libiptcdata-tag.html#IPTC-FORMAT-UNKNOWN:CAPS"><code class="literal">IPTC_FORMAT_UNKNOWN</code></a> if the tag
-number has not been set or the tag is not in the specification
-</td>
-</tr>
-</tbody>
+<div class="refsect3">
+<a name="id-1.7.3.6.8.5"></a><h4>Parameters</h4>
+<div class="informaltable"><table width="100%" border="0">
+<colgroup>
+<col width="150px" class="parameters_name">
+<col class="parameters_description">
+<col width="200px" class="parameters_annotations">
+</colgroup>
+<tbody><tr>
+<td class="parameter_name"><p>dataset</p></td>
+<td class="parameter_description"><p>pointer to an <a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="struct IptcDataSet"><span class="type">IptcDataSet</span></a></p></td>
+<td class="parameter_annotations"> </td>
+</tr></tbody>
 </table></div>
 </div>
+<div class="refsect3">
+<a name="id-1.7.3.6.8.6"></a><h4>Returns</h4>
+<p> the format of the tag which will be <a class="link" href="libiptcdata-tag.html#IPTC-FORMAT-UNKNOWN:CAPS"><code class="literal">IPTC_FORMAT_UNKNOWN</code></a> if the tag
+number has not been set or the tag is not in the specification</p>
+<p></p>
+</div>
+</div>
 <hr>
-<div class="refsect2" lang="en">
-<a name="iptc-dataset-get-data"></a><h3>iptc_dataset_get_data ()</h3>
-<pre class="programlisting">int                 iptc_dataset_get_data               (<a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="IptcDataSet">IptcDataSet</a> *dataset,
-                                                         unsigned char *buf,
-                                                         unsigned int size);</pre>
-<p>
-Copies the value of a dataset into a buffer.  If the buffer has extra
+<div class="refsect2">
+<a name="iptc-dataset-get-data"></a><h3>iptc_dataset_get_data ()</h3>
+<pre class="programlisting"><span class="returnvalue">int</span>
+iptc_dataset_get_data (<em class="parameter"><code><a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="struct IptcDataSet"><span class="type">IptcDataSet</span></a> *dataset</code></em>,
+                       <em class="parameter"><code>unsigned <span class="type">char</span> *buf</code></em>,
+                       <em class="parameter"><code>unsigned <span class="type">int</span> size</code></em>);</pre>
+<p>Copies the value of a dataset into a buffer.  If the buffer has extra
 space, the data will be NULL-terminated to assist in dealing with
 strings.</p>
-<p>
-
-</p>
-<div class="variablelist"><table border="0">
-<col align="left" valign="top">
+<div class="refsect3">
+<a name="id-1.7.3.6.9.5"></a><h4>Parameters</h4>
+<div class="informaltable"><table width="100%" border="0">
+<colgroup>
+<col width="150px" class="parameters_name">
+<col class="parameters_description">
+<col width="200px" class="parameters_annotations">
+</colgroup>
 <tbody>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>dataset</code></em> :</span></p></td>
-<td> pointer to an <a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="IptcDataSet"><span class="type">IptcDataSet</span></a>
-</td>
+<td class="parameter_name"><p>dataset</p></td>
+<td class="parameter_description"><p>pointer to an <a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="struct IptcDataSet"><span class="type">IptcDataSet</span></a></p></td>
+<td class="parameter_annotations"> </td>
 </tr>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>buf</code></em> :</span></p></td>
-<td> buffer to which the data will be copied
-</td>
+<td class="parameter_name"><p>buf</p></td>
+<td class="parameter_description"><p>buffer to which the data will be copied</p></td>
+<td class="parameter_annotations"> </td>
 </tr>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>size</code></em> :</span></p></td>
-<td> maximum size of the buffer
-</td>
-</tr>
-<tr>
-<td><p><span class="term"><span class="emphasis"><em>Returns</em></span> :</span></p></td>
-<td> the number of bytes copied, or -1 on failure
-</td>
+<td class="parameter_name"><p>size</p></td>
+<td class="parameter_description"><p>maximum size of the buffer</p></td>
+<td class="parameter_annotations"> </td>
 </tr>
 </tbody>
 </table></div>
 </div>
+<div class="refsect3">
+<a name="id-1.7.3.6.9.6"></a><h4>Returns</h4>
+<p> the number of bytes copied, or -1 on failure</p>
+<p></p>
+</div>
+</div>
 <hr>
-<div class="refsect2" lang="en">
-<a name="iptc-dataset-get-value"></a><h3>iptc_dataset_get_value ()</h3>
-<pre class="programlisting">unsigned int        iptc_dataset_get_value              (<a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="IptcDataSet">IptcDataSet</a> *dataset);</pre>
-<p>
-Gets the value of a dataset as an unsigned integer.  This function is meant
+<div class="refsect2">
+<a name="iptc-dataset-get-value"></a><h3>iptc_dataset_get_value ()</h3>
+<pre class="programlisting">unsigned <span class="returnvalue">int</span>
+iptc_dataset_get_value (<em class="parameter"><code><a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="struct IptcDataSet"><span class="type">IptcDataSet</span></a> *dataset</code></em>);</pre>
+<p>Gets the value of a dataset as an unsigned integer.  This function is meant
 to be used when the format of a tag is a byte, short, or long.  Undefined
 results occur when this function is used on a tag containing data in another
 format.</p>
-<p>
-
-</p>
-<div class="variablelist"><table border="0">
-<col align="left" valign="top">
-<tbody>
-<tr>
-<td><p><span class="term"><em class="parameter"><code>dataset</code></em> :</span></p></td>
-<td> pointer to an <a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="IptcDataSet"><span class="type">IptcDataSet</span></a>
-</td>
-</tr>
-<tr>
-<td><p><span class="term"><span class="emphasis"><em>Returns</em></span> :</span></p></td>
-<td> value contained in the dataset
-</td>
-</tr>
-</tbody>
+<div class="refsect3">
+<a name="id-1.7.3.6.10.5"></a><h4>Parameters</h4>
+<div class="informaltable"><table width="100%" border="0">
+<colgroup>
+<col width="150px" class="parameters_name">
+<col class="parameters_description">
+<col width="200px" class="parameters_annotations">
+</colgroup>
+<tbody><tr>
+<td class="parameter_name"><p>dataset</p></td>
+<td class="parameter_description"><p>pointer to an <a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="struct IptcDataSet"><span class="type">IptcDataSet</span></a></p></td>
+<td class="parameter_annotations"> </td>
+</tr></tbody>
 </table></div>
 </div>
+<div class="refsect3">
+<a name="id-1.7.3.6.10.6"></a><h4>Returns</h4>
+<p> value contained in the dataset</p>
+<p></p>
+</div>
+</div>
 <hr>
-<div class="refsect2" lang="en">
-<a name="iptc-dataset-get-date"></a><h3>iptc_dataset_get_date ()</h3>
-<pre class="programlisting">int                 iptc_dataset_get_date               (<a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="IptcDataSet">IptcDataSet</a> *dataset,
-                                                         int *year,
-                                                         int *month,
-                                                         int *day);</pre>
-<p>
-Interprets the contents of the dataset as an IPTC date and parses
+<div class="refsect2">
+<a name="iptc-dataset-get-date"></a><h3>iptc_dataset_get_date ()</h3>
+<pre class="programlisting"><span class="returnvalue">int</span>
+iptc_dataset_get_date (<em class="parameter"><code><a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="struct IptcDataSet"><span class="type">IptcDataSet</span></a> *dataset</code></em>,
+                       <em class="parameter"><code><span class="type">int</span> *year</code></em>,
+                       <em class="parameter"><code><span class="type">int</span> *month</code></em>,
+                       <em class="parameter"><code><span class="type">int</span> *day</code></em>);</pre>
+<p>Interprets the contents of the dataset as an IPTC date and parses
 the year, month, and day into the given output variables.  If any
 variable is NULL, that value is skipped.  IPTC dates are stored as
 a string in the format YYYYMMDD.</p>
-<p>
-
-</p>
-<div class="variablelist"><table border="0">
-<col align="left" valign="top">
+<div class="refsect3">
+<a name="id-1.7.3.6.11.5"></a><h4>Parameters</h4>
+<div class="informaltable"><table width="100%" border="0">
+<colgroup>
+<col width="150px" class="parameters_name">
+<col class="parameters_description">
+<col width="200px" class="parameters_annotations">
+</colgroup>
 <tbody>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>dataset</code></em> :</span></p></td>
-<td> pointer to an <a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="IptcDataSet"><span class="type">IptcDataSet</span></a>
-</td>
+<td class="parameter_name"><p>dataset</p></td>
+<td class="parameter_description"><p>pointer to an <a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="struct IptcDataSet"><span class="type">IptcDataSet</span></a></p></td>
+<td class="parameter_annotations"> </td>
 </tr>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>year</code></em> :</span></p></td>
-<td> output variable to store the year (0-9999)
-</td>
+<td class="parameter_name"><p>year</p></td>
+<td class="parameter_description"><p>output variable to store the year (0-9999)</p></td>
+<td class="parameter_annotations"> </td>
 </tr>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>month</code></em> :</span></p></td>
-<td> output variable to store the month (1-12)
-</td>
-</tr>
-<tr>
-<td><p><span class="term"><em class="parameter"><code>day</code></em> :</span></p></td>
-<td> output variable to store the day of the month (1-31)
-</td>
+<td class="parameter_name"><p>month</p></td>
+<td class="parameter_description"><p>output variable to store the month (1-12)</p></td>
+<td class="parameter_annotations"> </td>
 </tr>
 <tr>
-<td><p><span class="term"><span class="emphasis"><em>Returns</em></span> :</span></p></td>
-<td> 0 on success; -1 on failure
-</td>
+<td class="parameter_name"><p>day</p></td>
+<td class="parameter_description"><p>output variable to store the day of the month (1-31)</p></td>
+<td class="parameter_annotations"> </td>
 </tr>
 </tbody>
 </table></div>
 </div>
+<div class="refsect3">
+<a name="id-1.7.3.6.11.6"></a><h4>Returns</h4>
+<p> 0 on success; -1 on failure</p>
+<p></p>
+</div>
+</div>
 <hr>
-<div class="refsect2" lang="en">
-<a name="iptc-dataset-get-time"></a><h3>iptc_dataset_get_time ()</h3>
-<pre class="programlisting">int                 iptc_dataset_get_time               (<a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="IptcDataSet">IptcDataSet</a> *dataset,
-                                                         int *hour,
-                                                         int *min,
-                                                         int *sec,
-                                                         int *tz);</pre>
-<p>
-Interprets the contents of the dataset as an IPTC time and parses
+<div class="refsect2">
+<a name="iptc-dataset-get-time"></a><h3>iptc_dataset_get_time ()</h3>
+<pre class="programlisting"><span class="returnvalue">int</span>
+iptc_dataset_get_time (<em class="parameter"><code><a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="struct IptcDataSet"><span class="type">IptcDataSet</span></a> *dataset</code></em>,
+                       <em class="parameter"><code><span class="type">int</span> *hour</code></em>,
+                       <em class="parameter"><code><span class="type">int</span> *min</code></em>,
+                       <em class="parameter"><code><span class="type">int</span> *sec</code></em>,
+                       <em class="parameter"><code><span class="type">int</span> *tz</code></em>);</pre>
+<p>Interprets the contents of the dataset as an IPTC time and parses
 the hour, minute, second, and timezone into the given output variables.
 If any variable is NULL, that value is skipped.  IPTC times are stored as
 a string in the format HHMMSS±HHMM.</p>
-<p>
-
-</p>
-<div class="variablelist"><table border="0">
-<col align="left" valign="top">
+<div class="refsect3">
+<a name="id-1.7.3.6.12.5"></a><h4>Parameters</h4>
+<div class="informaltable"><table width="100%" border="0">
+<colgroup>
+<col width="150px" class="parameters_name">
+<col class="parameters_description">
+<col width="200px" class="parameters_annotations">
+</colgroup>
 <tbody>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>dataset</code></em> :</span></p></td>
-<td> pointer to an <a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="IptcDataSet"><span class="type">IptcDataSet</span></a>
-</td>
+<td class="parameter_name"><p>dataset</p></td>
+<td class="parameter_description"><p>pointer to an <a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="struct IptcDataSet"><span class="type">IptcDataSet</span></a></p></td>
+<td class="parameter_annotations"> </td>
 </tr>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>hour</code></em> :</span></p></td>
-<td> output variable to store the hour (0-23)
-</td>
+<td class="parameter_name"><p>hour</p></td>
+<td class="parameter_description"><p>output variable to store the hour (0-23)</p></td>
+<td class="parameter_annotations"> </td>
 </tr>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>min</code></em> :</span></p></td>
-<td> output variable to store the minute (0-59)
-</td>
+<td class="parameter_name"><p>min</p></td>
+<td class="parameter_description"><p>output variable to store the minute (0-59)</p></td>
+<td class="parameter_annotations"> </td>
 </tr>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>sec</code></em> :</span></p></td>
-<td> output variable to store the second (0-59)
-</td>
+<td class="parameter_name"><p>sec</p></td>
+<td class="parameter_description"><p>output variable to store the second (0-59)</p></td>
+<td class="parameter_annotations"> </td>
 </tr>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>tz</code></em> :</span></p></td>
-<td> output variable to store the timezone (offset in minutes from GMT)
-</td>
-</tr>
-<tr>
-<td><p><span class="term"><span class="emphasis"><em>Returns</em></span> :</span></p></td>
-<td> 0 on success; -1 on failure
-</td>
+<td class="parameter_name"><p>tz</p></td>
+<td class="parameter_description"><p>output variable to store the timezone (offset in minutes from GMT)</p></td>
+<td class="parameter_annotations"> </td>
 </tr>
 </tbody>
 </table></div>
 </div>
+<div class="refsect3">
+<a name="id-1.7.3.6.12.6"></a><h4>Returns</h4>
+<p> 0 on success; -1 on failure</p>
+<p></p>
+</div>
+</div>
 <hr>
-<div class="refsect2" lang="en">
-<a name="iptc-dataset-set-tag"></a><h3>iptc_dataset_set_tag ()</h3>
-<pre class="programlisting">void                iptc_dataset_set_tag                (<a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="IptcDataSet">IptcDataSet</a> *dataset,
-                                                         <a class="link" href="libiptcdata-tag.html#IptcRecord" title="enum IptcRecord">IptcRecord</a> record,
-                                                         <a class="link" href="libiptcdata-tag.html#IptcTag" title="enum IptcTag">IptcTag</a> tag);</pre>
-<p>
-Sets the record and tag number for a dataset object.  Each record/tag pair
+<div class="refsect2">
+<a name="iptc-dataset-set-tag"></a><h3>iptc_dataset_set_tag ()</h3>
+<pre class="programlisting"><span class="returnvalue">void</span>
+iptc_dataset_set_tag (<em class="parameter"><code><a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="struct IptcDataSet"><span class="type">IptcDataSet</span></a> *dataset</code></em>,
+                      <em class="parameter"><code><a class="link" href="libiptcdata-tag.html#IptcRecord" title="enum IptcRecord"><span class="type">IptcRecord</span></a> record</code></em>,
+                      <em class="parameter"><code><a class="link" href="libiptcdata-tag.html#IptcTag" title="enum IptcTag"><span class="type">IptcTag</span></a> tag</code></em>);</pre>
+<p>Sets the record and tag number for a dataset object.  Each record/tag pair
 is assigned a specific meaning by the IPTC IIM specification.  This function
 allows any value to be set for the dataset object, regardless of its
 meaning.  This function can also be used to change the record/tag number in
 place even if it has been already set.</p>
-<p>
-
-</p>
-<div class="variablelist"><table border="0">
-<col align="left" valign="top">
+<div class="refsect3">
+<a name="id-1.7.3.6.13.5"></a><h4>Parameters</h4>
+<div class="informaltable"><table width="100%" border="0">
+<colgroup>
+<col width="150px" class="parameters_name">
+<col class="parameters_description">
+<col width="200px" class="parameters_annotations">
+</colgroup>
 <tbody>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>dataset</code></em> :</span></p></td>
-<td> dataset for which the record/tag numbers should be set
-</td>
+<td class="parameter_name"><p>dataset</p></td>
+<td class="parameter_description"><p>dataset for which the record/tag numbers should be set</p></td>
+<td class="parameter_annotations"> </td>
 </tr>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>record</code></em> :</span></p></td>
-<td> record number of the dataset
-</td>
+<td class="parameter_name"><p>record</p></td>
+<td class="parameter_description"><p>record number of the dataset</p></td>
+<td class="parameter_annotations"> </td>
 </tr>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>tag</code></em> :</span></p></td>
-<td> tag (dataset number) of the dataset
-</td>
+<td class="parameter_name"><p>tag</p></td>
+<td class="parameter_description"><p>tag (dataset number) of the dataset</p></td>
+<td class="parameter_annotations"> </td>
 </tr>
 </tbody>
 </table></div>
 </div>
-<hr>
-<div class="refsect2" lang="en">
-<a name="IptcValidate"></a><h3>enum IptcValidate</h3>
-<pre class="programlisting">typedef enum {
-	IPTC_DONT_VALIDATE = 0,
-	IPTC_VALIDATE      = 1
-} IptcValidate;
-</pre>
-<p>
-Whether the value of a dataset should be validated to meet the IPTC
-IIM specification.
-</p>
-<div class="variablelist"><table border="0">
-<col align="left" valign="top">
-<tbody>
-<tr>
-<td><p><a name="IPTC-DONT-VALIDATE:CAPS"></a><span class="term"><code class="literal">IPTC_DONT_VALIDATE</code></span></p></td>
-<td>do not check the value against the specification
-</td>
-</tr>
-<tr>
-<td><p><a name="IPTC-VALIDATE:CAPS"></a><span class="term"><code class="literal">IPTC_VALIDATE</code></span></p></td>
-<td>check the value against the specification
-
-</td>
-</tr>
-</tbody>
-</table></div>
 </div>
 <hr>
-<div class="refsect2" lang="en">
-<a name="iptc-dataset-set-data"></a><h3>iptc_dataset_set_data ()</h3>
-<pre class="programlisting">int                 iptc_dataset_set_data               (<a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="IptcDataSet">IptcDataSet</a> *dataset,
-                                                         unsigned char *buf,
-                                                         unsigned int size,
-                                                         <a class="link" href="libiptcdata-dataset.html#IptcValidate" title="enum IptcValidate">IptcValidate</a> validate);</pre>
-<p>
-Copies bytes from a buffer as the new value for a dataset.  This is the
+<div class="refsect2">
+<a name="iptc-dataset-set-data"></a><h3>iptc_dataset_set_data ()</h3>
+<pre class="programlisting"><span class="returnvalue">int</span>
+iptc_dataset_set_data (<em class="parameter"><code><a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="struct IptcDataSet"><span class="type">IptcDataSet</span></a> *dataset</code></em>,
+                       <em class="parameter"><code>const unsigned <span class="type">char</span> *buf</code></em>,
+                       <em class="parameter"><code>unsigned <span class="type">int</span> size</code></em>,
+                       <em class="parameter"><code><a class="link" href="libiptcdata-dataset.html#IptcValidate" title="enum IptcValidate"><span class="type">IptcValidate</span></a> validate</code></em>);</pre>
+<p>Copies bytes from a buffer as the new value for a dataset.  This is the
 correct method for setting a dataset value to a string or raw binary
 sequence.  The length of a string should be specified without the trailing
-NULL.  New memory is allocated for the value and <em class="parameter"><code>size</code></em> bytes are copied
-from <em class="parameter"><code>buf</code></em> into this new memory (which is freed when the dataset is freed or
-when a new value is set).  If <em class="parameter"><code>validate</code></em> is set to <a class="link" href="libiptcdata-dataset.html#IPTC-VALIDATE:CAPS"><code class="literal">IPTC_VALIDATE</code></a>, the buffer
+NULL.  New memory is allocated for the value and <em class="parameter"><code>size</code></em>
+ bytes are copied
+from <em class="parameter"><code>buf</code></em>
+ into this new memory (which is freed when the dataset is freed or
+when a new value is set).  If <em class="parameter"><code>validate</code></em>
+ is set to <a class="link" href="libiptcdata-dataset.html#IPTC-VALIDATE:CAPS"><code class="literal">IPTC_VALIDATE</code></a>, the buffer
 will only be copied if the size does not violate the IPTC specification (it
 must not be too long or too short).  This check is ignored if the dataset's
 tag is undefined or no information from the specification is available for
 that tag.</p>
-<p>
-
-</p>
-<div class="variablelist"><table border="0">
-<col align="left" valign="top">
+<div class="refsect3">
+<a name="id-1.7.3.6.14.5"></a><h4>Parameters</h4>
+<div class="informaltable"><table width="100%" border="0">
+<colgroup>
+<col width="150px" class="parameters_name">
+<col class="parameters_description">
+<col width="200px" class="parameters_annotations">
+</colgroup>
 <tbody>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>dataset</code></em> :</span></p></td>
-<td> dataset for which the value should be set
-</td>
+<td class="parameter_name"><p>dataset</p></td>
+<td class="parameter_description"><p>dataset for which the value should be set</p></td>
+<td class="parameter_annotations"> </td>
 </tr>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>buf</code></em> :</span></p></td>
-<td> buffer containing the value
-</td>
+<td class="parameter_name"><p>buf</p></td>
+<td class="parameter_description"><p>buffer containing the value</p></td>
+<td class="parameter_annotations"> </td>
 </tr>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>size</code></em> :</span></p></td>
-<td> number of bytes to copy
-</td>
+<td class="parameter_name"><p>size</p></td>
+<td class="parameter_description"><p>number of bytes to copy</p></td>
+<td class="parameter_annotations"> </td>
 </tr>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>validate</code></em> :</span></p></td>
-<td> whether or not the passed value should be validated against
-the IPTC specification for this dataset's tag.
-</td>
-</tr>
-<tr>
-<td><p><span class="term"><span class="emphasis"><em>Returns</em></span> :</span></p></td>
-<td> -1 on error, 0 if validation failed, the number of bytes copied
-on success
-</td>
+<td class="parameter_name"><p>validate</p></td>
+<td class="parameter_description"><p>whether or not the passed value should be validated against
+the IPTC specification for this dataset's tag.</p></td>
+<td class="parameter_annotations"> </td>
 </tr>
 </tbody>
 </table></div>
 </div>
+<div class="refsect3">
+<a name="id-1.7.3.6.14.6"></a><h4>Returns</h4>
+<p> -1 on error, 0 if validation failed, the number of bytes copied
+on success</p>
+<p></p>
+</div>
+</div>
 <hr>
-<div class="refsect2" lang="en">
-<a name="iptc-dataset-set-value"></a><h3>iptc_dataset_set_value ()</h3>
-<pre class="programlisting">int                 iptc_dataset_set_value              (<a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="IptcDataSet">IptcDataSet</a> *dataset,
-                                                         unsigned int value,
-                                                         <a class="link" href="libiptcdata-dataset.html#IptcValidate" title="enum IptcValidate">IptcValidate</a> validate);</pre>
-<p>
-Sets the value of a dataset as an integer.  This is the correct method for
-setting a dataset value with type byte, short, or long.  If <em class="parameter"><code>validate</code></em> is
+<div class="refsect2">
+<a name="iptc-dataset-set-value"></a><h3>iptc_dataset_set_value ()</h3>
+<pre class="programlisting"><span class="returnvalue">int</span>
+iptc_dataset_set_value (<em class="parameter"><code><a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="struct IptcDataSet"><span class="type">IptcDataSet</span></a> *dataset</code></em>,
+                        <em class="parameter"><code>unsigned <span class="type">int</span> value</code></em>,
+                        <em class="parameter"><code><a class="link" href="libiptcdata-dataset.html#IptcValidate" title="enum IptcValidate"><span class="type">IptcValidate</span></a> validate</code></em>);</pre>
+<p>Sets the value of a dataset as an integer.  This is the correct method for
+setting a dataset value with type byte, short, or long.  If <em class="parameter"><code>validate</code></em>
+ is
 set to <a class="link" href="libiptcdata-dataset.html#IPTC-VALIDATE:CAPS"><code class="literal">IPTC_VALIDATE</code></a>, the value will only be set if the tag has type
 byte, short, or long according the IPTC specification.  This check is
 ignored if the dataset's tag is undefined or no information from the
 specification is available for that tag.</p>
-<p>
-
-</p>
-<div class="variablelist"><table border="0">
-<col align="left" valign="top">
+<div class="refsect3">
+<a name="id-1.7.3.6.15.5"></a><h4>Parameters</h4>
+<div class="informaltable"><table width="100%" border="0">
+<colgroup>
+<col width="150px" class="parameters_name">
+<col class="parameters_description">
+<col width="200px" class="parameters_annotations">
+</colgroup>
 <tbody>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>dataset</code></em> :</span></p></td>
-<td> dataset for which the value should be set
-</td>
+<td class="parameter_name"><p>dataset</p></td>
+<td class="parameter_description"><p>dataset for which the value should be set</p></td>
+<td class="parameter_annotations"> </td>
 </tr>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>value</code></em> :</span></p></td>
-<td> value for the dataset
-</td>
+<td class="parameter_name"><p>value</p></td>
+<td class="parameter_description"><p>value for the dataset</p></td>
+<td class="parameter_annotations"> </td>
 </tr>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>validate</code></em> :</span></p></td>
-<td> whether or not the passed value should be validated against
-the IPTC specification for this dataset's tag.
-</td>
-</tr>
-<tr>
-<td><p><span class="term"><span class="emphasis"><em>Returns</em></span> :</span></p></td>
-<td> -1 on error, 0 if validation failed, the number of bytes copied
-on success
-</td>
+<td class="parameter_name"><p>validate</p></td>
+<td class="parameter_description"><p>whether or not the passed value should be validated against
+the IPTC specification for this dataset's tag.</p></td>
+<td class="parameter_annotations"> </td>
 </tr>
 </tbody>
 </table></div>
 </div>
+<div class="refsect3">
+<a name="id-1.7.3.6.15.6"></a><h4>Returns</h4>
+<p> -1 on error, 0 if validation failed, the number of bytes copied
+on success</p>
+<p></p>
+</div>
+</div>
 <hr>
-<div class="refsect2" lang="en">
-<a name="iptc-dataset-set-date"></a><h3>iptc_dataset_set_date ()</h3>
-<pre class="programlisting">int                 iptc_dataset_set_date               (<a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="IptcDataSet">IptcDataSet</a> *dataset,
-                                                         int year,
-                                                         int month,
-                                                         int day,
-                                                         <a class="link" href="libiptcdata-dataset.html#IptcValidate" title="enum IptcValidate">IptcValidate</a> validate);</pre>
-<p>
-Sets the contents of the dataset to be a date with the specified value.
+<div class="refsect2">
+<a name="iptc-dataset-set-date"></a><h3>iptc_dataset_set_date ()</h3>
+<pre class="programlisting"><span class="returnvalue">int</span>
+iptc_dataset_set_date (<em class="parameter"><code><a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="struct IptcDataSet"><span class="type">IptcDataSet</span></a> *dataset</code></em>,
+                       <em class="parameter"><code><span class="type">int</span> year</code></em>,
+                       <em class="parameter"><code><span class="type">int</span> month</code></em>,
+                       <em class="parameter"><code><span class="type">int</span> day</code></em>,
+                       <em class="parameter"><code><a class="link" href="libiptcdata-dataset.html#IptcValidate" title="enum IptcValidate"><span class="type">IptcValidate</span></a> validate</code></em>);</pre>
+<p>Sets the contents of the dataset to be a date with the specified value.
 IPTC dates are stored as a string in the format YYYYMMDD.</p>
-<p>
-
-</p>
-<div class="variablelist"><table border="0">
-<col align="left" valign="top">
+<div class="refsect3">
+<a name="id-1.7.3.6.16.5"></a><h4>Parameters</h4>
+<div class="informaltable"><table width="100%" border="0">
+<colgroup>
+<col width="150px" class="parameters_name">
+<col class="parameters_description">
+<col width="200px" class="parameters_annotations">
+</colgroup>
 <tbody>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>dataset</code></em> :</span></p></td>
-<td> pointer to an <a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="IptcDataSet"><span class="type">IptcDataSet</span></a>
-</td>
+<td class="parameter_name"><p>dataset</p></td>
+<td class="parameter_description"><p>pointer to an <a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="struct IptcDataSet"><span class="type">IptcDataSet</span></a></p></td>
+<td class="parameter_annotations"> </td>
 </tr>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>year</code></em> :</span></p></td>
-<td> the year (0-9999)
-</td>
+<td class="parameter_name"><p>year</p></td>
+<td class="parameter_description"><p>the year (0-9999)</p></td>
+<td class="parameter_annotations"> </td>
 </tr>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>month</code></em> :</span></p></td>
-<td> the month (1-12)
-</td>
+<td class="parameter_name"><p>month</p></td>
+<td class="parameter_description"><p>the month (1-12)</p></td>
+<td class="parameter_annotations"> </td>
 </tr>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>day</code></em> :</span></p></td>
-<td> the day of the month (1-31)
-</td>
+<td class="parameter_name"><p>day</p></td>
+<td class="parameter_description"><p>the day of the month (1-31)</p></td>
+<td class="parameter_annotations"> </td>
 </tr>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>validate</code></em> :</span></p></td>
-<td> if set to <a class="link" href="libiptcdata-dataset.html#IPTC-VALIDATE:CAPS"><code class="literal">IPTC_VALIDATE</code></a>, the dataset date will only be set if
-the IPTC specification says it is of type date.
-</td>
-</tr>
-<tr>
-<td><p><span class="term"><span class="emphasis"><em>Returns</em></span> :</span></p></td>
-<td> the number of bytes written on success (always 8 in this case); 0
-if validation fails; -1 for other failures
-</td>
+<td class="parameter_name"><p>validate</p></td>
+<td class="parameter_description"><p>if set to <a class="link" href="libiptcdata-dataset.html#IPTC-VALIDATE:CAPS"><code class="literal">IPTC_VALIDATE</code></a>, the dataset date will only be set if
+the IPTC specification says it is of type date.</p></td>
+<td class="parameter_annotations"> </td>
 </tr>
 </tbody>
 </table></div>
 </div>
+<div class="refsect3">
+<a name="id-1.7.3.6.16.6"></a><h4>Returns</h4>
+<p> the number of bytes written on success (always 8 in this case); 0
+if validation fails; -1 for other failures</p>
+<p></p>
+</div>
+</div>
 <hr>
-<div class="refsect2" lang="en">
-<a name="iptc-dataset-set-time"></a><h3>iptc_dataset_set_time ()</h3>
-<pre class="programlisting">int                 iptc_dataset_set_time               (<a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="IptcDataSet">IptcDataSet</a> *dataset,
-                                                         int hour,
-                                                         int min,
-                                                         int sec,
-                                                         int tz,
-                                                         <a class="link" href="libiptcdata-dataset.html#IptcValidate" title="enum IptcValidate">IptcValidate</a> validate);</pre>
-<p>
-Sets the contents of the dataset to be a time with the specified value.
+<div class="refsect2">
+<a name="iptc-dataset-set-time"></a><h3>iptc_dataset_set_time ()</h3>
+<pre class="programlisting"><span class="returnvalue">int</span>
+iptc_dataset_set_time (<em class="parameter"><code><a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="struct IptcDataSet"><span class="type">IptcDataSet</span></a> *dataset</code></em>,
+                       <em class="parameter"><code><span class="type">int</span> hour</code></em>,
+                       <em class="parameter"><code><span class="type">int</span> min</code></em>,
+                       <em class="parameter"><code><span class="type">int</span> sec</code></em>,
+                       <em class="parameter"><code><span class="type">int</span> tz</code></em>,
+                       <em class="parameter"><code><a class="link" href="libiptcdata-dataset.html#IptcValidate" title="enum IptcValidate"><span class="type">IptcValidate</span></a> validate</code></em>);</pre>
+<p>Sets the contents of the dataset to be a time with the specified value.
 IPTC times are stored as a string in the format HHMMSS±HHMM.</p>
-<p>
-
-</p>
-<div class="variablelist"><table border="0">
-<col align="left" valign="top">
+<div class="refsect3">
+<a name="id-1.7.3.6.17.5"></a><h4>Parameters</h4>
+<div class="informaltable"><table width="100%" border="0">
+<colgroup>
+<col width="150px" class="parameters_name">
+<col class="parameters_description">
+<col width="200px" class="parameters_annotations">
+</colgroup>
 <tbody>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>dataset</code></em> :</span></p></td>
-<td> pointer to an <a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="IptcDataSet"><span class="type">IptcDataSet</span></a>
-</td>
+<td class="parameter_name"><p>dataset</p></td>
+<td class="parameter_description"><p>pointer to an <a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="struct IptcDataSet"><span class="type">IptcDataSet</span></a></p></td>
+<td class="parameter_annotations"> </td>
 </tr>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>hour</code></em> :</span></p></td>
-<td> the hour (0-23)
-</td>
+<td class="parameter_name"><p>hour</p></td>
+<td class="parameter_description"><p>the hour (0-23)</p></td>
+<td class="parameter_annotations"> </td>
 </tr>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>min</code></em> :</span></p></td>
-<td> the minutes (0-59)
-</td>
+<td class="parameter_name"><p>min</p></td>
+<td class="parameter_description"><p>the minutes (0-59)</p></td>
+<td class="parameter_annotations"> </td>
 </tr>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>sec</code></em> :</span></p></td>
-<td> the seconds (0-61)
-</td>
+<td class="parameter_name"><p>sec</p></td>
+<td class="parameter_description"><p>the seconds (0-61)</p></td>
+<td class="parameter_annotations"> </td>
 </tr>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>tz</code></em> :</span></p></td>
-<td> the timezone expressed as the number of minutes offset from GMT.
-For example, EST is -300 (-5 hours).
-</td>
+<td class="parameter_name"><p>tz</p></td>
+<td class="parameter_description"><p>the timezone expressed as the number of minutes offset from GMT.
+For example, EST is -300 (-5 hours).</p></td>
+<td class="parameter_annotations"> </td>
 </tr>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>validate</code></em> :</span></p></td>
-<td> if set to <a class="link" href="libiptcdata-dataset.html#IPTC-VALIDATE:CAPS"><code class="literal">IPTC_VALIDATE</code></a>, the dataset time will only be set if
-the IPTC specification says it is of type time.
-</td>
-</tr>
-<tr>
-<td><p><span class="term"><span class="emphasis"><em>Returns</em></span> :</span></p></td>
-<td> the number of bytes written on success (always 11 in this case); 0
-if validation fails; -1 for other failures
-</td>
+<td class="parameter_name"><p>validate</p></td>
+<td class="parameter_description"><p>if set to <a class="link" href="libiptcdata-dataset.html#IPTC-VALIDATE:CAPS"><code class="literal">IPTC_VALIDATE</code></a>, the dataset time will only be set if
+the IPTC specification says it is of type time.</p></td>
+<td class="parameter_annotations"> </td>
 </tr>
 </tbody>
 </table></div>
 </div>
+<div class="refsect3">
+<a name="id-1.7.3.6.17.6"></a><h4>Returns</h4>
+<p> the number of bytes written on success (always 11 in this case); 0
+if validation fails; -1 for other failures</p>
+<p></p>
+</div>
+</div>
 <hr>
-<div class="refsect2" lang="en">
-<a name="iptc-dataset-get-as-str"></a><h3>iptc_dataset_get_as_str ()</h3>
-<pre class="programlisting">const char*         iptc_dataset_get_as_str             (<a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="IptcDataSet">IptcDataSet</a> *dataset,
-                                                         char *buf,
-                                                         unsigned int size);</pre>
-<p>
-Copies the value of a dataset into a buffer as a printable, NULL-terminated
+<div class="refsect2">
+<a name="iptc-dataset-get-as-str"></a><h3>iptc_dataset_get_as_str ()</h3>
+<pre class="programlisting">const <span class="returnvalue">char</span> *
+iptc_dataset_get_as_str (<em class="parameter"><code><a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="struct IptcDataSet"><span class="type">IptcDataSet</span></a> *dataset</code></em>,
+                         <em class="parameter"><code><span class="type">char</span> *buf</code></em>,
+                         <em class="parameter"><code>unsigned <span class="type">int</span> size</code></em>);</pre>
+<p>Copies the value of a dataset into a buffer as a printable, NULL-terminated
 string.  For tags of type byte, short, or long, the value will be formatted
 as a string.  For tags of type string (including dates and times), the
 string will simply be copied into the output buffer.  For tags containing
 binary data, the data will be formatted as a string in hexidecimal.</p>
-<p>
+<div class="refsect3">
+<a name="id-1.7.3.6.18.5"></a><h4>Parameters</h4>
+<div class="informaltable"><table width="100%" border="0">
+<colgroup>
+<col width="150px" class="parameters_name">
+<col class="parameters_description">
+<col width="200px" class="parameters_annotations">
+</colgroup>
+<tbody>
+<tr>
+<td class="parameter_name"><p>dataset</p></td>
+<td class="parameter_description"><p>pointer to an <a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="struct IptcDataSet"><span class="type">IptcDataSet</span></a></p></td>
+<td class="parameter_annotations"> </td>
+</tr>
+<tr>
+<td class="parameter_name"><p>buf</p></td>
+<td class="parameter_description"><p>buffer to which the string will be copied</p></td>
+<td class="parameter_annotations"> </td>
+</tr>
+<tr>
+<td class="parameter_name"><p>size</p></td>
+<td class="parameter_description"><p>maximum size of the buffer</p></td>
+<td class="parameter_annotations"> </td>
+</tr>
+</tbody>
+</table></div>
+</div>
+<div class="refsect3">
+<a name="id-1.7.3.6.18.6"></a><h4>Returns</h4>
+<p> the output string on success, or NULL on failure</p>
+<p></p>
+</div>
+</div>
+<hr>
+<div class="refsect2">
+<a name="iptc-dataset-dump"></a><h3>iptc_dataset_dump ()</h3>
+<pre class="programlisting"><span class="returnvalue">void</span>
+iptc_dataset_dump (<em class="parameter"><code><a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="struct IptcDataSet"><span class="type">IptcDataSet</span></a> *dataset</code></em>,
+                   <em class="parameter"><code>unsigned <span class="type">int</span> indent</code></em>);</pre>
+<p>A debugging aid that prints out the contents of a dataset to
+standard output.</p>
+<div class="refsect3">
+<a name="id-1.7.3.6.19.5"></a><h4>Parameters</h4>
+<div class="informaltable"><table width="100%" border="0">
+<colgroup>
+<col width="150px" class="parameters_name">
+<col class="parameters_description">
+<col width="200px" class="parameters_annotations">
+</colgroup>
+<tbody>
+<tr>
+<td class="parameter_name"><p>dataset</p></td>
+<td class="parameter_description"><p>dataset to print</p></td>
+<td class="parameter_annotations"> </td>
+</tr>
+<tr>
+<td class="parameter_name"><p>indent</p></td>
+<td class="parameter_description"><p>indentation level of the printout</p></td>
+<td class="parameter_annotations"> </td>
+</tr>
+</tbody>
+</table></div>
+</div>
+</div>
+</div>
+<div class="refsect1">
+<a name="libiptcdata-dataset.other_details"></a><h2>Types and Values</h2>
+<div class="refsect2">
+<a name="IptcDataSet"></a><h3>struct IptcDataSet</h3>
+<pre class="programlisting">struct IptcDataSet {
+	IptcRecord record;
+        IptcTag tag;
+        const IptcTagInfo * info;
+
+        unsigned char *data;
+        unsigned int size;
+
+	/* Data containing this dataset */
+	IptcData *parent;
 
+	IptcDataSetPrivate *priv;
+};
+</pre>
+<p>
+An IPTC dataset, which associates a record/tag pair with a value.
 </p>
-<div class="variablelist"><table border="0">
-<col align="left" valign="top">
+<div class="refsect3">
+<a name="id-1.7.3.7.2.5"></a><h4>Members</h4>
+<div class="informaltable"><table width="100%" border="0">
+<colgroup>
+<col width="300px" class="struct_members_name">
+<col class="struct_members_description">
+<col width="200px" class="struct_members_annotations">
+</colgroup>
 <tbody>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>dataset</code></em> :</span></p></td>
-<td> pointer to an <a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="IptcDataSet"><span class="type">IptcDataSet</span></a>
-</td>
+<td class="struct_member_name"><p><a class="link" href="libiptcdata-tag.html#IptcRecord" title="enum IptcRecord"><span class="type">IptcRecord</span></a> <em class="structfield"><code><a name="IptcDataSet.record"></a>record</code></em>;</p></td>
+<td class="struct_member_description"><p>the record number</p></td>
+<td class="struct_member_annotations"> </td>
 </tr>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>buf</code></em> :</span></p></td>
-<td> buffer to which the string will be copied
-</td>
+<td class="struct_member_name"><p><a class="link" href="libiptcdata-tag.html#IptcTag" title="enum IptcTag"><span class="type">IptcTag</span></a> <em class="structfield"><code><a name="IptcDataSet.tag"></a>tag</code></em>;</p></td>
+<td class="struct_member_description"><p>the dataset number</p></td>
+<td class="struct_member_annotations"> </td>
 </tr>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>size</code></em> :</span></p></td>
-<td> maximum size of the buffer
-</td>
+<td class="struct_member_name"><p>const <a class="link" href="libiptcdata-tag.html#IptcTagInfo" title="struct IptcTagInfo"><span class="type">IptcTagInfo</span></a> *<em class="structfield"><code><a name="IptcDataSet.info"></a>info</code></em>;</p></td>
+<td class="struct_member_description"><p>information about the tag from the IPTC IIM specification</p></td>
+<td class="struct_member_annotations"> </td>
 </tr>
 <tr>
-<td><p><span class="term"><span class="emphasis"><em>Returns</em></span> :</span></p></td>
-<td> the output string on success, or NULL on failure
-</td>
+<td class="struct_member_name"><p>unsigned <span class="type">char</span> *<em class="structfield"><code><a name="IptcDataSet.data"></a>data</code></em>;</p></td>
+<td class="struct_member_description"><p>the value of the tag</p></td>
+<td class="struct_member_annotations"> </td>
+</tr>
+<tr>
+<td class="struct_member_name"><p>unsigned <span class="type">int</span> <em class="structfield"><code><a name="IptcDataSet.size"></a>size</code></em>;</p></td>
+<td class="struct_member_description"><p>the length of <em class="parameter"><code>data</code></em>
+in bytes</p></td>
+<td class="struct_member_annotations"> </td>
+</tr>
+<tr>
+<td class="struct_member_name"><p><a class="link" href="libiptcdata-data.html#IptcData" title="struct IptcData"><span class="type">IptcData</span></a> *<em class="structfield"><code><a name="IptcDataSet.parent"></a>parent</code></em>;</p></td>
+<td class="struct_member_description"><p>the <a class="link" href="libiptcdata-data.html#IptcData" title="struct IptcData"><span class="type">IptcData</span></a> object that contains this dataset or NULL
+if it is not contained</p></td>
+<td class="struct_member_annotations"> </td>
+</tr>
+<tr>
+<td class="struct_member_name"><p><span class="type">IptcDataSetPrivate</span> *<em class="structfield"><code><a name="IptcDataSet.priv"></a>priv</code></em>;</p></td>
+<td class="struct_member_description"><p>private data</p></td>
+<td class="struct_member_annotations"> </td>
 </tr>
 </tbody>
 </table></div>
 </div>
+</div>
 <hr>
-<div class="refsect2" lang="en">
-<a name="iptc-dataset-dump"></a><h3>iptc_dataset_dump ()</h3>
-<pre class="programlisting">void                iptc_dataset_dump                   (<a class="link" href="libiptcdata-dataset.html#IptcDataSet" title="IptcDataSet">IptcDataSet</a> *dataset,
-                                                         unsigned int indent);</pre>
-<p>
-A debugging aid that prints out the contents of a dataset to
-standard output.</p>
+<div class="refsect2">
+<a name="IptcValidate"></a><h3>enum IptcValidate</h3>
 <p>
-
+Whether the value of a dataset should be validated to meet the IPTC
+IIM specification.
 </p>
-<div class="variablelist"><table border="0">
-<col align="left" valign="top">
+<div class="refsect3">
+<a name="id-1.7.3.7.3.4"></a><h4>Members</h4>
+<div class="informaltable"><table width="100%" border="0">
+<colgroup>
+<col width="300px" class="enum_members_name">
+<col class="enum_members_description">
+<col width="200px" class="enum_members_annotations">
+</colgroup>
 <tbody>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>dataset</code></em> :</span></p></td>
-<td> dataset to print
+<td class="enum_member_name"><p><a name="IPTC-DONT-VALIDATE:CAPS"></a>IPTC_DONT_VALIDATE</p></td>
+<td class="enum_member_description">
+<p>do not check the value against the specification</p>
 </td>
+<td class="enum_member_annotations"> </td>
 </tr>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>indent</code></em> :</span></p></td>
-<td> indentation level of the printout
+<td class="enum_member_name"><p><a name="IPTC-VALIDATE:CAPS"></a>IPTC_VALIDATE</p></td>
+<td class="enum_member_description">
+<p>check the value against the specification</p>
 </td>
+<td class="enum_member_annotations"> </td>
 </tr>
 </tbody>
 </table></div>
 </div>
 </div>
 </div>
+</div>
 <div class="footer">
 <hr>
-          Generated by GTK-Doc V1.10</div>
+          Generated by GTK-Doc V1.21</div>
 </body>
-</html>
+</html>
\ No newline at end of file
--- libiptcdata-1.0.4.orig/docs/reference/html/libiptcdata-jpeg.html
+++ libiptcdata-1.0.4/docs/reference/html/libiptcdata-jpeg.html
@@ -2,269 +2,326 @@
 <html>
 <head>
 <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
-<title>JPEG</title>
-<meta name="generator" content="DocBook XSL Stylesheets V1.74.0">
+<title>libiptcdata Reference Manual: JPEG</title>
+<meta name="generator" content="DocBook XSL Stylesheets V1.78.1">
 <link rel="home" href="index.html" title="libiptcdata Reference Manual">
 <link rel="up" href="ch02.html" title="Format-specific Functions">
 <link rel="prev" href="ch02.html" title="Format-specific Functions">
 <link rel="next" href="ch03.html" title="Helper Functions">
-<meta name="generator" content="GTK-Doc V1.10 (XML mode)">
+<meta name="generator" content="GTK-Doc V1.21 (XML mode)">
 <link rel="stylesheet" href="style.css" type="text/css">
-<link rel="chapter" href="ch01.html" title="IPTC Data Manipulation">
-<link rel="chapter" href="ch02.html" title="Format-specific Functions">
-<link rel="chapter" href="ch03.html" title="Helper Functions">
 </head>
 <body bgcolor="white" text="black" link="#0000FF" vlink="#840084" alink="#0000FF">
-<table class="navigation" id="top" width="100%" summary="Navigation header" cellpadding="2" cellspacing="2">
-<tr valign="middle">
-<td><a accesskey="p" href="ch02.html"><img src="left.png" width="24" height="24" border="0" alt="Prev"></a></td>
-<td><a accesskey="u" href="ch02.html"><img src="up.png" width="24" height="24" border="0" alt="Up"></a></td>
-<td><a accesskey="h" href="index.html"><img src="home.png" width="24" height="24" border="0" alt="Home"></a></td>
-<th width="100%" align="center">libiptcdata Reference Manual</th>
-<td><a accesskey="n" href="ch03.html"><img src="right.png" width="24" height="24" border="0" alt="Next"></a></td>
-</tr>
-<tr><td colspan="5" class="shortcuts"><nobr><a href="#libiptcdata-jpeg.synopsis" class="shortcut">Top</a>
-                   | 
-                  <a href="#libiptcdata-jpeg.description" class="shortcut">Description</a></nobr></td></tr>
-</table>
-<div class="refentry" lang="en">
+<table class="navigation" id="top" width="100%" summary="Navigation header" cellpadding="2" cellspacing="5"><tr valign="middle">
+<td width="100%" align="left" class="shortcuts">
+<a href="#" class="shortcut">Top</a><span id="nav_description">  <span class="dim">|</span> 
+                  <a href="#libiptcdata-jpeg.description" class="shortcut">Description</a></span>
+</td>
+<td><a accesskey="h" href="index.html"><img src="home.png" width="16" height="16" border="0" alt="Home"></a></td>
+<td><a accesskey="u" href="ch02.html"><img src="up.png" width="16" height="16" border="0" alt="Up"></a></td>
+<td><a accesskey="p" href="ch02.html"><img src="left.png" width="16" height="16" border="0" alt="Prev"></a></td>
+<td><a accesskey="n" href="ch03.html"><img src="right.png" width="16" height="16" border="0" alt="Next"></a></td>
+</tr></table>
+<div class="refentry">
 <a name="libiptcdata-jpeg"></a><div class="titlepage"></div>
 <div class="refnamediv"><table width="100%"><tr>
 <td valign="top">
 <h2><span class="refentrytitle"><a name="libiptcdata-jpeg.top_of_page"></a>JPEG</span></h2>
 <p>JPEG — functions for loading and saving IPTC data from JPEG files</p>
 </td>
-<td valign="top" align="right"></td>
+<td class="gallery_image" valign="top" align="right"></td>
 </tr></table></div>
-<div class="refsynopsisdiv">
-<a name="libiptcdata-jpeg.synopsis"></a><h2>Synopsis</h2>
-<pre class="synopsis">
-int                 <a class="link" href="libiptcdata-jpeg.html#iptc-jpeg-read-ps3" title="iptc_jpeg_read_ps3 ()">iptc_jpeg_read_ps3</a>                  (FILE *infile,
-                                                         unsigned char *buf,
-                                                         unsigned int size);
-int                 <a class="link" href="libiptcdata-jpeg.html#iptc-jpeg-ps3-find-iptc" title="iptc_jpeg_ps3_find_iptc ()">iptc_jpeg_ps3_find_iptc</a>             (unsigned char *ps3,
-                                                         unsigned int ps3_size,
-                                                         unsigned int *iptc_len);
-int                 <a class="link" href="libiptcdata-jpeg.html#iptc-jpeg-ps3-save-iptc" title="iptc_jpeg_ps3_save_iptc ()">iptc_jpeg_ps3_save_iptc</a>             (unsigned char *ps3,
-                                                         unsigned int ps3_size,
-                                                         unsigned char *iptc,
-                                                         unsigned int iptc_size,
-                                                         unsigned char *buf,
-                                                         unsigned int size);
-int                 <a class="link" href="libiptcdata-jpeg.html#iptc-jpeg-save-with-ps3" title="iptc_jpeg_save_with_ps3 ()">iptc_jpeg_save_with_ps3</a>             (FILE *infile,
-                                                         FILE *outfile,
-                                                         unsigned char *ps3,
-                                                         unsigned int ps3_size);
-</pre>
-</div>
-<div class="refsect1" lang="en">
-<a name="libiptcdata-jpeg.description"></a><h2>Description</h2>
-<p>
-Convenience functions for loading and saving IPTC data blocks from JPEG files.
-</p>
-</div>
-<div class="refsect1" lang="en">
-<a name="libiptcdata-jpeg.details"></a><h2>Details</h2>
-<div class="refsect2" lang="en">
-<a name="iptc-jpeg-read-ps3"></a><h3>iptc_jpeg_read_ps3 ()</h3>
-<pre class="programlisting">int                 iptc_jpeg_read_ps3                  (FILE *infile,
-                                                         unsigned char *buf,
-                                                         unsigned int size);</pre>
-<p>
-Scans the headers of a JPEG file looking for a "Photoshop 3.0" header, and if
-found, stores the raw contents of this header in the <em class="parameter"><code>buf</code></em> buffer.  The Photoshop
-3.0 header is a series of records found in the APP13 section of a JPEG file.
-If a JPEG file contains IPTC metadata, the metadata is stored in one of the
-Photoshop 3.0 records.</p>
-<p>
-
-</p>
-<div class="variablelist"><table border="0">
-<col align="left" valign="top">
+<div class="refsect1">
+<a name="libiptcdata-jpeg.functions"></a><h2>Functions</h2>
+<div class="informaltable"><table width="100%" border="0">
+<colgroup>
+<col width="150px" class="functions_return">
+<col class="functions_name">
+</colgroup>
 <tbody>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>infile</code></em> :</span></p></td>
-<td> an open JPEG file with the current position set to the start of the file
+<td class="function_type">
+<span class="returnvalue">int</span>
+</td>
+<td class="function_name">
+<a class="link" href="libiptcdata-jpeg.html#iptc-jpeg-read-ps3" title="iptc_jpeg_read_ps3 ()">iptc_jpeg_read_ps3</a> <span class="c_punctuation">()</span>
 </td>
 </tr>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>buf</code></em> :</span></p></td>
-<td> an output buffer to store the Photoshop 3.0 data
+<td class="function_type">
+<span class="returnvalue">int</span>
+</td>
+<td class="function_name">
+<a class="link" href="libiptcdata-jpeg.html#iptc-jpeg-ps3-find-iptc" title="iptc_jpeg_ps3_find_iptc ()">iptc_jpeg_ps3_find_iptc</a> <span class="c_punctuation">()</span>
 </td>
 </tr>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>size</code></em> :</span></p></td>
-<td> the size of the output buffer
+<td class="function_type">
+<span class="returnvalue">int</span>
+</td>
+<td class="function_name">
+<a class="link" href="libiptcdata-jpeg.html#iptc-jpeg-ps3-save-iptc" title="iptc_jpeg_ps3_save_iptc ()">iptc_jpeg_ps3_save_iptc</a> <span class="c_punctuation">()</span>
 </td>
 </tr>
 <tr>
-<td><p><span class="term"><span class="emphasis"><em>Returns</em></span> :</span></p></td>
-<td> the number of bytes stored on success, 0 if the PS3 header was
-not found, or -1 if an error occurred.
+<td class="function_type">
+<span class="returnvalue">int</span>
+</td>
+<td class="function_name">
+<a class="link" href="libiptcdata-jpeg.html#iptc-jpeg-save-with-ps3" title="iptc_jpeg_save_with_ps3 ()">iptc_jpeg_save_with_ps3</a> <span class="c_punctuation">()</span>
 </td>
 </tr>
 </tbody>
 </table></div>
 </div>
-<hr>
-<div class="refsect2" lang="en">
-<a name="iptc-jpeg-ps3-find-iptc"></a><h3>iptc_jpeg_ps3_find_iptc ()</h3>
-<pre class="programlisting">int                 iptc_jpeg_ps3_find_iptc             (unsigned char *ps3,
-                                                         unsigned int ps3_size,
-                                                         unsigned int *iptc_len);</pre>
-<p>
-Parses a "Photoshop 3.0" header in search of IPTC metadata.</p>
+<div class="refsect1">
+<a name="libiptcdata-jpeg.description"></a><h2>Description</h2>
 <p>
-
+Convenience functions for loading and saving IPTC data blocks from JPEG files.
 </p>
-<div class="variablelist"><table border="0">
-<col align="left" valign="top">
+</div>
+<div class="refsect1">
+<a name="libiptcdata-jpeg.functions_details"></a><h2>Functions</h2>
+<div class="refsect2">
+<a name="iptc-jpeg-read-ps3"></a><h3>iptc_jpeg_read_ps3 ()</h3>
+<pre class="programlisting"><span class="returnvalue">int</span>
+iptc_jpeg_read_ps3 (<em class="parameter"><code><span class="type">FILE</span> *infile</code></em>,
+                    <em class="parameter"><code>unsigned <span class="type">char</span> *buf</code></em>,
+                    <em class="parameter"><code>unsigned <span class="type">int</span> size</code></em>);</pre>
+<p>Scans the headers of a JPEG file looking for a "Photoshop 3.0" header, and if
+found, stores the raw contents of this header in the <em class="parameter"><code>buf</code></em>
+ buffer.  The Photoshop
+3.0 header is a series of records found in the APP13 section of a JPEG file.
+If a JPEG file contains IPTC metadata, the metadata is stored in one of the
+Photoshop 3.0 records.</p>
+<div class="refsect3">
+<a name="id-1.8.2.5.2.5"></a><h4>Parameters</h4>
+<div class="informaltable"><table width="100%" border="0">
+<colgroup>
+<col width="150px" class="parameters_name">
+<col class="parameters_description">
+<col width="200px" class="parameters_annotations">
+</colgroup>
 <tbody>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>ps3</code></em> :</span></p></td>
-<td> the data of a Photoshop 3.0 header to search
-</td>
+<td class="parameter_name"><p>infile</p></td>
+<td class="parameter_description"><p>an open JPEG file with the current position set to the start of the file</p></td>
+<td class="parameter_annotations"> </td>
 </tr>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>ps3_size</code></em> :</span></p></td>
-<td> size in bytes of <em class="parameter"><code>ps3</code></em>
-</td>
+<td class="parameter_name"><p>buf</p></td>
+<td class="parameter_description"><p>an output buffer to store the Photoshop 3.0 data</p></td>
+<td class="parameter_annotations"> </td>
 </tr>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>iptc_len</code></em> :</span></p></td>
-<td> output parameter, the size in bytes of any found IPTC data
-</td>
+<td class="parameter_name"><p>size</p></td>
+<td class="parameter_description"><p>the size of the output buffer</p></td>
+<td class="parameter_annotations"> </td>
+</tr>
+</tbody>
+</table></div>
+</div>
+<div class="refsect3">
+<a name="id-1.8.2.5.2.6"></a><h4>Returns</h4>
+<p> the number of bytes stored on success, 0 if the PS3 header was
+not found, or -1 if an error occurred.</p>
+<p></p>
+</div>
+</div>
+<hr>
+<div class="refsect2">
+<a name="iptc-jpeg-ps3-find-iptc"></a><h3>iptc_jpeg_ps3_find_iptc ()</h3>
+<pre class="programlisting"><span class="returnvalue">int</span>
+iptc_jpeg_ps3_find_iptc (<em class="parameter"><code>const unsigned <span class="type">char</span> *ps3</code></em>,
+                         <em class="parameter"><code>unsigned <span class="type">int</span> ps3_size</code></em>,
+                         <em class="parameter"><code>unsigned <span class="type">int</span> *iptc_len</code></em>);</pre>
+<p>Parses a "Photoshop 3.0" header in search of IPTC metadata.</p>
+<div class="refsect3">
+<a name="id-1.8.2.5.3.5"></a><h4>Parameters</h4>
+<div class="informaltable"><table width="100%" border="0">
+<colgroup>
+<col width="150px" class="parameters_name">
+<col class="parameters_description">
+<col width="200px" class="parameters_annotations">
+</colgroup>
+<tbody>
+<tr>
+<td class="parameter_name"><p>ps3</p></td>
+<td class="parameter_description"><p>the data of a Photoshop 3.0 header to search</p></td>
+<td class="parameter_annotations"> </td>
 </tr>
 <tr>
-<td><p><span class="term"><span class="emphasis"><em>Returns</em></span> :</span></p></td>
-<td> the offset in bytes from the start of <em class="parameter"><code>ps3</code></em> where a block
-of IPTC metadata begins, 0 if no IPTC metadata was found, -1 on error.
-</td>
+<td class="parameter_name"><p>ps3_size</p></td>
+<td class="parameter_description"><p>size in bytes of <em class="parameter"><code>ps3</code></em>
+</p></td>
+<td class="parameter_annotations"> </td>
+</tr>
+<tr>
+<td class="parameter_name"><p>iptc_len</p></td>
+<td class="parameter_description"><p>output parameter, the size in bytes of any found IPTC data</p></td>
+<td class="parameter_annotations"> </td>
 </tr>
 </tbody>
 </table></div>
 </div>
+<div class="refsect3">
+<a name="id-1.8.2.5.3.6"></a><h4>Returns</h4>
+<p> the offset in bytes from the start of <em class="parameter"><code>ps3</code></em>
+where a block
+of IPTC metadata begins, 0 if no IPTC metadata was found, -1 on error.</p>
+<p></p>
+</div>
+</div>
 <hr>
-<div class="refsect2" lang="en">
-<a name="iptc-jpeg-ps3-save-iptc"></a><h3>iptc_jpeg_ps3_save_iptc ()</h3>
-<pre class="programlisting">int                 iptc_jpeg_ps3_save_iptc             (unsigned char *ps3,
-                                                         unsigned int ps3_size,
-                                                         unsigned char *iptc,
-                                                         unsigned int iptc_size,
-                                                         unsigned char *buf,
-                                                         unsigned int size);</pre>
-<p>
-Takes a Photoshop 3.0 header, <em class="parameter"><code>ps3</code></em>, removes any existing IPTC data inside
-that header, and inserts the new IPTC data from <em class="parameter"><code>iptc</code></em>.  Any other non-IPTC
-portions of <em class="parameter"><code>ps3</code></em> are left unmodified.  If <em class="parameter"><code>ps3</code></em> is NULL, a blank PS3 header
-is created.  If <em class="parameter"><code>iptc</code></em> is NULL, the output PS3 header will contain no IPTC
-data, even if <em class="parameter"><code>ps3</code></em> originally contained some.</p>
-<p>
-
-</p>
-<div class="variablelist"><table border="0">
-<col align="left" valign="top">
+<div class="refsect2">
+<a name="iptc-jpeg-ps3-save-iptc"></a><h3>iptc_jpeg_ps3_save_iptc ()</h3>
+<pre class="programlisting"><span class="returnvalue">int</span>
+iptc_jpeg_ps3_save_iptc (<em class="parameter"><code>const unsigned <span class="type">char</span> *ps3</code></em>,
+                         <em class="parameter"><code>unsigned <span class="type">int</span> ps3_size</code></em>,
+                         <em class="parameter"><code>const unsigned <span class="type">char</span> *iptc</code></em>,
+                         <em class="parameter"><code>unsigned <span class="type">int</span> iptc_size</code></em>,
+                         <em class="parameter"><code>unsigned <span class="type">char</span> *buf</code></em>,
+                         <em class="parameter"><code>unsigned <span class="type">int</span> size</code></em>);</pre>
+<p>Takes a Photoshop 3.0 header, <em class="parameter"><code>ps3</code></em>
+, removes any existing IPTC data inside
+that header, and inserts the new IPTC data from <em class="parameter"><code>iptc</code></em>
+.  Any other non-IPTC
+portions of <em class="parameter"><code>ps3</code></em>
+ are left unmodified.  If <em class="parameter"><code>ps3</code></em>
+ is NULL, a blank PS3 header
+is created.  If <em class="parameter"><code>iptc</code></em>
+ is NULL, the output PS3 header will contain no IPTC
+data, even if <em class="parameter"><code>ps3</code></em>
+ originally contained some.</p>
+<div class="refsect3">
+<a name="id-1.8.2.5.4.5"></a><h4>Parameters</h4>
+<div class="informaltable"><table width="100%" border="0">
+<colgroup>
+<col width="150px" class="parameters_name">
+<col class="parameters_description">
+<col width="200px" class="parameters_annotations">
+</colgroup>
 <tbody>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>ps3</code></em> :</span></p></td>
-<td> a template PS3 header in which to insert the
+<td class="parameter_name"><p>ps3</p></td>
+<td class="parameter_description"><p>a template PS3 header in which to insert the
 new iptc data.  Any non-IPTC data in this template will be preserved
 in the output Photoshop 3.0 header.  If NULL, a PS3 header will be
-generated from scratch.
-</td>
+generated from scratch.</p></td>
+<td class="parameter_annotations"> </td>
 </tr>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>ps3_size</code></em> :</span></p></td>
-<td> size in bytes of <em class="parameter"><code>ps3</code></em>
-</td>
+<td class="parameter_name"><p>ps3_size</p></td>
+<td class="parameter_description"><p>size in bytes of <em class="parameter"><code>ps3</code></em>
+</p></td>
+<td class="parameter_annotations"> </td>
 </tr>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>iptc</code></em> :</span></p></td>
-<td> the IPTC bytestream to be encapsulated in the PS3 output.  The IPTC
-bytestream can be generated with <a class="link" href="libiptcdata-data.html#iptc-data-save" title="iptc_data_save ()"><code class="function">iptc_data_save()</code></a>.  If
+<td class="parameter_name"><p>iptc</p></td>
+<td class="parameter_description"><p>the IPTC bytestream to be encapsulated in the PS3 output.  The IPTC
+bytestream can be generated with <a class="link" href="libiptcdata-data.html#iptc-data-save" title="iptc_data_save ()"><code class="function">iptc_data_save()</code></a>.  If
 NULL, the output will still be a valid PS3 header, but without any
-contained IPTC data.
-</td>
+contained IPTC data.</p></td>
+<td class="parameter_annotations"> </td>
 </tr>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>iptc_size</code></em> :</span></p></td>
-<td> size in bytes of <em class="parameter"><code>iptc</code></em>
-</td>
-</tr>
-<tr>
-<td><p><span class="term"><em class="parameter"><code>buf</code></em> :</span></p></td>
-<td> output buffer for the generated PS3 header
-</td>
+<td class="parameter_name"><p>iptc_size</p></td>
+<td class="parameter_description"><p>size in bytes of <em class="parameter"><code>iptc</code></em>
+</p></td>
+<td class="parameter_annotations"> </td>
 </tr>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>size</code></em> :</span></p></td>
-<td> size in bytes of <em class="parameter"><code>buf</code></em>
-</td>
+<td class="parameter_name"><p>buf</p></td>
+<td class="parameter_description"><p>output buffer for the generated PS3 header</p></td>
+<td class="parameter_annotations"> </td>
 </tr>
 <tr>
-<td><p><span class="term"><span class="emphasis"><em>Returns</em></span> :</span></p></td>
-<td> the number of bytes written to <em class="parameter"><code>buf</code></em>; -1 on error.
-</td>
+<td class="parameter_name"><p>size</p></td>
+<td class="parameter_description"><p>size in bytes of <em class="parameter"><code>buf</code></em>
+</p></td>
+<td class="parameter_annotations"> </td>
 </tr>
 </tbody>
 </table></div>
 </div>
+<div class="refsect3">
+<a name="id-1.8.2.5.4.6"></a><h4>Returns</h4>
+<p> the number of bytes written to <em class="parameter"><code>buf</code></em>
+; -1 on error.</p>
+<p></p>
+</div>
+</div>
 <hr>
-<div class="refsect2" lang="en">
-<a name="iptc-jpeg-save-with-ps3"></a><h3>iptc_jpeg_save_with_ps3 ()</h3>
-<pre class="programlisting">int                 iptc_jpeg_save_with_ps3             (FILE *infile,
-                                                         FILE *outfile,
-                                                         unsigned char *ps3,
-                                                         unsigned int ps3_size);</pre>
-<p>
-Takes an existing JPEG file, <em class="parameter"><code>infile</code></em>, removes any existing Photoshop
+<div class="refsect2">
+<a name="iptc-jpeg-save-with-ps3"></a><h3>iptc_jpeg_save_with_ps3 ()</h3>
+<pre class="programlisting"><span class="returnvalue">int</span>
+iptc_jpeg_save_with_ps3 (<em class="parameter"><code><span class="type">FILE</span> *infile</code></em>,
+                         <em class="parameter"><code><span class="type">FILE</span> *outfile</code></em>,
+                         <em class="parameter"><code>const unsigned <span class="type">char</span> *ps3</code></em>,
+                         <em class="parameter"><code>unsigned <span class="type">int</span> ps3_size</code></em>);</pre>
+<p>Takes an existing JPEG file, <em class="parameter"><code>infile</code></em>
+, removes any existing Photoshop
 3.0 header from it, and adds a new PS3 header, writing the output
-to <em class="parameter"><code>outfile</code></em>.  <em class="parameter"><code>infile</code></em> must be open for reading and is expected to point
-to the beginning of the JPEG file, which should be different from <em class="parameter"><code>outfile</code></em>,
-which must be open for writing.  If <em class="parameter"><code>ps3</code></em> is NULL, the output will contain
+to <em class="parameter"><code>outfile</code></em>
+.  <em class="parameter"><code>infile</code></em>
+ must be open for reading and is expected to point
+to the beginning of the JPEG file, which should be different from <em class="parameter"><code>outfile</code></em>
+,
+which must be open for writing.  If <em class="parameter"><code>ps3</code></em>
+ is NULL, the output will contain
 no PS3 header.  PS3 headers reside in the APP13 section of the JPEG file,
 which is created if necessary.  All other headers and data will be copied
-directly from <em class="parameter"><code>infile</code></em> without modification.</p>
-<p>
-
-</p>
-<div class="variablelist"><table border="0">
-<col align="left" valign="top">
+directly from <em class="parameter"><code>infile</code></em>
+ without modification.</p>
+<div class="refsect3">
+<a name="id-1.8.2.5.5.5"></a><h4>Parameters</h4>
+<div class="informaltable"><table width="100%" border="0">
+<colgroup>
+<col width="150px" class="parameters_name">
+<col class="parameters_description">
+<col width="200px" class="parameters_annotations">
+</colgroup>
 <tbody>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>infile</code></em> :</span></p></td>
-<td> the file stream from which the image data is copied
-</td>
+<td class="parameter_name"><p>infile</p></td>
+<td class="parameter_description"><p>the file stream from which the image data is copied</p></td>
+<td class="parameter_annotations"> </td>
 </tr>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>outfile</code></em> :</span></p></td>
-<td> the output file stream
-</td>
+<td class="parameter_name"><p>outfile</p></td>
+<td class="parameter_description"><p>the output file stream</p></td>
+<td class="parameter_annotations"> </td>
 </tr>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>ps3</code></em> :</span></p></td>
-<td> the Photoshop 3.0 header to add to the output file
-</td>
-</tr>
-<tr>
-<td><p><span class="term"><em class="parameter"><code>ps3_size</code></em> :</span></p></td>
-<td> size in bytes of <em class="parameter"><code>ps3</code></em>
-</td>
+<td class="parameter_name"><p>ps3</p></td>
+<td class="parameter_description"><p>the Photoshop 3.0 header to add to the output file</p></td>
+<td class="parameter_annotations"> </td>
 </tr>
 <tr>
-<td><p><span class="term"><span class="emphasis"><em>Returns</em></span> :</span></p></td>
-<td> 0 on success, -1 on error.  Note that even in error, some data
-may have been written to <em class="parameter"><code>outfile</code></em>, and its contents should be considered
-undefined.
-</td>
+<td class="parameter_name"><p>ps3_size</p></td>
+<td class="parameter_description"><p>size in bytes of <em class="parameter"><code>ps3</code></em>
+</p></td>
+<td class="parameter_annotations"> </td>
 </tr>
 </tbody>
 </table></div>
 </div>
+<div class="refsect3">
+<a name="id-1.8.2.5.5.6"></a><h4>Returns</h4>
+<p> 0 on success, -1 on error.  Note that even in error, some data
+may have been written to <em class="parameter"><code>outfile</code></em>
+, and its contents should be considered
+undefined.</p>
+<p></p>
+</div>
+</div>
+</div>
+<div class="refsect1">
+<a name="libiptcdata-jpeg.other_details"></a><h2>Types and Values</h2>
 </div>
 </div>
 <div class="footer">
 <hr>
-          Generated by GTK-Doc V1.10</div>
+          Generated by GTK-Doc V1.21</div>
 </body>
-</html>
+</html>
\ No newline at end of file
--- libiptcdata-1.0.4.orig/docs/reference/html/libiptcdata-log.html
+++ libiptcdata-1.0.4/docs/reference/html/libiptcdata-log.html
@@ -2,398 +2,319 @@
 <html>
 <head>
 <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
-<title>Error logging</title>
-<meta name="generator" content="DocBook XSL Stylesheets V1.74.0">
+<title>libiptcdata Reference Manual: Error logging</title>
+<meta name="generator" content="DocBook XSL Stylesheets V1.78.1">
 <link rel="home" href="index.html" title="libiptcdata Reference Manual">
 <link rel="up" href="ch03.html" title="Helper Functions">
 <link rel="prev" href="libiptcdata-mem.html" title="Memory managment">
-<meta name="generator" content="GTK-Doc V1.10 (XML mode)">
+<meta name="generator" content="GTK-Doc V1.21 (XML mode)">
 <link rel="stylesheet" href="style.css" type="text/css">
-<link rel="chapter" href="ch01.html" title="IPTC Data Manipulation">
-<link rel="chapter" href="ch02.html" title="Format-specific Functions">
-<link rel="chapter" href="ch03.html" title="Helper Functions">
 </head>
 <body bgcolor="white" text="black" link="#0000FF" vlink="#840084" alink="#0000FF">
-<table class="navigation" id="top" width="100%" summary="Navigation header" cellpadding="2" cellspacing="2">
-<tr valign="middle">
-<td><a accesskey="p" href="libiptcdata-mem.html"><img src="left.png" width="24" height="24" border="0" alt="Prev"></a></td>
-<td><a accesskey="u" href="ch03.html"><img src="up.png" width="24" height="24" border="0" alt="Up"></a></td>
-<td><a accesskey="h" href="index.html"><img src="home.png" width="24" height="24" border="0" alt="Home"></a></td>
-<th width="100%" align="center">libiptcdata Reference Manual</th>
-<td> </td>
-</tr>
-<tr><td colspan="5" class="shortcuts"><nobr><a href="#libiptcdata-log.synopsis" class="shortcut">Top</a>
-                   | 
-                  <a href="#libiptcdata-log.description" class="shortcut">Description</a></nobr></td></tr>
-</table>
-<div class="refentry" lang="en">
+<table class="navigation" id="top" width="100%" summary="Navigation header" cellpadding="2" cellspacing="5"><tr valign="middle">
+<td width="100%" align="left" class="shortcuts">
+<a href="#" class="shortcut">Top</a><span id="nav_description">  <span class="dim">|</span> 
+                  <a href="#libiptcdata-log.description" class="shortcut">Description</a></span>
+</td>
+<td><a accesskey="h" href="index.html"><img src="home.png" width="16" height="16" border="0" alt="Home"></a></td>
+<td><a accesskey="u" href="ch03.html"><img src="up.png" width="16" height="16" border="0" alt="Up"></a></td>
+<td><a accesskey="p" href="libiptcdata-mem.html"><img src="left.png" width="16" height="16" border="0" alt="Prev"></a></td>
+<td><img src="right-insensitive.png" width="16" height="16" border="0"></td>
+</tr></table>
+<div class="refentry">
 <a name="libiptcdata-log"></a><div class="titlepage"></div>
 <div class="refnamediv"><table width="100%"><tr>
 <td valign="top">
 <h2><span class="refentrytitle"><a name="libiptcdata-log.top_of_page"></a>Error logging</span></h2>
 <p>Error logging — Hooks for defining your own log-handling functions</p>
 </td>
-<td valign="top" align="right"></td>
+<td class="gallery_image" valign="top" align="right"></td>
 </tr></table></div>
-<div class="refsynopsisdiv">
-<a name="libiptcdata-log.synopsis"></a><h2>Synopsis</h2>
-<pre class="synopsis">
-                    <a class="link" href="libiptcdata-log.html#IptcLog" title="IptcLog">IptcLog</a>;
-<a class="link" href="libiptcdata-log.html#IptcLog" title="IptcLog">IptcLog</a>*            <a class="link" href="libiptcdata-log.html#iptc-log-new" title="iptc_log_new ()">iptc_log_new</a>                        (void);
-<a class="link" href="libiptcdata-log.html#IptcLog" title="IptcLog">IptcLog</a>*            <a class="link" href="libiptcdata-log.html#iptc-log-new-mem" title="iptc_log_new_mem ()">iptc_log_new_mem</a>                    (<a class="link" href="libiptcdata-mem.html#IptcMem" title="IptcMem">IptcMem</a> *);
-void                <a class="link" href="libiptcdata-log.html#iptc-log-ref" title="iptc_log_ref ()">iptc_log_ref</a>                        (<a class="link" href="libiptcdata-log.html#IptcLog" title="IptcLog">IptcLog</a> *log);
-void                <a class="link" href="libiptcdata-log.html#iptc-log-unref" title="iptc_log_unref ()">iptc_log_unref</a>                      (<a class="link" href="libiptcdata-log.html#IptcLog" title="IptcLog">IptcLog</a> *log);
-void                <a class="link" href="libiptcdata-log.html#iptc-log-free" title="iptc_log_free ()">iptc_log_free</a>                       (<a class="link" href="libiptcdata-log.html#IptcLog" title="IptcLog">IptcLog</a> *log);
-enum                <a class="link" href="libiptcdata-log.html#IptcLogCode" title="enum IptcLogCode">IptcLogCode</a>;
-const char*         <a class="link" href="libiptcdata-log.html#iptc-log-code-get-title" title="iptc_log_code_get_title ()">iptc_log_code_get_title</a>             (<a class="link" href="libiptcdata-log.html#IptcLogCode" title="enum IptcLogCode">IptcLogCode</a> );
-const char*         <a class="link" href="libiptcdata-log.html#iptc-log-code-get-message" title="iptc_log_code_get_message ()">iptc_log_code_get_message</a>           (<a class="link" href="libiptcdata-log.html#IptcLogCode" title="enum IptcLogCode">IptcLogCode</a> );
-void                (<a class="link" href="libiptcdata-log.html#IptcLogFunc" title="IptcLogFunc ()">*IptcLogFunc</a>)                      (<a class="link" href="libiptcdata-log.html#IptcLog" title="IptcLog">IptcLog</a> *log,
-                                                         <a class="link" href="libiptcdata-log.html#IptcLogCode" title="enum IptcLogCode">IptcLogCode</a> ,
-                                                         const char *domain,
-                                                         const char *format,
-                                                         va_list args,
-                                                         void *data);
-void                <a class="link" href="libiptcdata-log.html#iptc-log-set-func" title="iptc_log_set_func ()">iptc_log_set_func</a>                   (<a class="link" href="libiptcdata-log.html#IptcLog" title="IptcLog">IptcLog</a> *log,
-                                                         <a class="link" href="libiptcdata-log.html#IptcLogFunc" title="IptcLogFunc ()">IptcLogFunc</a> func,
-                                                         void *data);
-void                <a class="link" href="libiptcdata-log.html#iptc-log" title="iptc_log ()">iptc_log</a>                            (<a class="link" href="libiptcdata-log.html#IptcLog" title="IptcLog">IptcLog</a> *log,
-                                                         <a class="link" href="libiptcdata-log.html#IptcLogCode" title="enum IptcLogCode">IptcLogCode</a> ,
-                                                         const char *domain,
-                                                         const char *format);
-#define             <a class="link" href="libiptcdata-log.html#IPTC-LOG-NO-MEMORY:CAPS" title="IPTC_LOG_NO_MEMORY()">IPTC_LOG_NO_MEMORY</a>                  (l,d,s)
-</pre>
-</div>
-<div class="refsect1" lang="en">
-<a name="libiptcdata-log.description"></a><h2>Description</h2>
-<p>
-
-</p>
-</div>
-<div class="refsect1" lang="en">
-<a name="libiptcdata-log.details"></a><h2>Details</h2>
-<div class="refsect2" lang="en">
-<a name="IptcLog"></a><h3>IptcLog</h3>
-<pre class="programlisting">typedef struct _IptcLog IptcLog;</pre>
-<p>
-
-</p>
-</div>
-<hr>
-<div class="refsect2" lang="en">
-<a name="iptc-log-new"></a><h3>iptc_log_new ()</h3>
-<pre class="programlisting"><a class="link" href="libiptcdata-log.html#IptcLog" title="IptcLog">IptcLog</a>*            iptc_log_new                        (void);</pre>
-<p>
-
-</p>
-<div class="variablelist"><table border="0">
-<col align="left" valign="top">
-<tbody><tr>
-<td><p><span class="term"><span class="emphasis"><em>Returns</em></span> :</span></p></td>
-<td>
-
-
-</td>
-</tr></tbody>
-</table></div>
-</div>
-<hr>
-<div class="refsect2" lang="en">
-<a name="iptc-log-new-mem"></a><h3>iptc_log_new_mem ()</h3>
-<pre class="programlisting"><a class="link" href="libiptcdata-log.html#IptcLog" title="IptcLog">IptcLog</a>*            iptc_log_new_mem                    (<a class="link" href="libiptcdata-mem.html#IptcMem" title="IptcMem">IptcMem</a> *);</pre>
-<p>
-
-</p>
-<div class="variablelist"><table border="0">
-<col align="left" valign="top">
+<div class="refsect1">
+<a name="libiptcdata-log.functions"></a><h2>Functions</h2>
+<div class="informaltable"><table width="100%" border="0">
+<colgroup>
+<col width="150px" class="functions_return">
+<col class="functions_name">
+</colgroup>
 <tbody>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>Param1</code></em> :</span></p></td>
-<td>
+<td class="function_type">
+<a class="link" href="libiptcdata-log.html#IptcLog" title="IptcLog"><span class="returnvalue">IptcLog</span></a> *
 </td>
-</tr>
-<tr>
-<td><p><span class="term"><span class="emphasis"><em>Returns</em></span> :</span></p></td>
-<td>
-
-
+<td class="function_name">
+<a class="link" href="libiptcdata-log.html#iptc-log-new" title="iptc_log_new ()">iptc_log_new</a> <span class="c_punctuation">()</span>
 </td>
 </tr>
-</tbody>
-</table></div>
-</div>
-<hr>
-<div class="refsect2" lang="en">
-<a name="iptc-log-ref"></a><h3>iptc_log_ref ()</h3>
-<pre class="programlisting">void                iptc_log_ref                        (<a class="link" href="libiptcdata-log.html#IptcLog" title="IptcLog">IptcLog</a> *log);</pre>
-<p>
-
-</p>
-<div class="variablelist"><table border="0">
-<col align="left" valign="top">
-<tbody><tr>
-<td><p><span class="term"><em class="parameter"><code>log</code></em> :</span></p></td>
-<td>
-
-
-</td>
-</tr></tbody>
-</table></div>
-</div>
-<hr>
-<div class="refsect2" lang="en">
-<a name="iptc-log-unref"></a><h3>iptc_log_unref ()</h3>
-<pre class="programlisting">void                iptc_log_unref                      (<a class="link" href="libiptcdata-log.html#IptcLog" title="IptcLog">IptcLog</a> *log);</pre>
-<p>
-
-</p>
-<div class="variablelist"><table border="0">
-<col align="left" valign="top">
-<tbody><tr>
-<td><p><span class="term"><em class="parameter"><code>log</code></em> :</span></p></td>
-<td>
-
-
-</td>
-</tr></tbody>
-</table></div>
-</div>
-<hr>
-<div class="refsect2" lang="en">
-<a name="iptc-log-free"></a><h3>iptc_log_free ()</h3>
-<pre class="programlisting">void                iptc_log_free                       (<a class="link" href="libiptcdata-log.html#IptcLog" title="IptcLog">IptcLog</a> *log);</pre>
-<p>
-
-</p>
-<div class="variablelist"><table border="0">
-<col align="left" valign="top">
-<tbody><tr>
-<td><p><span class="term"><em class="parameter"><code>log</code></em> :</span></p></td>
-<td>
-
-
-</td>
-</tr></tbody>
-</table></div>
-</div>
-<hr>
-<div class="refsect2" lang="en">
-<a name="IptcLogCode"></a><h3>enum IptcLogCode</h3>
-<pre class="programlisting">typedef enum {
-	IPTC_LOG_CODE_NONE,
-	IPTC_LOG_CODE_DEBUG,
-	IPTC_LOG_CODE_NO_MEMORY,
-	IPTC_LOG_CODE_CORRUPT_DATA
-} IptcLogCode;
-</pre>
-<p>
-
-</p>
-</div>
-<hr>
-<div class="refsect2" lang="en">
-<a name="iptc-log-code-get-title"></a><h3>iptc_log_code_get_title ()</h3>
-<pre class="programlisting">const char*         iptc_log_code_get_title             (<a class="link" href="libiptcdata-log.html#IptcLogCode" title="enum IptcLogCode">IptcLogCode</a> );</pre>
-<p>
-
-</p>
-<div class="variablelist"><table border="0">
-<col align="left" valign="top">
-<tbody>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>Param1</code></em> :</span></p></td>
-<td>
+<td class="function_type">
+<a class="link" href="libiptcdata-log.html#IptcLog" title="IptcLog"><span class="returnvalue">IptcLog</span></a> *
+</td>
+<td class="function_name">
+<a class="link" href="libiptcdata-log.html#iptc-log-new-mem" title="iptc_log_new_mem ()">iptc_log_new_mem</a> <span class="c_punctuation">()</span>
 </td>
 </tr>
 <tr>
-<td><p><span class="term"><span class="emphasis"><em>Returns</em></span> :</span></p></td>
-<td>
-
-
+<td class="function_type">
+<span class="returnvalue">void</span>
+</td>
+<td class="function_name">
+<a class="link" href="libiptcdata-log.html#iptc-log-ref" title="iptc_log_ref ()">iptc_log_ref</a> <span class="c_punctuation">()</span>
 </td>
 </tr>
-</tbody>
-</table></div>
-</div>
-<hr>
-<div class="refsect2" lang="en">
-<a name="iptc-log-code-get-message"></a><h3>iptc_log_code_get_message ()</h3>
-<pre class="programlisting">const char*         iptc_log_code_get_message           (<a class="link" href="libiptcdata-log.html#IptcLogCode" title="enum IptcLogCode">IptcLogCode</a> );</pre>
-<p>
-
-</p>
-<div class="variablelist"><table border="0">
-<col align="left" valign="top">
-<tbody>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>Param1</code></em> :</span></p></td>
-<td>
+<td class="function_type">
+<span class="returnvalue">void</span>
+</td>
+<td class="function_name">
+<a class="link" href="libiptcdata-log.html#iptc-log-unref" title="iptc_log_unref ()">iptc_log_unref</a> <span class="c_punctuation">()</span>
 </td>
 </tr>
 <tr>
-<td><p><span class="term"><span class="emphasis"><em>Returns</em></span> :</span></p></td>
-<td>
-
-
+<td class="function_type">
+<span class="returnvalue">void</span>
+</td>
+<td class="function_name">
+<a class="link" href="libiptcdata-log.html#iptc-log-free" title="iptc_log_free ()">iptc_log_free</a> <span class="c_punctuation">()</span>
 </td>
 </tr>
-</tbody>
-</table></div>
-</div>
-<hr>
-<div class="refsect2" lang="en">
-<a name="IptcLogFunc"></a><h3>IptcLogFunc ()</h3>
-<pre class="programlisting">void                (*IptcLogFunc)                      (<a class="link" href="libiptcdata-log.html#IptcLog" title="IptcLog">IptcLog</a> *log,
-                                                         <a class="link" href="libiptcdata-log.html#IptcLogCode" title="enum IptcLogCode">IptcLogCode</a> ,
-                                                         const char *domain,
-                                                         const char *format,
-                                                         va_list args,
-                                                         void *data);</pre>
-<p>
-
-</p>
-<div class="variablelist"><table border="0">
-<col align="left" valign="top">
-<tbody>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>log</code></em> :</span></p></td>
-<td>
+<td class="function_type">const <span class="returnvalue">char</span> *
+</td>
+<td class="function_name">
+<a class="link" href="libiptcdata-log.html#iptc-log-code-get-title" title="iptc_log_code_get_title ()">iptc_log_code_get_title</a> <span class="c_punctuation">()</span>
 </td>
 </tr>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>Param2</code></em> :</span></p></td>
-<td>
+<td class="function_type">const <span class="returnvalue">char</span> *
+</td>
+<td class="function_name">
+<a class="link" href="libiptcdata-log.html#iptc-log-code-get-message" title="iptc_log_code_get_message ()">iptc_log_code_get_message</a> <span class="c_punctuation">()</span>
 </td>
 </tr>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>domain</code></em> :</span></p></td>
-<td>
+<td class="function_type">
+<span class="returnvalue">void</span>
+</td>
+<td class="function_name">
+<span class="c_punctuation">(</span><a class="link" href="libiptcdata-log.html#IptcLogFunc" title="IptcLogFunc ()">*IptcLogFunc</a><span class="c_punctuation">)</span> <span class="c_punctuation">()</span>
 </td>
 </tr>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>format</code></em> :</span></p></td>
-<td>
+<td class="function_type">
+<span class="returnvalue">void</span>
+</td>
+<td class="function_name">
+<a class="link" href="libiptcdata-log.html#iptc-log-set-func" title="iptc_log_set_func ()">iptc_log_set_func</a> <span class="c_punctuation">()</span>
 </td>
 </tr>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>args</code></em> :</span></p></td>
-<td>
+<td class="function_type">
+<span class="returnvalue">void</span>
+</td>
+<td class="function_name">
+<a class="link" href="libiptcdata-log.html#iptc-log" title="iptc_log ()">iptc_log</a> <span class="c_punctuation">()</span>
 </td>
 </tr>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>data</code></em> :</span></p></td>
-<td>
-
-
+<td class="define_keyword">#define</td>
+<td class="function_name">
+<a class="link" href="libiptcdata-log.html#IPTC-LOG-NO-MEMORY:CAPS" title="IPTC_LOG_NO_MEMORY()">IPTC_LOG_NO_MEMORY</a><span class="c_punctuation">()</span>
 </td>
 </tr>
 </tbody>
 </table></div>
 </div>
-<hr>
-<div class="refsect2" lang="en">
-<a name="iptc-log-set-func"></a><h3>iptc_log_set_func ()</h3>
-<pre class="programlisting">void                iptc_log_set_func                   (<a class="link" href="libiptcdata-log.html#IptcLog" title="IptcLog">IptcLog</a> *log,
-                                                         <a class="link" href="libiptcdata-log.html#IptcLogFunc" title="IptcLogFunc ()">IptcLogFunc</a> func,
-                                                         void *data);</pre>
-<p>
-
-</p>
-<div class="variablelist"><table border="0">
-<col align="left" valign="top">
+<div class="refsect1">
+<a name="libiptcdata-log.other"></a><h2>Types and Values</h2>
+<div class="informaltable"><table width="100%" border="0">
+<colgroup>
+<col width="150px" class="name">
+<col class="description">
+</colgroup>
 <tbody>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>log</code></em> :</span></p></td>
-<td>
-</td>
+<td class="datatype_keyword"> </td>
+<td class="function_name"><a class="link" href="libiptcdata-log.html#IptcLog" title="IptcLog">IptcLog</a></td>
 </tr>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>func</code></em> :</span></p></td>
-<td>
-</td>
-</tr>
-<tr>
-<td><p><span class="term"><em class="parameter"><code>data</code></em> :</span></p></td>
-<td>
-
-
-</td>
+<td class="datatype_keyword">enum</td>
+<td class="function_name"><a class="link" href="libiptcdata-log.html#IptcLogCode" title="enum IptcLogCode">IptcLogCode</a></td>
 </tr>
 </tbody>
 </table></div>
 </div>
+<div class="refsect1">
+<a name="libiptcdata-log.description"></a><h2>Description</h2>
+<p>
+</p>
+</div>
+<div class="refsect1">
+<a name="libiptcdata-log.functions_details"></a><h2>Functions</h2>
+<div class="refsect2">
+<a name="iptc-log-new"></a><h3>iptc_log_new ()</h3>
+<pre class="programlisting"><a class="link" href="libiptcdata-log.html#IptcLog" title="IptcLog"><span class="returnvalue">IptcLog</span></a> *
+iptc_log_new (<em class="parameter"><code><span class="type">void</span></code></em>);</pre>
+<p>
+</p>
+<div class="refsect3">
+<a name="id-1.9.4.6.2.5"></a><h4>Returns</h4>
+<p></p>
+</div>
+</div>
 <hr>
-<div class="refsect2" lang="en">
-<a name="iptc-log"></a><h3>iptc_log ()</h3>
-<pre class="programlisting">void                iptc_log                            (<a class="link" href="libiptcdata-log.html#IptcLog" title="IptcLog">IptcLog</a> *log,
-                                                         <a class="link" href="libiptcdata-log.html#IptcLogCode" title="enum IptcLogCode">IptcLogCode</a> ,
-                                                         const char *domain,
-                                                         const char *format);</pre>
+<div class="refsect2">
+<a name="iptc-log-new-mem"></a><h3>iptc_log_new_mem ()</h3>
+<pre class="programlisting"><a class="link" href="libiptcdata-log.html#IptcLog" title="IptcLog"><span class="returnvalue">IptcLog</span></a> *
+iptc_log_new_mem (<em class="parameter"><code><a class="link" href="libiptcdata-mem.html#IptcMem" title="IptcMem"><span class="type">IptcMem</span></a> *Param1</code></em>);</pre>
+<p>
+</p>
+<div class="refsect3">
+<a name="id-1.9.4.6.3.5"></a><h4>Returns</h4>
+<p></p>
+</div>
+</div>
+<hr>
+<div class="refsect2">
+<a name="iptc-log-ref"></a><h3>iptc_log_ref ()</h3>
+<pre class="programlisting"><span class="returnvalue">void</span>
+iptc_log_ref (<em class="parameter"><code><a class="link" href="libiptcdata-log.html#IptcLog" title="IptcLog"><span class="type">IptcLog</span></a> *log</code></em>);</pre>
+<p>
+</p>
+</div>
+<hr>
+<div class="refsect2">
+<a name="iptc-log-unref"></a><h3>iptc_log_unref ()</h3>
+<pre class="programlisting"><span class="returnvalue">void</span>
+iptc_log_unref (<em class="parameter"><code><a class="link" href="libiptcdata-log.html#IptcLog" title="IptcLog"><span class="type">IptcLog</span></a> *log</code></em>);</pre>
+<p>
+</p>
+</div>
+<hr>
+<div class="refsect2">
+<a name="iptc-log-free"></a><h3>iptc_log_free ()</h3>
+<pre class="programlisting"><span class="returnvalue">void</span>
+iptc_log_free (<em class="parameter"><code><a class="link" href="libiptcdata-log.html#IptcLog" title="IptcLog"><span class="type">IptcLog</span></a> *log</code></em>);</pre>
+<p>
+</p>
+</div>
+<hr>
+<div class="refsect2">
+<a name="iptc-log-code-get-title"></a><h3>iptc_log_code_get_title ()</h3>
+<pre class="programlisting">const <span class="returnvalue">char</span> *
+iptc_log_code_get_title (<em class="parameter"><code><a class="link" href="libiptcdata-log.html#IptcLogCode" title="enum IptcLogCode"><span class="type">IptcLogCode</span></a> Param1</code></em>);</pre>
+<p>
+</p>
+<div class="refsect3">
+<a name="id-1.9.4.6.7.5"></a><h4>Returns</h4>
+<p></p>
+</div>
+</div>
+<hr>
+<div class="refsect2">
+<a name="iptc-log-code-get-message"></a><h3>iptc_log_code_get_message ()</h3>
+<pre class="programlisting">const <span class="returnvalue">char</span> *
+iptc_log_code_get_message (<em class="parameter"><code><a class="link" href="libiptcdata-log.html#IptcLogCode" title="enum IptcLogCode"><span class="type">IptcLogCode</span></a> Param1</code></em>);</pre>
+<p>
+</p>
+<div class="refsect3">
+<a name="id-1.9.4.6.8.5"></a><h4>Returns</h4>
+<p></p>
+</div>
+</div>
+<hr>
+<div class="refsect2">
+<a name="IptcLogFunc"></a><h3>IptcLogFunc ()</h3>
+<pre class="programlisting"><span class="returnvalue">void</span>
+<span class="c_punctuation">(</span>*IptcLogFunc<span class="c_punctuation">)</span> (<em class="parameter"><code><a class="link" href="libiptcdata-log.html#IptcLog" title="IptcLog"><span class="type">IptcLog</span></a> *log</code></em>,
+                <em class="parameter"><code><a class="link" href="libiptcdata-log.html#IptcLogCode" title="enum IptcLogCode"><span class="type">IptcLogCode</span></a> Param2</code></em>,
+                <em class="parameter"><code>const <span class="type">char</span> *domain</code></em>,
+                <em class="parameter"><code>const <span class="type">char</span> *format</code></em>,
+                <em class="parameter"><code><span class="type">va_list</span> args</code></em>,
+                <em class="parameter"><code><span class="type">void</span> *data</code></em>);</pre>
+<p>
+</p>
+</div>
+<hr>
+<div class="refsect2">
+<a name="iptc-log-set-func"></a><h3>iptc_log_set_func ()</h3>
+<pre class="programlisting"><span class="returnvalue">void</span>
+iptc_log_set_func (<em class="parameter"><code><a class="link" href="libiptcdata-log.html#IptcLog" title="IptcLog"><span class="type">IptcLog</span></a> *log</code></em>,
+                   <em class="parameter"><code><a class="link" href="libiptcdata-log.html#IptcLogFunc" title="IptcLogFunc ()"><span class="type">IptcLogFunc</span></a> func</code></em>,
+                   <em class="parameter"><code><span class="type">void</span> *data</code></em>);</pre>
+<p>
+</p>
+</div>
+<hr>
+<div class="refsect2">
+<a name="iptc-log"></a><h3>iptc_log ()</h3>
+<pre class="programlisting"><span class="returnvalue">void</span>
+iptc_log (<em class="parameter"><code><a class="link" href="libiptcdata-log.html#IptcLog" title="IptcLog"><span class="type">IptcLog</span></a> *log</code></em>,
+          <em class="parameter"><code><a class="link" href="libiptcdata-log.html#IptcLogCode" title="enum IptcLogCode"><span class="type">IptcLogCode</span></a> Param2</code></em>,
+          <em class="parameter"><code>const <span class="type">char</span> *domain</code></em>,
+          <em class="parameter"><code>const <span class="type">char</span> *format</code></em>);</pre>
 <p>
-
 </p>
-<div class="variablelist"><table border="0">
-<col align="left" valign="top">
-<tbody>
-<tr>
-<td><p><span class="term"><em class="parameter"><code>log</code></em> :</span></p></td>
-<td>
-</td>
-</tr>
-<tr>
-<td><p><span class="term"><em class="parameter"><code>Param2</code></em> :</span></p></td>
-<td>
-</td>
-</tr>
-<tr>
-<td><p><span class="term"><em class="parameter"><code>domain</code></em> :</span></p></td>
-<td>
-</td>
-</tr>
-<tr>
-<td><p><span class="term"><em class="parameter"><code>format</code></em> :</span></p></td>
-<td>
-
-
-</td>
-</tr>
-</tbody>
-</table></div>
 </div>
 <hr>
-<div class="refsect2" lang="en">
+<div class="refsect2">
 <a name="IPTC-LOG-NO-MEMORY:CAPS"></a><h3>IPTC_LOG_NO_MEMORY()</h3>
 <pre class="programlisting">#define IPTC_LOG_NO_MEMORY(l,d,s) iptc_log (l, IPTC_LOG_CODE_NO_MEMORY, d, "Could not allocate %i byte(s).", s)
 </pre>
 <p>
-
 </p>
-<div class="variablelist"><table border="0">
-<col align="left" valign="top">
+</div>
+</div>
+<div class="refsect1">
+<a name="libiptcdata-log.other_details"></a><h2>Types and Values</h2>
+<div class="refsect2">
+<a name="IptcLog"></a><h3>IptcLog</h3>
+<pre class="programlisting">typedef struct _IptcLog IptcLog;</pre>
+<p>
+</p>
+</div>
+<hr>
+<div class="refsect2">
+<a name="IptcLogCode"></a><h3>enum IptcLogCode</h3>
+<p>
+</p>
+<div class="refsect3">
+<a name="id-1.9.4.7.3.4"></a><h4>Members</h4>
+<div class="informaltable"><table width="100%" border="0">
+<colgroup>
+<col width="300px" class="enum_members_name">
+<col class="enum_members_description">
+<col width="200px" class="enum_members_annotations">
+</colgroup>
 <tbody>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>l</code></em> :</span></p></td>
-<td>
-</td>
+<td class="enum_member_name"><p><a name="IPTC-LOG-CODE-NONE:CAPS"></a>IPTC_LOG_CODE_NONE</p></td>
+<td class="enum_member_description"> </td>
+<td class="enum_member_annotations"> </td>
 </tr>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>d</code></em> :</span></p></td>
-<td>
-</td>
+<td class="enum_member_name"><p><a name="IPTC-LOG-CODE-DEBUG:CAPS"></a>IPTC_LOG_CODE_DEBUG</p></td>
+<td class="enum_member_description"> </td>
+<td class="enum_member_annotations"> </td>
 </tr>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>s</code></em> :</span></p></td>
-<td>
-
-
-</td>
+<td class="enum_member_name"><p><a name="IPTC-LOG-CODE-NO-MEMORY:CAPS"></a>IPTC_LOG_CODE_NO_MEMORY</p></td>
+<td class="enum_member_description"> </td>
+<td class="enum_member_annotations"> </td>
+</tr>
+<tr>
+<td class="enum_member_name"><p><a name="IPTC-LOG-CODE-CORRUPT-DATA:CAPS"></a>IPTC_LOG_CODE_CORRUPT_DATA</p></td>
+<td class="enum_member_description"> </td>
+<td class="enum_member_annotations"> </td>
 </tr>
 </tbody>
 </table></div>
 </div>
 </div>
 </div>
+</div>
 <div class="footer">
 <hr>
-          Generated by GTK-Doc V1.10</div>
+          Generated by GTK-Doc V1.21</div>
 </body>
-</html>
+</html>
\ No newline at end of file
--- libiptcdata-1.0.4.orig/docs/reference/html/libiptcdata-mem.html
+++ libiptcdata-1.0.4/docs/reference/html/libiptcdata-mem.html
@@ -2,341 +2,269 @@
 <html>
 <head>
 <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
-<title>Memory managment</title>
-<meta name="generator" content="DocBook XSL Stylesheets V1.74.0">
+<title>libiptcdata Reference Manual: Memory managment</title>
+<meta name="generator" content="DocBook XSL Stylesheets V1.78.1">
 <link rel="home" href="index.html" title="libiptcdata Reference Manual">
 <link rel="up" href="ch03.html" title="Helper Functions">
 <link rel="prev" href="libiptcdata-utils.html" title="Byte ordering">
 <link rel="next" href="libiptcdata-log.html" title="Error logging">
-<meta name="generator" content="GTK-Doc V1.10 (XML mode)">
+<meta name="generator" content="GTK-Doc V1.21 (XML mode)">
 <link rel="stylesheet" href="style.css" type="text/css">
-<link rel="chapter" href="ch01.html" title="IPTC Data Manipulation">
-<link rel="chapter" href="ch02.html" title="Format-specific Functions">
-<link rel="chapter" href="ch03.html" title="Helper Functions">
 </head>
 <body bgcolor="white" text="black" link="#0000FF" vlink="#840084" alink="#0000FF">
-<table class="navigation" id="top" width="100%" summary="Navigation header" cellpadding="2" cellspacing="2">
-<tr valign="middle">
-<td><a accesskey="p" href="libiptcdata-utils.html"><img src="left.png" width="24" height="24" border="0" alt="Prev"></a></td>
-<td><a accesskey="u" href="ch03.html"><img src="up.png" width="24" height="24" border="0" alt="Up"></a></td>
-<td><a accesskey="h" href="index.html"><img src="home.png" width="24" height="24" border="0" alt="Home"></a></td>
-<th width="100%" align="center">libiptcdata Reference Manual</th>
-<td><a accesskey="n" href="libiptcdata-log.html"><img src="right.png" width="24" height="24" border="0" alt="Next"></a></td>
-</tr>
-<tr><td colspan="5" class="shortcuts"><nobr><a href="#libiptcdata-mem.synopsis" class="shortcut">Top</a>
-                   | 
-                  <a href="#libiptcdata-mem.description" class="shortcut">Description</a></nobr></td></tr>
-</table>
-<div class="refentry" lang="en">
+<table class="navigation" id="top" width="100%" summary="Navigation header" cellpadding="2" cellspacing="5"><tr valign="middle">
+<td width="100%" align="left" class="shortcuts">
+<a href="#" class="shortcut">Top</a><span id="nav_description">  <span class="dim">|</span> 
+                  <a href="#libiptcdata-mem.description" class="shortcut">Description</a></span>
+</td>
+<td><a accesskey="h" href="index.html"><img src="home.png" width="16" height="16" border="0" alt="Home"></a></td>
+<td><a accesskey="u" href="ch03.html"><img src="up.png" width="16" height="16" border="0" alt="Up"></a></td>
+<td><a accesskey="p" href="libiptcdata-utils.html"><img src="left.png" width="16" height="16" border="0" alt="Prev"></a></td>
+<td><a accesskey="n" href="libiptcdata-log.html"><img src="right.png" width="16" height="16" border="0" alt="Next"></a></td>
+</tr></table>
+<div class="refentry">
 <a name="libiptcdata-mem"></a><div class="titlepage"></div>
 <div class="refnamediv"><table width="100%"><tr>
 <td valign="top">
 <h2><span class="refentrytitle"><a name="libiptcdata-mem.top_of_page"></a>Memory managment</span></h2>
 <p>Memory managment — hooks for defining your own memory managment functions</p>
 </td>
-<td valign="top" align="right"></td>
+<td class="gallery_image" valign="top" align="right"></td>
 </tr></table></div>
-<div class="refsynopsisdiv">
-<a name="libiptcdata-mem.synopsis"></a><h2>Synopsis</h2>
-<pre class="synopsis">
-void*               (<a class="link" href="libiptcdata-mem.html#IptcMemAllocFunc" title="IptcMemAllocFunc ()">*IptcMemAllocFunc</a>)                 (<a class="link" href="libiptcdata-utils.html#IptcLong" title="IptcLong">IptcLong</a> );
-void*               (<a class="link" href="libiptcdata-mem.html#IptcMemReallocFunc" title="IptcMemReallocFunc ()">*IptcMemReallocFunc</a>)               (void *,
-                                                         <a class="link" href="libiptcdata-utils.html#IptcLong" title="IptcLong">IptcLong</a> );
-void                (<a class="link" href="libiptcdata-mem.html#IptcMemFreeFunc" title="IptcMemFreeFunc ()">*IptcMemFreeFunc</a>)                  (void *);
-                    <a class="link" href="libiptcdata-mem.html#IptcMem" title="IptcMem">IptcMem</a>;
-<a class="link" href="libiptcdata-mem.html#IptcMem" title="IptcMem">IptcMem</a>*            <a class="link" href="libiptcdata-mem.html#iptc-mem-new" title="iptc_mem_new ()">iptc_mem_new</a>                        (<a class="link" href="libiptcdata-mem.html#IptcMemAllocFunc" title="IptcMemAllocFunc ()">IptcMemAllocFunc</a> ,
-                                                         <a class="link" href="libiptcdata-mem.html#IptcMemReallocFunc" title="IptcMemReallocFunc ()">IptcMemReallocFunc</a> ,
-                                                         <a class="link" href="libiptcdata-mem.html#IptcMemFreeFunc" title="IptcMemFreeFunc ()">IptcMemFreeFunc</a> );
-void                <a class="link" href="libiptcdata-mem.html#iptc-mem-ref" title="iptc_mem_ref ()">iptc_mem_ref</a>                        (<a class="link" href="libiptcdata-mem.html#IptcMem" title="IptcMem">IptcMem</a> *);
-void                <a class="link" href="libiptcdata-mem.html#iptc-mem-unref" title="iptc_mem_unref ()">iptc_mem_unref</a>                      (<a class="link" href="libiptcdata-mem.html#IptcMem" title="IptcMem">IptcMem</a> *);
-void*               <a class="link" href="libiptcdata-mem.html#iptc-mem-alloc" title="iptc_mem_alloc ()">iptc_mem_alloc</a>                      (<a class="link" href="libiptcdata-mem.html#IptcMem" title="IptcMem">IptcMem</a> *,
-                                                         <a class="link" href="libiptcdata-utils.html#IptcLong" title="IptcLong">IptcLong</a> );
-void*               <a class="link" href="libiptcdata-mem.html#iptc-mem-realloc" title="iptc_mem_realloc ()">iptc_mem_realloc</a>                    (<a class="link" href="libiptcdata-mem.html#IptcMem" title="IptcMem">IptcMem</a> *,
-                                                         void *,
-                                                         <a class="link" href="libiptcdata-utils.html#IptcLong" title="IptcLong">IptcLong</a> );
-void                <a class="link" href="libiptcdata-mem.html#iptc-mem-free" title="iptc_mem_free ()">iptc_mem_free</a>                       (<a class="link" href="libiptcdata-mem.html#IptcMem" title="IptcMem">IptcMem</a> *,
-                                                         void *);
-<a class="link" href="libiptcdata-mem.html#IptcMem" title="IptcMem">IptcMem</a>*            <a class="link" href="libiptcdata-mem.html#iptc-mem-new-default" title="iptc_mem_new_default ()">iptc_mem_new_default</a>                (void);
-</pre>
-</div>
-<div class="refsect1" lang="en">
-<a name="libiptcdata-mem.description"></a><h2>Description</h2>
-<p>
-
-</p>
-</div>
-<div class="refsect1" lang="en">
-<a name="libiptcdata-mem.details"></a><h2>Details</h2>
-<div class="refsect2" lang="en">
-<a name="IptcMemAllocFunc"></a><h3>IptcMemAllocFunc ()</h3>
-<pre class="programlisting">void*               (*IptcMemAllocFunc)                 (<a class="link" href="libiptcdata-utils.html#IptcLong" title="IptcLong">IptcLong</a> );</pre>
-<p>
-
-</p>
-<div class="variablelist"><table border="0">
-<col align="left" valign="top">
+<div class="refsect1">
+<a name="libiptcdata-mem.functions"></a><h2>Functions</h2>
+<div class="informaltable"><table width="100%" border="0">
+<colgroup>
+<col width="150px" class="functions_return">
+<col class="functions_name">
+</colgroup>
 <tbody>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>Param1</code></em> :</span></p></td>
-<td>
+<td class="function_type">
+<span class="returnvalue">void</span> *
+</td>
+<td class="function_name">
+<span class="c_punctuation">(</span><a class="link" href="libiptcdata-mem.html#IptcMemAllocFunc" title="IptcMemAllocFunc ()">*IptcMemAllocFunc</a><span class="c_punctuation">)</span> <span class="c_punctuation">()</span>
 </td>
 </tr>
 <tr>
-<td><p><span class="term"><span class="emphasis"><em>Returns</em></span> :</span></p></td>
-<td>
-
-
+<td class="function_type">
+<span class="returnvalue">void</span> *
+</td>
+<td class="function_name">
+<span class="c_punctuation">(</span><a class="link" href="libiptcdata-mem.html#IptcMemReallocFunc" title="IptcMemReallocFunc ()">*IptcMemReallocFunc</a><span class="c_punctuation">)</span> <span class="c_punctuation">()</span>
 </td>
 </tr>
-</tbody>
-</table></div>
-</div>
-<hr>
-<div class="refsect2" lang="en">
-<a name="IptcMemReallocFunc"></a><h3>IptcMemReallocFunc ()</h3>
-<pre class="programlisting">void*               (*IptcMemReallocFunc)               (void *,
-                                                         <a class="link" href="libiptcdata-utils.html#IptcLong" title="IptcLong">IptcLong</a> );</pre>
-<p>
-
-</p>
-<div class="variablelist"><table border="0">
-<col align="left" valign="top">
-<tbody>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>Param1</code></em> :</span></p></td>
-<td>
+<td class="function_type">
+<span class="returnvalue">void</span>
+</td>
+<td class="function_name">
+<span class="c_punctuation">(</span><a class="link" href="libiptcdata-mem.html#IptcMemFreeFunc" title="IptcMemFreeFunc ()">*IptcMemFreeFunc</a><span class="c_punctuation">)</span> <span class="c_punctuation">()</span>
 </td>
 </tr>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>Param2</code></em> :</span></p></td>
-<td>
+<td class="function_type">
+<a class="link" href="libiptcdata-mem.html#IptcMem" title="IptcMem"><span class="returnvalue">IptcMem</span></a> *
+</td>
+<td class="function_name">
+<a class="link" href="libiptcdata-mem.html#iptc-mem-new" title="iptc_mem_new ()">iptc_mem_new</a> <span class="c_punctuation">()</span>
 </td>
 </tr>
 <tr>
-<td><p><span class="term"><span class="emphasis"><em>Returns</em></span> :</span></p></td>
-<td>
-
-
+<td class="function_type">
+<span class="returnvalue">void</span>
+</td>
+<td class="function_name">
+<a class="link" href="libiptcdata-mem.html#iptc-mem-ref" title="iptc_mem_ref ()">iptc_mem_ref</a> <span class="c_punctuation">()</span>
 </td>
 </tr>
-</tbody>
-</table></div>
-</div>
-<hr>
-<div class="refsect2" lang="en">
-<a name="IptcMemFreeFunc"></a><h3>IptcMemFreeFunc ()</h3>
-<pre class="programlisting">void                (*IptcMemFreeFunc)                  (void *);</pre>
-<p>
-
-</p>
-<div class="variablelist"><table border="0">
-<col align="left" valign="top">
-<tbody><tr>
-<td><p><span class="term"><em class="parameter"><code>Param1</code></em> :</span></p></td>
-<td>
-
-
+<tr>
+<td class="function_type">
+<span class="returnvalue">void</span>
 </td>
-</tr></tbody>
-</table></div>
-</div>
-<hr>
-<div class="refsect2" lang="en">
-<a name="IptcMem"></a><h3>IptcMem</h3>
-<pre class="programlisting">typedef struct _IptcMem IptcMem;</pre>
-<p>
-
-</p>
-</div>
-<hr>
-<div class="refsect2" lang="en">
-<a name="iptc-mem-new"></a><h3>iptc_mem_new ()</h3>
-<pre class="programlisting"><a class="link" href="libiptcdata-mem.html#IptcMem" title="IptcMem">IptcMem</a>*            iptc_mem_new                        (<a class="link" href="libiptcdata-mem.html#IptcMemAllocFunc" title="IptcMemAllocFunc ()">IptcMemAllocFunc</a> ,
-                                                         <a class="link" href="libiptcdata-mem.html#IptcMemReallocFunc" title="IptcMemReallocFunc ()">IptcMemReallocFunc</a> ,
-                                                         <a class="link" href="libiptcdata-mem.html#IptcMemFreeFunc" title="IptcMemFreeFunc ()">IptcMemFreeFunc</a> );</pre>
-<p>
-
-</p>
-<div class="variablelist"><table border="0">
-<col align="left" valign="top">
-<tbody>
+<td class="function_name">
+<a class="link" href="libiptcdata-mem.html#iptc-mem-unref" title="iptc_mem_unref ()">iptc_mem_unref</a> <span class="c_punctuation">()</span>
+</td>
+</tr>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>Param1</code></em> :</span></p></td>
-<td>
+<td class="function_type">
+<span class="returnvalue">void</span> *
+</td>
+<td class="function_name">
+<a class="link" href="libiptcdata-mem.html#iptc-mem-alloc" title="iptc_mem_alloc ()">iptc_mem_alloc</a> <span class="c_punctuation">()</span>
 </td>
 </tr>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>Param2</code></em> :</span></p></td>
-<td>
+<td class="function_type">
+<span class="returnvalue">void</span> *
+</td>
+<td class="function_name">
+<a class="link" href="libiptcdata-mem.html#iptc-mem-realloc" title="iptc_mem_realloc ()">iptc_mem_realloc</a> <span class="c_punctuation">()</span>
 </td>
 </tr>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>Param3</code></em> :</span></p></td>
-<td>
+<td class="function_type">
+<span class="returnvalue">void</span>
+</td>
+<td class="function_name">
+<a class="link" href="libiptcdata-mem.html#iptc-mem-free" title="iptc_mem_free ()">iptc_mem_free</a> <span class="c_punctuation">()</span>
 </td>
 </tr>
 <tr>
-<td><p><span class="term"><span class="emphasis"><em>Returns</em></span> :</span></p></td>
-<td>
-
-
+<td class="function_type">
+<a class="link" href="libiptcdata-mem.html#IptcMem" title="IptcMem"><span class="returnvalue">IptcMem</span></a> *
+</td>
+<td class="function_name">
+<a class="link" href="libiptcdata-mem.html#iptc-mem-new-default" title="iptc_mem_new_default ()">iptc_mem_new_default</a> <span class="c_punctuation">()</span>
 </td>
 </tr>
 </tbody>
 </table></div>
 </div>
-<hr>
-<div class="refsect2" lang="en">
-<a name="iptc-mem-ref"></a><h3>iptc_mem_ref ()</h3>
-<pre class="programlisting">void                iptc_mem_ref                        (<a class="link" href="libiptcdata-mem.html#IptcMem" title="IptcMem">IptcMem</a> *);</pre>
-<p>
-
-</p>
-<div class="variablelist"><table border="0">
-<col align="left" valign="top">
+<div class="refsect1">
+<a name="libiptcdata-mem.other"></a><h2>Types and Values</h2>
+<div class="informaltable"><table width="100%" border="0">
+<colgroup>
+<col width="150px" class="name">
+<col class="description">
+</colgroup>
 <tbody><tr>
-<td><p><span class="term"><em class="parameter"><code>Param1</code></em> :</span></p></td>
-<td>
-
-
-</td>
+<td class="datatype_keyword"> </td>
+<td class="function_name"><a class="link" href="libiptcdata-mem.html#IptcMem" title="IptcMem">IptcMem</a></td>
 </tr></tbody>
 </table></div>
 </div>
+<div class="refsect1">
+<a name="libiptcdata-mem.description"></a><h2>Description</h2>
+<p>
+</p>
+</div>
+<div class="refsect1">
+<a name="libiptcdata-mem.functions_details"></a><h2>Functions</h2>
+<div class="refsect2">
+<a name="IptcMemAllocFunc"></a><h3>IptcMemAllocFunc ()</h3>
+<pre class="programlisting"><span class="returnvalue">void</span> *
+<span class="c_punctuation">(</span>*IptcMemAllocFunc<span class="c_punctuation">)</span> (<em class="parameter"><code><a class="link" href="libiptcdata-utils.html#IptcLong" title="IptcLong"><span class="type">IptcLong</span></a> Param1</code></em>);</pre>
+<p>
+</p>
+<div class="refsect3">
+<a name="id-1.9.3.6.2.5"></a><h4>Returns</h4>
+<p></p>
+</div>
+</div>
 <hr>
-<div class="refsect2" lang="en">
-<a name="iptc-mem-unref"></a><h3>iptc_mem_unref ()</h3>
-<pre class="programlisting">void                iptc_mem_unref                      (<a class="link" href="libiptcdata-mem.html#IptcMem" title="IptcMem">IptcMem</a> *);</pre>
+<div class="refsect2">
+<a name="IptcMemReallocFunc"></a><h3>IptcMemReallocFunc ()</h3>
+<pre class="programlisting"><span class="returnvalue">void</span> *
+<span class="c_punctuation">(</span>*IptcMemReallocFunc<span class="c_punctuation">)</span> (<em class="parameter"><code><span class="type">void</span> *Param1</code></em>,
+                       <em class="parameter"><code><a class="link" href="libiptcdata-utils.html#IptcLong" title="IptcLong"><span class="type">IptcLong</span></a> Param2</code></em>);</pre>
 <p>
-
 </p>
-<div class="variablelist"><table border="0">
-<col align="left" valign="top">
-<tbody><tr>
-<td><p><span class="term"><em class="parameter"><code>Param1</code></em> :</span></p></td>
-<td>
-
-
-</td>
-</tr></tbody>
-</table></div>
+<div class="refsect3">
+<a name="id-1.9.3.6.3.5"></a><h4>Returns</h4>
+<p></p>
+</div>
 </div>
 <hr>
-<div class="refsect2" lang="en">
-<a name="iptc-mem-alloc"></a><h3>iptc_mem_alloc ()</h3>
-<pre class="programlisting">void*               iptc_mem_alloc                      (<a class="link" href="libiptcdata-mem.html#IptcMem" title="IptcMem">IptcMem</a> *,
-                                                         <a class="link" href="libiptcdata-utils.html#IptcLong" title="IptcLong">IptcLong</a> );</pre>
+<div class="refsect2">
+<a name="IptcMemFreeFunc"></a><h3>IptcMemFreeFunc ()</h3>
+<pre class="programlisting"><span class="returnvalue">void</span>
+<span class="c_punctuation">(</span>*IptcMemFreeFunc<span class="c_punctuation">)</span> (<em class="parameter"><code><span class="type">void</span> *Param1</code></em>);</pre>
 <p>
-
 </p>
-<div class="variablelist"><table border="0">
-<col align="left" valign="top">
-<tbody>
-<tr>
-<td><p><span class="term"><em class="parameter"><code>Param1</code></em> :</span></p></td>
-<td>
-</td>
-</tr>
-<tr>
-<td><p><span class="term"><em class="parameter"><code>Param2</code></em> :</span></p></td>
-<td>
-</td>
-</tr>
-<tr>
-<td><p><span class="term"><span class="emphasis"><em>Returns</em></span> :</span></p></td>
-<td>
-
-
-</td>
-</tr>
-</tbody>
-</table></div>
 </div>
 <hr>
-<div class="refsect2" lang="en">
-<a name="iptc-mem-realloc"></a><h3>iptc_mem_realloc ()</h3>
-<pre class="programlisting">void*               iptc_mem_realloc                    (<a class="link" href="libiptcdata-mem.html#IptcMem" title="IptcMem">IptcMem</a> *,
-                                                         void *,
-                                                         <a class="link" href="libiptcdata-utils.html#IptcLong" title="IptcLong">IptcLong</a> );</pre>
+<div class="refsect2">
+<a name="iptc-mem-new"></a><h3>iptc_mem_new ()</h3>
+<pre class="programlisting"><a class="link" href="libiptcdata-mem.html#IptcMem" title="IptcMem"><span class="returnvalue">IptcMem</span></a> *
+iptc_mem_new (<em class="parameter"><code><a class="link" href="libiptcdata-mem.html#IptcMemAllocFunc" title="IptcMemAllocFunc ()"><span class="type">IptcMemAllocFunc</span></a> Param1</code></em>,
+              <em class="parameter"><code><a class="link" href="libiptcdata-mem.html#IptcMemReallocFunc" title="IptcMemReallocFunc ()"><span class="type">IptcMemReallocFunc</span></a> Param2</code></em>,
+              <em class="parameter"><code><a class="link" href="libiptcdata-mem.html#IptcMemFreeFunc" title="IptcMemFreeFunc ()"><span class="type">IptcMemFreeFunc</span></a> Param3</code></em>);</pre>
 <p>
-
 </p>
-<div class="variablelist"><table border="0">
-<col align="left" valign="top">
-<tbody>
-<tr>
-<td><p><span class="term"><em class="parameter"><code>Param1</code></em> :</span></p></td>
-<td>
-</td>
-</tr>
-<tr>
-<td><p><span class="term"><em class="parameter"><code>Param2</code></em> :</span></p></td>
-<td>
-</td>
-</tr>
-<tr>
-<td><p><span class="term"><em class="parameter"><code>Param3</code></em> :</span></p></td>
-<td>
-</td>
-</tr>
-<tr>
-<td><p><span class="term"><span class="emphasis"><em>Returns</em></span> :</span></p></td>
-<td>
-
-
-</td>
-</tr>
-</tbody>
-</table></div>
+<div class="refsect3">
+<a name="id-1.9.3.6.5.5"></a><h4>Returns</h4>
+<p></p>
+</div>
 </div>
 <hr>
-<div class="refsect2" lang="en">
-<a name="iptc-mem-free"></a><h3>iptc_mem_free ()</h3>
-<pre class="programlisting">void                iptc_mem_free                       (<a class="link" href="libiptcdata-mem.html#IptcMem" title="IptcMem">IptcMem</a> *,
-                                                         void *);</pre>
+<div class="refsect2">
+<a name="iptc-mem-ref"></a><h3>iptc_mem_ref ()</h3>
+<pre class="programlisting"><span class="returnvalue">void</span>
+iptc_mem_ref (<em class="parameter"><code><a class="link" href="libiptcdata-mem.html#IptcMem" title="IptcMem"><span class="type">IptcMem</span></a> *Param1</code></em>);</pre>
 <p>
-
 </p>
-<div class="variablelist"><table border="0">
-<col align="left" valign="top">
-<tbody>
-<tr>
-<td><p><span class="term"><em class="parameter"><code>Param1</code></em> :</span></p></td>
-<td>
-</td>
-</tr>
-<tr>
-<td><p><span class="term"><em class="parameter"><code>Param2</code></em> :</span></p></td>
-<td>
-
-
-</td>
-</tr>
-</tbody>
-</table></div>
 </div>
 <hr>
-<div class="refsect2" lang="en">
-<a name="iptc-mem-new-default"></a><h3>iptc_mem_new_default ()</h3>
-<pre class="programlisting"><a class="link" href="libiptcdata-mem.html#IptcMem" title="IptcMem">IptcMem</a>*            iptc_mem_new_default                (void);</pre>
+<div class="refsect2">
+<a name="iptc-mem-unref"></a><h3>iptc_mem_unref ()</h3>
+<pre class="programlisting"><span class="returnvalue">void</span>
+iptc_mem_unref (<em class="parameter"><code><a class="link" href="libiptcdata-mem.html#IptcMem" title="IptcMem"><span class="type">IptcMem</span></a> *Param1</code></em>);</pre>
+<p>
+</p>
+</div>
+<hr>
+<div class="refsect2">
+<a name="iptc-mem-alloc"></a><h3>iptc_mem_alloc ()</h3>
+<pre class="programlisting"><span class="returnvalue">void</span> *
+iptc_mem_alloc (<em class="parameter"><code><a class="link" href="libiptcdata-mem.html#IptcMem" title="IptcMem"><span class="type">IptcMem</span></a> *Param1</code></em>,
+                <em class="parameter"><code><a class="link" href="libiptcdata-utils.html#IptcLong" title="IptcLong"><span class="type">IptcLong</span></a> Param2</code></em>);</pre>
+<p>
+</p>
+<div class="refsect3">
+<a name="id-1.9.3.6.8.5"></a><h4>Returns</h4>
+<p></p>
+</div>
+</div>
+<hr>
+<div class="refsect2">
+<a name="iptc-mem-realloc"></a><h3>iptc_mem_realloc ()</h3>
+<pre class="programlisting"><span class="returnvalue">void</span> *
+iptc_mem_realloc (<em class="parameter"><code><a class="link" href="libiptcdata-mem.html#IptcMem" title="IptcMem"><span class="type">IptcMem</span></a> *Param1</code></em>,
+                  <em class="parameter"><code><span class="type">void</span> *Param2</code></em>,
+                  <em class="parameter"><code><a class="link" href="libiptcdata-utils.html#IptcLong" title="IptcLong"><span class="type">IptcLong</span></a> Param3</code></em>);</pre>
+<p>
+</p>
+<div class="refsect3">
+<a name="id-1.9.3.6.9.5"></a><h4>Returns</h4>
+<p></p>
+</div>
+</div>
+<hr>
+<div class="refsect2">
+<a name="iptc-mem-free"></a><h3>iptc_mem_free ()</h3>
+<pre class="programlisting"><span class="returnvalue">void</span>
+iptc_mem_free (<em class="parameter"><code><a class="link" href="libiptcdata-mem.html#IptcMem" title="IptcMem"><span class="type">IptcMem</span></a> *Param1</code></em>,
+               <em class="parameter"><code><span class="type">void</span> *Param2</code></em>);</pre>
+<p>
+</p>
+</div>
+<hr>
+<div class="refsect2">
+<a name="iptc-mem-new-default"></a><h3>iptc_mem_new_default ()</h3>
+<pre class="programlisting"><a class="link" href="libiptcdata-mem.html#IptcMem" title="IptcMem"><span class="returnvalue">IptcMem</span></a> *
+iptc_mem_new_default (<em class="parameter"><code><span class="type">void</span></code></em>);</pre>
+<p>
+</p>
+<div class="refsect3">
+<a name="id-1.9.3.6.11.5"></a><h4>Returns</h4>
+<p></p>
+</div>
+</div>
+</div>
+<div class="refsect1">
+<a name="libiptcdata-mem.other_details"></a><h2>Types and Values</h2>
+<div class="refsect2">
+<a name="IptcMem"></a><h3>IptcMem</h3>
+<pre class="programlisting">typedef struct _IptcMem IptcMem;</pre>
 <p>
-
 </p>
-<div class="variablelist"><table border="0">
-<col align="left" valign="top">
-<tbody><tr>
-<td><p><span class="term"><span class="emphasis"><em>Returns</em></span> :</span></p></td>
-<td>
-
-
-</td>
-</tr></tbody>
-</table></div>
 </div>
 </div>
 </div>
 <div class="footer">
 <hr>
-          Generated by GTK-Doc V1.10</div>
+          Generated by GTK-Doc V1.21</div>
 </body>
-</html>
+</html>
\ No newline at end of file
--- libiptcdata-1.0.4.orig/docs/reference/html/libiptcdata-tag.html
+++ libiptcdata-1.0.4/docs/reference/html/libiptcdata-tag.html
@@ -2,663 +2,1110 @@
 <html>
 <head>
 <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
-<title>Tag Specifications</title>
-<meta name="generator" content="DocBook XSL Stylesheets V1.74.0">
+<title>libiptcdata Reference Manual: Tag Specifications</title>
+<meta name="generator" content="DocBook XSL Stylesheets V1.78.1">
 <link rel="home" href="index.html" title="libiptcdata Reference Manual">
 <link rel="up" href="ch01.html" title="IPTC Data Manipulation">
 <link rel="prev" href="libiptcdata-dataset.html" title="Datasets">
 <link rel="next" href="ch02.html" title="Format-specific Functions">
-<meta name="generator" content="GTK-Doc V1.10 (XML mode)">
+<meta name="generator" content="GTK-Doc V1.21 (XML mode)">
 <link rel="stylesheet" href="style.css" type="text/css">
-<link rel="chapter" href="ch01.html" title="IPTC Data Manipulation">
-<link rel="chapter" href="ch02.html" title="Format-specific Functions">
-<link rel="chapter" href="ch03.html" title="Helper Functions">
 </head>
 <body bgcolor="white" text="black" link="#0000FF" vlink="#840084" alink="#0000FF">
-<table class="navigation" id="top" width="100%" summary="Navigation header" cellpadding="2" cellspacing="2">
-<tr valign="middle">
-<td><a accesskey="p" href="libiptcdata-dataset.html"><img src="left.png" width="24" height="24" border="0" alt="Prev"></a></td>
-<td><a accesskey="u" href="ch01.html"><img src="up.png" width="24" height="24" border="0" alt="Up"></a></td>
-<td><a accesskey="h" href="index.html"><img src="home.png" width="24" height="24" border="0" alt="Home"></a></td>
-<th width="100%" align="center">libiptcdata Reference Manual</th>
-<td><a accesskey="n" href="ch02.html"><img src="right.png" width="24" height="24" border="0" alt="Next"></a></td>
-</tr>
-<tr><td colspan="5" class="shortcuts"><nobr><a href="#libiptcdata-tag.synopsis" class="shortcut">Top</a>
-                   | 
-                  <a href="#libiptcdata-tag.description" class="shortcut">Description</a></nobr></td></tr>
-</table>
-<div class="refentry" lang="en">
+<table class="navigation" id="top" width="100%" summary="Navigation header" cellpadding="2" cellspacing="5"><tr valign="middle">
+<td width="100%" align="left" class="shortcuts">
+<a href="#" class="shortcut">Top</a><span id="nav_description">  <span class="dim">|</span> 
+                  <a href="#libiptcdata-tag.description" class="shortcut">Description</a></span>
+</td>
+<td><a accesskey="h" href="index.html"><img src="home.png" width="16" height="16" border="0" alt="Home"></a></td>
+<td><a accesskey="u" href="ch01.html"><img src="up.png" width="16" height="16" border="0" alt="Up"></a></td>
+<td><a accesskey="p" href="libiptcdata-dataset.html"><img src="left.png" width="16" height="16" border="0" alt="Prev"></a></td>
+<td><a accesskey="n" href="ch02.html"><img src="right.png" width="16" height="16" border="0" alt="Next"></a></td>
+</tr></table>
+<div class="refentry">
 <a name="libiptcdata-tag"></a><div class="titlepage"></div>
 <div class="refnamediv"><table width="100%"><tr>
 <td valign="top">
 <h2><span class="refentrytitle"><a name="libiptcdata-tag.top_of_page"></a>Tag Specifications</span></h2>
 <p>Tag Specifications — querying tag usage information from the IPTC IIM specification</p>
 </td>
-<td valign="top" align="right"></td>
+<td class="gallery_image" valign="top" align="right"></td>
 </tr></table></div>
-<div class="refsynopsisdiv">
-<a name="libiptcdata-tag.synopsis"></a><h2>Synopsis</h2>
-<pre class="synopsis">
-enum                <a class="link" href="libiptcdata-tag.html#IptcRecord" title="enum IptcRecord">IptcRecord</a>;
-enum                <a class="link" href="libiptcdata-tag.html#IptcTag" title="enum IptcTag">IptcTag</a>;
-
-                    <a class="link" href="libiptcdata-tag.html#IptcTagInfo" title="IptcTagInfo">IptcTagInfo</a>;
-enum                <a class="link" href="libiptcdata-tag.html#IptcFormat" title="enum IptcFormat">IptcFormat</a>;
-enum                <a class="link" href="libiptcdata-tag.html#IptcMandatory" title="enum IptcMandatory">IptcMandatory</a>;
-enum                <a class="link" href="libiptcdata-tag.html#IptcRepeatable" title="enum IptcRepeatable">IptcRepeatable</a>;
-
-const char*         <a class="link" href="libiptcdata-tag.html#iptc-tag-get-name" title="iptc_tag_get_name ()">iptc_tag_get_name</a>                   (<a class="link" href="libiptcdata-tag.html#IptcRecord" title="enum IptcRecord">IptcRecord</a> record,
-                                                         <a class="link" href="libiptcdata-tag.html#IptcTag" title="enum IptcTag">IptcTag</a> tag);
-char*               <a class="link" href="libiptcdata-tag.html#iptc-tag-get-title" title="iptc_tag_get_title ()">iptc_tag_get_title</a>                  (<a class="link" href="libiptcdata-tag.html#IptcRecord" title="enum IptcRecord">IptcRecord</a> record,
-                                                         <a class="link" href="libiptcdata-tag.html#IptcTag" title="enum IptcTag">IptcTag</a> tag);
-char*               <a class="link" href="libiptcdata-tag.html#iptc-tag-get-description" title="iptc_tag_get_description ()">iptc_tag_get_description</a>            (<a class="link" href="libiptcdata-tag.html#IptcRecord" title="enum IptcRecord">IptcRecord</a> record,
-                                                         <a class="link" href="libiptcdata-tag.html#IptcTag" title="enum IptcTag">IptcTag</a> tag);
-const <a class="link" href="libiptcdata-tag.html#IptcTagInfo" title="IptcTagInfo">IptcTagInfo</a>*  <a class="link" href="libiptcdata-tag.html#iptc-tag-get-info" title="iptc_tag_get_info ()">iptc_tag_get_info</a>                   (<a class="link" href="libiptcdata-tag.html#IptcRecord" title="enum IptcRecord">IptcRecord</a> record,
-                                                         <a class="link" href="libiptcdata-tag.html#IptcTag" title="enum IptcTag">IptcTag</a> tag);
-char*               <a class="link" href="libiptcdata-tag.html#iptc-format-get-name" title="iptc_format_get_name ()">iptc_format_get_name</a>                (<a class="link" href="libiptcdata-tag.html#IptcFormat" title="enum IptcFormat">IptcFormat</a> format);
-int                 <a class="link" href="libiptcdata-tag.html#iptc-tag-find-by-name" title="iptc_tag_find_by_name ()">iptc_tag_find_by_name</a>               (const char *name,
-                                                         <a class="link" href="libiptcdata-tag.html#IptcRecord" title="enum IptcRecord">IptcRecord</a> *record,
-                                                         <a class="link" href="libiptcdata-tag.html#IptcTag" title="enum IptcTag">IptcTag</a> *tag);
-</pre>
-</div>
-<div class="refsect1" lang="en">
-<a name="libiptcdata-tag.description"></a><h2>Description</h2>
-<p>
-These functions allow queries to the <a class="ulink" href="http://www.iptc.org/IIM" target="_top">IPTC IIM
-specification</a> which contains information about the purpose of each IPTC
-tag, along with any requirements such as maximum/minimum data length, data type,
-repeatability and whether the tag is mandatory.
-</p>
-</div>
-<div class="refsect1" lang="en">
-<a name="libiptcdata-tag.details"></a><h2>Details</h2>
-<div class="refsect2" lang="en">
-<a name="IptcRecord"></a><h3>enum IptcRecord</h3>
-<pre class="programlisting">typedef enum {
-	IPTC_RECORD_OBJECT_ENV		= 1,
-	IPTC_RECORD_APP_2		= 2,
-	IPTC_RECORD_APP_3		= 3,
-	IPTC_RECORD_APP_4		= 4,
-	IPTC_RECORD_APP_5		= 5,
-	IPTC_RECORD_APP_6		= 6,
-	IPTC_RECORD_PREOBJ_DATA		= 7,
-	IPTC_RECORD_OBJ_DATA		= 8,
-	IPTC_RECORD_POSTOBJ_DATA	= 9
-} IptcRecord;
-</pre>
-<p>
-The record number that, together with the tag number (<a class="link" href="libiptcdata-tag.html#IptcTag" title="enum IptcTag"><span class="type">IptcTag</span></a>),
-uniquely identifies the purpose of a tag.
-</p>
-<div class="variablelist"><table border="0">
-<col align="left" valign="top">
+<div class="refsect1">
+<a name="libiptcdata-tag.functions"></a><h2>Functions</h2>
+<div class="informaltable"><table width="100%" border="0">
+<colgroup>
+<col width="150px" class="functions_return">
+<col class="functions_name">
+</colgroup>
 <tbody>
 <tr>
-<td><p><a name="IPTC-RECORD-OBJECT-ENV:CAPS"></a><span class="term"><code class="literal">IPTC_RECORD_OBJECT_ENV</code></span></p></td>
-<td>the record used for file information such
-as file format, version, unique identifier, etc.  This is often
-not used for photo-management applications.
+<td class="function_type">const <span class="returnvalue">char</span> *
+</td>
+<td class="function_name">
+<a class="link" href="libiptcdata-tag.html#iptc-tag-get-name" title="iptc_tag_get_name ()">iptc_tag_get_name</a> <span class="c_punctuation">()</span>
 </td>
 </tr>
 <tr>
-<td><p><a name="IPTC-RECORD-APP-2:CAPS"></a><span class="term"><code class="literal">IPTC_RECORD_APP_2</code></span></p></td>
-<td>the record used for application-specific tags
-such as Caption, Keywords, etc.
+<td class="function_type">
+<span class="returnvalue">char</span> *
+</td>
+<td class="function_name">
+<a class="link" href="libiptcdata-tag.html#iptc-tag-get-title" title="iptc_tag_get_title ()">iptc_tag_get_title</a> <span class="c_punctuation">()</span>
 </td>
 </tr>
 <tr>
-<td><p><a name="IPTC-RECORD-APP-3:CAPS"></a><span class="term"><code class="literal">IPTC_RECORD_APP_3</code></span></p></td>
-<td>application-specific tags
+<td class="function_type">
+<span class="returnvalue">char</span> *
+</td>
+<td class="function_name">
+<a class="link" href="libiptcdata-tag.html#iptc-tag-get-description" title="iptc_tag_get_description ()">iptc_tag_get_description</a> <span class="c_punctuation">()</span>
 </td>
 </tr>
 <tr>
-<td><p><a name="IPTC-RECORD-APP-4:CAPS"></a><span class="term"><code class="literal">IPTC_RECORD_APP_4</code></span></p></td>
-<td>application-specific tags
+<td class="function_type">const <a class="link" href="libiptcdata-tag.html#IptcTagInfo" title="struct IptcTagInfo"><span class="returnvalue">IptcTagInfo</span></a> *
+</td>
+<td class="function_name">
+<a class="link" href="libiptcdata-tag.html#iptc-tag-get-info" title="iptc_tag_get_info ()">iptc_tag_get_info</a> <span class="c_punctuation">()</span>
 </td>
 </tr>
 <tr>
-<td><p><a name="IPTC-RECORD-APP-5:CAPS"></a><span class="term"><code class="literal">IPTC_RECORD_APP_5</code></span></p></td>
-<td>application-specific tags
+<td class="function_type">
+<span class="returnvalue">char</span> *
+</td>
+<td class="function_name">
+<a class="link" href="libiptcdata-tag.html#iptc-format-get-name" title="iptc_format_get_name ()">iptc_format_get_name</a> <span class="c_punctuation">()</span>
 </td>
 </tr>
 <tr>
-<td><p><a name="IPTC-RECORD-APP-6:CAPS"></a><span class="term"><code class="literal">IPTC_RECORD_APP_6</code></span></p></td>
-<td>application-specific tags
+<td class="function_type">
+<span class="returnvalue">int</span>
+</td>
+<td class="function_name">
+<a class="link" href="libiptcdata-tag.html#iptc-tag-find-by-name" title="iptc_tag_find_by_name ()">iptc_tag_find_by_name</a> <span class="c_punctuation">()</span>
 </td>
 </tr>
+</tbody>
+</table></div>
+</div>
+<div class="refsect1">
+<a name="libiptcdata-tag.other"></a><h2>Types and Values</h2>
+<div class="informaltable"><table width="100%" border="0">
+<colgroup>
+<col width="150px" class="name">
+<col class="description">
+</colgroup>
+<tbody>
 <tr>
-<td><p><a name="IPTC-RECORD-PREOBJ-DATA:CAPS"></a><span class="term"><code class="literal">IPTC_RECORD_PREOBJ_DATA</code></span></p></td>
-<td>contains information about an encapsulated file
-</td>
+<td class="datatype_keyword">enum</td>
+<td class="function_name"><a class="link" href="libiptcdata-tag.html#IptcRecord" title="enum IptcRecord">IptcRecord</a></td>
 </tr>
 <tr>
-<td><p><a name="IPTC-RECORD-OBJ-DATA:CAPS"></a><span class="term"><code class="literal">IPTC_RECORD_OBJ_DATA</code></span></p></td>
-<td>the encapsulated file data (usually not used)
-</td>
+<td class="datatype_keyword">enum</td>
+<td class="function_name"><a class="link" href="libiptcdata-tag.html#IptcTag" title="enum IptcTag">IptcTag</a></td>
 </tr>
 <tr>
-<td><p><a name="IPTC-RECORD-POSTOBJ-DATA:CAPS"></a><span class="term"><code class="literal">IPTC_RECORD_POSTOBJ_DATA</code></span></p></td>
-<td>followup information about an encapsulated file
-
-</td>
+<td class="datatype_keyword">struct</td>
+<td class="function_name"><a class="link" href="libiptcdata-tag.html#IptcTagInfo" title="struct IptcTagInfo">IptcTagInfo</a></td>
+</tr>
+<tr>
+<td class="datatype_keyword">enum</td>
+<td class="function_name"><a class="link" href="libiptcdata-tag.html#IptcFormat" title="enum IptcFormat">IptcFormat</a></td>
+</tr>
+<tr>
+<td class="datatype_keyword">enum</td>
+<td class="function_name"><a class="link" href="libiptcdata-tag.html#IptcMandatory" title="enum IptcMandatory">IptcMandatory</a></td>
+</tr>
+<tr>
+<td class="datatype_keyword">enum</td>
+<td class="function_name"><a class="link" href="libiptcdata-tag.html#IptcRepeatable" title="enum IptcRepeatable">IptcRepeatable</a></td>
 </tr>
 </tbody>
 </table></div>
 </div>
-<hr>
-<div class="refsect2" lang="en">
-<a name="IptcTag"></a><h3>enum IptcTag</h3>
-<pre class="programlisting">typedef enum {
-	IPTC_TAG_MODEL_VERSION		= 0,	/* Begin record 1 tags */
-	IPTC_TAG_DESTINATION		= 5,
-	IPTC_TAG_FILE_FORMAT		= 20,
-	IPTC_TAG_FILE_VERSION		= 22,
-	IPTC_TAG_SERVICE_ID		= 30,
-	IPTC_TAG_ENVELOPE_NUM		= 40,
-	IPTC_TAG_PRODUCT_ID		= 50,
-	IPTC_TAG_ENVELOPE_PRIORITY	= 60,
-	IPTC_TAG_DATE_SENT		= 70,
-	IPTC_TAG_TIME_SENT		= 80,
-	IPTC_TAG_CHARACTER_SET		= 90,
-	IPTC_TAG_UNO			= 100,
-	IPTC_TAG_ARM_ID			= 120,
-	IPTC_TAG_ARM_VERSION		= 122,	/* End record 1 tags */
-	IPTC_TAG_RECORD_VERSION		= 0,	/* Begin record 2 tags */
-	IPTC_TAG_OBJECT_TYPE		= 3,
-	IPTC_TAG_OBJECT_ATTRIBUTE	= 4,
-	IPTC_TAG_OBJECT_NAME		= 5,
-	IPTC_TAG_EDIT_STATUS		= 7,
-	IPTC_TAG_EDITORIAL_UPDATE	= 8,
-	IPTC_TAG_URGENCY		= 10,
-	IPTC_TAG_SUBJECT_REFERENCE	= 12,
-	IPTC_TAG_CATEGORY		= 15,
-	IPTC_TAG_SUPPL_CATEGORY		= 20,
-	IPTC_TAG_FIXTURE_ID		= 22,
-	IPTC_TAG_KEYWORDS		= 25,
-	IPTC_TAG_CONTENT_LOC_CODE	= 26,
-	IPTC_TAG_CONTENT_LOC_NAME	= 27,
-	IPTC_TAG_RELEASE_DATE		= 30,
-	IPTC_TAG_RELEASE_TIME		= 35,
-	IPTC_TAG_EXPIRATION_DATE	= 37,
-	IPTC_TAG_EXPIRATION_TIME	= 38,
-	IPTC_TAG_SPECIAL_INSTRUCTIONS	= 40,
-	IPTC_TAG_ACTION_ADVISED		= 42,
-	IPTC_TAG_REFERENCE_SERVICE	= 45,
-	IPTC_TAG_REFERENCE_DATE		= 47,
-	IPTC_TAG_REFERENCE_NUMBER	= 50,
-	IPTC_TAG_DATE_CREATED		= 55,
-	IPTC_TAG_TIME_CREATED		= 60,
-	IPTC_TAG_DIGITAL_CREATION_DATE	= 62,
-	IPTC_TAG_DIGITAL_CREATION_TIME	= 63,
-	IPTC_TAG_ORIGINATING_PROGRAM	= 65,
-	IPTC_TAG_PROGRAM_VERSION	= 70,
-	IPTC_TAG_OBJECT_CYCLE		= 75,
-	IPTC_TAG_BYLINE			= 80,
-	IPTC_TAG_BYLINE_TITLE		= 85,
-	IPTC_TAG_CITY			= 90,
-	IPTC_TAG_SUBLOCATION		= 92,
-	IPTC_TAG_STATE			= 95,
-	IPTC_TAG_COUNTRY_CODE		= 100,
-	IPTC_TAG_COUNTRY_NAME		= 101,
-	IPTC_TAG_ORIG_TRANS_REF		= 103,
-	IPTC_TAG_HEADLINE		= 105,
-	IPTC_TAG_CREDIT			= 110,
-	IPTC_TAG_SOURCE			= 115,
-	IPTC_TAG_COPYRIGHT_NOTICE	= 116,
-	IPTC_TAG_PICASA_UNKNOWN		= 117,
-	IPTC_TAG_CONTACT		= 118,
-	IPTC_TAG_CAPTION		= 120,
-	IPTC_TAG_WRITER_EDITOR		= 122,
-	IPTC_TAG_RASTERIZED_CAPTION	= 125,
-	IPTC_TAG_IMAGE_TYPE		= 130,
-	IPTC_TAG_IMAGE_ORIENTATION	= 131,
-	IPTC_TAG_LANGUAGE_ID		= 135,
-	IPTC_TAG_AUDIO_TYPE		= 150,
-	IPTC_TAG_AUDIO_SAMPLING_RATE	= 151,
-	IPTC_TAG_AUDIO_SAMPLING_RES	= 152,
-	IPTC_TAG_AUDIO_DURATION		= 153,
-	IPTC_TAG_AUDIO_OUTCUE		= 154,
-	IPTC_TAG_PREVIEW_FORMAT		= 200,
-	IPTC_TAG_PREVIEW_FORMAT_VER	= 201,
-	IPTC_TAG_PREVIEW_DATA		= 202,	/* End record 2 tags */
-	IPTC_TAG_SIZE_MODE		= 10,	/* Begin record 7 tags */
-	IPTC_TAG_MAX_SUBFILE_SIZE	= 20,
-	IPTC_TAG_SIZE_ANNOUNCED		= 90,
-	IPTC_TAG_MAX_OBJECT_SIZE	= 95,	/* End record 7 tags */
-	IPTC_TAG_SUBFILE		= 10,	/* Record 8 tags */
-	IPTC_TAG_CONFIRMED_DATA_SIZE	= 10	/* Record 9 tags */
-} IptcTag;
-</pre>
+<div class="refsect1">
+<a name="libiptcdata-tag.description"></a><h2>Description</h2>
 <p>
-The tag number that, together with the record number (<a class="link" href="libiptcdata-tag.html#IptcRecord" title="enum IptcRecord"><span class="type">IptcRecord</span></a>),
-uniquely identifies the purpose of a tag.
+These functions allow queries to the <a class="ulink" href="http://www.iptc.org/IIM" target="_top">IPTC IIM
+specification</a> which contains information about the purpose of each IPTC
+tag, along with any requirements such as maximum/minimum data length, data type,
+repeatability and whether the tag is mandatory.
 </p>
 </div>
-<hr>
-<div class="refsect2" lang="en">
-<a name="IptcTagInfo"></a><h3>IptcTagInfo</h3>
-<pre class="programlisting">typedef struct {
-	IptcRecord	record;
-	IptcTag		tag;
-	const char     *name;
-	const char     *title;
-	const char     *description;
-	IptcFormat	format;
-	IptcMandatory	mandatory;
-	IptcRepeatable	repeatable;
-	unsigned int	minbytes;
-	unsigned int	maxbytes;
-} IptcTagInfo;
-</pre>
-<p>
-Contains static information about a specific tag (identified by its
-record-tag pair) from the IPTC IIM specificiation.  This info is for
-reference only and should never be modified by an application.
-</p>
-<div class="variablelist"><table border="0">
-<col align="left" valign="top">
+<div class="refsect1">
+<a name="libiptcdata-tag.functions_details"></a><h2>Functions</h2>
+<div class="refsect2">
+<a name="iptc-tag-get-name"></a><h3>iptc_tag_get_name ()</h3>
+<pre class="programlisting">const <span class="returnvalue">char</span> *
+iptc_tag_get_name (<em class="parameter"><code><a class="link" href="libiptcdata-tag.html#IptcRecord" title="enum IptcRecord"><span class="type">IptcRecord</span></a> record</code></em>,
+                   <em class="parameter"><code><a class="link" href="libiptcdata-tag.html#IptcTag" title="enum IptcTag"><span class="type">IptcTag</span></a> tag</code></em>);</pre>
+<p>Retrieves the name of a tag.  The name is derived from the IPTC
+IIM specification and gives an indication of the purpose of a
+particular tag.  The name will consist of ASCII characters with
+no spaces, for example "CopyrightNotice".</p>
+<div class="refsect3">
+<a name="id-1.7.4.6.2.5"></a><h4>Parameters</h4>
+<div class="informaltable"><table width="100%" border="0">
+<colgroup>
+<col width="150px" class="parameters_name">
+<col class="parameters_description">
+<col width="200px" class="parameters_annotations">
+</colgroup>
 <tbody>
 <tr>
-<td><p><span class="term"><a class="link" href="libiptcdata-tag.html#IptcRecord" title="enum IptcRecord">IptcRecord</a> <em class="structfield"><code>record</code></em>;</span></p></td>
-<td>record number of the tag
-</td>
+<td class="parameter_name"><p>record</p></td>
+<td class="parameter_description"><p>record number of tag</p></td>
+<td class="parameter_annotations"> </td>
 </tr>
 <tr>
-<td><p><span class="term"><a class="link" href="libiptcdata-tag.html#IptcTag" title="enum IptcTag">IptcTag</a> <em class="structfield"><code>tag</code></em>;</span></p></td>
-<td>dataset number of the tag
-</td>
+<td class="parameter_name"><p>tag</p></td>
+<td class="parameter_description"><p>dataset number of tag</p></td>
+<td class="parameter_annotations"> </td>
 </tr>
+</tbody>
+</table></div>
+</div>
+<div class="refsect3">
+<a name="id-1.7.4.6.2.6"></a><h4>Returns</h4>
+<p> a static string containing the tag name, NULL if none found</p>
+<p></p>
+</div>
+</div>
+<hr>
+<div class="refsect2">
+<a name="iptc-tag-get-title"></a><h3>iptc_tag_get_title ()</h3>
+<pre class="programlisting"><span class="returnvalue">char</span> *
+iptc_tag_get_title (<em class="parameter"><code><a class="link" href="libiptcdata-tag.html#IptcRecord" title="enum IptcRecord"><span class="type">IptcRecord</span></a> record</code></em>,
+                    <em class="parameter"><code><a class="link" href="libiptcdata-tag.html#IptcTag" title="enum IptcTag"><span class="type">IptcTag</span></a> tag</code></em>);</pre>
+<p>Retrieves the title of a tag.  The title is similar to
+the name, except it will be translated to the current
+locale (if available) and may contain spaces, for example
+"Copyright Notice".  It is appropriate for the title to appear
+in user interfaces.  The return value will be encoding using the UTF-8
+character set.</p>
+<div class="refsect3">
+<a name="id-1.7.4.6.3.5"></a><h4>Parameters</h4>
+<div class="informaltable"><table width="100%" border="0">
+<colgroup>
+<col width="150px" class="parameters_name">
+<col class="parameters_description">
+<col width="200px" class="parameters_annotations">
+</colgroup>
+<tbody>
 <tr>
-<td><p><span class="term">const char *<em class="structfield"><code>name</code></em>;</span></p></td>
-<td>English name of the tag (no spaces)
-</td>
+<td class="parameter_name"><p>record</p></td>
+<td class="parameter_description"><p>record number of tag</p></td>
+<td class="parameter_annotations"> </td>
 </tr>
 <tr>
-<td><p><span class="term">const char *<em class="structfield"><code>title</code></em>;</span></p></td>
-<td>English title of the tag (may contain spaces)
-</td>
+<td class="parameter_name"><p>tag</p></td>
+<td class="parameter_description"><p>dataset number of tag</p></td>
+<td class="parameter_annotations"> </td>
 </tr>
+</tbody>
+</table></div>
+</div>
+<div class="refsect3">
+<a name="id-1.7.4.6.3.6"></a><h4>Returns</h4>
+<p> a static string containing the tag title, empty string
+if none found</p>
+<p></p>
+</div>
+</div>
+<hr>
+<div class="refsect2">
+<a name="iptc-tag-get-description"></a><h3>iptc_tag_get_description ()</h3>
+<pre class="programlisting"><span class="returnvalue">char</span> *
+iptc_tag_get_description (<em class="parameter"><code><a class="link" href="libiptcdata-tag.html#IptcRecord" title="enum IptcRecord"><span class="type">IptcRecord</span></a> record</code></em>,
+                          <em class="parameter"><code><a class="link" href="libiptcdata-tag.html#IptcTag" title="enum IptcTag"><span class="type">IptcTag</span></a> tag</code></em>);</pre>
+<p>Retrieves the description of a tag, which explains the purpose
+of the tag from the IPTC IIM specification.  It is translated
+to the current locale if available.  The return value will
+be encoded using the UTF-8 character set.</p>
+<div class="refsect3">
+<a name="id-1.7.4.6.4.5"></a><h4>Parameters</h4>
+<div class="informaltable"><table width="100%" border="0">
+<colgroup>
+<col width="150px" class="parameters_name">
+<col class="parameters_description">
+<col width="200px" class="parameters_annotations">
+</colgroup>
+<tbody>
 <tr>
-<td><p><span class="term">const char *<em class="structfield"><code>description</code></em>;</span></p></td>
-<td>English description of the tag
-</td>
+<td class="parameter_name"><p>record</p></td>
+<td class="parameter_description"><p>record number of tag</p></td>
+<td class="parameter_annotations"> </td>
 </tr>
 <tr>
-<td><p><span class="term"><a class="link" href="libiptcdata-tag.html#IptcFormat" title="enum IptcFormat">IptcFormat</a> <em class="structfield"><code>format</code></em>;</span></p></td>
-<td>data format of the tag
-</td>
+<td class="parameter_name"><p>tag</p></td>
+<td class="parameter_description"><p>dataset number of tag</p></td>
+<td class="parameter_annotations"> </td>
 </tr>
+</tbody>
+</table></div>
+</div>
+<div class="refsect3">
+<a name="id-1.7.4.6.4.6"></a><h4>Returns</h4>
+<p> a static string containing the tag desciption, empty
+string if none found</p>
+<p></p>
+</div>
+</div>
+<hr>
+<div class="refsect2">
+<a name="iptc-tag-get-info"></a><h3>iptc_tag_get_info ()</h3>
+<pre class="programlisting">const <a class="link" href="libiptcdata-tag.html#IptcTagInfo" title="struct IptcTagInfo"><span class="returnvalue">IptcTagInfo</span></a> *
+iptc_tag_get_info (<em class="parameter"><code><a class="link" href="libiptcdata-tag.html#IptcRecord" title="enum IptcRecord"><span class="type">IptcRecord</span></a> record</code></em>,
+                   <em class="parameter"><code><a class="link" href="libiptcdata-tag.html#IptcTag" title="enum IptcTag"><span class="type">IptcTag</span></a> tag</code></em>);</pre>
+<p>Retrieves the <a class="link" href="libiptcdata-tag.html#IptcTagInfo" title="struct IptcTagInfo"><span class="type">IptcTagInfo</span></a> structure containing information about the
+tag from the IPTC IIM specification such as purpose, data format,
+and minimum and maximum lengths.</p>
+<div class="refsect3">
+<a name="id-1.7.4.6.5.5"></a><h4>Parameters</h4>
+<div class="informaltable"><table width="100%" border="0">
+<colgroup>
+<col width="150px" class="parameters_name">
+<col class="parameters_description">
+<col width="200px" class="parameters_annotations">
+</colgroup>
+<tbody>
 <tr>
-<td><p><span class="term"><a class="link" href="libiptcdata-tag.html#IptcMandatory" title="enum IptcMandatory">IptcMandatory</a> <em class="structfield"><code>mandatory</code></em>;</span></p></td>
-<td>whether the specification says the tag
-is required
-</td>
+<td class="parameter_name"><p>record</p></td>
+<td class="parameter_description"><p>record number of tag</p></td>
+<td class="parameter_annotations"> </td>
 </tr>
 <tr>
-<td><p><span class="term"><a class="link" href="libiptcdata-tag.html#IptcRepeatable" title="enum IptcRepeatable">IptcRepeatable</a> <em class="structfield"><code>repeatable</code></em>;</span></p></td>
-<td>whether the specification says the tag
-can appear more than once
-</td>
+<td class="parameter_name"><p>tag</p></td>
+<td class="parameter_description"><p>dataset number of tag</p></td>
+<td class="parameter_annotations"> </td>
 </tr>
+</tbody>
+</table></div>
+</div>
+<div class="refsect3">
+<a name="id-1.7.4.6.5.6"></a><h4>Returns</h4>
+<p> a pointer to a static <a class="link" href="libiptcdata-tag.html#IptcTagInfo" title="struct IptcTagInfo"><span class="type">IptcTagInfo</span></a> structure or NULL if
+the tag is not found.</p>
+<p></p>
+</div>
+</div>
+<hr>
+<div class="refsect2">
+<a name="iptc-format-get-name"></a><h3>iptc_format_get_name ()</h3>
+<pre class="programlisting"><span class="returnvalue">char</span> *
+iptc_format_get_name (<em class="parameter"><code><a class="link" href="libiptcdata-tag.html#IptcFormat" title="enum IptcFormat"><span class="type">IptcFormat</span></a> format</code></em>);</pre>
+<p>Retrieves a string version of a data format.  For example,
+<a class="link" href="libiptcdata-tag.html#IPTC-FORMAT-STRING:CAPS"><code class="literal">IPTC_FORMAT_STRING</code></a> returns "String".</p>
+<div class="refsect3">
+<a name="id-1.7.4.6.6.5"></a><h4>Parameters</h4>
+<div class="informaltable"><table width="100%" border="0">
+<colgroup>
+<col width="150px" class="parameters_name">
+<col class="parameters_description">
+<col width="200px" class="parameters_annotations">
+</colgroup>
+<tbody><tr>
+<td class="parameter_name"><p>format</p></td>
+<td class="parameter_description"><p>the format to be retrieved</p></td>
+<td class="parameter_annotations"> </td>
+</tr></tbody>
+</table></div>
+</div>
+<div class="refsect3">
+<a name="id-1.7.4.6.6.6"></a><h4>Returns</h4>
+<p> a static string in the native locale</p>
+<p></p>
+</div>
+</div>
+<hr>
+<div class="refsect2">
+<a name="iptc-tag-find-by-name"></a><h3>iptc_tag_find_by_name ()</h3>
+<pre class="programlisting"><span class="returnvalue">int</span>
+iptc_tag_find_by_name (<em class="parameter"><code>const <span class="type">char</span> *name</code></em>,
+                       <em class="parameter"><code><a class="link" href="libiptcdata-tag.html#IptcRecord" title="enum IptcRecord"><span class="type">IptcRecord</span></a> *record</code></em>,
+                       <em class="parameter"><code><a class="link" href="libiptcdata-tag.html#IptcTag" title="enum IptcTag"><span class="type">IptcTag</span></a> *tag</code></em>);</pre>
+<p>Looks up the record and tag numbers for a tag specified by name.  For
+example, searching for "Caption" would return 2:120 in the record and
+tag variables.</p>
+<div class="refsect3">
+<a name="id-1.7.4.6.7.5"></a><h4>Parameters</h4>
+<div class="informaltable"><table width="100%" border="0">
+<colgroup>
+<col width="150px" class="parameters_name">
+<col class="parameters_description">
+<col width="200px" class="parameters_annotations">
+</colgroup>
+<tbody>
 <tr>
-<td><p><span class="term">unsigned int <em class="structfield"><code>minbytes</code></em>;</span></p></td>
-<td>minimum number of bytes in the tag value
-</td>
+<td class="parameter_name"><p>name</p></td>
+<td class="parameter_description"><p>the name to search for</p></td>
+<td class="parameter_annotations"> </td>
 </tr>
 <tr>
-<td><p><span class="term">unsigned int <em class="structfield"><code>maxbytes</code></em>;</span></p></td>
-<td>maximum number of bytes in the tag value
-
-</td>
+<td class="parameter_name"><p>record</p></td>
+<td class="parameter_description"><p>output variable to store the record number</p></td>
+<td class="parameter_annotations"> </td>
+</tr>
+<tr>
+<td class="parameter_name"><p>tag</p></td>
+<td class="parameter_description"><p>output variable to store the tag number</p></td>
+<td class="parameter_annotations"> </td>
 </tr>
 </tbody>
 </table></div>
 </div>
-<hr>
-<div class="refsect2" lang="en">
-<a name="IptcFormat"></a><h3>enum IptcFormat</h3>
-<pre class="programlisting">typedef enum {
-	IPTC_FORMAT_UNKNOWN,
-	IPTC_FORMAT_BINARY,
-	IPTC_FORMAT_BYTE,
-	IPTC_FORMAT_SHORT,
-	IPTC_FORMAT_LONG,
-	IPTC_FORMAT_STRING,
-	IPTC_FORMAT_NUMERIC_STRING,
-	IPTC_FORMAT_DATE,
-	IPTC_FORMAT_TIME
-} IptcFormat;
-</pre>
+<div class="refsect3">
+<a name="id-1.7.4.6.7.6"></a><h4>Returns</h4>
+<p> 0 on success, -1 on failure or if the tag name was not found</p>
+<p></p>
+</div>
+</div>
+</div>
+<div class="refsect1">
+<a name="libiptcdata-tag.other_details"></a><h2>Types and Values</h2>
+<div class="refsect2">
+<a name="IptcRecord"></a><h3>enum IptcRecord</h3>
 <p>
-The possible data formats for a tag's value, derived from the IPTC IIM
-specification.  Integer formats are always represented with the most
-significant byte first (big-endian) in the IPTC bytestream.
+The record number that, together with the tag number (<a class="link" href="libiptcdata-tag.html#IptcTag" title="enum IptcTag"><span class="type">IptcTag</span></a>),
+uniquely identifies the purpose of a tag.
 </p>
-<div class="variablelist"><table border="0">
-<col align="left" valign="top">
+<div class="refsect3">
+<a name="id-1.7.4.7.2.4"></a><h4>Members</h4>
+<div class="informaltable"><table width="100%" border="0">
+<colgroup>
+<col width="300px" class="enum_members_name">
+<col class="enum_members_description">
+<col width="200px" class="enum_members_annotations">
+</colgroup>
 <tbody>
 <tr>
-<td><p><a name="IPTC-FORMAT-UNKNOWN:CAPS"></a><span class="term"><code class="literal">IPTC_FORMAT_UNKNOWN</code></span></p></td>
-<td>Unknown format (for a tag not in the specification)
+<td class="enum_member_name"><p><a name="IPTC-RECORD-OBJECT-ENV:CAPS"></a>IPTC_RECORD_OBJECT_ENV</p></td>
+<td class="enum_member_description">
+<p>the record used for file information such
+as file format, version, unique identifier, etc.  This is often
+not used for photo-management applications.</p>
 </td>
+<td class="enum_member_annotations"> </td>
 </tr>
 <tr>
-<td><p><a name="IPTC-FORMAT-BINARY:CAPS"></a><span class="term"><code class="literal">IPTC_FORMAT_BINARY</code></span></p></td>
-<td>Binary data (variable length)
+<td class="enum_member_name"><p><a name="IPTC-RECORD-APP-2:CAPS"></a>IPTC_RECORD_APP_2</p></td>
+<td class="enum_member_description">
+<p>the record used for application-specific tags
+such as Caption, Keywords, etc.</p>
 </td>
+<td class="enum_member_annotations"> </td>
 </tr>
 <tr>
-<td><p><a name="IPTC-FORMAT-BYTE:CAPS"></a><span class="term"><code class="literal">IPTC_FORMAT_BYTE</code></span></p></td>
-<td>1-byte integer
+<td class="enum_member_name"><p><a name="IPTC-RECORD-APP-3:CAPS"></a>IPTC_RECORD_APP_3</p></td>
+<td class="enum_member_description">
+<p>application-specific tags</p>
 </td>
+<td class="enum_member_annotations"> </td>
 </tr>
 <tr>
-<td><p><a name="IPTC-FORMAT-SHORT:CAPS"></a><span class="term"><code class="literal">IPTC_FORMAT_SHORT</code></span></p></td>
-<td>2-byte integer (big-endian)
+<td class="enum_member_name"><p><a name="IPTC-RECORD-APP-4:CAPS"></a>IPTC_RECORD_APP_4</p></td>
+<td class="enum_member_description">
+<p>application-specific tags</p>
 </td>
+<td class="enum_member_annotations"> </td>
 </tr>
 <tr>
-<td><p><a name="IPTC-FORMAT-LONG:CAPS"></a><span class="term"><code class="literal">IPTC_FORMAT_LONG</code></span></p></td>
-<td>4-byte integer (big-endian)
+<td class="enum_member_name"><p><a name="IPTC-RECORD-APP-5:CAPS"></a>IPTC_RECORD_APP_5</p></td>
+<td class="enum_member_description">
+<p>application-specific tags</p>
 </td>
+<td class="enum_member_annotations"> </td>
 </tr>
 <tr>
-<td><p><a name="IPTC-FORMAT-STRING:CAPS"></a><span class="term"><code class="literal">IPTC_FORMAT_STRING</code></span></p></td>
-<td>String data (variable length, of any character set)
+<td class="enum_member_name"><p><a name="IPTC-RECORD-APP-6:CAPS"></a>IPTC_RECORD_APP_6</p></td>
+<td class="enum_member_description">
+<p>application-specific tags</p>
 </td>
+<td class="enum_member_annotations"> </td>
 </tr>
 <tr>
-<td><p><a name="IPTC-FORMAT-NUMERIC-STRING:CAPS"></a><span class="term"><code class="literal">IPTC_FORMAT_NUMERIC_STRING</code></span></p></td>
-<td>String containing only numerals (variable length)
+<td class="enum_member_name"><p><a name="IPTC-RECORD-PREOBJ-DATA:CAPS"></a>IPTC_RECORD_PREOBJ_DATA</p></td>
+<td class="enum_member_description">
+<p>contains information about an encapsulated file</p>
 </td>
+<td class="enum_member_annotations"> </td>
 </tr>
 <tr>
-<td><p><a name="IPTC-FORMAT-DATE:CAPS"></a><span class="term"><code class="literal">IPTC_FORMAT_DATE</code></span></p></td>
-<td>String of the format "YYYYMMDD" (8 bytes)
+<td class="enum_member_name"><p><a name="IPTC-RECORD-OBJ-DATA:CAPS"></a>IPTC_RECORD_OBJ_DATA</p></td>
+<td class="enum_member_description">
+<p>the encapsulated file data (usually not used)</p>
 </td>
+<td class="enum_member_annotations"> </td>
 </tr>
 <tr>
-<td><p><a name="IPTC-FORMAT-TIME:CAPS"></a><span class="term"><code class="literal">IPTC_FORMAT_TIME</code></span></p></td>
-<td>String of the format "HHMMSS±HHMM" where the second
-HHMM defines the timezone offset (11 bytes)
-
+<td class="enum_member_name"><p><a name="IPTC-RECORD-POSTOBJ-DATA:CAPS"></a>IPTC_RECORD_POSTOBJ_DATA</p></td>
+<td class="enum_member_description">
+<p>followup information about an encapsulated file</p>
 </td>
+<td class="enum_member_annotations"> </td>
 </tr>
 </tbody>
 </table></div>
 </div>
+</div>
 <hr>
-<div class="refsect2" lang="en">
-<a name="IptcMandatory"></a><h3>enum IptcMandatory</h3>
-<pre class="programlisting">typedef enum {
-	IPTC_OPTIONAL = 0,
-	IPTC_MANDATORY = 1
-} IptcMandatory;
-</pre>
+<div class="refsect2">
+<a name="IptcTag"></a><h3>enum IptcTag</h3>
 <p>
-Whether a tag is mandatory according to the IPTC IIM specification.
-Note that most applications ignore this aspect of the specification
-since the spec was designed to encapsulate the media file rather than
-the other way around (which is how nearly all applications use it).
-This renders most mandatory tags unnecessary.
+The tag number that, together with the record number (<a class="link" href="libiptcdata-tag.html#IptcRecord" title="enum IptcRecord"><span class="type">IptcRecord</span></a>),
+uniquely identifies the purpose of a tag.
 </p>
-<div class="variablelist"><table border="0">
-<col align="left" valign="top">
+<div class="refsect3">
+<a name="id-1.7.4.7.3.4"></a><h4>Members</h4>
+<div class="informaltable"><table width="100%" border="0">
+<colgroup>
+<col width="300px" class="enum_members_name">
+<col class="enum_members_description">
+<col width="200px" class="enum_members_annotations">
+</colgroup>
 <tbody>
 <tr>
-<td><p><a name="IPTC-OPTIONAL:CAPS"></a><span class="term"><code class="literal">IPTC_OPTIONAL</code></span></p></td>
-<td>tag is allowed to be absent
-</td>
+<td class="enum_member_name"><p><a name="IPTC-TAG-MODEL-VERSION:CAPS"></a>IPTC_TAG_MODEL_VERSION</p></td>
+<td class="enum_member_description"> </td>
+<td class="enum_member_annotations"> </td>
 </tr>
 <tr>
-<td><p><a name="IPTC-MANDATORY:CAPS"></a><span class="term"><code class="literal">IPTC_MANDATORY</code></span></p></td>
-<td>tag must be present
-
-</td>
+<td class="enum_member_name"><p><a name="IPTC-TAG-DESTINATION:CAPS"></a>IPTC_TAG_DESTINATION</p></td>
+<td class="enum_member_description"> </td>
+<td class="enum_member_annotations"> </td>
+</tr>
+<tr>
+<td class="enum_member_name"><p><a name="IPTC-TAG-FILE-FORMAT:CAPS"></a>IPTC_TAG_FILE_FORMAT</p></td>
+<td class="enum_member_description"> </td>
+<td class="enum_member_annotations"> </td>
+</tr>
+<tr>
+<td class="enum_member_name"><p><a name="IPTC-TAG-FILE-VERSION:CAPS"></a>IPTC_TAG_FILE_VERSION</p></td>
+<td class="enum_member_description"> </td>
+<td class="enum_member_annotations"> </td>
+</tr>
+<tr>
+<td class="enum_member_name"><p><a name="IPTC-TAG-SERVICE-ID:CAPS"></a>IPTC_TAG_SERVICE_ID</p></td>
+<td class="enum_member_description"> </td>
+<td class="enum_member_annotations"> </td>
+</tr>
+<tr>
+<td class="enum_member_name"><p><a name="IPTC-TAG-ENVELOPE-NUM:CAPS"></a>IPTC_TAG_ENVELOPE_NUM</p></td>
+<td class="enum_member_description"> </td>
+<td class="enum_member_annotations"> </td>
+</tr>
+<tr>
+<td class="enum_member_name"><p><a name="IPTC-TAG-PRODUCT-ID:CAPS"></a>IPTC_TAG_PRODUCT_ID</p></td>
+<td class="enum_member_description"> </td>
+<td class="enum_member_annotations"> </td>
+</tr>
+<tr>
+<td class="enum_member_name"><p><a name="IPTC-TAG-ENVELOPE-PRIORITY:CAPS"></a>IPTC_TAG_ENVELOPE_PRIORITY</p></td>
+<td class="enum_member_description"> </td>
+<td class="enum_member_annotations"> </td>
+</tr>
+<tr>
+<td class="enum_member_name"><p><a name="IPTC-TAG-DATE-SENT:CAPS"></a>IPTC_TAG_DATE_SENT</p></td>
+<td class="enum_member_description"> </td>
+<td class="enum_member_annotations"> </td>
+</tr>
+<tr>
+<td class="enum_member_name"><p><a name="IPTC-TAG-TIME-SENT:CAPS"></a>IPTC_TAG_TIME_SENT</p></td>
+<td class="enum_member_description"> </td>
+<td class="enum_member_annotations"> </td>
+</tr>
+<tr>
+<td class="enum_member_name"><p><a name="IPTC-TAG-CHARACTER-SET:CAPS"></a>IPTC_TAG_CHARACTER_SET</p></td>
+<td class="enum_member_description"> </td>
+<td class="enum_member_annotations"> </td>
+</tr>
+<tr>
+<td class="enum_member_name"><p><a name="IPTC-TAG-UNO:CAPS"></a>IPTC_TAG_UNO</p></td>
+<td class="enum_member_description"> </td>
+<td class="enum_member_annotations"> </td>
+</tr>
+<tr>
+<td class="enum_member_name"><p><a name="IPTC-TAG-ARM-ID:CAPS"></a>IPTC_TAG_ARM_ID</p></td>
+<td class="enum_member_description"> </td>
+<td class="enum_member_annotations"> </td>
+</tr>
+<tr>
+<td class="enum_member_name"><p><a name="IPTC-TAG-ARM-VERSION:CAPS"></a>IPTC_TAG_ARM_VERSION</p></td>
+<td class="enum_member_description"> </td>
+<td class="enum_member_annotations"> </td>
+</tr>
+<tr>
+<td class="enum_member_name"><p><a name="IPTC-TAG-RECORD-VERSION:CAPS"></a>IPTC_TAG_RECORD_VERSION</p></td>
+<td class="enum_member_description"> </td>
+<td class="enum_member_annotations"> </td>
+</tr>
+<tr>
+<td class="enum_member_name"><p><a name="IPTC-TAG-OBJECT-TYPE:CAPS"></a>IPTC_TAG_OBJECT_TYPE</p></td>
+<td class="enum_member_description"> </td>
+<td class="enum_member_annotations"> </td>
+</tr>
+<tr>
+<td class="enum_member_name"><p><a name="IPTC-TAG-OBJECT-ATTRIBUTE:CAPS"></a>IPTC_TAG_OBJECT_ATTRIBUTE</p></td>
+<td class="enum_member_description"> </td>
+<td class="enum_member_annotations"> </td>
+</tr>
+<tr>
+<td class="enum_member_name"><p><a name="IPTC-TAG-OBJECT-NAME:CAPS"></a>IPTC_TAG_OBJECT_NAME</p></td>
+<td class="enum_member_description"> </td>
+<td class="enum_member_annotations"> </td>
+</tr>
+<tr>
+<td class="enum_member_name"><p><a name="IPTC-TAG-EDIT-STATUS:CAPS"></a>IPTC_TAG_EDIT_STATUS</p></td>
+<td class="enum_member_description"> </td>
+<td class="enum_member_annotations"> </td>
+</tr>
+<tr>
+<td class="enum_member_name"><p><a name="IPTC-TAG-EDITORIAL-UPDATE:CAPS"></a>IPTC_TAG_EDITORIAL_UPDATE</p></td>
+<td class="enum_member_description"> </td>
+<td class="enum_member_annotations"> </td>
+</tr>
+<tr>
+<td class="enum_member_name"><p><a name="IPTC-TAG-URGENCY:CAPS"></a>IPTC_TAG_URGENCY</p></td>
+<td class="enum_member_description"> </td>
+<td class="enum_member_annotations"> </td>
+</tr>
+<tr>
+<td class="enum_member_name"><p><a name="IPTC-TAG-SUBJECT-REFERENCE:CAPS"></a>IPTC_TAG_SUBJECT_REFERENCE</p></td>
+<td class="enum_member_description"> </td>
+<td class="enum_member_annotations"> </td>
+</tr>
+<tr>
+<td class="enum_member_name"><p><a name="IPTC-TAG-CATEGORY:CAPS"></a>IPTC_TAG_CATEGORY</p></td>
+<td class="enum_member_description"> </td>
+<td class="enum_member_annotations"> </td>
+</tr>
+<tr>
+<td class="enum_member_name"><p><a name="IPTC-TAG-SUPPL-CATEGORY:CAPS"></a>IPTC_TAG_SUPPL_CATEGORY</p></td>
+<td class="enum_member_description"> </td>
+<td class="enum_member_annotations"> </td>
+</tr>
+<tr>
+<td class="enum_member_name"><p><a name="IPTC-TAG-FIXTURE-ID:CAPS"></a>IPTC_TAG_FIXTURE_ID</p></td>
+<td class="enum_member_description"> </td>
+<td class="enum_member_annotations"> </td>
+</tr>
+<tr>
+<td class="enum_member_name"><p><a name="IPTC-TAG-KEYWORDS:CAPS"></a>IPTC_TAG_KEYWORDS</p></td>
+<td class="enum_member_description"> </td>
+<td class="enum_member_annotations"> </td>
+</tr>
+<tr>
+<td class="enum_member_name"><p><a name="IPTC-TAG-CONTENT-LOC-CODE:CAPS"></a>IPTC_TAG_CONTENT_LOC_CODE</p></td>
+<td class="enum_member_description"> </td>
+<td class="enum_member_annotations"> </td>
+</tr>
+<tr>
+<td class="enum_member_name"><p><a name="IPTC-TAG-CONTENT-LOC-NAME:CAPS"></a>IPTC_TAG_CONTENT_LOC_NAME</p></td>
+<td class="enum_member_description"> </td>
+<td class="enum_member_annotations"> </td>
+</tr>
+<tr>
+<td class="enum_member_name"><p><a name="IPTC-TAG-RELEASE-DATE:CAPS"></a>IPTC_TAG_RELEASE_DATE</p></td>
+<td class="enum_member_description"> </td>
+<td class="enum_member_annotations"> </td>
+</tr>
+<tr>
+<td class="enum_member_name"><p><a name="IPTC-TAG-RELEASE-TIME:CAPS"></a>IPTC_TAG_RELEASE_TIME</p></td>
+<td class="enum_member_description"> </td>
+<td class="enum_member_annotations"> </td>
+</tr>
+<tr>
+<td class="enum_member_name"><p><a name="IPTC-TAG-EXPIRATION-DATE:CAPS"></a>IPTC_TAG_EXPIRATION_DATE</p></td>
+<td class="enum_member_description"> </td>
+<td class="enum_member_annotations"> </td>
+</tr>
+<tr>
+<td class="enum_member_name"><p><a name="IPTC-TAG-EXPIRATION-TIME:CAPS"></a>IPTC_TAG_EXPIRATION_TIME</p></td>
+<td class="enum_member_description"> </td>
+<td class="enum_member_annotations"> </td>
+</tr>
+<tr>
+<td class="enum_member_name"><p><a name="IPTC-TAG-SPECIAL-INSTRUCTIONS:CAPS"></a>IPTC_TAG_SPECIAL_INSTRUCTIONS</p></td>
+<td class="enum_member_description"> </td>
+<td class="enum_member_annotations"> </td>
+</tr>
+<tr>
+<td class="enum_member_name"><p><a name="IPTC-TAG-ACTION-ADVISED:CAPS"></a>IPTC_TAG_ACTION_ADVISED</p></td>
+<td class="enum_member_description"> </td>
+<td class="enum_member_annotations"> </td>
+</tr>
+<tr>
+<td class="enum_member_name"><p><a name="IPTC-TAG-REFERENCE-SERVICE:CAPS"></a>IPTC_TAG_REFERENCE_SERVICE</p></td>
+<td class="enum_member_description"> </td>
+<td class="enum_member_annotations"> </td>
+</tr>
+<tr>
+<td class="enum_member_name"><p><a name="IPTC-TAG-REFERENCE-DATE:CAPS"></a>IPTC_TAG_REFERENCE_DATE</p></td>
+<td class="enum_member_description"> </td>
+<td class="enum_member_annotations"> </td>
+</tr>
+<tr>
+<td class="enum_member_name"><p><a name="IPTC-TAG-REFERENCE-NUMBER:CAPS"></a>IPTC_TAG_REFERENCE_NUMBER</p></td>
+<td class="enum_member_description"> </td>
+<td class="enum_member_annotations"> </td>
+</tr>
+<tr>
+<td class="enum_member_name"><p><a name="IPTC-TAG-DATE-CREATED:CAPS"></a>IPTC_TAG_DATE_CREATED</p></td>
+<td class="enum_member_description"> </td>
+<td class="enum_member_annotations"> </td>
+</tr>
+<tr>
+<td class="enum_member_name"><p><a name="IPTC-TAG-TIME-CREATED:CAPS"></a>IPTC_TAG_TIME_CREATED</p></td>
+<td class="enum_member_description"> </td>
+<td class="enum_member_annotations"> </td>
+</tr>
+<tr>
+<td class="enum_member_name"><p><a name="IPTC-TAG-DIGITAL-CREATION-DATE:CAPS"></a>IPTC_TAG_DIGITAL_CREATION_DATE</p></td>
+<td class="enum_member_description"> </td>
+<td class="enum_member_annotations"> </td>
+</tr>
+<tr>
+<td class="enum_member_name"><p><a name="IPTC-TAG-DIGITAL-CREATION-TIME:CAPS"></a>IPTC_TAG_DIGITAL_CREATION_TIME</p></td>
+<td class="enum_member_description"> </td>
+<td class="enum_member_annotations"> </td>
+</tr>
+<tr>
+<td class="enum_member_name"><p><a name="IPTC-TAG-ORIGINATING-PROGRAM:CAPS"></a>IPTC_TAG_ORIGINATING_PROGRAM</p></td>
+<td class="enum_member_description"> </td>
+<td class="enum_member_annotations"> </td>
+</tr>
+<tr>
+<td class="enum_member_name"><p><a name="IPTC-TAG-PROGRAM-VERSION:CAPS"></a>IPTC_TAG_PROGRAM_VERSION</p></td>
+<td class="enum_member_description"> </td>
+<td class="enum_member_annotations"> </td>
+</tr>
+<tr>
+<td class="enum_member_name"><p><a name="IPTC-TAG-OBJECT-CYCLE:CAPS"></a>IPTC_TAG_OBJECT_CYCLE</p></td>
+<td class="enum_member_description"> </td>
+<td class="enum_member_annotations"> </td>
+</tr>
+<tr>
+<td class="enum_member_name"><p><a name="IPTC-TAG-BYLINE:CAPS"></a>IPTC_TAG_BYLINE</p></td>
+<td class="enum_member_description"> </td>
+<td class="enum_member_annotations"> </td>
+</tr>
+<tr>
+<td class="enum_member_name"><p><a name="IPTC-TAG-BYLINE-TITLE:CAPS"></a>IPTC_TAG_BYLINE_TITLE</p></td>
+<td class="enum_member_description"> </td>
+<td class="enum_member_annotations"> </td>
+</tr>
+<tr>
+<td class="enum_member_name"><p><a name="IPTC-TAG-CITY:CAPS"></a>IPTC_TAG_CITY</p></td>
+<td class="enum_member_description"> </td>
+<td class="enum_member_annotations"> </td>
+</tr>
+<tr>
+<td class="enum_member_name"><p><a name="IPTC-TAG-SUBLOCATION:CAPS"></a>IPTC_TAG_SUBLOCATION</p></td>
+<td class="enum_member_description"> </td>
+<td class="enum_member_annotations"> </td>
+</tr>
+<tr>
+<td class="enum_member_name"><p><a name="IPTC-TAG-STATE:CAPS"></a>IPTC_TAG_STATE</p></td>
+<td class="enum_member_description"> </td>
+<td class="enum_member_annotations"> </td>
+</tr>
+<tr>
+<td class="enum_member_name"><p><a name="IPTC-TAG-COUNTRY-CODE:CAPS"></a>IPTC_TAG_COUNTRY_CODE</p></td>
+<td class="enum_member_description"> </td>
+<td class="enum_member_annotations"> </td>
+</tr>
+<tr>
+<td class="enum_member_name"><p><a name="IPTC-TAG-COUNTRY-NAME:CAPS"></a>IPTC_TAG_COUNTRY_NAME</p></td>
+<td class="enum_member_description"> </td>
+<td class="enum_member_annotations"> </td>
+</tr>
+<tr>
+<td class="enum_member_name"><p><a name="IPTC-TAG-ORIG-TRANS-REF:CAPS"></a>IPTC_TAG_ORIG_TRANS_REF</p></td>
+<td class="enum_member_description"> </td>
+<td class="enum_member_annotations"> </td>
+</tr>
+<tr>
+<td class="enum_member_name"><p><a name="IPTC-TAG-HEADLINE:CAPS"></a>IPTC_TAG_HEADLINE</p></td>
+<td class="enum_member_description"> </td>
+<td class="enum_member_annotations"> </td>
+</tr>
+<tr>
+<td class="enum_member_name"><p><a name="IPTC-TAG-CREDIT:CAPS"></a>IPTC_TAG_CREDIT</p></td>
+<td class="enum_member_description"> </td>
+<td class="enum_member_annotations"> </td>
+</tr>
+<tr>
+<td class="enum_member_name"><p><a name="IPTC-TAG-SOURCE:CAPS"></a>IPTC_TAG_SOURCE</p></td>
+<td class="enum_member_description"> </td>
+<td class="enum_member_annotations"> </td>
+</tr>
+<tr>
+<td class="enum_member_name"><p><a name="IPTC-TAG-COPYRIGHT-NOTICE:CAPS"></a>IPTC_TAG_COPYRIGHT_NOTICE</p></td>
+<td class="enum_member_description"> </td>
+<td class="enum_member_annotations"> </td>
+</tr>
+<tr>
+<td class="enum_member_name"><p><a name="IPTC-TAG-PICASA-UNKNOWN:CAPS"></a>IPTC_TAG_PICASA_UNKNOWN</p></td>
+<td class="enum_member_description"> </td>
+<td class="enum_member_annotations"> </td>
+</tr>
+<tr>
+<td class="enum_member_name"><p><a name="IPTC-TAG-CONTACT:CAPS"></a>IPTC_TAG_CONTACT</p></td>
+<td class="enum_member_description"> </td>
+<td class="enum_member_annotations"> </td>
+</tr>
+<tr>
+<td class="enum_member_name"><p><a name="IPTC-TAG-CAPTION:CAPS"></a>IPTC_TAG_CAPTION</p></td>
+<td class="enum_member_description"> </td>
+<td class="enum_member_annotations"> </td>
+</tr>
+<tr>
+<td class="enum_member_name"><p><a name="IPTC-TAG-WRITER-EDITOR:CAPS"></a>IPTC_TAG_WRITER_EDITOR</p></td>
+<td class="enum_member_description"> </td>
+<td class="enum_member_annotations"> </td>
+</tr>
+<tr>
+<td class="enum_member_name"><p><a name="IPTC-TAG-RASTERIZED-CAPTION:CAPS"></a>IPTC_TAG_RASTERIZED_CAPTION</p></td>
+<td class="enum_member_description"> </td>
+<td class="enum_member_annotations"> </td>
+</tr>
+<tr>
+<td class="enum_member_name"><p><a name="IPTC-TAG-IMAGE-TYPE:CAPS"></a>IPTC_TAG_IMAGE_TYPE</p></td>
+<td class="enum_member_description"> </td>
+<td class="enum_member_annotations"> </td>
+</tr>
+<tr>
+<td class="enum_member_name"><p><a name="IPTC-TAG-IMAGE-ORIENTATION:CAPS"></a>IPTC_TAG_IMAGE_ORIENTATION</p></td>
+<td class="enum_member_description"> </td>
+<td class="enum_member_annotations"> </td>
+</tr>
+<tr>
+<td class="enum_member_name"><p><a name="IPTC-TAG-LANGUAGE-ID:CAPS"></a>IPTC_TAG_LANGUAGE_ID</p></td>
+<td class="enum_member_description"> </td>
+<td class="enum_member_annotations"> </td>
+</tr>
+<tr>
+<td class="enum_member_name"><p><a name="IPTC-TAG-AUDIO-TYPE:CAPS"></a>IPTC_TAG_AUDIO_TYPE</p></td>
+<td class="enum_member_description"> </td>
+<td class="enum_member_annotations"> </td>
+</tr>
+<tr>
+<td class="enum_member_name"><p><a name="IPTC-TAG-AUDIO-SAMPLING-RATE:CAPS"></a>IPTC_TAG_AUDIO_SAMPLING_RATE</p></td>
+<td class="enum_member_description"> </td>
+<td class="enum_member_annotations"> </td>
+</tr>
+<tr>
+<td class="enum_member_name"><p><a name="IPTC-TAG-AUDIO-SAMPLING-RES:CAPS"></a>IPTC_TAG_AUDIO_SAMPLING_RES</p></td>
+<td class="enum_member_description"> </td>
+<td class="enum_member_annotations"> </td>
+</tr>
+<tr>
+<td class="enum_member_name"><p><a name="IPTC-TAG-AUDIO-DURATION:CAPS"></a>IPTC_TAG_AUDIO_DURATION</p></td>
+<td class="enum_member_description"> </td>
+<td class="enum_member_annotations"> </td>
+</tr>
+<tr>
+<td class="enum_member_name"><p><a name="IPTC-TAG-AUDIO-OUTCUE:CAPS"></a>IPTC_TAG_AUDIO_OUTCUE</p></td>
+<td class="enum_member_description"> </td>
+<td class="enum_member_annotations"> </td>
+</tr>
+<tr>
+<td class="enum_member_name"><p><a name="IPTC-TAG-PREVIEW-FORMAT:CAPS"></a>IPTC_TAG_PREVIEW_FORMAT</p></td>
+<td class="enum_member_description"> </td>
+<td class="enum_member_annotations"> </td>
+</tr>
+<tr>
+<td class="enum_member_name"><p><a name="IPTC-TAG-PREVIEW-FORMAT-VER:CAPS"></a>IPTC_TAG_PREVIEW_FORMAT_VER</p></td>
+<td class="enum_member_description"> </td>
+<td class="enum_member_annotations"> </td>
+</tr>
+<tr>
+<td class="enum_member_name"><p><a name="IPTC-TAG-PREVIEW-DATA:CAPS"></a>IPTC_TAG_PREVIEW_DATA</p></td>
+<td class="enum_member_description"> </td>
+<td class="enum_member_annotations"> </td>
+</tr>
+<tr>
+<td class="enum_member_name"><p><a name="IPTC-TAG-SIZE-MODE:CAPS"></a>IPTC_TAG_SIZE_MODE</p></td>
+<td class="enum_member_description"> </td>
+<td class="enum_member_annotations"> </td>
+</tr>
+<tr>
+<td class="enum_member_name"><p><a name="IPTC-TAG-MAX-SUBFILE-SIZE:CAPS"></a>IPTC_TAG_MAX_SUBFILE_SIZE</p></td>
+<td class="enum_member_description"> </td>
+<td class="enum_member_annotations"> </td>
+</tr>
+<tr>
+<td class="enum_member_name"><p><a name="IPTC-TAG-SIZE-ANNOUNCED:CAPS"></a>IPTC_TAG_SIZE_ANNOUNCED</p></td>
+<td class="enum_member_description"> </td>
+<td class="enum_member_annotations"> </td>
+</tr>
+<tr>
+<td class="enum_member_name"><p><a name="IPTC-TAG-MAX-OBJECT-SIZE:CAPS"></a>IPTC_TAG_MAX_OBJECT_SIZE</p></td>
+<td class="enum_member_description"> </td>
+<td class="enum_member_annotations"> </td>
+</tr>
+<tr>
+<td class="enum_member_name"><p><a name="IPTC-TAG-SUBFILE:CAPS"></a>IPTC_TAG_SUBFILE</p></td>
+<td class="enum_member_description"> </td>
+<td class="enum_member_annotations"> </td>
+</tr>
+<tr>
+<td class="enum_member_name"><p><a name="IPTC-TAG-CONFIRMED-DATA-SIZE:CAPS"></a>IPTC_TAG_CONFIRMED_DATA_SIZE</p></td>
+<td class="enum_member_description"> </td>
+<td class="enum_member_annotations"> </td>
 </tr>
 </tbody>
 </table></div>
 </div>
+</div>
 <hr>
-<div class="refsect2" lang="en">
-<a name="IptcRepeatable"></a><h3>enum IptcRepeatable</h3>
-<pre class="programlisting">typedef enum {
-	IPTC_NOT_REPEATABLE = 0,
-	IPTC_REPEATABLE = 1
-} IptcRepeatable;
+<div class="refsect2">
+<a name="IptcTagInfo"></a><h3>struct IptcTagInfo</h3>
+<pre class="programlisting">struct IptcTagInfo {
+	IptcRecord record;
+	IptcTag		tag;
+	const char     *name;
+	const char     *title;
+	const char     *description;
+	IptcFormat format;
+	IptcMandatory mandatory;
+	IptcRepeatable repeatable;
+	unsigned int minbytes;
+	unsigned int maxbytes;
+};
 </pre>
 <p>
-Whether a tag can occur more than once according to the IPTC IIM
-specification.  For example, the "Keywords" tag only contains a single
-keyword, but the tag itself is repeated for media that references more
-than one keyword.
+Contains static information about a specific tag (identified by its
+record-tag pair) from the IPTC IIM specificiation.  This info is for
+reference only and should never be modified by an application.
 </p>
-<div class="variablelist"><table border="0">
-<col align="left" valign="top">
+<div class="refsect3">
+<a name="id-1.7.4.7.4.5"></a><h4>Members</h4>
+<div class="informaltable"><table width="100%" border="0">
+<colgroup>
+<col width="300px" class="struct_members_name">
+<col class="struct_members_description">
+<col width="200px" class="struct_members_annotations">
+</colgroup>
 <tbody>
 <tr>
-<td><p><a name="IPTC-NOT-REPEATABLE:CAPS"></a><span class="term"><code class="literal">IPTC_NOT_REPEATABLE</code></span></p></td>
-<td>tag can only appear once
-</td>
+<td class="struct_member_name"><p><a class="link" href="libiptcdata-tag.html#IptcRecord" title="enum IptcRecord"><span class="type">IptcRecord</span></a> <em class="structfield"><code><a name="IptcTagInfo.record"></a>record</code></em>;</p></td>
+<td class="struct_member_description"><p>record number of the tag</p></td>
+<td class="struct_member_annotations"> </td>
 </tr>
 <tr>
-<td><p><a name="IPTC-REPEATABLE:CAPS"></a><span class="term"><code class="literal">IPTC_REPEATABLE</code></span></p></td>
-<td>tag can be repeated
-
-</td>
+<td class="struct_member_name"><p><a class="link" href="libiptcdata-tag.html#IptcTag" title="enum IptcTag"><span class="type">IptcTag</span></a> <em class="structfield"><code><a name="IptcTagInfo.tag"></a>tag</code></em>;</p></td>
+<td class="struct_member_description"><p>dataset number of the tag</p></td>
+<td class="struct_member_annotations"> </td>
 </tr>
-</tbody>
-</table></div>
-</div>
-<hr>
-<div class="refsect2" lang="en">
-<a name="iptc-tag-get-name"></a><h3>iptc_tag_get_name ()</h3>
-<pre class="programlisting">const char*         iptc_tag_get_name                   (<a class="link" href="libiptcdata-tag.html#IptcRecord" title="enum IptcRecord">IptcRecord</a> record,
-                                                         <a class="link" href="libiptcdata-tag.html#IptcTag" title="enum IptcTag">IptcTag</a> tag);</pre>
-<p>
-Retrieves the name of a tag.  The name is derived from the IPTC
-IIM specification and gives an indication of the purpose of a
-particular tag.  The name will consist of ASCII characters with
-no spaces, for example "CopyrightNotice".</p>
-<p>
-
-</p>
-<div class="variablelist"><table border="0">
-<col align="left" valign="top">
-<tbody>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>record</code></em> :</span></p></td>
-<td> record number of tag
-</td>
+<td class="struct_member_name"><p>const <span class="type">char</span> *<em class="structfield"><code><a name="IptcTagInfo.name"></a>name</code></em>;</p></td>
+<td class="struct_member_description"><p>English name of the tag (no spaces)</p></td>
+<td class="struct_member_annotations"> </td>
 </tr>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>tag</code></em> :</span></p></td>
-<td> dataset number of tag
-</td>
+<td class="struct_member_name"><p>const <span class="type">char</span> *<em class="structfield"><code><a name="IptcTagInfo.title"></a>title</code></em>;</p></td>
+<td class="struct_member_description"><p>English title of the tag (may contain spaces)</p></td>
+<td class="struct_member_annotations"> </td>
 </tr>
 <tr>
-<td><p><span class="term"><span class="emphasis"><em>Returns</em></span> :</span></p></td>
-<td> a static string containing the tag name, NULL if none found
-</td>
+<td class="struct_member_name"><p>const <span class="type">char</span> *<em class="structfield"><code><a name="IptcTagInfo.description"></a>description</code></em>;</p></td>
+<td class="struct_member_description"><p>English description of the tag</p></td>
+<td class="struct_member_annotations"> </td>
+</tr>
+<tr>
+<td class="struct_member_name"><p><a class="link" href="libiptcdata-tag.html#IptcFormat" title="enum IptcFormat"><span class="type">IptcFormat</span></a> <em class="structfield"><code><a name="IptcTagInfo.format"></a>format</code></em>;</p></td>
+<td class="struct_member_description"><p>data format of the tag</p></td>
+<td class="struct_member_annotations"> </td>
+</tr>
+<tr>
+<td class="struct_member_name"><p><a class="link" href="libiptcdata-tag.html#IptcMandatory" title="enum IptcMandatory"><span class="type">IptcMandatory</span></a> <em class="structfield"><code><a name="IptcTagInfo.mandatory"></a>mandatory</code></em>;</p></td>
+<td class="struct_member_description"><p>whether the specification says the tag
+is required</p></td>
+<td class="struct_member_annotations"> </td>
+</tr>
+<tr>
+<td class="struct_member_name"><p><a class="link" href="libiptcdata-tag.html#IptcRepeatable" title="enum IptcRepeatable"><span class="type">IptcRepeatable</span></a> <em class="structfield"><code><a name="IptcTagInfo.repeatable"></a>repeatable</code></em>;</p></td>
+<td class="struct_member_description"><p>whether the specification says the tag
+can appear more than once</p></td>
+<td class="struct_member_annotations"> </td>
+</tr>
+<tr>
+<td class="struct_member_name"><p>unsigned <span class="type">int</span> <em class="structfield"><code><a name="IptcTagInfo.minbytes"></a>minbytes</code></em>;</p></td>
+<td class="struct_member_description"><p>minimum number of bytes in the tag value</p></td>
+<td class="struct_member_annotations"> </td>
+</tr>
+<tr>
+<td class="struct_member_name"><p>unsigned <span class="type">int</span> <em class="structfield"><code><a name="IptcTagInfo.maxbytes"></a>maxbytes</code></em>;</p></td>
+<td class="struct_member_description"><p>maximum number of bytes in the tag value</p></td>
+<td class="struct_member_annotations"> </td>
 </tr>
 </tbody>
 </table></div>
 </div>
+</div>
 <hr>
-<div class="refsect2" lang="en">
-<a name="iptc-tag-get-title"></a><h3>iptc_tag_get_title ()</h3>
-<pre class="programlisting">char*               iptc_tag_get_title                  (<a class="link" href="libiptcdata-tag.html#IptcRecord" title="enum IptcRecord">IptcRecord</a> record,
-                                                         <a class="link" href="libiptcdata-tag.html#IptcTag" title="enum IptcTag">IptcTag</a> tag);</pre>
-<p>
-Retrieves the title of a tag.  The title is similar to
-the name, except it will be translated to the current
-locale (if available) and may contain spaces, for example
-"Copyright Notice".  It is appropriate for the title to appear
-in user interfaces.  The return value will be encoding using the UTF-8
-character set.</p>
+<div class="refsect2">
+<a name="IptcFormat"></a><h3>enum IptcFormat</h3>
 <p>
-
+The possible data formats for a tag's value, derived from the IPTC IIM
+specification.  Integer formats are always represented with the most
+significant byte first (big-endian) in the IPTC bytestream.
 </p>
-<div class="variablelist"><table border="0">
-<col align="left" valign="top">
+<div class="refsect3">
+<a name="id-1.7.4.7.5.4"></a><h4>Members</h4>
+<div class="informaltable"><table width="100%" border="0">
+<colgroup>
+<col width="300px" class="enum_members_name">
+<col class="enum_members_description">
+<col width="200px" class="enum_members_annotations">
+</colgroup>
 <tbody>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>record</code></em> :</span></p></td>
-<td> record number of tag
+<td class="enum_member_name"><p><a name="IPTC-FORMAT-UNKNOWN:CAPS"></a>IPTC_FORMAT_UNKNOWN</p></td>
+<td class="enum_member_description">
+<p>Unknown format (for a tag not in the specification)</p>
 </td>
+<td class="enum_member_annotations"> </td>
 </tr>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>tag</code></em> :</span></p></td>
-<td> dataset number of tag
+<td class="enum_member_name"><p><a name="IPTC-FORMAT-BINARY:CAPS"></a>IPTC_FORMAT_BINARY</p></td>
+<td class="enum_member_description">
+<p>Binary data (variable length)</p>
 </td>
+<td class="enum_member_annotations"> </td>
 </tr>
 <tr>
-<td><p><span class="term"><span class="emphasis"><em>Returns</em></span> :</span></p></td>
-<td> a static string containing the tag title, empty string
-if none found
+<td class="enum_member_name"><p><a name="IPTC-FORMAT-BYTE:CAPS"></a>IPTC_FORMAT_BYTE</p></td>
+<td class="enum_member_description">
+<p>1-byte integer</p>
 </td>
+<td class="enum_member_annotations"> </td>
 </tr>
-</tbody>
-</table></div>
-</div>
-<hr>
-<div class="refsect2" lang="en">
-<a name="iptc-tag-get-description"></a><h3>iptc_tag_get_description ()</h3>
-<pre class="programlisting">char*               iptc_tag_get_description            (<a class="link" href="libiptcdata-tag.html#IptcRecord" title="enum IptcRecord">IptcRecord</a> record,
-                                                         <a class="link" href="libiptcdata-tag.html#IptcTag" title="enum IptcTag">IptcTag</a> tag);</pre>
-<p>
-Retrieves the description of a tag, which explains the purpose
-of the tag from the IPTC IIM specification.  It is translated
-to the current locale if available.  The return value will
-be encoded using the UTF-8 character set.</p>
-<p>
-
-</p>
-<div class="variablelist"><table border="0">
-<col align="left" valign="top">
-<tbody>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>record</code></em> :</span></p></td>
-<td> record number of tag
+<td class="enum_member_name"><p><a name="IPTC-FORMAT-SHORT:CAPS"></a>IPTC_FORMAT_SHORT</p></td>
+<td class="enum_member_description">
+<p>2-byte integer (big-endian)</p>
 </td>
+<td class="enum_member_annotations"> </td>
 </tr>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>tag</code></em> :</span></p></td>
-<td> dataset number of tag
+<td class="enum_member_name"><p><a name="IPTC-FORMAT-LONG:CAPS"></a>IPTC_FORMAT_LONG</p></td>
+<td class="enum_member_description">
+<p>4-byte integer (big-endian)</p>
 </td>
+<td class="enum_member_annotations"> </td>
 </tr>
 <tr>
-<td><p><span class="term"><span class="emphasis"><em>Returns</em></span> :</span></p></td>
-<td> a static string containing the tag desciption, empty
-string if none found
+<td class="enum_member_name"><p><a name="IPTC-FORMAT-STRING:CAPS"></a>IPTC_FORMAT_STRING</p></td>
+<td class="enum_member_description">
+<p>String data (variable length, of any character set)</p>
 </td>
+<td class="enum_member_annotations"> </td>
 </tr>
-</tbody>
-</table></div>
-</div>
-<hr>
-<div class="refsect2" lang="en">
-<a name="iptc-tag-get-info"></a><h3>iptc_tag_get_info ()</h3>
-<pre class="programlisting">const <a class="link" href="libiptcdata-tag.html#IptcTagInfo" title="IptcTagInfo">IptcTagInfo</a>*  iptc_tag_get_info                   (<a class="link" href="libiptcdata-tag.html#IptcRecord" title="enum IptcRecord">IptcRecord</a> record,
-                                                         <a class="link" href="libiptcdata-tag.html#IptcTag" title="enum IptcTag">IptcTag</a> tag);</pre>
-<p>
-Retrieves the <a class="link" href="libiptcdata-tag.html#IptcTagInfo" title="IptcTagInfo"><span class="type">IptcTagInfo</span></a> structure containing information about the
-tag from the IPTC IIM specification such as purpose, data format,
-and minimum and maximum lengths.</p>
-<p>
-
-</p>
-<div class="variablelist"><table border="0">
-<col align="left" valign="top">
-<tbody>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>record</code></em> :</span></p></td>
-<td> record number of tag
+<td class="enum_member_name"><p><a name="IPTC-FORMAT-NUMERIC-STRING:CAPS"></a>IPTC_FORMAT_NUMERIC_STRING</p></td>
+<td class="enum_member_description">
+<p>String containing only numerals (variable length)</p>
 </td>
+<td class="enum_member_annotations"> </td>
 </tr>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>tag</code></em> :</span></p></td>
-<td> dataset number of tag
+<td class="enum_member_name"><p><a name="IPTC-FORMAT-DATE:CAPS"></a>IPTC_FORMAT_DATE</p></td>
+<td class="enum_member_description">
+<p>String of the format "YYYYMMDD" (8 bytes)</p>
 </td>
+<td class="enum_member_annotations"> </td>
 </tr>
 <tr>
-<td><p><span class="term"><span class="emphasis"><em>Returns</em></span> :</span></p></td>
-<td> a pointer to a static <a class="link" href="libiptcdata-tag.html#IptcTagInfo" title="IptcTagInfo"><span class="type">IptcTagInfo</span></a> structure or NULL if
-the tag is not found.
+<td class="enum_member_name"><p><a name="IPTC-FORMAT-TIME:CAPS"></a>IPTC_FORMAT_TIME</p></td>
+<td class="enum_member_description">
+<p>String of the format "HHMMSS±HHMM" where the second
+HHMM defines the timezone offset (11 bytes)</p>
 </td>
+<td class="enum_member_annotations"> </td>
 </tr>
 </tbody>
 </table></div>
 </div>
+</div>
 <hr>
-<div class="refsect2" lang="en">
-<a name="iptc-format-get-name"></a><h3>iptc_format_get_name ()</h3>
-<pre class="programlisting">char*               iptc_format_get_name                (<a class="link" href="libiptcdata-tag.html#IptcFormat" title="enum IptcFormat">IptcFormat</a> format);</pre>
-<p>
-Retrieves a string version of a data format.  For example,
-<a class="link" href="libiptcdata-tag.html#IPTC-FORMAT-STRING:CAPS"><code class="literal">IPTC_FORMAT_STRING</code></a> returns "String".</p>
+<div class="refsect2">
+<a name="IptcMandatory"></a><h3>enum IptcMandatory</h3>
 <p>
-
+Whether a tag is mandatory according to the IPTC IIM specification.
+Note that most applications ignore this aspect of the specification
+since the spec was designed to encapsulate the media file rather than
+the other way around (which is how nearly all applications use it).
+This renders most mandatory tags unnecessary.
 </p>
-<div class="variablelist"><table border="0">
-<col align="left" valign="top">
+<div class="refsect3">
+<a name="id-1.7.4.7.6.4"></a><h4>Members</h4>
+<div class="informaltable"><table width="100%" border="0">
+<colgroup>
+<col width="300px" class="enum_members_name">
+<col class="enum_members_description">
+<col width="200px" class="enum_members_annotations">
+</colgroup>
 <tbody>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>format</code></em> :</span></p></td>
-<td> the format to be retrieved
+<td class="enum_member_name"><p><a name="IPTC-OPTIONAL:CAPS"></a>IPTC_OPTIONAL</p></td>
+<td class="enum_member_description">
+<p>tag is allowed to be absent</p>
 </td>
+<td class="enum_member_annotations"> </td>
 </tr>
 <tr>
-<td><p><span class="term"><span class="emphasis"><em>Returns</em></span> :</span></p></td>
-<td> a static string in the native locale
+<td class="enum_member_name"><p><a name="IPTC-MANDATORY:CAPS"></a>IPTC_MANDATORY</p></td>
+<td class="enum_member_description">
+<p>tag must be present</p>
 </td>
+<td class="enum_member_annotations"> </td>
 </tr>
 </tbody>
 </table></div>
 </div>
+</div>
 <hr>
-<div class="refsect2" lang="en">
-<a name="iptc-tag-find-by-name"></a><h3>iptc_tag_find_by_name ()</h3>
-<pre class="programlisting">int                 iptc_tag_find_by_name               (const char *name,
-                                                         <a class="link" href="libiptcdata-tag.html#IptcRecord" title="enum IptcRecord">IptcRecord</a> *record,
-                                                         <a class="link" href="libiptcdata-tag.html#IptcTag" title="enum IptcTag">IptcTag</a> *tag);</pre>
-<p>
-Looks up the record and tag numbers for a tag specified by name.  For
-example, searching for "Caption" would return 2:120 in the record and
-tag variables.</p>
+<div class="refsect2">
+<a name="IptcRepeatable"></a><h3>enum IptcRepeatable</h3>
 <p>
-
+Whether a tag can occur more than once according to the IPTC IIM
+specification.  For example, the "Keywords" tag only contains a single
+keyword, but the tag itself is repeated for media that references more
+than one keyword.
 </p>
-<div class="variablelist"><table border="0">
-<col align="left" valign="top">
+<div class="refsect3">
+<a name="id-1.7.4.7.7.4"></a><h4>Members</h4>
+<div class="informaltable"><table width="100%" border="0">
+<colgroup>
+<col width="300px" class="enum_members_name">
+<col class="enum_members_description">
+<col width="200px" class="enum_members_annotations">
+</colgroup>
 <tbody>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>name</code></em> :</span></p></td>
-<td> the name to search for
-</td>
-</tr>
-<tr>
-<td><p><span class="term"><em class="parameter"><code>record</code></em> :</span></p></td>
-<td> output variable to store the record number
-</td>
-</tr>
-<tr>
-<td><p><span class="term"><em class="parameter"><code>tag</code></em> :</span></p></td>
-<td> output variable to store the tag number
+<td class="enum_member_name"><p><a name="IPTC-NOT-REPEATABLE:CAPS"></a>IPTC_NOT_REPEATABLE</p></td>
+<td class="enum_member_description">
+<p>tag can only appear once</p>
 </td>
+<td class="enum_member_annotations"> </td>
 </tr>
 <tr>
-<td><p><span class="term"><span class="emphasis"><em>Returns</em></span> :</span></p></td>
-<td> 0 on success, -1 on failure or if the tag name was not found
+<td class="enum_member_name"><p><a name="IPTC-REPEATABLE:CAPS"></a>IPTC_REPEATABLE</p></td>
+<td class="enum_member_description">
+<p>tag can be repeated</p>
 </td>
+<td class="enum_member_annotations"> </td>
 </tr>
 </tbody>
 </table></div>
 </div>
 </div>
 </div>
+</div>
 <div class="footer">
 <hr>
-          Generated by GTK-Doc V1.10</div>
+          Generated by GTK-Doc V1.21</div>
 </body>
-</html>
+</html>
\ No newline at end of file
--- libiptcdata-1.0.4.orig/docs/reference/html/libiptcdata-utils.html
+++ libiptcdata-1.0.4/docs/reference/html/libiptcdata-utils.html
@@ -2,350 +2,292 @@
 <html>
 <head>
 <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
-<title>Byte ordering</title>
-<meta name="generator" content="DocBook XSL Stylesheets V1.74.0">
+<title>libiptcdata Reference Manual: Byte ordering</title>
+<meta name="generator" content="DocBook XSL Stylesheets V1.78.1">
 <link rel="home" href="index.html" title="libiptcdata Reference Manual">
 <link rel="up" href="ch03.html" title="Helper Functions">
 <link rel="prev" href="ch03.html" title="Helper Functions">
 <link rel="next" href="libiptcdata-mem.html" title="Memory managment">
-<meta name="generator" content="GTK-Doc V1.10 (XML mode)">
+<meta name="generator" content="GTK-Doc V1.21 (XML mode)">
 <link rel="stylesheet" href="style.css" type="text/css">
-<link rel="chapter" href="ch01.html" title="IPTC Data Manipulation">
-<link rel="chapter" href="ch02.html" title="Format-specific Functions">
-<link rel="chapter" href="ch03.html" title="Helper Functions">
 </head>
 <body bgcolor="white" text="black" link="#0000FF" vlink="#840084" alink="#0000FF">
-<table class="navigation" id="top" width="100%" summary="Navigation header" cellpadding="2" cellspacing="2">
-<tr valign="middle">
-<td><a accesskey="p" href="ch03.html"><img src="left.png" width="24" height="24" border="0" alt="Prev"></a></td>
-<td><a accesskey="u" href="ch03.html"><img src="up.png" width="24" height="24" border="0" alt="Up"></a></td>
-<td><a accesskey="h" href="index.html"><img src="home.png" width="24" height="24" border="0" alt="Home"></a></td>
-<th width="100%" align="center">libiptcdata Reference Manual</th>
-<td><a accesskey="n" href="libiptcdata-mem.html"><img src="right.png" width="24" height="24" border="0" alt="Next"></a></td>
-</tr>
-<tr><td colspan="5" class="shortcuts"><nobr><a href="#libiptcdata-utils.synopsis" class="shortcut">Top</a>
-                   | 
-                  <a href="#libiptcdata-utils.description" class="shortcut">Description</a></nobr></td></tr>
-</table>
-<div class="refentry" lang="en">
+<table class="navigation" id="top" width="100%" summary="Navigation header" cellpadding="2" cellspacing="5"><tr valign="middle">
+<td width="100%" align="left" class="shortcuts">
+<a href="#" class="shortcut">Top</a><span id="nav_description">  <span class="dim">|</span> 
+                  <a href="#libiptcdata-utils.description" class="shortcut">Description</a></span>
+</td>
+<td><a accesskey="h" href="index.html"><img src="home.png" width="16" height="16" border="0" alt="Home"></a></td>
+<td><a accesskey="u" href="ch03.html"><img src="up.png" width="16" height="16" border="0" alt="Up"></a></td>
+<td><a accesskey="p" href="ch03.html"><img src="left.png" width="16" height="16" border="0" alt="Prev"></a></td>
+<td><a accesskey="n" href="libiptcdata-mem.html"><img src="right.png" width="16" height="16" border="0" alt="Next"></a></td>
+</tr></table>
+<div class="refentry">
 <a name="libiptcdata-utils"></a><div class="titlepage"></div>
 <div class="refnamediv"><table width="100%"><tr>
 <td valign="top">
 <h2><span class="refentrytitle"><a name="libiptcdata-utils.top_of_page"></a>Byte ordering</span></h2>
 <p>Byte ordering — functions for decoding integer types of different byte-orders</p>
 </td>
-<td valign="top" align="right"></td>
+<td class="gallery_image" valign="top" align="right"></td>
 </tr></table></div>
-<div class="refsynopsisdiv">
-<a name="libiptcdata-utils.synopsis"></a><h2>Synopsis</h2>
-<pre class="synopsis">
-enum                <a class="link" href="libiptcdata-utils.html#IptcByteOrder" title="enum IptcByteOrder">IptcByteOrder</a>;
-typedef             <a class="link" href="libiptcdata-utils.html#IptcByte" title="IptcByte">IptcByte</a>;
-typedef             <a class="link" href="libiptcdata-utils.html#IptcShort" title="IptcShort">IptcShort</a>;
-typedef             <a class="link" href="libiptcdata-utils.html#IptcLong" title="IptcLong">IptcLong</a>;
-typedef             <a class="link" href="libiptcdata-utils.html#IptcSLong" title="IptcSLong">IptcSLong</a>;
-<a class="link" href="libiptcdata-utils.html#IptcShort" title="IptcShort">IptcShort</a>           <a class="link" href="libiptcdata-utils.html#iptc-get-short" title="iptc_get_short ()">iptc_get_short</a>                      (unsigned char *b,
-                                                         <a class="link" href="libiptcdata-utils.html#IptcByteOrder" title="enum IptcByteOrder">IptcByteOrder</a> order);
-<a class="link" href="libiptcdata-utils.html#IptcLong" title="IptcLong">IptcLong</a>            <a class="link" href="libiptcdata-utils.html#iptc-get-long" title="iptc_get_long ()">iptc_get_long</a>                       (unsigned char *b,
-                                                         <a class="link" href="libiptcdata-utils.html#IptcByteOrder" title="enum IptcByteOrder">IptcByteOrder</a> order);
-<a class="link" href="libiptcdata-utils.html#IptcSLong" title="IptcSLong">IptcSLong</a>           <a class="link" href="libiptcdata-utils.html#iptc-get-slong" title="iptc_get_slong ()">iptc_get_slong</a>                      (unsigned char *b,
-                                                         <a class="link" href="libiptcdata-utils.html#IptcByteOrder" title="enum IptcByteOrder">IptcByteOrder</a> order);
-void                <a class="link" href="libiptcdata-utils.html#iptc-set-short" title="iptc_set_short ()">iptc_set_short</a>                      (unsigned char *b,
-                                                         <a class="link" href="libiptcdata-utils.html#IptcByteOrder" title="enum IptcByteOrder">IptcByteOrder</a> order,
-                                                         <a class="link" href="libiptcdata-utils.html#IptcShort" title="IptcShort">IptcShort</a> value);
-void                <a class="link" href="libiptcdata-utils.html#iptc-set-long" title="iptc_set_long ()">iptc_set_long</a>                       (unsigned char *b,
-                                                         <a class="link" href="libiptcdata-utils.html#IptcByteOrder" title="enum IptcByteOrder">IptcByteOrder</a> order,
-                                                         <a class="link" href="libiptcdata-utils.html#IptcLong" title="IptcLong">IptcLong</a> value);
-void                <a class="link" href="libiptcdata-utils.html#iptc-set-slong" title="iptc_set_slong ()">iptc_set_slong</a>                      (unsigned char *b,
-                                                         <a class="link" href="libiptcdata-utils.html#IptcByteOrder" title="enum IptcByteOrder">IptcByteOrder</a> order,
-                                                         <a class="link" href="libiptcdata-utils.html#IptcSLong" title="IptcSLong">IptcSLong</a> value);
-#define             <a class="link" href="libiptcdata-utils.html#MIN:CAPS" title="MIN()">MIN</a>                                 (a, b)
-#define             <a class="link" href="libiptcdata-utils.html#IPTC-TAG-SUBSEC-TIME:CAPS" title="IPTC_TAG_SUBSEC_TIME">IPTC_TAG_SUBSEC_TIME</a>
-</pre>
-</div>
-<div class="refsect1" lang="en">
-<a name="libiptcdata-utils.description"></a><h2>Description</h2>
-<p>
-
-</p>
-</div>
-<div class="refsect1" lang="en">
-<a name="libiptcdata-utils.details"></a><h2>Details</h2>
-<div class="refsect2" lang="en">
-<a name="IptcByteOrder"></a><h3>enum IptcByteOrder</h3>
-<pre class="programlisting">typedef enum {
-	IPTC_BYTE_ORDER_MOTOROLA,
-	IPTC_BYTE_ORDER_INTEL
-} IptcByteOrder;
-</pre>
-<p>
-
-</p>
-</div>
-<hr>
-<div class="refsect2" lang="en">
-<a name="IptcByte"></a><h3>IptcByte</h3>
-<pre class="programlisting">typedef char		IptcByte;          /* 1 byte  */
-</pre>
-<p>
-
-</p>
-</div>
-<hr>
-<div class="refsect2" lang="en">
-<a name="IptcShort"></a><h3>IptcShort</h3>
-<pre class="programlisting">typedef uint16_t	IptcShort;         /* 2 bytes */
-</pre>
-<p>
-
-</p>
-</div>
-<hr>
-<div class="refsect2" lang="en">
-<a name="IptcLong"></a><h3>IptcLong</h3>
-<pre class="programlisting">typedef uint32_t	IptcLong;          /* 4 bytes */
-</pre>
-<p>
-
-</p>
-</div>
-<hr>
-<div class="refsect2" lang="en">
-<a name="IptcSLong"></a><h3>IptcSLong</h3>
-<pre class="programlisting">typedef int32_t		IptcSLong;         /* 4 bytes */
-</pre>
-<p>
-
-</p>
-</div>
-<hr>
-<div class="refsect2" lang="en">
-<a name="iptc-get-short"></a><h3>iptc_get_short ()</h3>
-<pre class="programlisting"><a class="link" href="libiptcdata-utils.html#IptcShort" title="IptcShort">IptcShort</a>           iptc_get_short                      (unsigned char *b,
-                                                         <a class="link" href="libiptcdata-utils.html#IptcByteOrder" title="enum IptcByteOrder">IptcByteOrder</a> order);</pre>
-<p>
-
-</p>
-<div class="variablelist"><table border="0">
-<col align="left" valign="top">
+<div class="refsect1">
+<a name="libiptcdata-utils.functions"></a><h2>Functions</h2>
+<div class="informaltable"><table width="100%" border="0">
+<colgroup>
+<col width="150px" class="functions_return">
+<col class="functions_name">
+</colgroup>
 <tbody>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>b</code></em> :</span></p></td>
-<td>
+<td class="function_type">
+<a class="link" href="libiptcdata-utils.html#IptcShort" title="IptcShort"><span class="returnvalue">IptcShort</span></a>
 </td>
-</tr>
-<tr>
-<td><p><span class="term"><em class="parameter"><code>order</code></em> :</span></p></td>
-<td>
+<td class="function_name">
+<a class="link" href="libiptcdata-utils.html#iptc-get-short" title="iptc_get_short ()">iptc_get_short</a> <span class="c_punctuation">()</span>
 </td>
 </tr>
 <tr>
-<td><p><span class="term"><span class="emphasis"><em>Returns</em></span> :</span></p></td>
-<td>
-
-
+<td class="function_type">
+<a class="link" href="libiptcdata-utils.html#IptcLong" title="IptcLong"><span class="returnvalue">IptcLong</span></a>
 </td>
-</tr>
-</tbody>
-</table></div>
-</div>
-<hr>
-<div class="refsect2" lang="en">
-<a name="iptc-get-long"></a><h3>iptc_get_long ()</h3>
-<pre class="programlisting"><a class="link" href="libiptcdata-utils.html#IptcLong" title="IptcLong">IptcLong</a>            iptc_get_long                       (unsigned char *b,
-                                                         <a class="link" href="libiptcdata-utils.html#IptcByteOrder" title="enum IptcByteOrder">IptcByteOrder</a> order);</pre>
-<p>
-
-</p>
-<div class="variablelist"><table border="0">
-<col align="left" valign="top">
-<tbody>
-<tr>
-<td><p><span class="term"><em class="parameter"><code>b</code></em> :</span></p></td>
-<td>
+<td class="function_name">
+<a class="link" href="libiptcdata-utils.html#iptc-get-long" title="iptc_get_long ()">iptc_get_long</a> <span class="c_punctuation">()</span>
 </td>
 </tr>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>order</code></em> :</span></p></td>
-<td>
+<td class="function_type">
+<a class="link" href="libiptcdata-utils.html#IptcSLong" title="IptcSLong"><span class="returnvalue">IptcSLong</span></a>
+</td>
+<td class="function_name">
+<a class="link" href="libiptcdata-utils.html#iptc-get-slong" title="iptc_get_slong ()">iptc_get_slong</a> <span class="c_punctuation">()</span>
 </td>
 </tr>
 <tr>
-<td><p><span class="term"><span class="emphasis"><em>Returns</em></span> :</span></p></td>
-<td>
-
-
+<td class="function_type">
+<span class="returnvalue">void</span>
+</td>
+<td class="function_name">
+<a class="link" href="libiptcdata-utils.html#iptc-set-short" title="iptc_set_short ()">iptc_set_short</a> <span class="c_punctuation">()</span>
 </td>
 </tr>
-</tbody>
-</table></div>
-</div>
-<hr>
-<div class="refsect2" lang="en">
-<a name="iptc-get-slong"></a><h3>iptc_get_slong ()</h3>
-<pre class="programlisting"><a class="link" href="libiptcdata-utils.html#IptcSLong" title="IptcSLong">IptcSLong</a>           iptc_get_slong                      (unsigned char *b,
-                                                         <a class="link" href="libiptcdata-utils.html#IptcByteOrder" title="enum IptcByteOrder">IptcByteOrder</a> order);</pre>
-<p>
-
-</p>
-<div class="variablelist"><table border="0">
-<col align="left" valign="top">
-<tbody>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>b</code></em> :</span></p></td>
-<td>
+<td class="function_type">
+<span class="returnvalue">void</span>
+</td>
+<td class="function_name">
+<a class="link" href="libiptcdata-utils.html#iptc-set-long" title="iptc_set_long ()">iptc_set_long</a> <span class="c_punctuation">()</span>
 </td>
 </tr>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>order</code></em> :</span></p></td>
-<td>
+<td class="function_type">
+<span class="returnvalue">void</span>
+</td>
+<td class="function_name">
+<a class="link" href="libiptcdata-utils.html#iptc-set-slong" title="iptc_set_slong ()">iptc_set_slong</a> <span class="c_punctuation">()</span>
 </td>
 </tr>
 <tr>
-<td><p><span class="term"><span class="emphasis"><em>Returns</em></span> :</span></p></td>
-<td>
-
-
+<td class="define_keyword">#define</td>
+<td class="function_name">
+<a class="link" href="libiptcdata-utils.html#MIN:CAPS" title="MIN()">MIN</a><span class="c_punctuation">()</span>
 </td>
 </tr>
 </tbody>
 </table></div>
 </div>
-<hr>
-<div class="refsect2" lang="en">
-<a name="iptc-set-short"></a><h3>iptc_set_short ()</h3>
-<pre class="programlisting">void                iptc_set_short                      (unsigned char *b,
-                                                         <a class="link" href="libiptcdata-utils.html#IptcByteOrder" title="enum IptcByteOrder">IptcByteOrder</a> order,
-                                                         <a class="link" href="libiptcdata-utils.html#IptcShort" title="IptcShort">IptcShort</a> value);</pre>
-<p>
-
-</p>
-<div class="variablelist"><table border="0">
-<col align="left" valign="top">
+<div class="refsect1">
+<a name="libiptcdata-utils.other"></a><h2>Types and Values</h2>
+<div class="informaltable"><table width="100%" border="0">
+<colgroup>
+<col width="150px" class="name">
+<col class="description">
+</colgroup>
 <tbody>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>b</code></em> :</span></p></td>
-<td>
-</td>
+<td class="datatype_keyword">enum</td>
+<td class="function_name"><a class="link" href="libiptcdata-utils.html#IptcByteOrder" title="enum IptcByteOrder">IptcByteOrder</a></td>
 </tr>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>order</code></em> :</span></p></td>
-<td>
-</td>
+<td class="typedef_keyword">typedef</td>
+<td class="function_name"><a class="link" href="libiptcdata-utils.html#IptcByte" title="IptcByte">IptcByte</a></td>
 </tr>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>value</code></em> :</span></p></td>
-<td>
-
-
-</td>
+<td class="typedef_keyword">typedef</td>
+<td class="function_name"><a class="link" href="libiptcdata-utils.html#IptcShort" title="IptcShort">IptcShort</a></td>
 </tr>
-</tbody>
-</table></div>
-</div>
-<hr>
-<div class="refsect2" lang="en">
-<a name="iptc-set-long"></a><h3>iptc_set_long ()</h3>
-<pre class="programlisting">void                iptc_set_long                       (unsigned char *b,
-                                                         <a class="link" href="libiptcdata-utils.html#IptcByteOrder" title="enum IptcByteOrder">IptcByteOrder</a> order,
-                                                         <a class="link" href="libiptcdata-utils.html#IptcLong" title="IptcLong">IptcLong</a> value);</pre>
-<p>
-
-</p>
-<div class="variablelist"><table border="0">
-<col align="left" valign="top">
-<tbody>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>b</code></em> :</span></p></td>
-<td>
-</td>
+<td class="typedef_keyword">typedef</td>
+<td class="function_name"><a class="link" href="libiptcdata-utils.html#IptcLong" title="IptcLong">IptcLong</a></td>
 </tr>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>order</code></em> :</span></p></td>
-<td>
-</td>
+<td class="typedef_keyword">typedef</td>
+<td class="function_name"><a class="link" href="libiptcdata-utils.html#IptcSLong" title="IptcSLong">IptcSLong</a></td>
 </tr>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>value</code></em> :</span></p></td>
-<td>
-
-
-</td>
+<td class="define_keyword">#define</td>
+<td class="function_name"><a class="link" href="libiptcdata-utils.html#IPTC-TAG-SUBSEC-TIME:CAPS" title="IPTC_TAG_SUBSEC_TIME">IPTC_TAG_SUBSEC_TIME</a></td>
 </tr>
 </tbody>
 </table></div>
 </div>
+<div class="refsect1">
+<a name="libiptcdata-utils.description"></a><h2>Description</h2>
+<p>
+</p>
+</div>
+<div class="refsect1">
+<a name="libiptcdata-utils.functions_details"></a><h2>Functions</h2>
+<div class="refsect2">
+<a name="iptc-get-short"></a><h3>iptc_get_short ()</h3>
+<pre class="programlisting"><a class="link" href="libiptcdata-utils.html#IptcShort" title="IptcShort"><span class="returnvalue">IptcShort</span></a>
+iptc_get_short (<em class="parameter"><code>const unsigned <span class="type">char</span> *b</code></em>,
+                <em class="parameter"><code><a class="link" href="libiptcdata-utils.html#IptcByteOrder" title="enum IptcByteOrder"><span class="type">IptcByteOrder</span></a> order</code></em>);</pre>
+<p>
+</p>
+<div class="refsect3">
+<a name="id-1.9.2.6.2.5"></a><h4>Returns</h4>
+<p></p>
+</div>
+</div>
 <hr>
-<div class="refsect2" lang="en">
-<a name="iptc-set-slong"></a><h3>iptc_set_slong ()</h3>
-<pre class="programlisting">void                iptc_set_slong                      (unsigned char *b,
-                                                         <a class="link" href="libiptcdata-utils.html#IptcByteOrder" title="enum IptcByteOrder">IptcByteOrder</a> order,
-                                                         <a class="link" href="libiptcdata-utils.html#IptcSLong" title="IptcSLong">IptcSLong</a> value);</pre>
+<div class="refsect2">
+<a name="iptc-get-long"></a><h3>iptc_get_long ()</h3>
+<pre class="programlisting"><a class="link" href="libiptcdata-utils.html#IptcLong" title="IptcLong"><span class="returnvalue">IptcLong</span></a>
+iptc_get_long (<em class="parameter"><code>const unsigned <span class="type">char</span> *b</code></em>,
+               <em class="parameter"><code><a class="link" href="libiptcdata-utils.html#IptcByteOrder" title="enum IptcByteOrder"><span class="type">IptcByteOrder</span></a> order</code></em>);</pre>
 <p>
-
 </p>
-<div class="variablelist"><table border="0">
-<col align="left" valign="top">
-<tbody>
-<tr>
-<td><p><span class="term"><em class="parameter"><code>b</code></em> :</span></p></td>
-<td>
-</td>
-</tr>
-<tr>
-<td><p><span class="term"><em class="parameter"><code>order</code></em> :</span></p></td>
-<td>
-</td>
-</tr>
-<tr>
-<td><p><span class="term"><em class="parameter"><code>value</code></em> :</span></p></td>
-<td>
-
-
-</td>
-</tr>
-</tbody>
-</table></div>
+<div class="refsect3">
+<a name="id-1.9.2.6.3.5"></a><h4>Returns</h4>
+<p></p>
+</div>
+</div>
+<hr>
+<div class="refsect2">
+<a name="iptc-get-slong"></a><h3>iptc_get_slong ()</h3>
+<pre class="programlisting"><a class="link" href="libiptcdata-utils.html#IptcSLong" title="IptcSLong"><span class="returnvalue">IptcSLong</span></a>
+iptc_get_slong (<em class="parameter"><code>const unsigned <span class="type">char</span> *b</code></em>,
+                <em class="parameter"><code><a class="link" href="libiptcdata-utils.html#IptcByteOrder" title="enum IptcByteOrder"><span class="type">IptcByteOrder</span></a> order</code></em>);</pre>
+<p>
+</p>
+<div class="refsect3">
+<a name="id-1.9.2.6.4.5"></a><h4>Returns</h4>
+<p></p>
+</div>
 </div>
 <hr>
-<div class="refsect2" lang="en">
+<div class="refsect2">
+<a name="iptc-set-short"></a><h3>iptc_set_short ()</h3>
+<pre class="programlisting"><span class="returnvalue">void</span>
+iptc_set_short (<em class="parameter"><code>unsigned <span class="type">char</span> *b</code></em>,
+                <em class="parameter"><code><a class="link" href="libiptcdata-utils.html#IptcByteOrder" title="enum IptcByteOrder"><span class="type">IptcByteOrder</span></a> order</code></em>,
+                <em class="parameter"><code><a class="link" href="libiptcdata-utils.html#IptcShort" title="IptcShort"><span class="type">IptcShort</span></a> value</code></em>);</pre>
+<p>
+</p>
+</div>
+<hr>
+<div class="refsect2">
+<a name="iptc-set-long"></a><h3>iptc_set_long ()</h3>
+<pre class="programlisting"><span class="returnvalue">void</span>
+iptc_set_long (<em class="parameter"><code>unsigned <span class="type">char</span> *b</code></em>,
+               <em class="parameter"><code><a class="link" href="libiptcdata-utils.html#IptcByteOrder" title="enum IptcByteOrder"><span class="type">IptcByteOrder</span></a> order</code></em>,
+               <em class="parameter"><code><a class="link" href="libiptcdata-utils.html#IptcLong" title="IptcLong"><span class="type">IptcLong</span></a> value</code></em>);</pre>
+<p>
+</p>
+</div>
+<hr>
+<div class="refsect2">
+<a name="iptc-set-slong"></a><h3>iptc_set_slong ()</h3>
+<pre class="programlisting"><span class="returnvalue">void</span>
+iptc_set_slong (<em class="parameter"><code>unsigned <span class="type">char</span> *b</code></em>,
+                <em class="parameter"><code><a class="link" href="libiptcdata-utils.html#IptcByteOrder" title="enum IptcByteOrder"><span class="type">IptcByteOrder</span></a> order</code></em>,
+                <em class="parameter"><code><a class="link" href="libiptcdata-utils.html#IptcSLong" title="IptcSLong"><span class="type">IptcSLong</span></a> value</code></em>);</pre>
+<p>
+</p>
+</div>
+<hr>
+<div class="refsect2">
 <a name="MIN:CAPS"></a><h3>MIN()</h3>
 <pre class="programlisting">#define MIN(a, b)  (((a) &lt; (b)) ? (a) : (b))
 </pre>
 <p>
-
 </p>
-<div class="variablelist"><table border="0">
-<col align="left" valign="top">
+</div>
+</div>
+<div class="refsect1">
+<a name="libiptcdata-utils.other_details"></a><h2>Types and Values</h2>
+<div class="refsect2">
+<a name="IptcByteOrder"></a><h3>enum IptcByteOrder</h3>
+<p>
+</p>
+<div class="refsect3">
+<a name="id-1.9.2.7.2.4"></a><h4>Members</h4>
+<div class="informaltable"><table width="100%" border="0">
+<colgroup>
+<col width="300px" class="enum_members_name">
+<col class="enum_members_description">
+<col width="200px" class="enum_members_annotations">
+</colgroup>
 <tbody>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>a</code></em> :</span></p></td>
-<td>
-</td>
+<td class="enum_member_name"><p><a name="IPTC-BYTE-ORDER-MOTOROLA:CAPS"></a>IPTC_BYTE_ORDER_MOTOROLA</p></td>
+<td class="enum_member_description"> </td>
+<td class="enum_member_annotations"> </td>
 </tr>
 <tr>
-<td><p><span class="term"><em class="parameter"><code>b</code></em> :</span></p></td>
-<td>
-
-
-</td>
+<td class="enum_member_name"><p><a name="IPTC-BYTE-ORDER-INTEL:CAPS"></a>IPTC_BYTE_ORDER_INTEL</p></td>
+<td class="enum_member_description"> </td>
+<td class="enum_member_annotations"> </td>
 </tr>
 </tbody>
 </table></div>
 </div>
+</div>
+<hr>
+<div class="refsect2">
+<a name="IptcByte"></a><h3>IptcByte</h3>
+<pre class="programlisting">typedef char		IptcByte;          /* 1 byte  */
+</pre>
+<p>
+</p>
+</div>
+<hr>
+<div class="refsect2">
+<a name="IptcShort"></a><h3>IptcShort</h3>
+<pre class="programlisting">typedef uint16_t IptcShort;         /* 2 bytes */
+</pre>
+<p>
+</p>
+</div>
+<hr>
+<div class="refsect2">
+<a name="IptcLong"></a><h3>IptcLong</h3>
+<pre class="programlisting">typedef uint32_t IptcLong;          /* 4 bytes */
+</pre>
+<p>
+</p>
+</div>
+<hr>
+<div class="refsect2">
+<a name="IptcSLong"></a><h3>IptcSLong</h3>
+<pre class="programlisting">typedef int32_t		IptcSLong;         /* 4 bytes */
+</pre>
+<p>
+</p>
+</div>
 <hr>
-<div class="refsect2" lang="en">
+<div class="refsect2">
 <a name="IPTC-TAG-SUBSEC-TIME:CAPS"></a><h3>IPTC_TAG_SUBSEC_TIME</h3>
 <pre class="programlisting">#define IPTC_TAG_SUBSEC_TIME IPTC_TAG_SUB_SEC_TIME
 </pre>
 <p>
-
 </p>
 </div>
 </div>
 </div>
 <div class="footer">
 <hr>
-          Generated by GTK-Doc V1.10</div>
+          Generated by GTK-Doc V1.21</div>
 </body>
-</html>
+</html>
\ No newline at end of file
--- libiptcdata-1.0.4.orig/docs/reference/html/libiptcdata.devhelp2
+++ libiptcdata-1.0.4/docs/reference/html/libiptcdata.devhelp2
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="utf-8" standalone="no"?>
 <!DOCTYPE book PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "">
-<book xmlns="http://www.devhelp.net/book" title="libiptcdata Reference Manual" link="index.html" author="David Moore" name="libiptcdata" version="2">
+<book xmlns="http://www.devhelp.net/book" title="libiptcdata Reference Manual" link="index.html" author="David Moore" name="libiptcdata" version="2" language="c">
   <chapters>
     <sub name="About libiptcdata" link="iptc-about.html"/>
     <sub name="The IPTC Command-Line Utility" link="iptc-commandline.html"/>
@@ -22,107 +22,107 @@
     </sub>
   </chapters>
   <functions>
-    <keyword type="struct" name="IptcData" link="libiptcdata-data.html#IptcData"/>
-    <keyword type="function" name="iptc_data_new ()" link="libiptcdata-data.html#iptc-data-new"/>
-    <keyword type="function" name="iptc_data_new_mem ()" link="libiptcdata-data.html#iptc-data-new-mem"/>
-    <keyword type="function" name="iptc_data_ref ()" link="libiptcdata-data.html#iptc-data-ref"/>
-    <keyword type="function" name="iptc_data_unref ()" link="libiptcdata-data.html#iptc-data-unref"/>
-    <keyword type="function" name="iptc_data_free ()" link="libiptcdata-data.html#iptc-data-free"/>
-    <keyword type="function" name="iptc_data_new_from_jpeg ()" link="libiptcdata-data.html#iptc-data-new-from-jpeg"/>
-    <keyword type="function" name="iptc_data_new_from_data ()" link="libiptcdata-data.html#iptc-data-new-from-data"/>
-    <keyword type="function" name="iptc_data_load ()" link="libiptcdata-data.html#iptc-data-load"/>
-    <keyword type="function" name="iptc_data_save ()" link="libiptcdata-data.html#iptc-data-save"/>
-    <keyword type="function" name="iptc_data_free_buf ()" link="libiptcdata-data.html#iptc-data-free-buf"/>
-    <keyword type="function" name="iptc_data_get_dataset ()" link="libiptcdata-data.html#iptc-data-get-dataset"/>
-    <keyword type="function" name="iptc_data_get_next_dataset ()" link="libiptcdata-data.html#iptc-data-get-next-dataset"/>
-    <keyword type="function" name="iptc_data_add_dataset ()" link="libiptcdata-data.html#iptc-data-add-dataset"/>
-    <keyword type="function" name="iptc_data_add_dataset_before ()" link="libiptcdata-data.html#iptc-data-add-dataset-before"/>
-    <keyword type="function" name="iptc_data_add_dataset_after ()" link="libiptcdata-data.html#iptc-data-add-dataset-after"/>
-    <keyword type="function" name="iptc_data_remove_dataset ()" link="libiptcdata-data.html#iptc-data-remove-dataset"/>
-    <keyword type="function" name="IptcDataForeachDataSetFunc ()" link="libiptcdata-data.html#IptcDataForeachDataSetFunc"/>
-    <keyword type="function" name="iptc_data_foreach_dataset ()" link="libiptcdata-data.html#iptc-data-foreach-dataset"/>
-    <keyword type="function" name="iptc_data_sort ()" link="libiptcdata-data.html#iptc-data-sort"/>
+    <keyword type="function" name="iptc_data_new ()" link="libiptcdata-data.html#iptc-data-new"/>
+    <keyword type="function" name="iptc_data_new_mem ()" link="libiptcdata-data.html#iptc-data-new-mem"/>
+    <keyword type="function" name="iptc_data_ref ()" link="libiptcdata-data.html#iptc-data-ref"/>
+    <keyword type="function" name="iptc_data_unref ()" link="libiptcdata-data.html#iptc-data-unref"/>
+    <keyword type="function" name="iptc_data_free ()" link="libiptcdata-data.html#iptc-data-free"/>
+    <keyword type="function" name="iptc_data_new_from_jpeg ()" link="libiptcdata-data.html#iptc-data-new-from-jpeg"/>
+    <keyword type="function" name="iptc_data_new_from_data ()" link="libiptcdata-data.html#iptc-data-new-from-data"/>
+    <keyword type="function" name="iptc_data_load ()" link="libiptcdata-data.html#iptc-data-load"/>
+    <keyword type="function" name="iptc_data_save ()" link="libiptcdata-data.html#iptc-data-save"/>
+    <keyword type="function" name="iptc_data_free_buf ()" link="libiptcdata-data.html#iptc-data-free-buf"/>
+    <keyword type="function" name="iptc_data_get_dataset ()" link="libiptcdata-data.html#iptc-data-get-dataset"/>
+    <keyword type="function" name="iptc_data_get_next_dataset ()" link="libiptcdata-data.html#iptc-data-get-next-dataset"/>
+    <keyword type="function" name="iptc_data_add_dataset ()" link="libiptcdata-data.html#iptc-data-add-dataset"/>
+    <keyword type="function" name="iptc_data_add_dataset_before ()" link="libiptcdata-data.html#iptc-data-add-dataset-before"/>
+    <keyword type="function" name="iptc_data_add_dataset_after ()" link="libiptcdata-data.html#iptc-data-add-dataset-after"/>
+    <keyword type="function" name="iptc_data_remove_dataset ()" link="libiptcdata-data.html#iptc-data-remove-dataset"/>
+    <keyword type="function" name="IptcDataForeachDataSetFunc ()" link="libiptcdata-data.html#IptcDataForeachDataSetFunc"/>
+    <keyword type="function" name="iptc_data_foreach_dataset ()" link="libiptcdata-data.html#iptc-data-foreach-dataset"/>
+    <keyword type="function" name="iptc_data_sort ()" link="libiptcdata-data.html#iptc-data-sort"/>
+    <keyword type="function" name="iptc_data_get_encoding ()" link="libiptcdata-data.html#iptc-data-get-encoding"/>
+    <keyword type="function" name="iptc_data_set_encoding_utf8 ()" link="libiptcdata-data.html#iptc-data-set-encoding-utf8"/>
+    <keyword type="function" name="iptc_data_set_version ()" link="libiptcdata-data.html#iptc-data-set-version"/>
+    <keyword type="function" name="iptc_data_add_dataset_with_value ()" link="libiptcdata-data.html#iptc-data-add-dataset-with-value"/>
+    <keyword type="function" name="iptc_data_add_dataset_with_contents ()" link="libiptcdata-data.html#iptc-data-add-dataset-with-contents"/>
+    <keyword type="function" name="iptc_data_dump ()" link="libiptcdata-data.html#iptc-data-dump"/>
+    <keyword type="function" name="iptc_data_log ()" link="libiptcdata-data.html#iptc-data-log"/>
+    <keyword type="struct" name="struct IptcData" link="libiptcdata-data.html#IptcData"/>
     <keyword type="enum" name="enum IptcEncoding" link="libiptcdata-data.html#IptcEncoding"/>
-    <keyword type="function" name="iptc_data_get_encoding ()" link="libiptcdata-data.html#iptc-data-get-encoding"/>
-    <keyword type="function" name="iptc_data_set_encoding_utf8 ()" link="libiptcdata-data.html#iptc-data-set-encoding-utf8"/>
     <keyword type="macro" name="IPTC_IIM_VERSION" link="libiptcdata-data.html#IPTC-IIM-VERSION:CAPS"/>
-    <keyword type="function" name="iptc_data_set_version ()" link="libiptcdata-data.html#iptc-data-set-version"/>
-    <keyword type="function" name="iptc_data_add_dataset_with_value ()" link="libiptcdata-data.html#iptc-data-add-dataset-with-value"/>
-    <keyword type="function" name="iptc_data_add_dataset_with_contents ()" link="libiptcdata-data.html#iptc-data-add-dataset-with-contents"/>
-    <keyword type="function" name="iptc_data_dump ()" link="libiptcdata-data.html#iptc-data-dump"/>
-    <keyword type="function" name="iptc_data_log ()" link="libiptcdata-data.html#iptc-data-log"/>
-    <keyword type="struct" name="IptcDataSet" link="libiptcdata-dataset.html#IptcDataSet"/>
-    <keyword type="function" name="iptc_dataset_new ()" link="libiptcdata-dataset.html#iptc-dataset-new"/>
-    <keyword type="function" name="iptc_dataset_new_mem ()" link="libiptcdata-dataset.html#iptc-dataset-new-mem"/>
-    <keyword type="function" name="iptc_dataset_copy ()" link="libiptcdata-dataset.html#iptc-dataset-copy"/>
-    <keyword type="function" name="iptc_dataset_ref ()" link="libiptcdata-dataset.html#iptc-dataset-ref"/>
-    <keyword type="function" name="iptc_dataset_unref ()" link="libiptcdata-dataset.html#iptc-dataset-unref"/>
-    <keyword type="function" name="iptc_dataset_free ()" link="libiptcdata-dataset.html#iptc-dataset-free"/>
-    <keyword type="function" name="iptc_dataset_get_format ()" link="libiptcdata-dataset.html#iptc-dataset-get-format"/>
-    <keyword type="function" name="iptc_dataset_get_data ()" link="libiptcdata-dataset.html#iptc-dataset-get-data"/>
-    <keyword type="function" name="iptc_dataset_get_value ()" link="libiptcdata-dataset.html#iptc-dataset-get-value"/>
-    <keyword type="function" name="iptc_dataset_get_date ()" link="libiptcdata-dataset.html#iptc-dataset-get-date"/>
-    <keyword type="function" name="iptc_dataset_get_time ()" link="libiptcdata-dataset.html#iptc-dataset-get-time"/>
-    <keyword type="function" name="iptc_dataset_set_tag ()" link="libiptcdata-dataset.html#iptc-dataset-set-tag"/>
+    <keyword type="function" name="iptc_dataset_new ()" link="libiptcdata-dataset.html#iptc-dataset-new"/>
+    <keyword type="function" name="iptc_dataset_new_mem ()" link="libiptcdata-dataset.html#iptc-dataset-new-mem"/>
+    <keyword type="function" name="iptc_dataset_copy ()" link="libiptcdata-dataset.html#iptc-dataset-copy"/>
+    <keyword type="function" name="iptc_dataset_ref ()" link="libiptcdata-dataset.html#iptc-dataset-ref"/>
+    <keyword type="function" name="iptc_dataset_unref ()" link="libiptcdata-dataset.html#iptc-dataset-unref"/>
+    <keyword type="function" name="iptc_dataset_free ()" link="libiptcdata-dataset.html#iptc-dataset-free"/>
+    <keyword type="function" name="iptc_dataset_get_format ()" link="libiptcdata-dataset.html#iptc-dataset-get-format"/>
+    <keyword type="function" name="iptc_dataset_get_data ()" link="libiptcdata-dataset.html#iptc-dataset-get-data"/>
+    <keyword type="function" name="iptc_dataset_get_value ()" link="libiptcdata-dataset.html#iptc-dataset-get-value"/>
+    <keyword type="function" name="iptc_dataset_get_date ()" link="libiptcdata-dataset.html#iptc-dataset-get-date"/>
+    <keyword type="function" name="iptc_dataset_get_time ()" link="libiptcdata-dataset.html#iptc-dataset-get-time"/>
+    <keyword type="function" name="iptc_dataset_set_tag ()" link="libiptcdata-dataset.html#iptc-dataset-set-tag"/>
+    <keyword type="function" name="iptc_dataset_set_data ()" link="libiptcdata-dataset.html#iptc-dataset-set-data"/>
+    <keyword type="function" name="iptc_dataset_set_value ()" link="libiptcdata-dataset.html#iptc-dataset-set-value"/>
+    <keyword type="function" name="iptc_dataset_set_date ()" link="libiptcdata-dataset.html#iptc-dataset-set-date"/>
+    <keyword type="function" name="iptc_dataset_set_time ()" link="libiptcdata-dataset.html#iptc-dataset-set-time"/>
+    <keyword type="function" name="iptc_dataset_get_as_str ()" link="libiptcdata-dataset.html#iptc-dataset-get-as-str"/>
+    <keyword type="function" name="iptc_dataset_dump ()" link="libiptcdata-dataset.html#iptc-dataset-dump"/>
+    <keyword type="struct" name="struct IptcDataSet" link="libiptcdata-dataset.html#IptcDataSet"/>
     <keyword type="enum" name="enum IptcValidate" link="libiptcdata-dataset.html#IptcValidate"/>
-    <keyword type="function" name="iptc_dataset_set_data ()" link="libiptcdata-dataset.html#iptc-dataset-set-data"/>
-    <keyword type="function" name="iptc_dataset_set_value ()" link="libiptcdata-dataset.html#iptc-dataset-set-value"/>
-    <keyword type="function" name="iptc_dataset_set_date ()" link="libiptcdata-dataset.html#iptc-dataset-set-date"/>
-    <keyword type="function" name="iptc_dataset_set_time ()" link="libiptcdata-dataset.html#iptc-dataset-set-time"/>
-    <keyword type="function" name="iptc_dataset_get_as_str ()" link="libiptcdata-dataset.html#iptc-dataset-get-as-str"/>
-    <keyword type="function" name="iptc_dataset_dump ()" link="libiptcdata-dataset.html#iptc-dataset-dump"/>
+    <keyword type="function" name="iptc_tag_get_name ()" link="libiptcdata-tag.html#iptc-tag-get-name"/>
+    <keyword type="function" name="iptc_tag_get_title ()" link="libiptcdata-tag.html#iptc-tag-get-title"/>
+    <keyword type="function" name="iptc_tag_get_description ()" link="libiptcdata-tag.html#iptc-tag-get-description"/>
+    <keyword type="function" name="iptc_tag_get_info ()" link="libiptcdata-tag.html#iptc-tag-get-info"/>
+    <keyword type="function" name="iptc_format_get_name ()" link="libiptcdata-tag.html#iptc-format-get-name"/>
+    <keyword type="function" name="iptc_tag_find_by_name ()" link="libiptcdata-tag.html#iptc-tag-find-by-name"/>
     <keyword type="enum" name="enum IptcRecord" link="libiptcdata-tag.html#IptcRecord"/>
     <keyword type="enum" name="enum IptcTag" link="libiptcdata-tag.html#IptcTag"/>
-    <keyword type="struct" name="IptcTagInfo" link="libiptcdata-tag.html#IptcTagInfo"/>
+    <keyword type="struct" name="struct IptcTagInfo" link="libiptcdata-tag.html#IptcTagInfo"/>
     <keyword type="enum" name="enum IptcFormat" link="libiptcdata-tag.html#IptcFormat"/>
     <keyword type="enum" name="enum IptcMandatory" link="libiptcdata-tag.html#IptcMandatory"/>
     <keyword type="enum" name="enum IptcRepeatable" link="libiptcdata-tag.html#IptcRepeatable"/>
-    <keyword type="function" name="iptc_tag_get_name ()" link="libiptcdata-tag.html#iptc-tag-get-name"/>
-    <keyword type="function" name="iptc_tag_get_title ()" link="libiptcdata-tag.html#iptc-tag-get-title"/>
-    <keyword type="function" name="iptc_tag_get_description ()" link="libiptcdata-tag.html#iptc-tag-get-description"/>
-    <keyword type="function" name="iptc_tag_get_info ()" link="libiptcdata-tag.html#iptc-tag-get-info"/>
-    <keyword type="function" name="iptc_format_get_name ()" link="libiptcdata-tag.html#iptc-format-get-name"/>
-    <keyword type="function" name="iptc_tag_find_by_name ()" link="libiptcdata-tag.html#iptc-tag-find-by-name"/>
-    <keyword type="function" name="iptc_jpeg_read_ps3 ()" link="libiptcdata-jpeg.html#iptc-jpeg-read-ps3"/>
-    <keyword type="function" name="iptc_jpeg_ps3_find_iptc ()" link="libiptcdata-jpeg.html#iptc-jpeg-ps3-find-iptc"/>
-    <keyword type="function" name="iptc_jpeg_ps3_save_iptc ()" link="libiptcdata-jpeg.html#iptc-jpeg-ps3-save-iptc"/>
-    <keyword type="function" name="iptc_jpeg_save_with_ps3 ()" link="libiptcdata-jpeg.html#iptc-jpeg-save-with-ps3"/>
+    <keyword type="function" name="iptc_jpeg_read_ps3 ()" link="libiptcdata-jpeg.html#iptc-jpeg-read-ps3"/>
+    <keyword type="function" name="iptc_jpeg_ps3_find_iptc ()" link="libiptcdata-jpeg.html#iptc-jpeg-ps3-find-iptc"/>
+    <keyword type="function" name="iptc_jpeg_ps3_save_iptc ()" link="libiptcdata-jpeg.html#iptc-jpeg-ps3-save-iptc"/>
+    <keyword type="function" name="iptc_jpeg_save_with_ps3 ()" link="libiptcdata-jpeg.html#iptc-jpeg-save-with-ps3"/>
+    <keyword type="function" name="iptc_get_short ()" link="libiptcdata-utils.html#iptc-get-short"/>
+    <keyword type="function" name="iptc_get_long ()" link="libiptcdata-utils.html#iptc-get-long"/>
+    <keyword type="function" name="iptc_get_slong ()" link="libiptcdata-utils.html#iptc-get-slong"/>
+    <keyword type="function" name="iptc_set_short ()" link="libiptcdata-utils.html#iptc-set-short"/>
+    <keyword type="function" name="iptc_set_long ()" link="libiptcdata-utils.html#iptc-set-long"/>
+    <keyword type="function" name="iptc_set_slong ()" link="libiptcdata-utils.html#iptc-set-slong"/>
+    <keyword type="macro" name="MIN()" link="libiptcdata-utils.html#MIN:CAPS"/>
     <keyword type="enum" name="enum IptcByteOrder" link="libiptcdata-utils.html#IptcByteOrder"/>
     <keyword type="typedef" name="IptcByte" link="libiptcdata-utils.html#IptcByte"/>
     <keyword type="typedef" name="IptcShort" link="libiptcdata-utils.html#IptcShort"/>
     <keyword type="typedef" name="IptcLong" link="libiptcdata-utils.html#IptcLong"/>
     <keyword type="typedef" name="IptcSLong" link="libiptcdata-utils.html#IptcSLong"/>
-    <keyword type="function" name="iptc_get_short ()" link="libiptcdata-utils.html#iptc-get-short"/>
-    <keyword type="function" name="iptc_get_long ()" link="libiptcdata-utils.html#iptc-get-long"/>
-    <keyword type="function" name="iptc_get_slong ()" link="libiptcdata-utils.html#iptc-get-slong"/>
-    <keyword type="function" name="iptc_set_short ()" link="libiptcdata-utils.html#iptc-set-short"/>
-    <keyword type="function" name="iptc_set_long ()" link="libiptcdata-utils.html#iptc-set-long"/>
-    <keyword type="function" name="iptc_set_slong ()" link="libiptcdata-utils.html#iptc-set-slong"/>
-    <keyword type="macro" name="MIN()" link="libiptcdata-utils.html#MIN:CAPS"/>
     <keyword type="macro" name="IPTC_TAG_SUBSEC_TIME" link="libiptcdata-utils.html#IPTC-TAG-SUBSEC-TIME:CAPS"/>
-    <keyword type="function" name="IptcMemAllocFunc ()" link="libiptcdata-mem.html#IptcMemAllocFunc"/>
-    <keyword type="function" name="IptcMemReallocFunc ()" link="libiptcdata-mem.html#IptcMemReallocFunc"/>
-    <keyword type="function" name="IptcMemFreeFunc ()" link="libiptcdata-mem.html#IptcMemFreeFunc"/>
+    <keyword type="function" name="IptcMemAllocFunc ()" link="libiptcdata-mem.html#IptcMemAllocFunc"/>
+    <keyword type="function" name="IptcMemReallocFunc ()" link="libiptcdata-mem.html#IptcMemReallocFunc"/>
+    <keyword type="function" name="IptcMemFreeFunc ()" link="libiptcdata-mem.html#IptcMemFreeFunc"/>
+    <keyword type="function" name="iptc_mem_new ()" link="libiptcdata-mem.html#iptc-mem-new"/>
+    <keyword type="function" name="iptc_mem_ref ()" link="libiptcdata-mem.html#iptc-mem-ref"/>
+    <keyword type="function" name="iptc_mem_unref ()" link="libiptcdata-mem.html#iptc-mem-unref"/>
+    <keyword type="function" name="iptc_mem_alloc ()" link="libiptcdata-mem.html#iptc-mem-alloc"/>
+    <keyword type="function" name="iptc_mem_realloc ()" link="libiptcdata-mem.html#iptc-mem-realloc"/>
+    <keyword type="function" name="iptc_mem_free ()" link="libiptcdata-mem.html#iptc-mem-free"/>
+    <keyword type="function" name="iptc_mem_new_default ()" link="libiptcdata-mem.html#iptc-mem-new-default"/>
     <keyword type="struct" name="IptcMem" link="libiptcdata-mem.html#IptcMem"/>
-    <keyword type="function" name="iptc_mem_new ()" link="libiptcdata-mem.html#iptc-mem-new"/>
-    <keyword type="function" name="iptc_mem_ref ()" link="libiptcdata-mem.html#iptc-mem-ref"/>
-    <keyword type="function" name="iptc_mem_unref ()" link="libiptcdata-mem.html#iptc-mem-unref"/>
-    <keyword type="function" name="iptc_mem_alloc ()" link="libiptcdata-mem.html#iptc-mem-alloc"/>
-    <keyword type="function" name="iptc_mem_realloc ()" link="libiptcdata-mem.html#iptc-mem-realloc"/>
-    <keyword type="function" name="iptc_mem_free ()" link="libiptcdata-mem.html#iptc-mem-free"/>
-    <keyword type="function" name="iptc_mem_new_default ()" link="libiptcdata-mem.html#iptc-mem-new-default"/>
+    <keyword type="function" name="iptc_log_new ()" link="libiptcdata-log.html#iptc-log-new"/>
+    <keyword type="function" name="iptc_log_new_mem ()" link="libiptcdata-log.html#iptc-log-new-mem"/>
+    <keyword type="function" name="iptc_log_ref ()" link="libiptcdata-log.html#iptc-log-ref"/>
+    <keyword type="function" name="iptc_log_unref ()" link="libiptcdata-log.html#iptc-log-unref"/>
+    <keyword type="function" name="iptc_log_free ()" link="libiptcdata-log.html#iptc-log-free"/>
+    <keyword type="function" name="iptc_log_code_get_title ()" link="libiptcdata-log.html#iptc-log-code-get-title"/>
+    <keyword type="function" name="iptc_log_code_get_message ()" link="libiptcdata-log.html#iptc-log-code-get-message"/>
+    <keyword type="function" name="IptcLogFunc ()" link="libiptcdata-log.html#IptcLogFunc"/>
+    <keyword type="function" name="iptc_log_set_func ()" link="libiptcdata-log.html#iptc-log-set-func"/>
+    <keyword type="function" name="iptc_log ()" link="libiptcdata-log.html#iptc-log"/>
+    <keyword type="macro" name="IPTC_LOG_NO_MEMORY()" link="libiptcdata-log.html#IPTC-LOG-NO-MEMORY:CAPS"/>
     <keyword type="struct" name="IptcLog" link="libiptcdata-log.html#IptcLog"/>
-    <keyword type="function" name="iptc_log_new ()" link="libiptcdata-log.html#iptc-log-new"/>
-    <keyword type="function" name="iptc_log_new_mem ()" link="libiptcdata-log.html#iptc-log-new-mem"/>
-    <keyword type="function" name="iptc_log_ref ()" link="libiptcdata-log.html#iptc-log-ref"/>
-    <keyword type="function" name="iptc_log_unref ()" link="libiptcdata-log.html#iptc-log-unref"/>
-    <keyword type="function" name="iptc_log_free ()" link="libiptcdata-log.html#iptc-log-free"/>
     <keyword type="enum" name="enum IptcLogCode" link="libiptcdata-log.html#IptcLogCode"/>
-    <keyword type="function" name="iptc_log_code_get_title ()" link="libiptcdata-log.html#iptc-log-code-get-title"/>
-    <keyword type="function" name="iptc_log_code_get_message ()" link="libiptcdata-log.html#iptc-log-code-get-message"/>
-    <keyword type="function" name="IptcLogFunc ()" link="libiptcdata-log.html#IptcLogFunc"/>
-    <keyword type="function" name="iptc_log_set_func ()" link="libiptcdata-log.html#iptc-log-set-func"/>
-    <keyword type="function" name="iptc_log ()" link="libiptcdata-log.html#iptc-log"/>
-    <keyword type="macro" name="IPTC_LOG_NO_MEMORY()" link="libiptcdata-log.html#IPTC-LOG-NO-MEMORY:CAPS"/>
   </functions>
 </book>
--- libiptcdata-1.0.4.orig/docs/reference/html/style.css
+++ libiptcdata-1.0.4/docs/reference/html/style.css
@@ -1,13 +1,23 @@
+body
+{
+  font-family: cantarell, sans-serif;
+}
 .synopsis, .classsynopsis
 {
-  background: #eeeeee;
-  border: solid 1px #aaaaaa;
+  /* tango:aluminium 1/2 */
+  background: #eeeeec;
+  background: rgba(238, 238, 236, 0.5);
+  border: solid 1px rgb(238, 238, 236);
   padding: 0.5em;
 }
 .programlisting
 {
-  background: #eeeeff;
-  border: solid 1px #aaaaff;
+  /* tango:sky blue 0/1 */
+  /* fallback for no rgba support */
+  background: #e6f3ff;
+  border: solid 1px #729fcf;
+  background: rgba(114, 159, 207, 0.1);
+  border: solid 1px rgba(114, 159, 207, 0.2);
   padding: 0.5em;
 }
 .variablelist
@@ -20,82 +30,6 @@
   vertical-align: top;
 }
 
-/* this is needed so that the local anchors are displayed below the naviagtion */
-@media screen {
-  sup a.footnote
-  {
-    position: relative;
-    top: 0em ! important;
-  }
-  div.refnamediv a[name], div.refsect1 a[name]
-  {
-    position: relative;
-    top: -4.5em;
-  }
-  table.navigation#top
-  {
-    background: #ffeeee;
-    border: solid 1px #ffaaaa;
-    margin-top: 0;
-    margin-bottom: 0;
-    position: fixed;
-    top: 0;
-    left: 0;
-    height: 2em;
-    z-index: 1;
-  }
-  .navigation a
-  {
-    color: #770000;
-  }
-  .navigation a:visited
-  {
-    color: #550000;
-  }
-  td.shortcuts
-  {
-    color: #770000;
-    font-size: 80%;
-  }
-  div.refentry, div.chapter, div.reference, div.part, div.book, div.index, div.glossary, div.sect1, div.appendix, div.preface
-  {
-    position: relative;
-    top: 3em;
-    z-index: 0;
-  }
-  div.refnamediv
-  {
-    margin-top: 2em;
-  }
-  body
-  {
-    padding-bottom: 20em;
-  }
-}
-@media print {
-  table.navigation {
-    visibility: collapse;
-    display: none;
-  }
-  div.titlepage table.navigation {
-    visibility: visible;
-    display: table;
-    background: #ffeeee;
-    border: solid 1px #ffaaaa;
-    margin-top: 0;
-    margin-bottom: 0;
-    top: 0;
-    left: 0;
-    height: 2em;
-  }
-}
-
-.navigation .title
-{
-  font-size: 200%;
-}
-
-
 div.gallery-float
 {
   float: left;
@@ -109,52 +43,434 @@ div.gallery-spacer
 {
   clear: both;
 }
-a
+
+a, a:visited
 {
   text-decoration: none;
+  /* tango:sky blue 2 */
+  color: #3465a4;
 }
 a:hover
 {
   text-decoration: underline;
-  color: #FF0000;
+  /* tango:sky blue 1 */
+  color: #729fcf;
+}
+
+div.informaltable table
+{
+  border-collapse: separate;
+  border-spacing: 1em 0.5em;
+  border: none;
+}
+
+div.informaltable table td, div.informaltable table th
+{
+  vertical-align: top;
+}
+
+.function_type,
+.variable_type,
+.property_type,
+.signal_type,
+.parameter_name,
+.struct_member_name,
+.union_member_name,
+.define_keyword,
+.datatype_keyword,
+.typedef_keyword
+{
+  text-align: right;
+}
+
+/* dim non-primary columns */
+.c_punctuation,
+.function_type,
+.variable_type,
+.property_type,
+.signal_type,
+.define_keyword,
+.datatype_keyword,
+.typedef_keyword,
+.property_flags,
+.signal_flags,
+.parameter_annotations,
+.enum_member_annotations,
+.struct_member_annotations,
+.union_member_annotations
+{
+  color: #888a85;
+}
+
+.function_type a,
+.function_type a:visited,
+.function_type a:hover,
+.property_type a,
+.property_type a:visited,
+.property_type a:hover,
+.signal_type a,
+.signal_type a:visited,
+.signal_type a:hover,
+.signal_flags a,
+.signal_flags a:visited,
+.signal_flags a:hover
+{
+ color: #729fcf;
+}
+
+td p
+{
+  margin: 0.25em;
 }
 
 div.table table
 {
   border-collapse: collapse;
   border-spacing: 0px;
-  border-style: solid;
-  border-color: #777777;
-  border-width: 1px;
+  /* tango:aluminium 3 */
+  border: solid 1px #babdb6;
 }
 
 div.table table td, div.table table th
 {
-  border-style: solid;
-  border-color: #777777;
-  border-width: 1px;
+  /* tango:aluminium 3 */
+  border: solid 1px #babdb6;
   padding: 3px;
   vertical-align: top;
 }
 
 div.table table th
 {
-  background-color: #eeeeee;
+  /* tango:aluminium 2 */
+  background-color: #d3d7cf;
+}
+
+h4
+{
+  color: #555753;
 }
 
 hr
 {
-  color: #777777;
-  background: #777777;
-  border: 0;
+  /* tango:aluminium 1 */
+  color: #d3d7cf;
+  background: #d3d7cf;
+  border: none 0px;
   height: 1px;
   clear: both;
+  margin: 2.0em 0em 2.0em 0em;
+}
+
+dl.toc dt
+{
+  padding-bottom: 0.25em;
+}
+
+dl.toc > dd > dl > dt
+{
+  padding-top: 0.25em;
+  padding-bottom: 0.25em;
+}
+
+dl.toc > dt
+{
+  padding-top: 1em;
+  padding-bottom: 0.5em;
+  font-weight: bold;
+}
+
+.parameter
+{
+  font-style: normal;
 }
 
 .footer
 {
   padding-top: 3.5em;
-  color: #777777;
+  /* tango:aluminium 3 */
+  color: #babdb6;
   text-align: center;
   font-size: 80%;
 }
+
+.informalfigure,
+.figure
+{
+  margin: 1em;
+}
+
+.informalexample,
+.example
+{
+  margin-top: 1em;
+  margin-bottom: 1em;
+}
+
+.warning
+{
+  /* tango:orange 0/1 */
+  background: #ffeed9;
+  background: rgba(252, 175, 62, 0.1);
+  border-color: #ffb04f;
+  border-color: rgba(252, 175, 62, 0.2);
+}
+.note
+{
+  /* tango:chameleon 0/0.5 */
+  background: #d8ffb2;
+  background: rgba(138, 226, 52, 0.1);
+  border-color: #abf562;
+  border-color: rgba(138, 226, 52, 0.2);
+}
+div.blockquote
+{
+  border-color: #eeeeec;
+}
+.note, .warning, div.blockquote
+{
+  padding: 0.5em;
+  border-width: 1px;
+  border-style: solid;
+  margin: 2em;
+}
+.note p, .warning p
+{
+  margin: 0;
+}
+
+div.warning h3.title,
+div.note h3.title
+{
+  display: none;
+}
+
+p + div.section
+{
+  margin-top: 1em;
+}
+
+div.refnamediv,
+div.refsynopsisdiv,
+div.refsect1,
+div.refsect2,
+div.toc,
+div.section
+{
+  margin-bottom: 1em;
+}
+
+/* blob links */
+h2 .extralinks, h3 .extralinks
+{
+  float: right;
+  /* tango:aluminium 3 */
+  color: #babdb6;
+  font-size: 80%;
+  font-weight: normal;
+}
+
+.lineart
+{
+  color: #d3d7cf;
+  font-weight: normal;
+}
+
+.annotation
+{
+  /* tango:aluminium 5 */
+  color: #555753;
+  font-weight: normal;
+}
+
+.structfield
+{
+  font-style: normal;
+  font-weight: normal;
+}
+
+acronym,abbr 
+{
+  border-bottom: 1px dotted gray;
+}
+
+/* code listings */
+
+.listing_code .programlisting .normal,
+.listing_code .programlisting .normal a,
+.listing_code .programlisting .number,
+.listing_code .programlisting .cbracket,
+.listing_code .programlisting .symbol     { color: #555753; }
+.listing_code .programlisting .comment,
+.listing_code .programlisting .linenum    { color: #babdb6; } /* tango: aluminium 3 */
+.listing_code .programlisting .function,
+.listing_code .programlisting .function a,
+.listing_code .programlisting .preproc    { color: #204a87; } /* tango: sky blue 3  */
+.listing_code .programlisting .string     { color: #ad7fa8; } /* tango: plum */
+.listing_code .programlisting .keyword,
+.listing_code .programlisting .usertype,
+.listing_code .programlisting .type,
+.listing_code .programlisting .type a     { color: #4e9a06; } /* tango: chameleon 3  */
+
+.listing_frame {
+  /* tango:sky blue 1 */
+  border: solid 1px #729fcf;
+  border: solid 1px rgba(114, 159, 207, 0.2);
+  padding: 0px;
+}
+
+.listing_lines, .listing_code {
+  margin-top: 0px;
+  margin-bottom: 0px;
+  padding: 0.5em;
+}
+.listing_lines {
+  /* tango:sky blue 0.5 */
+  background: #a6c5e3;
+  background: rgba(114, 159, 207, 0.2);
+  /* tango:aluminium 6 */
+  color: #2e3436;
+}
+.listing_code {
+  /* tango:sky blue 0 */
+  background: #e6f3ff;
+  background: rgba(114, 159, 207, 0.1);
+}
+.listing_code .programlisting {
+  /* override from previous */
+  border: none 0px;
+  padding: 0px;
+  background: none;
+}
+.listing_lines pre, .listing_code pre {
+  margin: 0px;
+}
+
+@media screen {
+  sup a.footnote
+  {
+    position: relative;
+    top: 0em ! important;
+  }
+  /* this is needed so that the local anchors are displayed below the naviagtion */
+  div.footnote a[name], div.refnamediv a[name], div.refsect1 a[name], div.refsect2 a[name], div.index a[name], div.glossary a[name], div.sect1 a[name]
+  {
+    display: inline-block;
+    position: relative;
+    top:-5em;
+  }
+  /* this seems to be a bug in the xsl style sheets when generating indexes */
+  div.index div.index
+  {
+    top: 0em;
+  }
+  /* make space for the fixed navigation bar and add space at the bottom so that
+   * link targets appear somewhat close to top
+   */
+  body
+  {
+    padding-top: 2.5em;
+    padding-bottom: 500px;
+    max-width: 60em;
+  }
+  p
+  {
+    max-width: 60em;
+  }
+  /* style and size the navigation bar */
+  table.navigation#top
+  {
+    position: fixed;
+    background: #e2e2e2;
+    border-bottom: solid 1px #babdb6;
+    border-spacing: 5px;
+    margin-top: 0;
+    margin-bottom: 0;
+    top: 0;
+    left: 0;
+    z-index: 10;
+  }
+  table.navigation#top td
+  {
+    padding-left: 6px;
+    padding-right: 6px;
+  }
+  .navigation a, .navigation a:visited
+  {
+    /* tango:sky blue 3 */
+    color: #204a87;
+  }
+  .navigation a:hover
+  {
+    /* tango:sky blue 2 */
+    color: #3465a4;
+  }
+  td.shortcuts
+  {
+    /* tango:sky blue 2 */
+    color: #3465a4;
+    font-size: 80%;
+    white-space: nowrap;
+  }
+  td.shortcuts .dim
+  {
+    color: #babdb6;
+  }
+  .navigation .title
+  {
+    font-size: 80%;
+    max-width: none;
+    margin: 0px;
+    font-weight: normal;
+  }
+}
+@media screen and (min-width: 60em) {
+  /* screen larger than 60em */
+  body { margin: auto; }
+}
+@media screen and (max-width: 60em) {
+  /* screen less than 60em */
+  #nav_hierarchy { display: none; }
+  #nav_interfaces { display: none; }
+  #nav_prerequisites { display: none; }
+  #nav_derived_interfaces { display: none; }
+  #nav_implementations { display: none; }
+  #nav_child_properties { display: none; }
+  #nav_style_properties { display: none; }
+  #nav_index { display: none; }
+  #nav_glossary { display: none; }
+  .gallery_image { display: none; }
+  .property_flags { display: none; }
+  .signal_flags { display: none; }
+  .parameter_annotations { display: none; }
+  .enum_member_annotations { display: none; }
+  .struct_member_annotations { display: none; }
+  .union_member_annotations { display: none; }
+  /* now that a column is hidden, optimize space */
+  col.parameters_name { width: auto; }
+  col.parameters_description { width: auto; }
+  col.struct_members_name { width: auto; }
+  col.struct_members_description { width: auto; }
+  col.enum_members_name { width: auto; }
+  col.enum_members_description { width: auto; }
+  col.union_members_name { width: auto; }
+  col.union_members_description { width: auto; }
+  .listing_lines { display: none; }
+}
+@media print {
+  table.navigation {
+    visibility: collapse;
+    display: none;
+  }
+  div.titlepage table.navigation {
+    visibility: visible;
+    display: table;
+    background: #e2e2e2;
+    border: solid 1px #babdb6;
+    margin-top: 0;
+    margin-bottom: 0;
+    top: 0;
+    left: 0;
+    height: 3em;
+  }
+}
+
--- libiptcdata-1.0.4.orig/docs/reference/tmpl/_stdint.sgml
+++ libiptcdata-1.0.4/docs/reference/tmpl/_stdint.sgml
@@ -17,3 +17,6 @@ _stdint
 <!-- ##### SECTION Stability_Level ##### -->
 
 
+<!-- ##### SECTION Image ##### -->
+
+
--- libiptcdata-1.0.4.orig/docs/reference/tmpl/iptc-data.sgml
+++ libiptcdata-1.0.4/docs/reference/tmpl/iptc-data.sgml
@@ -18,6 +18,9 @@ Each of these tags is stored in an #Iptc
 <!-- ##### SECTION Stability_Level ##### -->
 
 
+<!-- ##### SECTION Image ##### -->
+
+
 <!-- ##### STRUCT IptcData ##### -->
 <para>
 Represents the collection of datasets that make up a IPTC data block.
@@ -32,6 +35,7 @@ Represents the collection of datasets th
 
 </para>
 
+@void: 
 @Returns: 
 
 
--- libiptcdata-1.0.4.orig/docs/reference/tmpl/iptc-dataset.sgml
+++ libiptcdata-1.0.4/docs/reference/tmpl/iptc-dataset.sgml
@@ -20,6 +20,9 @@ contents of the tag.
 <!-- ##### SECTION Stability_Level ##### -->
 
 
+<!-- ##### SECTION Image ##### -->
+
+
 <!-- ##### STRUCT IptcDataSet ##### -->
 <para>
 An IPTC dataset, which associates a record/tag pair with a value.
@@ -39,6 +42,7 @@ if it is not contained
 
 </para>
 
+@void: 
 @Returns: 
 
 
--- libiptcdata-1.0.4.orig/docs/reference/tmpl/iptc-jpeg.sgml
+++ libiptcdata-1.0.4/docs/reference/tmpl/iptc-jpeg.sgml
@@ -17,6 +17,9 @@ Convenience functions for loading and sa
 <!-- ##### SECTION Stability_Level ##### -->
 
 
+<!-- ##### SECTION Image ##### -->
+
+
 <!-- ##### FUNCTION iptc_jpeg_read_ps3 ##### -->
 <para>
 
--- libiptcdata-1.0.4.orig/docs/reference/tmpl/iptc-log.sgml
+++ libiptcdata-1.0.4/docs/reference/tmpl/iptc-log.sgml
@@ -17,6 +17,9 @@ Hooks for defining your own log-handling
 <!-- ##### SECTION Stability_Level ##### -->
 
 
+<!-- ##### SECTION Image ##### -->
+
+
 <!-- ##### STRUCT IptcLog ##### -->
 <para>
 
@@ -28,6 +31,7 @@ Hooks for defining your own log-handling
 
 </para>
 
+@void: 
 @Returns: 
 
 
--- libiptcdata-1.0.4.orig/docs/reference/tmpl/iptc-mem.sgml
+++ libiptcdata-1.0.4/docs/reference/tmpl/iptc-mem.sgml
@@ -17,6 +17,9 @@ hooks for defining your own memory manag
 <!-- ##### SECTION Stability_Level ##### -->
 
 
+<!-- ##### SECTION Image ##### -->
+
+
 <!-- ##### USER_FUNCTION IptcMemAllocFunc ##### -->
 <para>
 
@@ -112,6 +115,7 @@ hooks for defining your own memory manag
 
 </para>
 
+@void: 
 @Returns: 
 
 
--- libiptcdata-1.0.4.orig/docs/reference/tmpl/iptc-tag.sgml
+++ libiptcdata-1.0.4/docs/reference/tmpl/iptc-tag.sgml
@@ -20,6 +20,9 @@ repeatability and whether the tag is man
 <!-- ##### SECTION Stability_Level ##### -->
 
 
+<!-- ##### SECTION Image ##### -->
+
+
 <!-- ##### ENUM IptcRecord ##### -->
 <para>
 The record number that, together with the tag number (#IptcTag),
--- libiptcdata-1.0.4.orig/docs/reference/tmpl/iptc-utils.sgml
+++ libiptcdata-1.0.4/docs/reference/tmpl/iptc-utils.sgml
@@ -17,6 +17,9 @@ functions for decoding integer types of
 <!-- ##### SECTION Stability_Level ##### -->
 
 
+<!-- ##### SECTION Image ##### -->
+
+
 <!-- ##### ENUM IptcByteOrder ##### -->
 <para>
 
