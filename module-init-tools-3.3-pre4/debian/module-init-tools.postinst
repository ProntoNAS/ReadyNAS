#!/bin/sh -e

upgrade_quirks() {
  if dpkg --compare-versions "$2" eq "3.1-pre4-1"; then
    depmod -a || true
  fi
}

create_etc_modules() {
    if [ ! -e /etc/modules ]; then
	cat <<EOT > /etc/modules
# /etc/modules: kernel modules to load at boot time.
#
# This file contains the names of kernel modules that should be loaded
# at boot time, one per line. Lines beginning with "#" are ignored.

EOT
	chmod 644 /etc/modules
    fi
}

archmodel() { 
  local arch=$(uname -m)
  case $arch in
  i[0-9]86)	arch=i386 ;;
  x86_64|amd64)	arch=i386 ;;
  arm*)		arch=arm ;;
  mips*)	arch=mips ;;
  # 64 bit variants of some architectures are treated like the 32 bit
  s390x)	arch=s390 ;;
  parisc64)	arch=parisc ;;
  sparc64)	arch=sparc ;;
  # these architectures have variants with wildly different hardware
  ppc64)	arch=powerpc.generic ;;
  ppc|powerpc)
    if [ -f /proc/cpuinfo ]; then
      model=$(sed -ne 's/^machine[[:space:]]*:[[:space:]]*//p' /proc/cpuinfo)
    else
      echo "/proc/cpuinfo does not exist, assuming generic powerpc system"
    fi
    case "$model" in
      Amiga*) arch="powerpc.apus" ;;
      Power*) arch="powerpc.pmac" ;; 
      *)      arch="powerpc.generic" ;;
    esac
    ;;
  m68k)
    if [ -f /proc/hardware ]; then
      model=$(sed -ne 's/^Model:[[:space:]]*//p' /proc/hardware)
    else
      echo "/proc/hardware does not exist, assuming generic m68k system"
    fi
    case "$model" in
      Atari*)		arch="m68k.atari" ;;
      Amiga*)		arch="m68k.amiga" ;;
      *)		arch="m68k.generic" ;;
    esac
    ;;
  esac

  echo $arch
}

create_arch_symlink() {
  cd /etc/modprobe.d/

  model=$(archmodel)
  oldmodel=$model

  while [ ! -f arch/$model ]; do
    oldmodel=$model
    model=${oldmodel%.*}.generic
    [ "$model" = "$oldmodel" ] && break
    echo "Configuration for $oldmodel not found, trying $model"
  done

  ARCHCONFFILE=arch/$model
  if [ -f $ARCHCONFFILE ]; then
    ln -sf $ARCHCONFFILE arch-aliases
  else
    echo "Architecture-specific config file not found"
  fi
}

case "$1" in
    configure)
    upgrade_quirks "$@"
    create_etc_modules
    create_arch_symlink
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
    echo "$0 called with unknown argument '$1'" >&2
    exit 1
    ;;
esac

#DEBHELPER#

exit 0
