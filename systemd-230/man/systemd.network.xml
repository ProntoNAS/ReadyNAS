<?xml version='1.0'?> <!--*- Mode: nxml; nxml-child-indent: 2; indent-tabs-mode: nil -*-->
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.2//EN"
  "http://www.oasis-open.org/docbook/xml/4.2/docbookx.dtd">

<!--
  This file is part of systemd.

  Copyright 2013 Tom Gundersen

  systemd is free software; you can redistribute it and/or modify it
  under the terms of the GNU Lesser General Public License as published by
  the Free Software Foundation; either version 2.1 of the License, or
  (at your option) any later version.

  systemd is distributed in the hope that it will be useful, but
  WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
  Lesser General Public License for more details.

  You should have received a copy of the GNU Lesser General Public License
  along with systemd; If not, see <http://www.gnu.org/licenses/>.
-->

<refentry id="systemd.network" conditional='ENABLE_NETWORKD'>

  <refentryinfo>
    <title>systemd.network</title>
    <productname>systemd</productname>

    <authorgroup>
      <author>
        <contrib>Developer</contrib>
        <firstname>Tom</firstname>
        <surname>Gundersen</surname>
        <email>teg@jklm.no</email>
      </author>
    </authorgroup>
  </refentryinfo>

  <refmeta>
    <refentrytitle>systemd.network</refentrytitle>
    <manvolnum>5</manvolnum>
  </refmeta>

  <refnamediv>
    <refname>systemd.network</refname>
    <refpurpose>Network configuration</refpurpose>
  </refnamediv>

  <refsynopsisdiv>
    <para><filename><replaceable>network</replaceable>.network</filename></para>
  </refsynopsisdiv>

  <refsect1>
    <title>Description</title>

    <para>Network setup is performed by
    <citerefentry><refentrytitle>systemd-networkd</refentrytitle><manvolnum>8</manvolnum></citerefentry>.
    </para>

    <para>Network files must have the extension
    <filename>.network</filename>; other extensions are ignored.
    Networks are applied to links whenever the links appear.</para>

    <para>The <filename>.network</filename> files are read from the
    files located in the system network directory
    <filename>/usr/lib/systemd/network</filename>, the volatile
    runtime network directory
    <filename>/run/systemd/network</filename> and the local
    administration network directory
    <filename>/etc/systemd/network</filename>. All configuration files
    are collectively sorted and processed in lexical order, regardless
    of the directories in which they live. However, files with
    identical filenames replace each other. Files in
    <filename>/etc</filename> have the highest priority, files in
    <filename>/run</filename> take precedence over files with the same
    name in <filename>/usr/lib</filename>. This can be used to
    override a system-supplied configuration file with a local file if
    needed. As a special case, an empty file (file size 0) or symlink
    with the same name pointing to <filename>/dev/null</filename>
    disables the configuration file entirely (it is "masked").</para>

    <para>Note that an interface without any static IPv6 addresses configured, and neither DHCPv6 nor IPv6LL enabled,
    shall be considered to have no IPv6 support. IPv6 will be automatically disabled for that interface by writing "1"
    to <filename>/proc/sys/net/ipv6/conf/<replaceable>ifname</replaceable>/disable_ipv6</filename>.
    </para>
  </refsect1>

  <refsect1>
    <title>[Match] Section Options</title>

      <para>The network file contains a <literal>[Match]</literal>
      section, which determines if a given network file may be applied
      to a given device; and a <literal>[Network]</literal> section
      specifying how the device should be configured. The first (in
      lexical order) of the network files that matches a given device
      is applied, all later files are ignored, even if they match as
      well.</para>

      <para>A network file is said to match a device if each of the
      entries in the <literal>[Match]</literal> section matches, or if
      the section is empty. The following keys are accepted:</para>

      <variablelist class='network-directives'>
        <varlistentry>
          <term><varname>MACAddress=</varname></term>
          <listitem>
            <para>The hardware address of the interface (use full colon-delimited hexadecimal, e.g.,
            01:23:45:67:89:ab).</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><varname>Path=</varname></term>
          <listitem>
            <para>A whitespace-separated list of shell-style globs
            matching the persistent path, as exposed by the udev
            property <literal>ID_PATH</literal>.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><varname>Driver=</varname></term>
          <listitem>
            <para>A whitespace-separated list of shell-style globs
            matching the driver currently bound to the device, as
            exposed by the udev property <literal>DRIVER</literal>
            of its parent device, or if that is not set the driver
            as exposed by <literal>ethtool -i</literal> of the
            device itself.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><varname>Type=</varname></term>
          <listitem>
            <para>A whitespace-separated list of shell-style globs
            matching the device type, as exposed by the udev property
            <literal>DEVTYPE</literal>.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><varname>Name=</varname></term>
          <listitem>
            <para>A whitespace-separated list of shell-style globs
            matching the device name, as exposed by the udev property
            <literal>INTERFACE</literal>.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><varname>Host=</varname></term>
          <listitem>
            <para>Matches against the hostname or machine ID of the
            host. See <literal>ConditionHost=</literal> in
            <citerefentry><refentrytitle>systemd.unit</refentrytitle><manvolnum>5</manvolnum></citerefentry>
            for details.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><varname>Virtualization=</varname></term>
          <listitem>
            <para>Checks whether the system is executed in a virtualized
            environment and optionally test whether it is a specific
            implementation. See <literal>ConditionVirtualization=</literal> in
            <citerefentry><refentrytitle>systemd.unit</refentrytitle><manvolnum>5</manvolnum></citerefentry>
            for details.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><varname>KernelCommandLine=</varname></term>
          <listitem>
            <para>Checks whether a specific kernel command line option is
            set (or if prefixed with the exclamation mark unset). See
            <literal>ConditionKernelCommandLine=</literal> in
            <citerefentry><refentrytitle>systemd.unit</refentrytitle><manvolnum>5</manvolnum></citerefentry>
            for details.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><varname>Architecture=</varname></term>
          <listitem>
            <para>Checks whether the system is running on a specific
            architecture. See <literal>ConditionArchitecture=</literal> in
            <citerefentry><refentrytitle>systemd.unit</refentrytitle><manvolnum>5</manvolnum></citerefentry>
            for details.
            </para>
          </listitem>
        </varlistentry>
      </variablelist>

  </refsect1>

  <refsect1>
    <title>[Link] Section Options</title>

    <para> The <literal>[Link]</literal> section accepts the following keys:</para>

    <variablelist class='network-directives'>
      <varlistentry>
        <term><varname>MACAddress=</varname></term>
        <listitem>
          <para>The hardware address to set for the device.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><varname>MTUBytes=</varname></term>
        <listitem>
          <para>The maximum transmission unit in bytes to set for the
          device. The usual suffixes K, M, G, are supported and are
          understood to the base of 1024.</para>
          <para>Note that if IPv6 is enabled on the interface, and the MTU is chosen
          below 1280 (the minimum MTU for IPv6) it will automatically be increased to this value.</para>
        </listitem>
      </varlistentry>
    </variablelist>
  </refsect1>

  <refsect1>
    <title>[Network] Section Options</title>

      <para>The <literal>[Network]</literal> section accepts the following keys:</para>

      <variablelist class='network-directives'>
        <varlistentry>
          <term><varname>Description=</varname></term>
          <listitem>
            <para>A description of the device. This is only used for
            presentation purposes.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><varname>DHCP=</varname></term>
          <listitem>
            <para>Enables DHCPv4 and/or DHCPv6 client support. Accepts
            <literal>yes</literal>, <literal>no</literal>,
            <literal>ipv4</literal>, or <literal>ipv6</literal>.</para>

            <para>Note that DHCPv6 will by default be triggered by Router
            Advertisement, if that is enabled, regardless of this parameter.
            By enabling DHCPv6 support explicitly, the DHCPv6 client will
            be started regardless of the presence of routers on the link,
            or what flags the routers pass. See
            <literal>IPv6AcceptRouterAdvertisements=</literal>.</para>

            <para>Furthermore, note that by default the domain name
            specified through DHCP is not used for name resolution.
            See option <option>UseDomains=</option> below.</para>

            <para>See the <literal>[DHCP]</literal> section below for further configuration options for the DHCP client
            support.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><varname>DHCPServer=</varname></term>
          <listitem>
            <para>A boolean. Enables DHCPv4 server support. Defaults
            to <literal>no</literal>. Further settings for the DHCP
            server may be set in the <literal>[DHCPServer]</literal>
            section described below.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><varname>LinkLocalAddressing=</varname></term>
          <listitem>
            <para>Enables link-local address autoconfiguration. Accepts
            <literal>yes</literal>, <literal>no</literal>,
            <literal>ipv4</literal>, or <literal>ipv6</literal>. Defaults to
            <literal>ipv6</literal>.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><varname>IPv4LLRoute=</varname></term>
          <listitem>
            <para>A boolean. When true, sets up the route needed for
            non-IPv4LL hosts to communicate with IPv4LL-only hosts. Defaults
            to false.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><varname>IPv6Token=</varname></term>
          <listitem>
            <para>An IPv6 address with the top 64 bits unset. When set, indicates the
            64-bit interface part of SLAAC IPv6 addresses for this link. Note that
            the token is only ever used for SLAAC, and not for DHCPv6 addresses, even
            in the case DHCP is requested by router advertisement. By default, the
            token is autogenerated.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><varname>LLMNR=</varname></term>
          <listitem>
            <para>A boolean or <literal>resolve</literal>. When true,
            enables <ulink
            url="https://tools.ietf.org/html/rfc4795">Link-Local
            Multicast Name Resolution</ulink> on the link. When set to
            <literal>resolve</literal>, only resolution is enabled,
            but not host registration and announcement. Defaults to
            true. This setting is read by
            <citerefentry><refentrytitle>systemd-resolved.service</refentrytitle><manvolnum>8</manvolnum></citerefentry>.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><varname>MulticastDNS=</varname></term>
          <listitem>
            <para>A boolean or <literal>resolve</literal>. When true,
            enables <ulink
            url="https://tools.ietf.org/html/rfc6762">Multicast
            DNS</ulink> support on the link. When set to
            <literal>resolve</literal>, only resolution is enabled,
            but not host or service registration and
            announcement. Defaults to false. This setting is read by
            <citerefentry><refentrytitle>systemd-resolved.service</refentrytitle><manvolnum>8</manvolnum></citerefentry>.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><varname>DNSSEC=</varname></term>
          <listitem>
            <para>A boolean or
            <literal>allow-downgrade</literal>. When true, enables
            <ulink
            url="https://tools.ietf.org/html/rfc4033">DNSSEC</ulink>
            DNS validation support on the link. When set to
            <literal>allow-downgrade</literal>, compatibility with
            non-DNSSEC capable networks is increased, by automatically
            turning off DNSEC in this case. This option defines a
            per-interface setting for
            <citerefentry><refentrytitle>resolved.conf</refentrytitle><manvolnum>5</manvolnum></citerefentry>'s
            global <varname>DNSSEC=</varname> option. Defaults to
            false. This setting is read by
            <citerefentry><refentrytitle>systemd-resolved.service</refentrytitle><manvolnum>8</manvolnum></citerefentry>.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><varname>DNSSECNegativeTrustAnchors=</varname></term>
          <listitem><para>A space-separated list of DNSSEC negative
          trust anchor domains. If specified and DNSSEC is enabled,
          look-ups done via the interface's DNS server will be subject
          to the list of negative trust anchors, and not require
          authentication for the specified domains, or anything below
          it. Use this to disable DNSSEC authentication for specific
          private domains, that cannot be proven valid using the
          Internet DNS hierarchy. Defaults to the empty list. This
          setting is read by
          <citerefentry><refentrytitle>systemd-resolved.service</refentrytitle><manvolnum>8</manvolnum></citerefentry>.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><varname>LLDP=</varname></term>
          <listitem>
            <para>Controls support for Ethernet LLDP packet reception. LLDP is a link-layer protocol commonly
            implemented on professional routers and bridges which announces which physical port a system is connected
            to, as well as other related data. Accepts a boolean or the special value
            <literal>routers-only</literal>. When true, incoming LLDP packets are accepted and a database of all LLDP
            neighbors maintained. If <literal>routers-only</literal> is set only LLDP data of various types of routers
            is collected and LLDP data about other types of devices ignored (such as stations, telephones and
            others). If false, LLDP reception is disabled. Defaults to <literal>routers-only</literal>. Use
            <citerefentry><refentrytitle>networkctl</refentrytitle><manvolnum>1</manvolnum></citerefentry> to query the
            collected neighbor data. LLDP is only available on Ethernet links. See <varname>EmitLLDP=</varname> below
            for enabling LLDP packet emission from the local system.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><varname>EmitLLDP=</varname></term>
          <listitem>
            <para>Controls support for Ethernet LLDP packet emission. Accepts a boolean parameter or the special values
            <literal>nearest-bridge</literal>, <literal>non-tpmr-bridge</literal> and
            <literal>customer-bridge</literal>.  Defaults to false, which turns off LLDP packet emission. If not false,
            a short LLDP packet with information about the local system is sent out in regular intervals on the
            link. The LLDP packet will contain information about the local host name, the local machine ID (as stored
            in <citerefentry><refentrytitle>machine-id</refentrytitle><manvolnum>5</manvolnum></citerefentry>) and the
            local interface name, as well as the pretty hostname of the system (as set in
            <citerefentry><refentrytitle>machine-info</refentrytitle><manvolnum>5</manvolnum></citerefentry>). LLDP
            emission is only available on Ethernet links. Note that this setting passes data suitable for
            identification of host to the network and should thus not be enabled on untrusted networks, where such
            identification data should not be made available. Use this option to permit other systems to identify on
            which interfaces they are connected to this system. The three special values control propagation of the
            LLDP packets. The <literal>nearest-bridge</literal> setting permits propagation only to the nearest
            connected bridge, <literal>non-tpmr-bridge</literal> permits propagation across Two-Port MAC Relays, but
            not any other bridges, and <literal>customer-bridge</literal> permits propagation until a customer bridge
            is reached. For details about these concepts, see <ulink
            url="http://standards.ieee.org/getieee802/download/802.1AB-2009.pdf">IEEE 802.1AB-2009</ulink>. Note that
            configuring this setting to true is equivalent to <literal>nearest-bridge</literal>, the recommended and
            most restricted level of propagation. See <varname>LLDP=</varname> above for an option to enable LLDP
            reception.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><varname>BindCarrier=</varname></term>
          <listitem>
            <para>A link name or a list of link names. When set, controls the behavior of the current
            link. When all links in the list are in an operational down state, the current link is brought
            down. When at least one link has carrier, the current interface is brought up.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><varname>Address=</varname></term>
          <listitem>
            <para>A static IPv4 or IPv6 address and its prefix length,
            separated by a <literal>/</literal> character. Specify
            this key more than once to configure several addresses.
            The format of the address must be as described in
            <citerefentry project='man-pages'><refentrytitle>inet_pton</refentrytitle><manvolnum>3</manvolnum></citerefentry>.
            This is a short-hand for an [Address] section only
            containing an Address key (see below). This option may be
            specified more than once.
            </para>

            <para>If the specified address is 0.0.0.0 (for IPv4) or
            [::] (for IPv6), a new address range of the requested size
            is automatically allocated from a system-wide pool of
            unused ranges. The allocated range is checked against all
            current network interfaces and all known network
            configuration files to avoid address range conflicts. The
            default system-wide pool consists of 192.168.0.0/16,
            172.16.0.0/12 and 10.0.0.0/8 for IPv4, and fc00::/7 for
            IPv6. This functionality is useful to manage a large
            number of dynamically created network interfaces with the
            same network configuration and automatic address range
            assignment.</para>

          </listitem>
        </varlistentry>
        <varlistentry>
          <term><varname>Gateway=</varname></term>
          <listitem>
            <para>The gateway address, which must be in the format
            described in
            <citerefentry project='man-pages'><refentrytitle>inet_pton</refentrytitle><manvolnum>3</manvolnum></citerefentry>.
            This is a short-hand for a [Route] section only containing
            a Gateway key. This option may be specified more than
            once.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><varname>DNS=</varname></term>
          <listitem>
            <para>A DNS server address, which must be in the format
            described in
            <citerefentry project='man-pages'><refentrytitle>inet_pton</refentrytitle><manvolnum>3</manvolnum></citerefentry>.
            This option may be specified more than once. This setting is read by
            <citerefentry><refentrytitle>systemd-resolved.service</refentrytitle><manvolnum>8</manvolnum></citerefentry>.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><varname>Domains=</varname></term>
          <listitem>
            <para>The domains used for DNS host name resolution on this link. Takes a list of DNS domain names which
            are used as search suffixes for extending single-label host names (host names containing no dots) to become
            fully qualified domain names (FQDNs). If a single-label host name is resolved on this interface, each of
            the specified search domains are appended to it in turn, converting it into a fully qualified domain name,
            until one of them may be successfully resolved.</para>

            <para>The specified domains are also used for routing of DNS queries: look-ups for host names ending in the
            domains specified here are preferably routed to the DNS servers configured for this interface. If a domain
            name is prefixed with <literal>~</literal>, the domain name becomes a pure "routing" domain, is used for
            DNS query routing purposes only and is not used in the described domain search logic. By specifying a
            routing domain of <literal>~.</literal> (the tilde indicating definition of a routing domain, the dot
            referring to the DNS root domain which is the implied suffix of all valid DNS names) it is possible to
            route all DNS traffic preferably to the DNS server specified for this interface. The route domain logic is
            particularly useful on multi-homed hosts with DNS servers serving particular private DNS zones on each
            interface.</para>

            <para>This setting is read by
            <citerefentry><refentrytitle>systemd-resolved.service</refentrytitle><manvolnum>8</manvolnum></citerefentry>.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><varname>NTP=</varname></term>
          <listitem>
            <para>An NTP server address. This option may be specified more than once. This setting is read by
            <citerefentry><refentrytitle>systemd-timesyncd.service</refentrytitle><manvolnum>8</manvolnum></citerefentry>.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><varname>IPForward=</varname></term>
          <listitem><para>Configures IP packet forwarding for the
          system. If enabled, incoming packets on any network
          interface will be forwarded to any other interfaces
          according to the routing table. Takes either a boolean
          argument, or the values <literal>ipv4</literal> or
          <literal>ipv6</literal>, which only enable IP packet
          forwarding for the specified address family.  This controls
          the <filename>net.ipv4.ip_forward</filename> and
          <filename>net.ipv6.conf.all.forwarding</filename> sysctl
          options of the network interface (see <ulink
          url="https://www.kernel.org/doc/Documentation/networking/ip-sysctl.txt">ip-sysctl.txt</ulink>
          for details about sysctl options). Defaults to
          <literal>no</literal>.</para>

          <para>Note: this setting controls a global kernel option,
          and does so one way only: if a network that has this setting
          enabled is set up the global setting is turned on.  However,
          it is never turned off again, even after all networks with
          this setting enabled are shut down again.</para>

          <para>To allow IP packet forwarding only between specific
          network interfaces use a firewall.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><varname>IPMasquerade=</varname></term>
          <listitem><para>Configures IP masquerading for the network
          interface. If enabled, packets forwarded from the network
          interface will be appear as coming from the local host.
          Takes a boolean argument. Implies
          <varname>IPForward=ipv4</varname>. Defaults to
          <literal>no</literal>.</para></listitem>
        </varlistentry>
        <varlistentry>
          <term><varname>IPv6PrivacyExtensions=</varname></term>
          <listitem><para>Configures use of stateless temporary
          addresses that change over time (see <ulink
          url="https://tools.ietf.org/html/rfc4941">RFC 4941</ulink>,
          Privacy Extensions for Stateless Address Autoconfiguration
          in IPv6). Takes a boolean or the special values
          <literal>prefer-public</literal> and
          <literal>kernel</literal>. When true, enables the privacy
          extensions and prefers temporary addresses over public
          addresses. When <literal>prefer-public</literal>, enables the
          privacy extensions, but prefers public addresses over
          temporary addresses. When false, the privacy extensions
          remain disabled. When <literal>kernel</literal>, the kernel's
          default setting will be left in place.  Defaults to
          <literal>no</literal>.</para></listitem>
        </varlistentry>
        <varlistentry>
          <term><varname>IPv6AcceptRouterAdvertisements=</varname></term>
          <listitem><para>Force the setting of the <filename>accept_ra</filename>
          (router advertisements) setting for the interface.
          When unset, the kernel default is used, and router
          advertisements are accepted only when local forwarding
          is disabled for that interface.
          When router advertisements are accepted, they will
          trigger the start of the DHCPv6 client if the relevant
          flags are passed, or if no routers are found on the link.
          Takes a boolean. If true, router advertisements are
          accepted, when false, router advertisements are ignored,
          independently of the local forwarding state.</para>

          <para>See
          <ulink url="https://www.kernel.org/doc/Documentation/networking/ip-sysctl.txt">ip-sysctl.txt</ulink>
          in the kernel documentation, but note that systemd's
          setting of <constant>1</constant> corresponds to
          kernel's setting of <constant>2</constant>.</para>
        </listitem>
        </varlistentry>
        <varlistentry>
          <term><varname>IPv6DuplicateAddressDetection=</varname></term>
          <listitem><para>Configures the amount of IPv6 Duplicate
          Address Detection (DAD) probes to send. Defaults to unset.
        </para></listitem>
        </varlistentry>
        <varlistentry>
          <term><varname>IPv6HopLimit=</varname></term>
          <listitem><para>Configures IPv6 Hop Limit. For each router that
          forwards the packet, the hop limit is decremented by 1. When the
          hop limit field reaches zero, the packet is discarded.
          Defaults to unset.
        </para></listitem>
        </varlistentry>
        <varlistentry>
          <term><varname>ProxyARP=</varname></term>
          <listitem><para>A boolean. Configures proxy ARP. Proxy ARP is the technique in which one host,
          usually a router, answers ARP requests intended for another machine. By "faking" its identity,
          the router accepts responsibility for routing packets to the "real" destination. (see <ulink
          url="https://tools.ietf.org/html/rfc1027">RFC 1027</ulink>.
          Defaults to unset.
        </para></listitem>
        </varlistentry>
        <varlistentry>
          <term><varname>Bridge=</varname></term>
          <listitem>
            <para>The name of the bridge to add the link to.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><varname>Bond=</varname></term>
          <listitem>
            <para>The name of the bond to add the link to.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><varname>VLAN=</varname></term>
          <listitem>
            <para>The name of a VLAN to create on the link. This
            option may be specified more than once.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><varname>MACVLAN=</varname></term>
          <listitem>
            <para>The name of a MACVLAN to create on the link. This
            option may be specified more than once.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><varname>VXLAN=</varname></term>
          <listitem>
            <para>The name of a VXLAN to create on the link. This
            option may be specified more than once.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><varname>Tunnel=</varname></term>
          <listitem>
            <para>The name of a Tunnel to create on the link. This
            option may be specified more than once.</para>
          </listitem>
        </varlistentry>
      </variablelist>

  </refsect1>

  <refsect1>
    <title>[Address] Section Options</title>

      <para>An <literal>[Address]</literal> section accepts the
      following keys. Specify several <literal>[Address]</literal>
      sections to configure several addresses.</para>

      <variablelist class='network-directives'>
        <varlistentry>
          <term><varname>Address=</varname></term>
          <listitem>
            <para>As in the <literal>[Network]</literal> section. This
            key is mandatory.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><varname>Peer=</varname></term>
          <listitem>
            <para>The peer address in a point-to-point connection.
            Accepts the same format as the <literal>Address</literal>
            key.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><varname>Broadcast=</varname></term>
          <listitem>
            <para>The broadcast address, which must be in the format
            described in
            <citerefentry project='man-pages'><refentrytitle>inet_pton</refentrytitle><manvolnum>3</manvolnum></citerefentry>.
            This key only applies to IPv4 addresses. If it is not
            given, it is derived from the <literal>Address</literal>
            key.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><varname>Label=</varname></term>
          <listitem>
            <para>An address label.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><varname>PreferredLifetime=</varname></term>
          <listitem>
            <para>Allows the default "preferred lifetime" of the address to be overridden.
            Only three settings are accepted: <literal>forever</literal> or <literal>infinity</literal>
            which is the default and means that the address never expires, and <literal>0</literal> which means
            that the address is considered immediately "expired" and will not be used,
            unless explicitly requested. A setting of PreferredLifetime=0 is useful for
            addresses which are added to be used only by a specific application,
            which is then configured to use them explicitly.</para>
          </listitem>
        </varlistentry>
      </variablelist>
  </refsect1>

  <refsect1>
    <title>[Route] Section Options</title>
      <para>The <literal>[Route]</literal> section accepts the
      following keys. Specify several <literal>[Route]</literal>
      sections to configure several routes.</para>

      <variablelist class='network-directives'>
        <varlistentry>
          <term><varname>Gateway=</varname></term>
          <listitem>
            <para>As in the <literal>[Network]</literal> section.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><varname>Destination=</varname></term>
          <listitem>
            <para>The destination prefix of the route. Possibly
            followed by a slash and the prefix length. If omitted, a
            full-length host route is assumed.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><varname>Source=</varname></term>
          <listitem>
            <para>The source prefix of the route. Possibly followed by
            a slash and the prefix length. If omitted, a full-length
            host route is assumed.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><varname>Metric=</varname></term>
          <listitem>
            <para>The metric of the route (an unsigned integer).</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><varname>Scope=</varname></term>
          <listitem>
            <para>The scope of the route, which can be <literal>global</literal>,
            <literal>link</literal> or <literal>host</literal>. Defaults to
            <literal>global</literal>.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><varname>PreferredSource=</varname></term>
          <listitem>
            <para>The preferred source address of the route. The address
            must be in the format described in
            <citerefentry project='man-pages'><refentrytitle>inet_pton</refentrytitle><manvolnum>3</manvolnum></citerefentry>.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><varname>Table=<replaceable>num</replaceable></varname></term>
          <listitem>
          <para>The table identifier for the route (a number between 1 and 4294967295, or 0 to unset).
          The table can be retrieved using <command>ip route show table <replaceable>num</replaceable></command>.
          </para>
          </listitem>
        </varlistentry>
      </variablelist>
  </refsect1>

  <refsect1>
    <title>[DHCP] Section Options</title>
      <para>The <literal>[DHCP]</literal> section configures the
      DHCPv4 and DHCP6 client, if it is enabled with the
      <varname>DHCP=</varname> setting described above:</para>

      <variablelist class='network-directives'>
        <varlistentry>
          <term><varname>UseDNS=</varname></term>
          <listitem>
            <para>When true (the default), the DNS servers received
            from the DHCP server will be used and take precedence over
            any statically configured ones.</para>

            <para>This corresponds to the <option>nameserver</option>
            option in <citerefentry
            project='man-pages'><refentrytitle>resolv.conf</refentrytitle><manvolnum>5</manvolnum></citerefentry>.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><varname>UseNTP=</varname></term>
          <listitem>
            <para>When true (the default), the NTP servers received
            from the DHCP server will be used by systemd-timesyncd
            and take precedence over any statically configured ones.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><varname>UseMTU=</varname></term>
          <listitem>
            <para>When true, the interface maximum transmission unit
            from the DHCP server will be used on the current link.
            Defaults to false.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><varname>SendHostname=</varname></term>
          <listitem>
            <para>When true (the default), the machine's hostname will
            be sent to the DHCP server.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><varname>UseHostname=</varname></term>
          <listitem>
            <para>When true (the default), the hostname received from
            the DHCP server will be set as the transient hostname of the system
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
        <term><varname>Hostname=</varname></term>
        <listitem>
          <para>Use this value for the hostname which is sent to the
          DHCP server, instead of machine's hostname.</para>
        </listitem>
      </varlistentry>
        <varlistentry>
          <term><varname>UseDomains=</varname></term>
          <listitem>
            <para>Takes a boolean argument, or the special value <literal>route</literal>. When true, the domain name
            received from the DHCP server will be used as DNS search domain over this link, similar to the effect of
            the <option>Domains=</option> setting. If set to <literal>route</literal>, the domain name received from
            the DHCP server will be used for routing DNS queries only, but not for searching, similar to the effect of
            the <option>Domains=</option> setting when the argument is prefixed with <literal>~</literal>. Defaults to
            false.</para>

            <para>It is recommended to enable this option only on trusted networks, as setting this affects resolution
            of all host names, in particular to single-label names. It is generally safer to use the supplied domain
            only as routing domain, rather than as search domain, in order to not have it affect local resolution of
            single-label names.</para>

            <para>When set to true, this setting corresponds to the <option>domain</option> option in <citerefentry
            project='man-pages'><refentrytitle>resolv.conf</refentrytitle><manvolnum>5</manvolnum></citerefentry>.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><varname>UseRoutes=</varname></term>
          <listitem>
            <para>When true (the default), the static routes will be
            requested from the DHCP server and added to the routing
            table with a metric of 1024.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><varname>UseTimezone=</varname></term>

          <listitem><para>When true, the timezone received from the
          DHCP server will be set as timezone of the local
          system. Defaults to <literal>no</literal>.</para></listitem>
        </varlistentry>

        <varlistentry>
          <term><varname>CriticalConnection=</varname></term>
          <listitem>
            <para>When true, the connection will never be torn down
            even if the DHCP lease expires. This is contrary to the
            DHCP specification, but may be the best choice if, say,
            the root filesystem relies on this connection. Defaults to
            false.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><varname>ClientIdentifier=</varname></term>
          <listitem>
            <para>The DHCPv4 client identifier to use. Either <literal>mac</literal> to use the MAC address of the link
            or <literal>duid</literal> (the default, see below) to use a RFC4361-compliant Client ID.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><varname>VendorClassIdentifier=</varname></term>
          <listitem>
            <para>The vendor class identifier used to identify vendor
            type and configuration.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><varname>DUIDType=</varname></term>
          <listitem>
            <para>Override the global <varname>DUIDType</varname> setting for this network. See
            <citerefentry><refentrytitle>networkd.conf</refentrytitle><manvolnum>5</manvolnum></citerefentry>
            for a description of possible values.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><varname>DUIDRawData=</varname></term>
          <listitem>
            <para>Override the global <varname>DUIDRawData</varname> setting for this network. See
            <citerefentry><refentrytitle>networkd.conf</refentrytitle><manvolnum>5</manvolnum></citerefentry>
            for a description of possible values.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><varname>IAID=</varname></term>
          <listitem>
            <para>The DHCP Identity Association Identifier (IAID) for the interface, a 32-bit unsigned integer.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><varname>RequestBroadcast=</varname></term>
          <listitem>
            <para>Request the server to use broadcast messages before
            the IP address has been configured. This is necessary for
            devices that cannot receive RAW packets, or that cannot
            receive packets at all before an IP address has been
            configured. On the other hand, this must not be enabled on
            networks where broadcasts are filtered out.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><varname>RouteMetric=</varname></term>
          <listitem>
            <para>Set the routing metric for routes specified by the
            DHCP server.</para>
          </listitem>
        </varlistentry>
      </variablelist>
    </refsect1>

  <refsect1>
    <title>[DHCPServer] Section Options</title>
    <para>The <literal>[DHCPServer]</literal> section contains
    settings for the DHCP server, if enabled via the
    <varname>DHCPServer=</varname> option described above:</para>

    <variablelist class='network-directives'>

      <varlistentry>
        <term><varname>PoolOffset=</varname></term>
        <term><varname>PoolSize=</varname></term>

        <listitem><para>Configures the pool of addresses to hand out. The pool
        is a contiguous sequence of IP addresses in the subnet configured for
        the server address, which does not include the subnet nor the broadcast
        address. <varname>PoolOffset=</varname> takes the offset of the pool
        from the start of subnet, or zero to use the default value.
        <varname>PoolSize=</varname> takes the number of IP addresses in the
        pool or zero to use the default value. By default, the pool starts at
        the first address after the subnet address and takes up the rest of
        the subnet, excluding the broadcast address. If the pool includes
        the server address (the default), this is reserved and not handed
        out to clients.</para></listitem>
      </varlistentry>

      <varlistentry>
        <term><varname>DefaultLeaseTimeSec=</varname></term>
        <term><varname>MaxLeaseTimeSec=</varname></term>

        <listitem><para>Control the default and maximum DHCP lease
        time to pass to clients. These settings take time values in seconds or
        another common time unit, depending on the suffix. The default
        lease time is used for clients that did not ask for a specific
        lease time. If a client asks for a lease time longer than the
        maximum lease time, it is automatically shortened to the
        specified time. The default lease time defaults to 1h, the
        maximum lease time to 12h. Shorter lease times are beneficial
        if the configuration data in DHCP leases changes frequently
        and clients shall learn the new settings with shorter
        latencies. Longer lease times reduce the generated DHCP
        network traffic.</para></listitem>
      </varlistentry>

      <varlistentry>
        <term><varname>EmitDNS=</varname></term>
        <term><varname>DNS=</varname></term>

        <listitem><para>Configures whether the DHCP leases handed out
        to clients shall contain DNS server information. The
        <varname>EmitDNS=</varname> setting takes a boolean argument
        and defaults to <literal>yes</literal>. The DNS servers to
        pass to clients may be configured with the
        <varname>DNS=</varname> option, which takes a list of IPv4
        addresses. If the <varname>EmitDNS=</varname> option is
        enabled but no servers configured, the servers are
        automatically propagated from an "uplink" interface that has
        appropriate servers set. The "uplink" interface is determined
        by the default route of the system with the highest
        priority. Note that this information is acquired at the time
        the lease is handed out, and does not take uplink interfaces
        into account that acquire DNS or NTP server information at a
        later point. DNS server propagation does not take
        <filename>/etc/resolv.conf</filename> into account. Also, note
        that the leases are not refreshed if the uplink network
        configuration changes. To ensure clients regularly acquire the
        most current uplink DNS server information, it is thus
        advisable to shorten the DHCP lease time via
        <varname>MaxLeaseTimeSec=</varname> described
        above.</para></listitem>
      </varlistentry>

      <varlistentry>
        <term><varname>EmitNTP=</varname></term>
        <term><varname>NTP=</varname></term>

        <listitem><para>Similar to the <varname>EmitDNS=</varname> and
        <varname>DNS=</varname> settings described above, these
        settings configure whether and what NTP server information
        shall be emitted as part of the DHCP lease. The same syntax,
        propagation semantics and defaults apply as for
        <varname>EmitDNS=</varname> and
        <varname>DNS=</varname>.</para></listitem>
      </varlistentry>

      <varlistentry>
        <term><varname>EmitRouter=</varname></term>

        <listitem><para>Similar to the <varname>EmitDNS=</varname>
        setting described above, this setting configures whether the
        DHCP lease should contain the router option. The same syntax,
        propagation semantics and defaults apply as for
        <varname>EmitDNS=</varname>.</para></listitem>
      </varlistentry>

      <varlistentry>
        <term><varname>EmitTimezone=</varname></term>
        <term><varname>Timezone=</varname></term>

        <listitem><para>Configures whether the DHCP leases handed out
        to clients shall contain timezone information. The
        <varname>EmitTimezone=</varname> setting takes a boolean
        argument and defaults to <literal>yes</literal>. The
        <varname>Timezone=</varname> setting takes a timezone string
        (such as <literal>Europe/Berlin</literal> or
        <literal>UTC</literal>) to pass to clients. If no explicit
        timezone is set, the system timezone of the local host is
        propagated, as determined by the
        <filename>/etc/localtime</filename> symlink.</para></listitem>
      </varlistentry>

    </variablelist>
  </refsect1>

  <refsect1>
    <title>[Bridge] Section Options</title>
      <para>The <literal>[Bridge]</literal> section accepts the
      following keys.</para>
      <variablelist class='network-directives'>
        <varlistentry>
          <term><varname>UnicastFlood=</varname></term>
          <listitem>
            <para>A boolean. Controls whether the bridge should flood
            traffic for which an FDB entry is missing and the destination
            is unknown through this port. Defaults to on.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><varname>HairPin=</varname></term>
          <listitem>
            <para>A boolean. Configures whether traffic may be sent back
            out of the port on which it was received. By default, this
            flag is false, and the bridge will not forward traffic back
            out of the receiving port.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><varname>UseBPDU=</varname></term>
          <listitem>
            <para>A boolean. Configures whether STP Bridge Protocol Data Units will be
            processed by the bridge port. Defaults to yes.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><varname>FastLeave=</varname></term>
          <listitem>
            <para>A boolean. This flag allows the bridge to immediately stop multicast
            traffic on a port that receives an IGMP Leave message. It is only used with
            IGMP snooping if enabled on the bridge. Defaults to off.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><varname>AllowPortToBeRoot=</varname></term>
          <listitem>
            <para>A boolean. Configures whether a given port is allowed to
            become a root port. Only used when STP is enabled on the bridge.
            Defaults to on.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><varname>Cost=</varname></term>
          <listitem>
            <para>Sets the "cost" of sending packets of this interface.
            Each port in a bridge may have a different speed and the cost
            is used to decide which link to use. Faster interfaces
            should have lower costs.</para>
          </listitem>
        </varlistentry>
      </variablelist>
  </refsect1>
  <refsect1>
    <title>[BridgeFDB] Section Options</title>
      <para>The <literal>[BridgeFDB]</literal> section manages the
      forwarding database table of a port and accepts the following
      keys. Specify several <literal>[BridgeFDB]</literal> sections to
      configure several static MAC table entries.</para>

      <variablelist class='network-directives'>
        <varlistentry>
          <term><varname>MACAddress=</varname></term>
          <listitem>
            <para>As in the <literal>[Network]</literal> section. This
            key is mandatory.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><varname>VLANId=</varname></term>
          <listitem>
            <para>The VLAN ID for the new static MAC table entry. If
            omitted, no VLAN ID info is appended to the new static MAC
            table entry.</para>
          </listitem>
        </varlistentry>
      </variablelist>
  </refsect1>

  <refsect1>
    <title>Example</title>
    <example>
      <title>/etc/systemd/network/50-static.network</title>

      <programlisting>[Match]
Name=enp2s0

[Network]
Address=192.168.0.15/24
Gateway=192.168.0.1</programlisting>
    </example>

    <example>
      <title>/etc/systemd/network/80-dhcp.network</title>

      <programlisting>[Match]
Name=en*

[Network]
DHCP=yes</programlisting>
    </example>

    <example>
      <title>/etc/systemd/network/25-bridge-static.network</title>

      <programlisting>[Match]
Name=bridge0

[Network]
Address=192.168.0.15/24
Gateway=192.168.0.1
DNS=192.168.0.1</programlisting>
    </example>

    <example>
      <title>/etc/systemd/network/25-bridge-slave-interface.network</title>

      <programlisting>[Match]
Name=enp2s0

[Network]
Bridge=bridge0</programlisting>
    </example>
    <example>
      <title>/etc/systemd/network/25-ipip.network</title>

      <programlisting>[Match]
Name=em1

[Network]
Tunnel=ipip-tun</programlisting>
    </example>

    <example>
      <title>/etc/systemd/network/25-sit.network</title>

      <programlisting>[Match]
Name=em1

[Network]
Tunnel=sit-tun</programlisting>
    </example>

    <example>
      <title>/etc/systemd/network/25-gre.network</title>

      <programlisting>[Match]
Name=em1

[Network]
Tunnel=gre-tun</programlisting>
    </example>

    <example>
      <title>/etc/systemd/network/25-vti.network</title>

      <programlisting>[Match]
Name=em1

[Network]
Tunnel=vti-tun</programlisting>
    </example>

    <example>
      <title>/etc/systemd/network/25-bond.network</title>

      <programlisting>[Match]
Name=bond1

[Network]
DHCP=yes
</programlisting>
    </example>

  </refsect1>

  <refsect1>
    <title>See Also</title>
    <para>
      <citerefentry><refentrytitle>systemd</refentrytitle><manvolnum>1</manvolnum></citerefentry>,
      <citerefentry><refentrytitle>systemd-networkd.service</refentrytitle><manvolnum>8</manvolnum></citerefentry>,
      <citerefentry><refentrytitle>systemd.link</refentrytitle><manvolnum>5</manvolnum></citerefentry>,
      <citerefentry><refentrytitle>systemd.netdev</refentrytitle><manvolnum>5</manvolnum></citerefentry>,
      <citerefentry><refentrytitle>systemd-resolved.service</refentrytitle><manvolnum>8</manvolnum></citerefentry>
    </para>
  </refsect1>

</refentry>
