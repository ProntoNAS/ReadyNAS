address_family inet
architecture linux

method loopback
  description
    This method may be used to define the IPv4 loopback interface.

  up
    ifconfig %iface% 127.0.0.1 up
    route add -net 127.0.0.0       if ( mylinuxver() < mylinux(2,1,100) )

  down
    ifconfig %iface% down
method static
  description
    This method may be used to define ethernet interfaces with statically
    allocated IPv4 addresses.
      
  options
    address address             -- Address (dotted quad) *required*
    netmask netmask             -- Netmask (dotted quad) *required*
    broadcast broadcast_address -- Broadcast address (dotted quad)
    network network_address     -- Network address (dotted quad) *required \
                                     for 2.0.x kernels*
    metric metric               -- Routing metric for default gateway (integer)
    gateway address             -- Default gateway (dotted quad)
    pointopoint address		-- Address of other end point (dotted quad). \
				   Note the spelling of "point-to".
    media type                  -- Medium type, driver dependent
    hwaddress class address     -- Hardware Address. /class/ is one of \
                                     *ether*, *ax25*, *ARCnet* or *netrom*. \
                                     /address/ is dependent on the above \
                                     choice.
    mtu size                    -- MTU size

  up
    [[ ifconfig %iface% hw %hwaddress%]]
    ifconfig %iface% %address% netmask %netmask% [[broadcast %broadcast%]] \
	[[pointopoint %pointopoint%]] [[media %media%]] [[mtu %mtu%]] \
	up
    route add -net %network%  \
        if ( mylinuxver() < mylinux(2,1,100) )
    [[ route add default gw %gateway% [[metric %metric%]] %iface% ]]

  down
    [[ route del default gw %gateway% [[metric %metric%]] %iface% ]]
    ifconfig %iface% down
method manual
  description
    This method may be used to define interfaces for which no configuration
    is done by default.  Such interfaces can be configured manually by
    means of *up* and *down* commands or /etc/network/if-*.d scripts.

  up

  down
method dhcp
  description
    This method may be used to obtain an address via DHCP with any of
    the tools: dhclient, pump, udhcpc, dhcpcd.
    (They have been listed in their order of precedence.)
    If you have a complicated DHCP setup you should
    note that some of these clients use their own configuration files
    and do not obtain their configuration information via *ifup*.

  options
    hostname hostname       -- Hostname to be requested (pump, dhcpcd, udhcpc)
    leasehours leasehours   -- Preferred lease time in hours (pump)
    leasetime leasetime     -- Preferred lease time in seconds (dhcpcd)
    vendor vendor           -- Vendor class identifier (dhcpcd)
    client client           -- Client identifier (dhcpcd, udhcpc)
    hwaddress class address -- Hardware Address. /class/ is one of \
                                *ether*, *ax25*, *ARCnet* or *netrom*. \
                                /address/ is dependent on this choice.

  up
    [[ifconfig %iface% hw %hwaddress%]]
    dhclient3 -pf /var/run/dhclient.%iface%.pid -lf /var/lib/dhcp3/dhclient.%iface%.leases %iface% \
        if (execable("/sbin/dhclient3"))
    dhclient -v -pf /var/run/dhclient.%iface%.pid -lf /var/lib/dhcp/dhclient.%iface%.leases %iface% \
        elsif (execable("/sbin/dhclient"))
    pump -i %iface% [[-h %hostname%]] [[-l %leasehours%]] \
        elsif (execable("/sbin/pump") && mylinuxver() >= mylinux(2,1,100))
    udhcpc -n -p /var/run/udhcpc.%iface%.pid -i %iface% [[-H %hostname%]] \
           [[-c %client%]] \
        elsif (execable("/sbin/udhcpc") && mylinuxver() >= mylinux(2,2,0))
    dhcpcd [[-h %hostname%]] [[-i %vendor%]] [[-I %client%]] \
           [[-l %leasetime%]] %iface% \
        elsif (execable("/sbin/dhcpcd"))

  down
    dhclient3 -r -pf /var/run/dhclient.%iface%.pid -lf /var/lib/dhcp3/dhclient.%iface%.leases %iface% \
        if (execable("/sbin/dhclient3"))
    dhclient -v -r -pf /var/run/dhclient.%iface%.pid -lf /var/lib/dhcp/dhclient.%iface%.leases %iface% \
        elsif (execable("/sbin/dhclient"))
    pump -i %iface% -r \
        elsif (execable("/sbin/pump") && mylinuxver() >= mylinux(2,1,100))
    cat /var/run/udhcpc.%iface%.pid | xargs -i kill -TERM {} \
        elsif (execable("/sbin/udhcpc"))
    dhcpcd -k %iface% \
        elsif (execable("/sbin/dhcpcd"))

    ifconfig %iface% down
method bootp
  description
    This method may be used to obtain an address via bootp.

  options
    bootfile file  -- Tell the server to use /file/ as the bootfile.
    server address -- Use the IP address /address/ to communicate with \
                      the server.
    hwaddr addr    -- Use /addr/ as the hardware address instead of \
                      whatever it really is.

  up
    bootpc [[--bootfile %bootfile%]] --dev %iface% [[--server %server%]] \
           [[--hwaddr %hwaddr%]] --returniffail --serverbcast

  down
    ifconfig down %iface%
method ppp
  description
    This method uses pon/poff to configure a PPP interface. See those
    commands for details.
  options
    provider name  -- Use /name/ as the provider (from /etc/ppp/peers).
  up
    pon [[%provider%]]
  down
    poff [[%provider%]]
method wvdial
  description
    This method uses wvdial to configure a PPP interface. See that command
    for more details.
  options
    provider name  -- Use /name/ as the provider (from /etc/ppp/peers).
  up
    /sbin/start-stop-daemon --start -x /usr/bin/wvdial \
                      -p /var/run/wvdial.%iface% -b -m -- [[ %provider% ]]
  down
    /sbin/start-stop-daemon --stop -x /usr/bin/wvdial \
                      -p /var/run/wvdial.%iface% -s 2
