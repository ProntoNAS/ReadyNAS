From 64851e1679ec36c58d6e3fa341dcf6a7130671aa Mon Sep 17 00:00:00 2001
From: Sam Hartman <hartmans@debian.org>
Date: Mon, 19 Nov 2012 16:51:18 -0500
Subject: gssapi: never unload mechanisms

It turns out that many GSSAPI mechanisms link to the main gss-api
library creating a circular reference. Depending on how the linker
breaks the cycle at process exit time, the linker may unload the GSS
library after unloading the mechanisms. The explicit dlclose from the
GSS library tends to cause a libdl assertion failure at that
point. So, never unload plugins. They are refcounted, so dlopen
handles will not leak, although obviously the memory from the plugin
is never reclaimed.

ticket: 7135
---
 src/lib/gssapi/mechglue/g_initialize.c | 2 --
 1 file changed, 2 deletions(-)

diff --git a/src/lib/gssapi/mechglue/g_initialize.c b/src/lib/gssapi/mechglue/g_initialize.c
index 202ad8e..9cb84b0 100644
--- a/src/lib/gssapi/mechglue/g_initialize.c
+++ b/src/lib/gssapi/mechglue/g_initialize.c
@@ -829,8 +829,6 @@ freeMechList(void)
 			free(cf->mech);
 		if (cf->mech_ext != NULL && cf->freeMech)
 			free(cf->mech_ext);
-		if (cf->dl_handle != NULL)
-			(void) krb5int_close_plugin(cf->dl_handle);
 		free(cf);
 	}
 }
