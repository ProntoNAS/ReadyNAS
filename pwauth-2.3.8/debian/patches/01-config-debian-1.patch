Debian-specific config for pwauth. Also use proper style comments for C code.

Author: Hai Zaar <haizaar@haizaar.com>

--- config.h.orig	2009-04-01 12:19:41.000000000 +0300
+++ config.h	2009-04-01 12:21:03.000000000 +0300
@@ -110,19 +110,19 @@
  *    FreeBSD.
  */
 
-/* #define SHADOW_NONE		/**/
-/* #define SHADOW_BSD		/* FreeBSD, NetBSD, OpenBSD, BSDI, OS X */
-#define SHADOW_SUN		/* Linux, Solaris, IRIX */
-/* #define SHADOW_JFH		/**/
-/* #define SHADOW_MDW		/**/
-/* #define SHADOW_AIX		/* AIX */
-/* #define SHADOW_HPUX		/* HPUX ? */
-
-/* #define PAM			/* Linux PAM or OpenPAM*/
-/* #define PAM_OS_X		/* PAM on OS X */
-/* #define PAM_SOLARIS		/* PAM on Solaris other than 2.6 */
-/* #define PAM_SOLARIS_26	/* PAM on Solaris 2.6 */
-/* #define LOGIN_CONF_OPENBSD	/* login.conf on OpenBSD */
+/* #define SHADOW_NONE		*/
+/* #define SHADOW_BSD		 FreeBSD, NetBSD, OpenBSD, BSDI, OS X */
+/* #define SHADOW_SUN		 Linux, Solaris, IRIX */
+/* #define SHADOW_JFH		*/
+/* #define SHADOW_MDW		*/
+/* #define SHADOW_AIX		 AIX */
+/* #define SHADOW_HPUX		 HPUX ? */
+
+#define PAM			/* Linux PAM or OpenPAM*/
+/* #define PAM_OS_X		 PAM on OS X */
+/* #define PAM_SOLARIS		 PAM on Solaris other than 2.6 */
+/* #define PAM_SOLARIS_26	 PAM on Solaris 2.6 */
+/* #define LOGIN_CONF_OPENBSD	 login.conf on OpenBSD */
 
 
 /* There is also limited support for two failure logging systems (the database
@@ -179,13 +179,13 @@
  * reports and resets the failure count.
  */
 
-/* #define FAILLOG_JFH				/**/
-/* #define FAILLOG_OPENBSD			/**/
-/* #define FAILLOG_PWAUTH			/**/
-
-/* #define PATH_FAILLOG "/var/log/faillog"	/**/
-/* #define MAX_FAIL_COUNT 40			/**/
-/* #define RESET_FAIL_COUNT			/**/
+/* #define FAILLOG_JFH				*/
+/* #define FAILLOG_OPENBSD			*/
+/* #define FAILLOG_PWAUTH			*/
+
+/* #define PATH_FAILLOG "/var/log/faillog"	*/
+/* #define MAX_FAIL_COUNT 40			*/
+/* #define RESET_FAIL_COUNT			*/
 
 
 /* If UNIX_LASTLOG is defined, the program will update the lastlog entry so
@@ -199,8 +199,8 @@
  * uid numbers.
  */
 
-#define UNIX_LASTLOG		/**/
-#define HAVE_LASTLOG_H		/**/
+/* #define UNIX_LASTLOG		*/
+/* #define HAVE_LASTLOG_H		*/
 
 
 /* If NOLOGIN_FILE is defined to the full path name of a file, then the
@@ -213,8 +213,8 @@
  * right with PAM.
  */
 
-#define NOLOGIN_FILE "/etc/nologin"	/**/
-#define MIN_NOLOGIN_UID 1		/**/
+/* #define NOLOGIN_FILE "/etc/nologin"	*/
+/* #define MIN_NOLOGIN_UID 1		*/
 
 
 /* Defining CHECK_LOGIN_EXPIRATION and CHECK_PASSWORD_EXPIRATION causes
@@ -226,8 +226,8 @@
  * system to test on, I haven't bothered.
  */
 
-#define CHECK_LOGIN_EXPIRATION		/**/
-#define CHECK_PASSWORD_EXPIRATION	/**/
+/* #define CHECK_LOGIN_EXPIRATION		*/
+/* #define CHECK_PASSWORD_EXPIRATION	*/
 
 
 /* SERVER_UIDS is a list of the uid numbers of the accounts that may run
@@ -245,7 +245,7 @@
  * last).
  */
 
-#define SERVER_UIDS 72		/* user "nobody" */
+#define SERVER_UIDS 33		/* user "www-data" */
 
 
 /* If MIN_UNIX_UID is defined to an integer, logins with uid numbers less than
@@ -265,7 +265,7 @@
  * lower case. This is useful for users accustomed to the Windows environment.
  */
 
-/* #define IGNORE_CASE             /**/
+/* #define IGNORE_CASE             */
 
 
 /* If DOMAIN_AWARE is enabled, then we we check login names to see if they
@@ -274,7 +274,7 @@
  * to login names formed like "domain\username".
  */
 
-/* #define DOMAIN_AWARE            /**/
+/* #define DOMAIN_AWARE            */
 
 
 /* On failed authentications, pwauth will sleep for SLEEP_TIME seconds, using
@@ -285,7 +285,7 @@
  * SLEEP_LOCK.  SLEEP_TIME defaults to 2 seconds if not defined.
  */
 
-#define SLEEP_LOCK "/var/run/pwauth.lock"
+/* #define SLEEP_LOCK "/var/run/pwauth.lock" */
 
 
 /* If ENV_METHOD is defined, pwauth expects mod_auth_external to be configured
@@ -295,7 +295,7 @@
  * This is insecure on some versions of Unixes, but might be a bit faster.
  */
 
-/* #define ENV_METHOD		/**/
+/* #define ENV_METHOD		*/
 
 
 /* If /usr/include/paths.h exists define this.  Obviously I need to autoconfig
