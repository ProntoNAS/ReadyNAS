--- freetype2~/src/base/ftobjs.c	2003-03-21 19:27:54.000000000 +0800
+++ freetype2/src/base/ftobjs.c	2003-03-23 01:11:55.000000000 +0800
@@ -1394,6 +1394,11 @@
     FT_Error          error = FT_Err_Ok;
     FT_Driver         driver;
     FT_Driver_Class   clazz;
+#ifdef FT_CONFIG_CHESTER_BLUE_SCALE
+    FT_Library        library;
+    FT_Bool           autohint;
+    FT_Module         hinter;
+#endif
     FT_Size_Metrics*  metrics;
     FT_Long           dim_x, dim_y;
 
@@ -1427,17 +1432,45 @@
 
     /* Compute pixel sizes in 26.6 units */
 #ifdef FT_CONFIG_CHESTER_BLUE_SCALE
-    dim_x = ( char_width  * horz_resolution ) / 72;
-    dim_y = ( char_height * vert_resolution ) / 72;
+    library = driver->root.library;
+    hinter  - library->auto_hinter;
+    autohint =
+      FT_BOOL( hinter                                      &&
+               !( load_flags & ( FT_LOAD_NO_SCALE    |
+                                 FT_LOAD_NO_RECURSE  |
+                                 FT_LOAD_NO_HINTING  |
+                                 FT_LOAD_NO_AUTOHINT ) )   &&
+               FT_DRIVER_IS_SCALABLE( driver )             &&
+               FT_DRIVER_USES_OUTLINES( driver )           );
+    if ( autohint )
+    {
+      if ( FT_DRIVER_HAS_HINTER( driver ) &&
+           !( load_flags & FT_LOAD_FORCE_AUTOHINT ) )
+        autohint = 0;
+    }
+
+    if ( autohint )
+    {
+      dim_x = ( char_width  * horz_resolution + 36 ) / 72; /* round div */
+      dim_y = ( char_height * vert_resolution + 36 ) / 72; /* round div */
+
+      metrics->x_ppem = (FT_UShort)( (dim_x+32) >> 6 ); /* round div */
+      metrics->y_ppem = (FT_UShort)( (dim_y+32) >> 6 ); /* round div */
+    }
+    else
+    {
+      dim_x = ( ( char_width  * horz_resolution + (36+32*72) ) / 72 ) & -64; /* round div */
+      dim_y = ( ( char_height * vert_resolution + (36+32*72) ) / 72 ) & -64; /* round div */
 
-    metrics->x_ppem = (FT_UShort)( (dim_x+32) >> 6 );
-    metrics->y_ppem = (FT_UShort)( (dim_y+32) >> 6 );
+      metrics->x_ppem  = (FT_UShort)( dim_x >> 6 ); /* floor div, already rounded */
+      metrics->y_ppem  = (FT_UShort)( dim_y >> 6 ); /* floor div, already rounded */
+    }
 #else
-    dim_x = ( ( ( char_width  * horz_resolution ) / 72 ) + 32 ) & -64;
-    dim_y = ( ( ( char_height * vert_resolution ) / 72 ) + 32 ) & -64;
+    dim_x = ( ( char_width  * horz_resolution + (36+32*72) ) / 72 ) & -64; /* round div */
+    dim_y = ( ( char_height * vert_resolution + (36+32*72) ) / 72 ) & -64; /* round div */
 
-    metrics->x_ppem  = (FT_UShort)( dim_x >> 6 );
-    metrics->y_ppem  = (FT_UShort)( dim_y >> 6 );
+    metrics->x_ppem  = (FT_UShort)( dim_x >> 6 ); /* floor div, already rounded */
+    metrics->y_ppem  = (FT_UShort)( dim_y >> 6 ); /* floor div, already rounded */
 #endif
 
     metrics->x_scale = 0x10000L;
