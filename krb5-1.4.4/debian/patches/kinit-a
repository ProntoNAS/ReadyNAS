Enable kinit -a to match the man page.  I'm not sure why this was
disabled; there doesn't seem to be any reason to leave it only available
when built with long option support.  I've tested the results and the flag
works as expected.

Kerberos RT #3030
Debian bug #232431

=== krb5/src/clients/kinit/kinit.c
==================================================================
--- krb5/src/clients/kinit/kinit.c	(revision 2046)
+++ krb5/src/clients/kinit/kinit.c	(local)
@@ -209,7 +209,7 @@
 	    USAGE_BREAK_LONG
 	    "[-p | -P" USAGE_LONG_PROXIABLE "] "
 	    USAGE_BREAK_LONG
-	    "[-A" USAGE_LONG_ADDRESSES "] "
+	    "[-a | -A" USAGE_LONG_ADDRESSES "] "
 	    USAGE_BREAK
 	    "[-v] [-R] "
 	    "[-k [-t keytab_file]] "
@@ -256,6 +256,7 @@
     ULINE("\t", "-F not forwardable",           OPTTYPE_KRB5);
     ULINE("\t", "-p proxiable",                 OPTTYPE_KRB5);
     ULINE("\t", "-P not proxiable",             OPTTYPE_KRB5);
+    ULINE("\t", "-a include addresses",         OPTTYPE_KRB5);
     ULINE("\t", "-A do not include addresses",  OPTTYPE_KRB5);
     ULINE("\t", "-v validate",                  OPTTYPE_KRB5);
     ULINE("\t", "-R renew",                     OPTTYPE_BOTH);
@@ -281,7 +282,7 @@
     int use_k5 = 0;
     int i;
 
-    while ((i = GETOPT(argc, argv, "r:fpFP54AVl:s:c:kt:RS:v"))
+    while ((i = GETOPT(argc, argv, "r:fpFP54aAVl:s:c:kt:RS:v"))
 	   != -1) {
 	switch (i) {
 	case 'V':
@@ -316,7 +317,6 @@
 	    opts->not_proxiable = 1;
 	    break;
 	case 'a':
-	    /* Note: This is supported only with GETOPT_LONG */
 	    opts->addresses = 1;
 	    break;
 	case 'A':
