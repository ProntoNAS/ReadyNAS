Author: Jordi Mallach <jordi@debian.org>
Description: Fix "writtable" and "writeable" typos.
Forwarded: no

Index: b/src/alisp/alisp.c
===================================================================
--- a/src/alisp/alisp.c	2012-01-25 08:56:56.000000000 +0100
+++ b/src/alisp/alisp.c	2012-01-30 00:29:15.370998396 +0100
@@ -989,7 +989,7 @@
 	else
 		err = snd_output_stdio_open(&out, fname, "w+");
 	if (err < 0) {
-		SNDERR("alisp: cannot open file '%s' for writting (%s)", fname, snd_strerror(errno));
+		SNDERR("alisp: cannot open file '%s' for writing (%s)", fname, snd_strerror(errno));
 		return;
 	}
 
@@ -1062,7 +1062,7 @@
 	else
 		err = snd_output_stdio_open(&out, fname, "w+");
 	if (err < 0) {
-		SNDERR("alisp: cannot open file '%s' for writting (%s)", fname, snd_strerror(errno));
+		SNDERR("alisp: cannot open file '%s' for writing (%s)", fname, snd_strerror(errno));
 		return;
 	}
 
Index: b/src/alisp/alisp_snd.c
===================================================================
--- a/src/alisp/alisp_snd.c	2012-01-25 08:56:56.000000000 +0100
+++ b/src/alisp/alisp_snd.c	2012-01-30 00:30:31.243000120 +0100
@@ -572,7 +572,7 @@
 	}
 	p1 = add_cons(instance, p1, 1, "type", new_string(instance, snd_ctl_elem_type_name(type)));
 	p1 = add_cons(instance, p1, 1, "readable", new_integer(instance, snd_ctl_elem_info_is_readable(info)));
-	p1 = add_cons(instance, p1, 1, "writeable", new_integer(instance, snd_ctl_elem_info_is_writable(info)));
+	p1 = add_cons(instance, p1, 1, "writable", new_integer(instance, snd_ctl_elem_info_is_writable(info)));
 	p1 = add_cons(instance, p1, 1, "volatile", new_integer(instance, snd_ctl_elem_info_is_volatile(info)));
 	p1 = add_cons(instance, p1, 1, "inactive", new_integer(instance, snd_ctl_elem_info_is_inactive(info)));
 	p1 = add_cons(instance, p1, 1, "locked", new_integer(instance, snd_ctl_elem_info_is_locked(info)));
Index: b/src/rawmidi/rawmidi.c
===================================================================
--- a/src/rawmidi/rawmidi.c	2012-01-25 08:56:56.000000000 +0100
+++ b/src/rawmidi/rawmidi.c	2012-01-30 00:30:40.699000334 +0100
@@ -63,7 +63,7 @@
 to output ring buffer in the kernel space. This flag also means that device
 is not opened exclusively, so more applications can share given rawmidi device.
 Note that applications must send the whole MIDI message including the running status,
-because another writting application might break the MIDI message in the output
+because another writing application might break the MIDI message in the output
 buffer.
 
 \subsection rawmidi_open_sync Sync open (flag)
