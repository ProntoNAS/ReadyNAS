gnutls28 (3.3.30-0+deb8u1) jessie-security; urgency=high

  To ease maintenance and ensure complete coverage of complex security
  issues fixed upstream, we have upgraded to the latest upstream
  version of the 3.3.x branch. This includes some interoperability
  changes:

   * ARCFOUR (RC4) and SSL 3.0 are no longer included in the default
     priorities list. Those have to be explicitly enabled, e.g., with
     a string like "NORMAL:+ARCFOUR-128" or "NORMAL:+VERS-SSL3.0",
     respectively.

   * The ciphers utilizing HMAC-SHA384 and SHA256 have been removed
     from the default priority strings. They are not necessary for
     compatibility or other purpose and provide no advantage over
     their SHA1 counter-parts, as they all depend on the legacy TLS
     CBC block mode.

   * Follow closely RFC5280 recommendations and use UTCTime for dates
     prior to 2050.

   * Require strict DER encoding for certificates, OCSP requests,
     private keys, CRLs and certificate requests, in order to reduce
     issues due to the complexity of BER rules.

   * Refuse to import v1 or v2 certificates that contain extensions.
   
 -- Antoine Beaupr√© <anarcat@debian.org>  Tue, 30 Oct 2018 10:26:33 -0400

gnutls28 (3.0.0-1) experimental; urgency=low

  GnuTLS is now using nettle instead of libgcrypt as crypto backend.

  Related to this change (nettle uses LGPLv3+ licensed GMP) the licensing has
  change. GnuTLS is LGPLv3+ now, GnuTLS-EXTRA GPLv3+. GnuTLS can therefore not
  be used by projects using GPLv2 without the "or later" clause.

 -- Andreas Metzler <ametzler@downhill.g.la>  Sun, 14 Aug 2011 14:27:12 +0200

gnutls26 (2.6.6-1) unstable; urgency=high

  libgnutls: Check expiration/activation time on untrusted certificates.
  Before the library did not check activation/expiration times on
  certificates, and was documented as not doing so. We have realized that
  many applications that use libgnutls, including gnutls-cli, fail to
  perform proper checks.  Implementing similar logic in all applications
  leads to code duplication.  Hence, we decided to check whether the
  current time (as reported by the time function) is within the
  activation/expiration period of certificates when verifying untrusted
  certificates.

  This changes the semantics of gnutls_x509_crt_list_verify, which in
  turn is used by gnutls_certificate_verify_peers and
  gnutls_certificate_verify_peers2.  We add two new
  gnutls_certificate_status_t codes for reporting the new error
  condition, GNUTLS_CERT_NOT_ACTIVATED and GNUTLS_CERT_EXPIRED.  We also
  add a new gnutls_certificate_verify_flags flag,
  GNUTLS_VERIFY_DISABLE_TIME_CHECKS, that can be used to disable the new
  behaviour.
  GNUTLS-SA-2009-3 CVE-2009-1417
  http://www.gnu.org/software/gnutls/security.html

 -- Andreas Metzler <ametzler@debian.org>  Thu, 30 Apr 2009 19:00:21 +0200

gnutls26 (2.4.2-5) unstable; urgency=medium

  * The gnutls certificate verification code has been changed to stop
    trusting some weak algoritms. Verifying untrusted X.509 certificates
    signed with RSA-MD2 or RSA-MD5 will now fail with a
    GNUTLS_CERT_INSECURE_ALGORITHM verification output.

    See <http://www.win.tue.nl/hashclash/rogue-ca/>,
    <http://bugs.debian.org/514578> and
    <http://www.gnu.org/software/gnutls/manual/gnutls.html#Digital-signatures>

    "certtool -i < signature.pem" will inform about the algoritm used for
    signing (Search for "Signature Algorithm" in its output.). The proper
    fix is to re-issue the certificates with a more secure algoritm. As a
    hotfix the respective certicate itself can be added to the list of
    trusted certificates. Obviously this should only be done after
    verifying the certificate by different means than relying on the weak
    signature.

 -- Andreas Metzler <ametzler@debian.org>  Sat, 07 Feb 2009 12:58:51 +0100
