#!/bin/sh

# This is a bit of a torture test for mkdir -p, too.
# GNU rm performs *much* better on systems that have a d_type member
# in the directory structure because then it does only one stat per
# command line argument.

# If this test takes too long on your system, blame the OS.

: ${RM=rm}
: ${MKDIR=mkdir}

test=deep-1

# Don't require use of TMPDIR.
: ${RM_TMPDIR=.}

if test "$VERBOSE" = yes; then
  set -x
  $RM --version
fi

umask 022

fail=0

tmp=$RM_TMPDIR/t-rm.$$

k20=/k/k/k/k/k/k/k/k/k/k/k/k/k/k/k/k/k/k/k/k
k200=$k20$k20$k20$k20$k20$k20$k20$k20$k20$k20

# Be careful not to exceed max file name length (usu 512?).
# Doing so wouldn't affect GNU mkdir or GNU rm, but any tool that
# operates on the full pathname (like `test') would choke.
k_deep=$k200$k200

# Create a directory in $tmp with lots of `k' components.
deep=$tmp$k_deep
echo "creating a hierarchy 400 deep in $tmp..." |tr -d '\012'
$MKDIR -p $deep || fail=1
echo done

# Make sure the deep dir was created.
test -d $deep || fail=1

echo "deleting $tmp..." |tr -d '\012'
$RM -r $tmp || fail=1
echo done

# Make sure all of $tmp was deleted.
test -d $tmp && fail=1

exit $fail
