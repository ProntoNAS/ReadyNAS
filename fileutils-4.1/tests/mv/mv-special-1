#! /bin/sh

if test "$VERBOSE" = yes; then
  set -x
  FIXME --version
fi

pwd=`pwd`
tmp=mv-spec.$$
trap 'status=$?; cd $pwd; exec 1>&2; rm -rf $tmp $other_partition_tmpdir && exit $status' 0
trap '(exit $?); exit' 1 2 13 15

. $srcdir/setup
. $srcdir/../envvar-check
# Make sure we get English translations.
. $srcdir/../lang-default

if test -z "$other_partition_tmpdir"; then
  (exit 77); exit
fi

null=.mv-null
dir=.mv-dir

framework_failure=0
mkdir $tmp || framework_failure=1
cd $tmp || framework_failure=1
rm -f $null || framework_failure=1
mknod $null p || framework_failure=1
mkdir -p $dir/a/b/c $dir/d/e/f || framework_failure=1
touch $dir/a/b/c/file1 $dir/d/e/f/file2 || framework_failure=1

if test $framework_failure = 1; then
  echo '********************************************'
  echo 'NOTICE: unable to create test prerequisites'
  echo '********************************************'
  # exit 77 here to indicate that we couldn't run the test.
  # At least running on SunOS 4.1.4, using a directory NFS mounted
  # from an OpenBSD system, the above mknod fails.
  (exit 77); exit
fi

fail=0
mv --verbose $null $dir $other_partition_tmpdir > out || fail=1
# Make sure the files are gone.
test -f $null && fail=1
test -d $dir && fail=1
# Make sure they were moved.
# Since `test -e' is not portable, use `ls'.
ls $other_partition_tmpdir/$null > /dev/null || fail=1
test -d $other_partition_tmpdir/$dir/a/b/c || fail=1

sed "s,$other_partition_tmpdir,XXX," out | sort > out2

cat <<EOF | sort > exp
\`$null' -> \`XXX/$null'
removing \`$null'
\`$dir' -> \`XXX/$dir'
\`$dir/a' -> \`XXX/$dir/a'
\`$dir/a/b' -> \`XXX/$dir/a/b'
\`$dir/a/b/c' -> \`XXX/$dir/a/b/c'
\`$dir/a/b/c/file1' -> \`XXX/$dir/a/b/c/file1'
\`$dir/d' -> \`XXX/$dir/d'
\`$dir/d/e' -> \`XXX/$dir/d/e'
\`$dir/d/e/f' -> \`XXX/$dir/d/e/f'
\`$dir/d/e/f/file2' -> \`XXX/$dir/d/e/f/file2'
removing all entries of directory \`$dir'
removing all entries of directory \`$dir/a'
removing all entries of directory \`$dir/a/b'
removing all entries of directory \`$dir/a/b/c'
removing \`$dir/a/b/c/file1'
removing the directory itself: \`$dir/a/b/c'
removing the directory itself: \`$dir/a/b'
removing the directory itself: \`$dir/a'
removing all entries of directory \`$dir/d'
removing all entries of directory \`$dir/d/e'
removing all entries of directory \`$dir/d/e/f'
removing \`$dir/d/e/f/file2'
removing the directory itself: \`$dir/d/e/f'
removing the directory itself: \`$dir/d/e'
removing the directory itself: \`$dir/d'
removing the directory itself: \`$dir'
EOF

cmp out2 exp || fail=1

# cd $other_partition_tmpdir
# ls -l -A -R $other_partition_tmpdir

(exit $fail); exit
