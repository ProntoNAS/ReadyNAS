# DP: Fix corrupt display for history search in vi-mode, 256-color prompt

--- readline/display.c	2009-09-26 11:37:33.000000000 -0700
+++ readline/display.c	2011-02-19 20:03:07.608289000 -0800
@@ -176,7 +176,8 @@ int _rl_vis_botlin = 0;
 static int last_lmargin;
 
 /* A buffer for `modeline' messages. */
-static char msg_buf[128];
+static char *msg_buf = NULL;
+static int  msg_buf_sz = 0;
 
 /* Non-zero forces the redisplay even if we thought it was unnecessary. */
 static int forced_display;
@@ -2136,6 +2137,9 @@ rl_message (va_alist)
 #if defined (PREFER_VARARGS)
   char *format;
 #endif
+#if defined (HAVE_VSNPRINTF)
+  int bneed;
+#endif
 
 #if defined (PREFER_STDARG)
   va_start (args, format);
@@ -2144,11 +2148,31 @@ rl_message (va_alist)
   format = va_arg (args, char *);
 #endif
 
+  if (msg_buf == NULL)
+    {
+      msg_buf_sz = 128;
+      msg_buf = xmalloc(msg_buf_sz);
+    }
+
 #if defined (HAVE_VSNPRINTF)
-  vsnprintf (msg_buf, sizeof (msg_buf) - 1, format, args);
+  bneed = vsnprintf (msg_buf, msg_buf_sz - 1, format, args);
+  if (bneed >= msg_buf_sz - 1)
+    {
+      msg_buf_sz = bneed + 1;
+      msg_buf = xrealloc (msg_buf, msg_buf_sz);
+      /* Now we're certain we have room. */
+      va_end (args);
+#if defined (PREFER_STDARG)
+      va_start (args, format);
+#else
+      va_start (args);
+      format = va_arg (args, char *);
+#endif
+      vsnprintf (msg_buf, msg_buf_sz - 1, format, args);
+    }
 #else
   vsprintf (msg_buf, format, args);
-  msg_buf[sizeof(msg_buf) - 1] = '\0';	/* overflow? */
+  msg_buf[msg_buf_sz - 1] = '\0';	/* overflow? */
 #endif
   va_end (args);
 
@@ -2173,8 +2197,14 @@ int
 rl_message (format, arg1, arg2)
      char *format;
 {
+  if (msg_buf == NULL)
+    {
+      msg_buf_sz = 128;
+      msg_buf = xmalloc(msg_buf_sz);
+    }
+
   sprintf (msg_buf, format, arg1, arg2);
-  msg_buf[sizeof(msg_buf) - 1] = '\0';	/* overflow? */
+  msg_buf[msg_buf_sz - 1] = '\0';	/* overflow? */
 
   rl_display_prompt = msg_buf;
   if (saved_local_prompt == 0)
