diff -ur gsoap-2.8.orig/gsoap/stdsoap2.c gsoap-2.8/gsoap/stdsoap2.c
--- gsoap-2.8.orig/gsoap/stdsoap2.c	2019-01-18 15:22:36.285318129 +0100
+++ gsoap-2.8/gsoap/stdsoap2.c	2019-01-18 15:26:44.648630944 +0100
@@ -6199,11 +6199,12 @@
 /******************************************************************************/
 #ifndef PALM_1
 SOAP_FMAC1
-size_t
+ssize_t
 SOAP_FMAC2
-soap_encode_url(const char *s, char *t, size_t len)
+soap_encode_url(const char *s, char *t, ssize_t len)
 { register int c;
-  register size_t n = len;
+  register ssize_t n = len;
+  if (n <= 0) return 0;
   while ((c = *s++) && --n > 0)
   { if (c > ' ' && c < 128 && !strchr("()<>@,;:\\\"/[]?={}#!$&'*+", c))
       *t++ = c;
diff -ur gsoap-2.8.orig/gsoap/stdsoap2.cpp gsoap-2.8/gsoap/stdsoap2.cpp
--- gsoap-2.8.orig/gsoap/stdsoap2.cpp	2019-01-18 15:22:36.353317393 +0100
+++ gsoap-2.8/gsoap/stdsoap2.cpp	2019-01-18 15:26:44.648630944 +0100
@@ -6199,11 +6199,12 @@
 /******************************************************************************/
 #ifndef PALM_1
 SOAP_FMAC1
-size_t
+ssize_t
 SOAP_FMAC2
-soap_encode_url(const char *s, char *t, size_t len)
+soap_encode_url(const char *s, char *t, ssize_t len)
 { register int c;
-  register size_t n = len;
+  register ssize_t n = len;
+  if (n <= 0) return 0;
   while ((c = *s++) && --n > 0)
   { if (c > ' ' && c < 128 && !strchr("()<>@,;:\\\"/[]?={}#!$&'*+", c))
       *t++ = c;
diff -ur gsoap-2.8.orig/gsoap/stdsoap2.h gsoap-2.8/gsoap/stdsoap2.h
--- gsoap-2.8.orig/gsoap/stdsoap2.h	2019-01-18 15:22:36.256318443 +0100
+++ gsoap-2.8/gsoap/stdsoap2.h	2019-01-18 15:25:20.408542687 +0100
@@ -2747,7 +2747,7 @@
 SOAP_FMAC1 void SOAP_FMAC2 soap_clr_attr(struct soap *soap);
 
 SOAP_FMAC1 const char* SOAP_FMAC2 soap_url(struct soap *soap, const char*, const char*);
-SOAP_FMAC1 size_t SOAP_FMAC2 soap_encode_url(const char*, char*, size_t);
+SOAP_FMAC1 ssize_t SOAP_FMAC2 soap_encode_url(const char*, char*, ssize_t);
 SOAP_FMAC1 const char* SOAP_FMAC2 soap_encode_url_string(struct soap*, const char*);
 #ifdef WITH_COOKIES
 SOAP_FMAC1 void SOAP_FMAC2 soap_getcookies(struct soap *soap, const char *val);
