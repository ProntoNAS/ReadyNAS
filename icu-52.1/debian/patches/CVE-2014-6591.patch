Description: fix ICU font parsing problem
Bug-Debian: http://bugs.debian.org/775884
Bug-RedHat: https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2014-6591

Index: icu/source/layout/CursiveAttachmentSubtables.cpp
===================================================================
--- icu.orig/source/layout/CursiveAttachmentSubtables.cpp
+++ icu/source/layout/CursiveAttachmentSubtables.cpp
@@ -20,6 +20,9 @@ le_uint32 CursiveAttachmentSubtable::pro
     le_int32  coverageIndex = getGlyphCoverage(base, glyphID, success);
     le_uint16 eeCount       = SWAPW(entryExitCount);
 
+    LEReferenceToArrayOf<EntryExitRecord>
+        entryExitRecordsArrayRef(base, success, entryExitRecords, coverageIndex);
+
     if (coverageIndex < 0 || coverageIndex >= eeCount) {
         glyphIterator->setCursiveGlyph();
         return 0;
Index: icu/source/layout/Features.cpp
===================================================================
--- icu.orig/source/layout/Features.cpp
+++ icu/source/layout/Features.cpp
@@ -15,6 +15,9 @@ U_NAMESPACE_BEGIN
 
 LEReferenceTo<FeatureTable> FeatureListTable::getFeatureTable(const LETableReference &base, le_uint16 featureIndex, LETag *featureTag, LEErrorCode &success) const
 {
+    LEReferenceToArrayOf<FeatureRecord>
+        featureRecordArrayRef(base, success, featureRecordArray, featureIndex);
+
   if (featureIndex >= SWAPW(featureCount) || LE_FAILURE(success)) {
     return LEReferenceTo<FeatureTable>();
   }
Index: icu/source/layout/LigatureSubstSubtables.cpp
===================================================================
--- icu.orig/source/layout/LigatureSubstSubtables.cpp
+++ icu/source/layout/LigatureSubstSubtables.cpp
@@ -27,6 +27,9 @@ le_uint32 LigatureSubstitutionSubtable::
             Offset ligTableOffset = SWAPW(ligSetTable->ligatureTableOffsetArray[lig]);
             const LigatureTable *ligTable = (const LigatureTable *) ((char *)ligSetTable + ligTableOffset);
             le_uint16 compCount = SWAPW(ligTable->compCount) - 1;
+            LEReferenceToArrayOf<TTGlyphID>
+                componentArrayRef(base, success, ligTable->componentArray, compCount);
+            if (LE_FAILURE(success)) { return 0; }
             le_int32 startPosition = glyphIterator->getCurrStreamPosition();
             TTGlyphID ligGlyph = SWAPW(ligTable->ligGlyph);
             le_uint16 comp;
Index: icu/source/layout/MultipleSubstSubtables.cpp
===================================================================
--- icu.orig/source/layout/MultipleSubstSubtables.cpp
+++ icu/source/layout/MultipleSubstSubtables.cpp
@@ -35,6 +35,8 @@ le_uint32 MultipleSubstitutionSubtable::
 
     le_int32 coverageIndex = getGlyphCoverage(base, glyph, success);
     le_uint16 seqCount = SWAPW(sequenceCount);
+    LEReferenceToArrayOf<Offset>
+        sequenceTableOffsetArrayRef(base, success, sequenceTableOffsetArray, seqCount);
 
     if (coverageIndex >= 0 && coverageIndex < seqCount) {
         Offset sequenceTableOffset = SWAPW(sequenceTableOffsetArray[coverageIndex]);
