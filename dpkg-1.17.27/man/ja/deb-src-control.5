.\" dpkg manual page - deb-src-control(5)
.\"
.\" Copyright 息 2010 Oxan van Leeuwen <oxan@oxanvanleeuwen.nl>
.\" Copyright 息 2011 Rapha谷l Hertzog <hertzog@debian.org>
.\" Copyright 息 2011-2013 Guillem Jover <guillem@debian.org>
.\"
.\" This is free software; you can redistribute it and/or modify
.\" it under the terms of the GNU General Public License as published by
.\" the Free Software Foundation; either version 2 of the License, or
.\" (at your option) any later version.
.\"
.\" This is distributed in the hope that it will be useful,
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\" GNU General Public License for more details.
.\"
.\" You should have received a copy of the GNU General Public License
.\" along with this program.  If not, see <https://www.gnu.org/licenses/>.
.
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH deb\-src\-control 5 2013\-12\-20 "Debian Project" Debian
.SH 名前
deb\-src\-control \- Debian ソースパッケージのマスタ制御ファイルのフォーマット
.
.SH 書式
control
.
.SH 説明
Debian の各ソースパッケージには、マスタとなる "control" ファイルがある。ファイルには、空白行で区切られた最低 2
つの段落が含まれる。最初の段落には、通常ソースパッケージに関するすべての情報が列挙されている。以降の段落は、各々が 1
つのバイナリパッケージに関する設定となる。各段落は、最低 1 つのフィールドからなる。フィールドは Package やSection
(大文字小文字の区別なし) といったフィールド名から始まり、コロンの後にフィールドの本体 (値)
が続き、改行で終わる。フィールドは複数行にまたがっても構わないが、フィールド名を含まない追加の行は、最低 1
つのスペースから始まる必要がある。通常、複数行にまたがるフィールドの本体は、ツールによって 1行にまとめられる (ただし、以下で説明する
\fBDescription\fP フィールドは例外である)。空行を追加したい場合は、スペースに続けてドットを 1 つだけ記述する。\fB'#'\fP
で始まる行はコメントとして扱われる。
.
.SH "SOURCE フィールド"
.TP 
\fBSource:\fP \fIソースパッケージ名\fP (必須)
このフィールドの値がソースパッケージ名となる。これは debian/changelog
ファイル内のソースパッケージ名と合致させるべきである。パッケージ名には、小文字(a\-z)、数字 (0\-9)、プラス (+)、マイナス (\-)
記号とピリオド (.) のみを含めることができる。パッケージ名は最低 2 文字以上の長さとし、英数字で始めなければならない。

.TP 
\fBMaintainer:\fP \fIfullname\-email\fP (必須)
`Joe Bloggs <jbloggs@foo.com>'
形式で設定すること。パッケージ化されたソフトウェアの開発者や元々のパッケージ作成者ではなく、*このパッケージ* の現在のメンテナの情報を記載する。

.TP 
\fBUploaders:\fP\fI fullname\-email\fP
パッケージの共同メンテナの名前と電子メールアドレスを Maintainer
フィールドと同じ形式で列挙する。共同メンテナが複数人いる場合はコンマで区切ること。

.TP 
\fBStandards\-Version:\fP\fI バージョン文字列\fP
このパッケージが準拠した標準 (\fBdebian\-policy\fP パッケージに含まれる Debian Policy Manual
と関連ドキュメントから構成される) の最新バージョンを示す。

.TP 
\fBHomepage:\fP\fI url\fP
アップストリームのプロジェクトのホームページ URL。

.TP 
\fBBugs:\fP\fI url\fP
パッケージのバグトラッキングシステムの \fIurl\fP。現在使われている形式は、\fBdebbugs://bugs.debian.org\fP のような
\fIbts\-type\fP\fB://\fP\fIbts_address\fP 形式である。このフィールドは一般的に必要とされない。

.TP 
\fBVcs\-Arch:\fP\fI url\fP
.TQ
\fBVcs\-Bzr:\fP\fI url\fP
.TQ
\fBVcs\-Cvs:\fP\fI url\fP
.TQ
\fBVcs\-Darcs:\fP\fI url\fP
.TQ
\fBVcs\-Git:\fP\fI url\fP
.TQ
\fBVcs\-Hg:\fP\fI url\fP
.TQ
\fBVcs\-Mtn:\fP\fI url\fP
.TQ
\fBVcs\-Svn:\fP\fI url\fP
このパッケージの管理に用いられているバージョン管理システムのリポジトリ \fIurl\fP。現在サポートされているのは、\fBArch\fP, \fBBzr\fP
(Bazaar), \fBCvs\fP, \fBDarcs\fP, \fBGit\fP, \fBHg\fP(Mercurial), \fBMtn\fP (Monotone),
\fBSvn\fP (Subversion) である。通常、このフィールドは、main ブランチや trunk といった最新版のパッケージを示している。

.TP 
\fBVcs\-Browser:\fP\fI url\fP
バージョン管理システムのリポジトリを閲覧するための Web インタフェースの \fIurl\fP。

.TP 
\fBOrigin:\fP\fI ディストリビューション名\fP
パッケージの起源となったディストリビューション名。このフィールドは、通常不要である。

.TP 
\fBSection:\fP\fI セクション\fP
パッケージによりインストールされるソフトウェアがどのセクションの分類に属するかを示すフィールドである。一般的なセクションには "utils" や
"net"、"mail"、"text"、"x11" などがある。

.TP 
\fBPriority:\fP\fI priority\fP
システム全体からみたこのパッケージの重要度を示す。一般的に使われる priority には
"required"、"standard"、"optional"、"extra" などがある。

Debian では、\fBSection\fP と \fBPriority\fP フィールドで使える値がポリシーマニュアルで定められている。最新の
\fBdebian\-policy\fP パッケージから一覧を取得できる。

.TP 
\fBBuild\-Depends:\fP\fI パッケージのリスト\fP
ソースパッケージをビルドするためにインストールと設定が必要なパッケージのリスト。このリストで定義した依存関係は、\fBBuild\-Depends\-Arch\fP
と \fBBuild\-Depends\-Indep\fP の両方で行った定義と同じ効力を持つだけでなく、ソースのみのビルドにおいても効力を持つ。

.TP 
\fBBuild\-Depends\-Arch:\fP\fI パッケージのリスト\fP
Same as \fBBuild\-Depends\fP, but they are only needed when building the
architecture dependent packages. The \fBBuild\-Depends\fP are also installed in
this case. This field is supported since dpkg 1.16.4; in order to build with
older dpkg versions, \fBBuild\-Depends\fP should be used instead.

.TP 
\fBBuild\-Depends\-Indep:\fP\fI パッケージのリスト\fP
\fBBuild\-Depends\fP と同様だが、アーキテクチャ非依存なパッケージをビルドする場合にのみ必要とされるもの。\fBBuild\-Depends\fP
もインストールされる。

.TP 
\fBBuild\-Conflicts:\fP\fI パッケージのリスト\fP
ビルドシステムの動作に影響するなど、パッケージがビルドされる時にインストールされていることが好ましくないパッケージのリスト。このリストで定義した依存関係は、\fBBuild\-Conflicts\-Arch\fP
と \fBBuild\-Conflicts\-Indep\fP の両方で行った定義と同じ効力を持つだけでなく、ソースのみのビルドにおいても効力を持つ。

.TP 
\fBBuild\-Conflicts\-Arch:\fP\fI パッケージのリスト\fP
Same as \fBBuild\-Conflicts\fP, but only when building the architecture
dependent packages. This field is supported since dpkg 1.16.4; in order to
build with older dpkg versions, \fBBuild\-Conflicts\fP should be used instead.

.TP 
\fBBuild\-Conflicts\-Indep:\fP\fI パッケージのリスト\fP
Build\-Conflicts と同様だが、アーキテクチャ非依存なパッケージをビルドする場合にのみ影響するもの。

.PP
The syntax of the \fBBuild\-Depends\fP, \fBBuild\-Depends\-Arch\fP and
\fBBuild\-Depends\-Indep\fP fields is a list of groups of alternative
packages. Each group is a list of packages separated by vertical bar (or
"pipe") symbols, "|". The groups are separated by commas. Commas are to be
read as "AND", and pipes as "OR", with pipes binding more tightly. Each
package name is optionally followed by a version number specification in
parentheses, an architecture specification in square brackets, and a
restriction formula consisting of one or more lists of profile names in
angle brackets.

The syntax of the \fBBuild\-Conflicts\fP, \fBBuild\-Conflicts\-Arch\fP and
\fBBuild\-Conflicts\-Indep\fP fields is a list of comma\-separated package names,
where the comma is read as an "AND". Specifying alternative packages using a
"pipe" is not supported.  Each package name is optionally followed by a
version number specification in parentheses, an architecture specification
in square brackets, and a restriction formula consisting of one or more
lists of profile names in angle brackets.

バージョン番号が ">>" で始まる場合は、それより新しいバージョンすべてにマッチする。バージョン番号には、(ハイフンに続けて)
Debian パッケージリビジョンを指定することもできるが、省略しても構わない。「より新しい」を意味する
">>"、「より古い」を意味する "<<"、「同じか新しい」を意味する ">="、「同じか古い」を意味する
"<="、「同じ」を意味する "=" を使用できる。

An architecture specification consists of one or more architecture names,
separated by whitespace. Exclamation marks may be prepended to each of the
names, meaning "NOT".

A restriction formula consists of one or more restriction lists, separated
by whitespace. Each restriction list is enclosed in angle brackets. Items in
the restriction list are build profile names, separated by whitespace and
can be prefixed with an exclamation mark, meaning "NOT". A restriction
formula represents a disjunctive normal form expression.

\fBbuild\-essential\fP
に含まれるパッケージとの依存関係は省略できること、これらのパッケージと競合するようなビルド設定は禁止されている点に留意すること。該当するパッケージの一覧は、build\-essential
パッケージに含まれている。


.SH "BINARY フィールド"

.LP
\fBPriority\fP, \fBSection\fP, \fBHomepage\fP フィールドは、BINARY
段落に設定することで、ソースパッケージで定義されたグローバルな値を上書きすることも可能である点に留意すること。

.TP 
\fBPackage:\fP \fIバイナリパッケージ名\fP (必須)
このフィールドはバイナリパッケージ名の指定に用いられる。ソースパッケージ名と同様の制約が適用される。

.TP 
\fBArchitecture:\fP \fIarch\fP|\fBall\fP|\fBany\fP (必須)
アーキテクチャ (Architecture) は、このパッケージが動作するハードウェア種別を指定する。すべてのアーキテクチャで動作するパッケージは、値
\fBany\fP を使用する。シェルスクリプトや Perl スクリプト、ドキュメントといったアーキテクチャ非依存のパッケージは、値 \fBall\fP
を使用する。パッケージのアーキテクチャを制約したい場合は、アーキテクチャ名をスペースで区切って指定する。アーキテクチャのワイルドカードを使用することも可能である
(詳細は \fBdpkg\-architecture\fP(1) を参照のこと)。

.TP 
\fBPackage\-Type:\fP \fBdeb\fP|\fBudeb\fP
このフィールドは、パッケージのタイプを指定する。"udeb" は debian installer
が使用するサイズの制約があるパッケージである。"deb"
はデフォルトの値であり、フィールドが存在しなかった場合に仮定される値である。将来的にはこれ以外のタイプが追加されるかもしれない。

.TP 
\fBSubarchitecture:\fP\fI value\fP
.TQ
\fBKernel\-Version:\fP\fI value\fP
.TQ
\fBInstaller\-Menu\-Item:\fP\fI value\fP
これらのフィールドは、debian\-installer
によって用いられるもので、通常は不要である。詳細については、\fBdebian\-installer\fP
パッケージに含まれている/usr/share/doc/debian\-installer/devel/modules.txt を参照のこと

.TP 
\fBEssential:\fP \fByes\fP|\fBno\fP
.TQ
\fBMulti\-Arch:\fP \fBsame\fP|\fBforeign\fP|\fBallowed\fP|\fBno\fP
.TQ
\fBTag:\fP\fI タグのリスト\fP
.TQ
\fBDescription:\fP \fI短い説明\fP (必須)
これらのフィールドは、バイナリパッケージの control ファイルにそのままコピーされるため、\fBdeb\-control\fP(5)
のマニュアルページで解説されている。

.TP 
\fBDepends:\fP\fI パッケージのリスト\fP
.TQ
\fBPre\-Depends:\fP\fI パッケージのリスト\fP
.TQ
\fBRecommends:\fP\fI パッケージのリスト\fP
.TQ
\fBSuggests:\fP\fI パッケージのリスト\fP
.TQ
\fBBreaks:\fP\fI パッケージのリスト\fP
.TQ
\fBEnhances:\fP\fI パッケージのリスト\fP
.TQ
\fBReplaces:\fP\fI パッケージのリスト\fP
.TQ
\fBConflicts:\fP\fI パッケージのリスト\fP
.TQ
\fBProvides:\fP\fI パッケージのリスト\fP
.TQ
\fBBuilt\-Using:\fP\fI パッケージのリスト\fP
これらのフィールドは、パッケージ間の関連性を指定するものであり、\fBdeb\-control\fP(5) マニュアルページと \fBdebian\-policy\fP
パッケージで説明されている。

.SH ユーザ定義フィールド
control
ファイルに、ユーザが定義する追加のフィールドを含めることもできる。ツール類は、これらのフィールドを無視する。フィールドをバイナリパッケージなどの出力ファイルにもコピーしたい場合は、X
に続き、文字 BCS から 1 文字以上とハイフンとをつなげた custom naming scheme を使用する必要がある。文字 B
を使用する場合、フィールドはバイナリパッケージの control ファイルに複製される。\fBdeb\-control\fP(5) も参照のこと。文字 S
の場合は \fBdpkg\-source\fP(1) によって作成されるソースパッケージ内の control ファイルに、文字 C
の場合はアップロードの制御ファイル (.changes ファイル) に、各々複製される。フィールドが出力ファイルにコピーされる時に、X[BCS]\-
というプレフィックスは削除されることに注意。例えば \fBXC\-Approved\-By\fP というフィールドは changes ファイルでは
\fBApproved\-By\fPとなり、バイナリやソースパッケージ内 の control ファイルには複製されない点に留意すること。

Take into account that these user\-defined fields will be using the global
namespace, which might at some point in the future collide with officially
recognized fields. To avoid such potential situation you can prefix those
fields with \fBPrivate\-\fP, such as \fBXB\-Private\-New\-Field\fP.

.SH 例
.\" .RS
.nf
# Comment
Source: dpkg
Section: admin
Priority: required
Maintainer: Dpkg Developers <debian\-dpkg@lists.debian.org>
# this field is copied to the binary and source packages
XBS\-Upstream\-Release\-Status: stable
Homepage: https://wiki.debian.org/Teams/Dpkg
Vcs\-Browser: https://anonscm.debian.org/cgit/dpkg/dpkg.git
Vcs\-Git: git://anonscm.debian.org/dpkg/dpkg.git
Standards\-Version: 3.7.3
Build\-Depends: pkg\-config, debhelper (>= 4.1.81),
 libselinux1\-dev (>= 1.28\-4) [!linux\-any]

Package: dpkg\-dev
Section: utils
Priority: optional
Architecture: all
# this is a custom field in the binary package
XB\-Mentoring\-Contact: Raphael Hertzog <hertzog@debian.org>
Depends: dpkg (>= 1.14.6), perl5, perl\-modules, cpio (>= 2.4.2\-2),
 bzip2, lzma, patch (>= 2.2\-1), make, binutils, libtimedate\-perl
Recommends: gcc | c\-compiler, build\-essential
Suggests: gnupg, debian\-keyring
Conflicts: dpkg\-cross (<< 2.0.0), devscripts (<< 2.10.26)
Replaces: manpages\-pl (<= 20051117\-1)
Description: Debian package development tools
 This package provides the development tools (including dpkg\-source)
 required to unpack, build and upload Debian source packages.
 .
 Most Debian source packages will require additional tools to build;
 for example, most packages need make and the C compiler gcc.
.fi


.\" .RE
.SH 関連項目
\fBdeb\-control\fP(5), \fBdeb\-version\fP(5), \fBdpkg\-source\fP(1)
.SH 翻訳者
高橋 基信 <monyo@monyo.com>.
喜瀬 浩 <kise@fuyuneko.jp>.
関戸 幸一 <sekido@mbox.kyoto-inet.or.jp>.
鍋谷 栄展 <nabe@debian.or.jp>.
倉澤 望 <nabetaro@debian.or.jp>.
石川 睦 <ishikawa@linux.or.jp>.
鵜飼 文敏 <ukai@debian.or.jp>.
中野 武雄 <nakano@apm.seikei.ac.jp>.
.SH 翻訳校正
Debian JP Documentation ML <debian-doc@debian.or.jp>.
