Index: Linux-PAM/doc/modules/pam_unix.sgml
===================================================================
RCS file: /afs/sipb/project/debian/cvs/pam/Linux-PAM/doc/modules/pam_unix.sgml,v
retrieving revision 1.3
diff -u -r1.3 pam_unix.sgml
--- Linux-PAM/doc/modules/pam_unix.sgml	15 Sep 2002 20:17:58 -0000	1.3
+++ Linux-PAM/doc/modules/pam_unix.sgml	15 Sep 2002 20:45:25 -0000
@@ -174,6 +174,9 @@
 <tt/bigcrypt/;
 <tt/shadow/;
 <tt/nis/;
+<tt/min/;
+<tt/max/;
+<tt/obscure/;
 <tt/remember/
 
 <tag><bf>Description:</bf></tag>
@@ -227,6 +230,45 @@
 recent passwords to save for each user. These are saved in
 <tt>/etc/security/opasswd</tt> in order to force password change history
 and keep the user from alternating between the same password too frequently.
+
+<p>
+The <tt/min/ and <tt/max/ options allow control over the length of the
+password. These have a hard coded default of 1 and 8. The values are
+inclusive.
+
+<p>
+The <tt/obscure/ option enables some extra checks on the password. These
+is taken after the same obscure checks enabled in the original shadow
+package. This works very similar to the pam_cracklib module and implements
+these checks (it does not implement dictionary checks):
+
+<itemize>
+
+<item> <bf/Palindrome/ -
+
+Is the new password a palindrome of the old one? A palindrome is where the
+words read the same backwards and forwards (eg. madam and radar).
+
+<item> <bf/Case Change Only/ -
+
+Is the new password the the old one with only a change of case?
+
+<item> <bf/Similar/ -
+
+Is the new password too much like the old one?
+
+<item> <bf/Simple/ -
+
+Is the new password too small? This is based on the length of the
+password and the number of different types of characters used (ie.alpha,
+numeric...).
+
+<item> <bf/Rotated/ -
+
+Is the new password a rotated version of the old password (eg. "billy" and
+"illyb")?
+
+</itemize>
 
 <tag><bf>Examples/suggested usage:</bf></tag>
 
Index: Linux-PAM/modules/pam_unix/Makefile
===================================================================
RCS file: /afs/sipb/project/debian/cvs/pam/Linux-PAM/modules/pam_unix/Makefile,v
retrieving revision 1.3
diff -u -r1.3 Makefile
--- Linux-PAM/modules/pam_unix/Makefile	15 Sep 2002 20:18:00 -0000	1.3
+++ Linux-PAM/modules/pam_unix/Makefile	15 Sep 2002 20:45:25 -0000
@@ -57,7 +57,7 @@
 LIBOBJS = $(addprefix static/,$(LIBOBJ))
 
 PLUS = md5_good.o md5_broken.o md5_crypt_good.o md5_crypt_broken.o \
-		yppasswd_xdr.o bigcrypt.o
+		yppasswd_xdr.o bigcrypt.o obscure.o
 
 ifdef DYNAMIC
 LIBSHARED = pam_unix.so
Index: Linux-PAM/modules/pam_unix/pam_unix_acct.c
===================================================================
RCS file: /afs/sipb/project/debian/cvs/pam/Linux-PAM/modules/pam_unix/pam_unix_acct.c,v
retrieving revision 1.3
diff -u -r1.3 pam_unix_acct.c
--- Linux-PAM/modules/pam_unix/pam_unix_acct.c	15 Sep 2002 20:18:01 -0000	1.3
+++ Linux-PAM/modules/pam_unix/pam_unix_acct.c	15 Sep 2002 20:45:25 -0000
@@ -124,7 +124,7 @@
 
 	} else if (!strcmp( pwent->pw_passwd, "x" )) {
 		spent = getspnam(uname);
-	} else {
+	} else if ((spent = getspnam(uname)) == NULL) {
 		return PAM_SUCCESS;
 	}
 
@@ -134,7 +134,7 @@
 	curdays = time(NULL) / (60 * 60 * 24);
 	D(("today is %d, last change %d", curdays, spent->sp_lstchg));
 	if ((curdays > spent->sp_expire) && (spent->sp_expire != -1)
-	    && (spent->sp_lstchg != 0)) {
+	    && (spent->sp_expire != 0) && (spent->sp_lstchg != 0)) {
 		_log_err(LOG_NOTICE, pamh
 			 ,"account %s has expired (account expired)"
 			 ,uname);
@@ -144,8 +144,8 @@
 		return PAM_ACCT_EXPIRED;
 	}
 	if ((curdays > (spent->sp_lstchg + spent->sp_max + spent->sp_inact))
-	    && (spent->sp_max != -1) && (spent->sp_inact != -1)
-	    && (spent->sp_lstchg != 0)) {
+	    && (spent->sp_max != -1) && (spent->sp_max != 0) && (spent->sp_inact != -1)
+	    && (spent->sp_inact != 0) && (spent->sp_lstchg != 0)) {
 		_log_err(LOG_NOTICE, pamh
 		    ,"account %s has expired (failed to change password)"
 			 ,uname);
@@ -164,7 +164,8 @@
 		D(("need a new password"));
 		return PAM_NEW_AUTHTOK_REQD;
 	}
-	if (((spent->sp_lstchg + spent->sp_max) < curdays) && (spent->sp_max != -1)) {
+	if (((spent->sp_lstchg + spent->sp_max) < curdays) && (spent->sp_max != -1)
+	    && (spent->sp_max != 0)) {
 		_log_err(LOG_DEBUG, pamh
 			 ,"expired password for user %s (password aged)"
 			 ,uname);
@@ -174,7 +175,8 @@
 		return PAM_NEW_AUTHTOK_REQD;
 	}
 	if ((curdays > (spent->sp_lstchg + spent->sp_max - spent->sp_warn))
-	    && (spent->sp_max != -1) && (spent->sp_warn != -1)) {
+	    && (spent->sp_max != -1) && (spent->sp_warn != -1)
+	    && (spent->sp_max != 0) && (spent->sp_warn != 0)) {
 		daysleft = (spent->sp_lstchg + spent->sp_max) - curdays;
 		_log_err(LOG_DEBUG, pamh
 			 ,"password for user %s will expire in %d days"
Index: Linux-PAM/modules/pam_unix/pam_unix_passwd.c
===================================================================
RCS file: /afs/sipb/project/debian/cvs/pam/Linux-PAM/modules/pam_unix/pam_unix_passwd.c,v
retrieving revision 1.5
diff -u -r1.5 pam_unix_passwd.c
--- Linux-PAM/modules/pam_unix/pam_unix_passwd.c	15 Sep 2002 20:18:01 -0000	1.5
+++ Linux-PAM/modules/pam_unix/pam_unix_passwd.c	15 Sep 2002 20:50:41 -0000
@@ -118,6 +118,9 @@
 #define OPW_TMPFILE		"/etc/security/nopasswd"
 #define OLD_PASSWORDS_FILE	"/etc/security/opasswd"
 
+extern const char *obscure_msg(const char *, const char *, const struct passwd *,
+			       unsigned int);
+
 /*
  * i64c - convert an integer to a radix 64 character
  */
@@ -427,8 +430,10 @@
 	return PAM_AUTHTOK_ERR;
     }
 
-    chown(SH_TMPFILE, 0, 0);
-    chmod(SH_TMPFILE, 0600);
+	/* Debian's shadow file is group shadow, and readable by group,
+	   shouldn't all of them be this way? */
+	chown(SH_TMPFILE, 0, 42);
+	chmod(SH_TMPFILE, 0640);
     stmpent = fgetspent(opwfile);
     while (stmpent) {
 
@@ -538,6 +543,8 @@
 #ifdef DEBUG
 		sleep(5);
 #endif
+		_log_err(LOG_NOTICE, "NIS Password for %s was changed on %s", forwho, master);
+
 		return retval;
 	}
 	/* first, save old password */
@@ -552,6 +559,9 @@
 		retval = _update_passwd(pamh, forwho, towhat);
 	}
 
+	if (retval == PAM_SUCCESS)
+	    _log_err(LOG_NOTICE, "Password for %s was changed", forwho);
+
 	return retval;
 }
 
@@ -654,18 +664,21 @@
 			return PAM_AUTHTOK_ERR;
 		}
 	}
+
 	if (off(UNIX__IAMROOT, ctrl)) {
 #ifdef USE_CRACKLIB
 		remark = FascistCheck(pass_new, CRACKLIB_DICTS);
 		D(("called cracklib [%s]", remark));
-#else
-		if (strlen(pass_new) < 6)
-			remark = "You must choose a longer password";
-		D(("lenth check [%s]", remark));
 #endif
-		if (on(UNIX_REMEMBER_PASSWD, ctrl))
+		if (!remark && on(UNIX_REMEMBER_PASSWD, ctrl))
 			if ((retval = check_old_password(user, pass_new)) != PAM_SUCCESS)
 				remark = "Password has been already used. Choose another.";
+
+		if (!remark && pass_old != NULL) { /* only check if we don't already have a failure */
+		    struct passwd *pwd;
+		    pwd = getpwnam(user);
+		    remark = (char *)obscure_msg(pass_old,pass_new,pwd,ctrl); /* do obscure checks */
+		}
 	}
 	if (remark) {
 		_make_remark(pamh, ctrl, PAM_ERROR_MSG, remark);
Index: Linux-PAM/modules/pam_unix/support.c
===================================================================
RCS file: /afs/sipb/project/debian/cvs/pam/Linux-PAM/modules/pam_unix/support.c,v
retrieving revision 1.4
diff -u -r1.4 support.c
--- Linux-PAM/modules/pam_unix/support.c	15 Sep 2002 20:18:01 -0000	1.4
+++ Linux-PAM/modules/pam_unix/support.c	15 Sep 2002 20:45:25 -0000
@@ -26,6 +26,9 @@
 extern char *crypt(const char *key, const char *salt);
 extern char *bigcrypt(const char *key, const char *salt);
 
+unsigned int pass_min_len = 1;
+unsigned int pass_max_len = 8;
+
 /* syslogging function for errors and other information */
 
 void _log_err(int err, pam_handle_t *pamh, const char *format,...)
@@ -171,6 +174,7 @@
 		D(("SILENT"));
 		set(UNIX__QUIET, ctrl);
 	}
+
 	/* now parse the arguments to this module */
 
 	while (argc-- > 0) {
@@ -179,10 +183,9 @@
 		D(("pam_unix arg: %s", *argv));
 
 		for (j = 0; j < UNIX_CTRLS_; ++j) {
-			if (unix_args[j].token
-			    && !strncmp(*argv, unix_args[j].token, strlen(unix_args[j].token))) {
+			if (unix_args[j].token &&
+			    !strncmp(*argv, unix_args[j].token, strlen(unix_args[j].token)))
 				break;
-			}
 		}
 
 		if (j >= UNIX_CTRLS_) {
@@ -192,16 +195,21 @@
 			ctrl &= unix_args[j].mask;	/* for turning things off */
 			ctrl |= unix_args[j].flag;	/* for turning things on  */
 
-			if (remember != NULL) {
-				if (j == UNIX_REMEMBER_PASSWD) {
-					*remember = strtol(*argv + 9, NULL, 10);
-					if ((*remember == LONG_MIN) || (*remember == LONG_MAX))
-						*remember = -1;
-					if (*remember > 400)
-						*remember = 400;
-				}
+			/* special cases */
+			if (remember != NULL && j == UNIX_REMEMBER_PASSWD) {
+				*remember = strtol(*argv + 9, NULL, 10);
+				if ((*remember == LONG_MIN) || (*remember == LONG_MAX))
+					*remember = -1;
+				if (*remember > 400)
+					*remember = 400;
+			} else if (j == UNIX_MAX_PASS_LEN) {
+				pass_max_len = atoi(*argv + 4);
+			} else if (j == UNIX_MIN_PASS_LEN) {
+				pass_min_len = atoi(*argv + 4);
 			}
 		}
+		if (pass_min_len > pass_max_len)
+		    pass_min_len = pass_max_len;
 
 		++argv;		/* step to next argument */
 	}
@@ -603,6 +611,8 @@
 		} else if (!p) {
 				retval = PAM_AUTH_ERR;
 		} else {
+			/* Hack off sysv pw aging foo */
+			if (strrchr(salt, ',')) *(strrchr(salt, ',')) = '\0';
 			if (!strncmp(salt, "$1$", 3)) {
 				pp = Goodcrypt_md5(p, salt);
 				if (strcmp(pp, salt) != 0) {
Index: Linux-PAM/modules/pam_unix/support.h
===================================================================
RCS file: /afs/sipb/project/debian/cvs/pam/Linux-PAM/modules/pam_unix/support.h,v
retrieving revision 1.3
diff -u -r1.3 support.h
--- Linux-PAM/modules/pam_unix/support.h	15 Sep 2002 20:18:01 -0000	1.3
+++ Linux-PAM/modules/pam_unix/support.h	15 Sep 2002 20:45:25 -0000
@@ -80,8 +80,12 @@
 #define UNIX_BIGCRYPT            18	/* use DEC-C2 crypt()^x function */
 #define UNIX_LIKE_AUTH           19	/* need to auth for setcred to work */
 #define UNIX_REMEMBER_PASSWD     20	/* Remember N previous passwords */
+#define UNIX_MAX_PASS_LEN        21	/* Max length for password */
+#define UNIX_MIN_PASS_LEN        22	/* Min length for password */
+#define UNIX_NOOBSCURE_CHECKS    23     /* internal */
+#define UNIX_OBSCURE_CHECKS      24	/* enable obscure checks on passwords */
 /* -------------- */
-#define UNIX_CTRLS_              21	/* number of ctrl arguments defined */
+#define UNIX_CTRLS_              25	/* number of ctrl arguments defined */
 
 
 static const UNIX_Ctrls unix_args[UNIX_CTRLS_] =
@@ -89,30 +93,34 @@
 /* symbol                  token name          ctrl mask             ctrl     *
  * ----------------------- ------------------- --------------------- -------- */
 
-/* UNIX__OLD_PASSWD */     {NULL,              _ALL_ON_,                  01},
-/* UNIX__VERIFY_PASSWD */  {NULL,              _ALL_ON_,                  02},
-/* UNIX__IAMROOT */        {NULL,              _ALL_ON_,                  04},
-/* UNIX_AUDIT */           {"audit",           _ALL_ON_,                 010},
-/* UNIX_USE_FIRST_PASS */  {"use_first_pass",  _ALL_ON_^(060),           020},
-/* UNIX_TRY_FIRST_PASS */  {"try_first_pass",  _ALL_ON_^(060),           040},
-/* UNIX_NOT_SET_PASS */    {"not_set_pass",    _ALL_ON_,                0100},
-/* UNIX__PRELIM */         {NULL,              _ALL_ON_^(0600),         0200},
-/* UNIX__UPDATE */         {NULL,              _ALL_ON_^(0600),         0400},
-/* UNIX__NONULL */         {NULL,              _ALL_ON_,               01000},
-/* UNIX__QUIET */          {NULL,              _ALL_ON_,               02000},
-/* UNIX_USE_AUTHTOK */     {"use_authtok",     _ALL_ON_,               04000},
-/* UNIX_SHADOW */          {"shadow",          _ALL_ON_,              010000},
-/* UNIX_MD5_PASS */        {"md5",             _ALL_ON_^(0400000),    020000},
-/* UNIX__NULLOK */         {"nullok",          _ALL_ON_^(01000),           0},
-/* UNIX_DEBUG */           {"debug",           _ALL_ON_,              040000},
-/* UNIX_NODELAY */         {"nodelay",         _ALL_ON_,             0100000},
-/* UNIX_NIS */             {"nis",             _ALL_ON_^(010000),    0200000},
-/* UNIX_BIGCRYPT */        {"bigcrypt",        _ALL_ON_^(020000),    0400000},
-/* UNIX_LIKE_AUTH */       {"likeauth",        _ALL_ON_,            01000000},
-/* UNIX_REMEMBER_PASSWD */ {"remember=",       _ALL_ON_,            02000000},
+/* UNIX__OLD_PASSWD */     {NULL,              _ALL_ON_,                  0x1},
+/* UNIX__VERIFY_PASSWD */  {NULL,              _ALL_ON_,                  0x2},
+/* UNIX__IAMROOT */        {NULL,              _ALL_ON_,                  0x4},
+/* UNIX_AUDIT */           {"audit",           _ALL_ON_,                 0x10},
+/* UNIX_USE_FIRST_PASS */  {"use_first_pass",  _ALL_ON_^(0x60),          0x20},
+/* UNIX_TRY_FIRST_PASS */  {"try_first_pass",  _ALL_ON_^(0x60),          0x40},
+/* UNIX_NOT_SET_PASS */    {"not_set_pass",    _ALL_ON_,                0x100},
+/* UNIX__PRELIM */         {NULL,              _ALL_ON_^(0x600),        0x200},
+/* UNIX__UPDATE */         {NULL,              _ALL_ON_^(0x600),        0x400},
+/* UNIX__NONULL */         {NULL,              _ALL_ON_,               0x1000},
+/* UNIX__QUIET */          {NULL,              _ALL_ON_,               0x2000},
+/* UNIX_USE_AUTHTOK */     {"use_authtok",     _ALL_ON_,               0x4000},
+/* UNIX_SHADOW */          {"shadow",          _ALL_ON_,              0x10000},
+/* UNIX_MD5_PASS */        {"md5",             _ALL_ON_^(0x400000),   0x20000},
+/* UNIX__NULLOK */         {"nullok",          _ALL_ON_^(0x1000),         0x0},
+/* UNIX_DEBUG */           {"debug",           _ALL_ON_,              0x40000},
+/* UNIX_NODELAY */         {"nodelay",         _ALL_ON_,             0x100000},
+/* UNIX_NIS */             {"nis",             _ALL_ON_^(0x10000),   0x200000},
+/* UNIX_BIGCRYPT */        {"bigcrypt",        _ALL_ON_^(0x20000),   0x400000},
+/* UNIX_LIKE_AUTH */       {"likeauth",        _ALL_ON_,            0x1000000},
+/* UNIX_REMEMBER_PASSWD */ {"remember=",       _ALL_ON_,            0x2000000},
+/* UNIX_MAX_PASS_LEN */    {"max=",            _ALL_ON_,            0x4000000},
+/* UNIX_MIN_PASS_LEN */    {"min=",            _ALL_ON_,           0x10000000},
+/* UNIX_NOOBSCURE_CHECKS */{NULL,              _ALL_ON_,           0x20000000},
+/* UNIX_OBSCURE_CHECKS */  {"obscure",         _ALL_ON_^(0x20000000),       0},
 };
 
-#define UNIX_DEFAULTS  (unix_args[UNIX__NONULL].flag)
+#define UNIX_DEFAULTS  (unix_args[UNIX__NONULL].flag | unix_args[UNIX_NOOBSCURE_CHECKS].flag)
 
 
 /* use this to free strings. ESPECIALLY password strings */
@@ -139,6 +147,9 @@
 			,const char *prompt2
 			,const char *data_name
 			,const char **pass);
+
+extern unsigned int pass_min_len;
+extern unsigned int pass_max_len;
 
 #endif /* _PAM_UNIX_SUPPORT_H */
 
Index: Linux-PAM/modules/pam_unix/unix_chkpwd.c
===================================================================
RCS file: /afs/sipb/project/debian/cvs/pam/Linux-PAM/modules/pam_unix/unix_chkpwd.c,v
retrieving revision 1.6
diff -u -r1.6 unix_chkpwd.c
--- Linux-PAM/modules/pam_unix/unix_chkpwd.c	15 Sep 2002 20:18:01 -0000	1.6
+++ Linux-PAM/modules/pam_unix/unix_chkpwd.c	15 Sep 2002 20:45:25 -0000
@@ -136,6 +136,13 @@
 	if (strlen(salt) == 0)
 		return (opt == 0) ? UNIX_FAILED : UNIX_PASSED;
 
+	/* Hack off SysVR4 password aging */
+	{
+	    char tmp;
+
+	    if (tmp == strrchr(p, ',') != NULL) tmp = '\0';
+	}
+
 	/* the moment of truth -- do we agree with the password? */
 	retval = UNIX_FAILED;
 	if (!strncmp(salt, "$1$", 3)) {
@@ -244,7 +251,7 @@
 
 	npass = read(STDIN_FILENO, option, 8);
 
-	if (npass < 0) {
+	if (npass < 0 || option == NULL || option[0] == '\0') {
 		_log_err(LOG_DEBUG, "no option supplied");
 		return UNIX_FAILED;
 	} else {
@@ -259,7 +266,7 @@
 
 	npass = read(STDIN_FILENO, pass, MAXPASS);
 
-	if (npass < 0) {	/* is it a valid password? */
+	if (npass < 0 || pass == NULL || pass[0] == '\0') {	/* is it a valid password? */
 
 		_log_err(LOG_DEBUG, "no password supplied");
 
