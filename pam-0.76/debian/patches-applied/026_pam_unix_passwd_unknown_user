Patch from Martin Schwenke <martin@meltin.net>

Index: Linux-PAM/modules/pam_unix/pam_unix_passwd.c
===================================================================
RCS file: /afs/sipb/project/debian/cvs/pam/Linux-PAM/modules/pam_unix/pam_unix_passwd.c,v
retrieving revision 1.7
diff -u -r1.7 pam_unix_passwd.c
--- Linux-PAM/modules/pam_unix/pam_unix_passwd.c	21 Sep 2002 18:33:56 -0000	1.7
+++ Linux-PAM/modules/pam_unix/pam_unix_passwd.c	21 Sep 2002 20:30:27 -0000
@@ -112,6 +112,7 @@
 #define _UNIX_NEW_AUTHTOK	"-UN*X-NEW-PASS"
 
 #define MAX_PASSWD_TRIES	3
+#define PW_FILE			"/etc/passwd"
 #define PW_TMPFILE		"/etc/npasswd"
 #define SH_TMPFILE		"/etc/nshadow"
 #define CRACKLIB_DICTS		"/usr/share/dict/cracklib_dict"
@@ -209,6 +210,21 @@
 	return master;
 }
 
+static struct passwd *_unix_getpwnam(const char *name)
+{
+	struct passwd *ent = NULL;
+	FILE *pwfile;
+
+	pwfile = fopen(PW_FILE, "r");
+	if (pwfile != NULL) {
+		ent = fgetpwent(pwfile);
+		while (ent && (strcmp(ent->pw_name, name) != 0))
+			ent = fgetpwent(pwfile);
+		fclose(pwfile);
+	}
+	return ent;
+}
+
 static int check_old_password(const char *forwho, const char *newpass)
 {
 	static char buf[16384];
@@ -317,7 +333,7 @@
     fclose(opwfile);
 
     if (!found) {
-	pwd = getpwnam(forwho);
+	pwd = _unix_getpwnam(forwho);
 	if (pwd == NULL) {
 	    err = 1;
 	} else {
@@ -351,7 +367,7 @@
 {
     struct passwd *tmpent = NULL;
     FILE *pwfile, *opwfile;
-    int err = 1;
+    int err = 1, found = 0;
     int oldmask;
 
     oldmask = umask(077);
@@ -381,6 +397,7 @@
 			
 	    tmpent->pw_passwd = assigned_passwd.charp;
 	    err = 0;
+	    found = 1;
 	}
 	if (putpwent(tmpent, pwfile)) {
 	    D(("error writing entry to password file: %s\n", strerror(errno)));
@@ -395,14 +412,14 @@
 	D(("error writing entries to password file: %s\n", strerror(errno)));
 	err = 1;
     }
-
+    
     if (!err) {
 	rename(PW_TMPFILE, "/etc/passwd");
 	_log_err(LOG_NOTICE, pamh, "password changed for %s", forwho);
 	return PAM_SUCCESS;
     } else {
 	unlink(PW_TMPFILE);
-	return PAM_AUTHTOK_ERR;
+	return found?PAM_AUTHTOK_ERR:PAM_USER_UNKNOWN;
     }
 }
 
@@ -410,7 +427,7 @@
 {
     struct spwd *spwdent = NULL, *stmpent = NULL;
     FILE *pwfile, *opwfile;
-    int err = 1;
+    int err = 1, found = 0;
     int oldmask;
 
     spwdent = getspnam(forwho);
@@ -441,6 +458,7 @@
 	    stmpent->sp_pwdp = towhat;
 	    stmpent->sp_lstchg = time(NULL) / (60 * 60 * 24);
 	    err = 0;
+	    found = 1;
 	    D(("Set password %s for %s", stmpent->sp_pwdp, forwho));
 	}
 
@@ -464,7 +482,7 @@
 	return PAM_SUCCESS;
     } else {
 	unlink(SH_TMPFILE);
-	return PAM_AUTHTOK_ERR;
+	return found?PAM_AUTHTOK_ERR:PAM_USER_UNKNOWN;
     }
 }
 
@@ -573,9 +591,7 @@
 	int retval = PAM_SUCCESS;
 
 	/* UNIX passwords area */
-	setpwent();
-	pwd = getpwnam(user);	/* Get password file entry... */
-	endpwent();
+	pwd = _unix_getpwnam(user);	/* Get password *file* entry... */
 	if (pwd == NULL)
 		return PAM_AUTHINFO_UNAVAIL;	/* We don't need to do the rest... */
 
