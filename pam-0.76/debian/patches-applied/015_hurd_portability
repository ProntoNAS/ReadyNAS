Patch from  Igor Khavkine <i_khavki@alcor.concordia.ca>Patch from
Debian bug #76119

Index: Linux-PAM/_pam_aconf.h.in
===================================================================
RCS file: /afs/sipb/project/debian/cvs/pam/Linux-PAM/_pam_aconf.h.in,v
retrieving revision 1.1.1.2
diff -u -r1.1.1.2 _pam_aconf.h.in
--- Linux-PAM/_pam_aconf.h.in	15 Sep 2002 20:08:20 -0000	1.1.1.2
+++ Linux-PAM/_pam_aconf.h.in	21 Sep 2002 18:01:40 -0000
@@ -15,6 +15,8 @@
 
 /* provide a global locking facility within libpam */
 #undef PAM_LOCKING
+#undef HAVE_TERMIOS_H
+#undef HAVE_NET_IF_H
 
 /* GNU systems as a class, all have the feature.h file */
 #undef HAVE_FEATURES_H
Index: Linux-PAM/configure.in
===================================================================
RCS file: /afs/sipb/project/debian/cvs/pam/Linux-PAM/configure.in,v
retrieving revision 1.10
diff -u -r1.10 configure.in
--- Linux-PAM/configure.in	15 Sep 2002 20:28:46 -0000	1.10
+++ Linux-PAM/configure.in	21 Sep 2002 18:01:40 -0000
@@ -235,7 +235,7 @@
 AC_HEADER_DIRENT
 AC_HEADER_STDC
 AC_HEADER_SYS_WAIT
-AC_CHECK_HEADERS(fcntl.h limits.h malloc.h sys/file.h sys/ioctl.h sys/time.h syslog.h termio.h unistd.h sys/fsuid.h)
+AC_CHECK_HEADERS(fcntl.h limits.h malloc.h sys/file.h sys/ioctl.h sys/time.h syslog.h net/if.h termios.h unistd.h sys/fsuid.h)
 
 dnl Linux wants features.h in some of the source files.
 AC_CHECK_HEADERS(features.h)
Index: Linux-PAM/modules/pam_limits/pam_limits.c
===================================================================
RCS file: /afs/sipb/project/debian/cvs/pam/Linux-PAM/modules/pam_limits/pam_limits.c,v
retrieving revision 1.7
diff -u -r1.7 pam_limits.c
--- Linux-PAM/modules/pam_limits/pam_limits.c	15 Sep 2002 21:19:55 -0000	1.7
+++ Linux-PAM/modules/pam_limits/pam_limits.c	21 Sep 2002 18:04:21 -0000
@@ -339,8 +339,10 @@
 	limit_item = RLIMIT_NOFILE;
     else if (strcmp(lim_item, "memlock") == 0)
 	limit_item = RLIMIT_MEMLOCK;
+#ifdef RLIMIT_AS
     else if (strcmp(lim_item, "as") == 0)
 	limit_item = RLIMIT_AS;
+#endif /*RLIMIT_AS*/
 #ifdef RLIMIT_LOCKS
     else if (strcmp(lim_item, "locks") == 0)
 	limit_item = RLIMIT_LOCKS;
@@ -411,7 +413,9 @@
         case RLIMIT_CORE:
         case RLIMIT_RSS:
         case RLIMIT_MEMLOCK:
+#ifdef RLIMIT_AS
         case RLIMIT_AS:
+#endif
             limit_value *= 1024;
             break;
     }
Index: Linux-PAM/modules/pam_rhosts/pam_rhosts_auth.c
===================================================================
RCS file: /afs/sipb/project/debian/cvs/pam/Linux-PAM/modules/pam_rhosts/pam_rhosts_auth.c,v
retrieving revision 1.3
diff -u -r1.3 pam_rhosts_auth.c
--- Linux-PAM/modules/pam_rhosts/pam_rhosts_auth.c	15 Sep 2002 20:18:00 -0000	1.3
+++ Linux-PAM/modules/pam_rhosts/pam_rhosts_auth.c	21 Sep 2002 18:05:22 -0000
@@ -50,6 +50,10 @@
 #include <sys/fsuid.h>
 #endif /* HAVE_SYS_FSUID_H */
 
+ #ifdef HAVE_NET_IF_H
+ #include <net/if.h>
+ #endif
+
 #include <sys/types.h>
 #include <sys/uio.h>
 #include <string.h>
@@ -98,8 +102,13 @@
 #include <security/_pam_macros.h>
 #include <security/_pam_modutil.h>
 
+#ifdef _ISOC9X_SOURCE
+#include <inttypes.h>
+#define U32 uint32_t
+#else
 /* to the best of my knowledge, all modern UNIX boxes have 32 bit integers */
 #define U32 unsigned int
+#endif /* _ISOC9X_SOURCE */
 
 
 /*
Index: Linux-PAM/modules/pam_unix/unix_chkpwd.c
===================================================================
RCS file: /afs/sipb/project/debian/cvs/pam/Linux-PAM/modules/pam_unix/unix_chkpwd.c,v
retrieving revision 1.7
diff -u -r1.7 unix_chkpwd.c
--- Linux-PAM/modules/pam_unix/unix_chkpwd.c	15 Sep 2002 20:51:53 -0000	1.7
+++ Linux-PAM/modules/pam_unix/unix_chkpwd.c	21 Sep 2002 17:58:53 -0000
@@ -59,6 +59,11 @@
 
 static void su_sighandler(int sig)
 {
+#ifndef SA_RESETHAND
+	/* emulate the behavior of the SA_RESETHAND flag */
+	if (sig == SIGILL || sig == SIGTRAP || sig == SIGBUS || sig == SIGSEGV)
+		signal(sig, SIG_DFL);
+#endif
 	if (sig > 0) {
 		_log_err(LOG_NOTICE, "caught signal %d.", sig);
 		exit(sig);
@@ -74,7 +79,9 @@
 	 */
 	(void) memset((void *) &action, 0, sizeof(action));
 	action.sa_handler = su_sighandler;
+#ifdef SA_RESETHAND
 	action.sa_flags = SA_RESETHAND;
+#endif
 	(void) sigaction(SIGILL, &action, NULL);
 	(void) sigaction(SIGTRAP, &action, NULL);
 	(void) sigaction(SIGBUS, &action, NULL);
@@ -138,9 +145,9 @@
 
 	/* Hack off SysVR4 password aging */
 	{
-	    char tmp;
+	    char *tmp;
 
-	    if (tmp == strrchr(p, ',') != NULL) tmp = '\0';
+	    if ((tmp = strrchr(p, ',')) != NULL) *tmp = '\0';
 	}
 
 	/* the moment of truth -- do we agree with the password? */
