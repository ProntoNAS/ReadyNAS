Index: Linux-PAM/doc/modules/pam_limits.sgml
===================================================================
RCS file: /afs/sipb/project/debian/cvs/pam/Linux-PAM/doc/modules/pam_limits.sgml,v
retrieving revision 1.3
diff -u -r1.3 pam_limits.sgml
--- Linux-PAM/doc/modules/pam_limits.sgml	15 Sep 2002 20:17:58 -0000	1.3
+++ Linux-PAM/doc/modules/pam_limits.sgml	15 Sep 2002 20:55:33 -0000
@@ -155,6 +155,7 @@
 <item><tt/priority/ - the priority to run user process with (negative
 values boost process priority)
 <item><tt/locks/ - max locked files (Linux 2.4 and higher)
+<item><tt/chroot/ - directory to chroot user to
 </itemize>
 
 <p>
@@ -197,6 +198,7 @@
 @faculty        soft    nproc           20
 @faculty        hard    nproc           50
 ftp             hard    nproc           0
+ftp		-	chroot		/ftp
 @student        -       maxlogins       4
 </verb>
 </tscreen>
Index: Linux-PAM/modules/pam_limits/pam_limits.c
===================================================================
RCS file: /afs/sipb/project/debian/cvs/pam/Linux-PAM/modules/pam_limits/pam_limits.c,v
retrieving revision 1.6
diff -u -r1.6 pam_limits.c
--- Linux-PAM/modules/pam_limits/pam_limits.c	15 Sep 2002 20:18:00 -0000	1.6
+++ Linux-PAM/modules/pam_limits/pam_limits.c	15 Sep 2002 21:15:30 -0000
@@ -70,6 +70,7 @@
     int flag_numsyslogins; /* whether to limit logins only for a
 			      specific user or to count all logins */
     int priority;	 /* the priority to run user process with */
+  char chroot_dir[8092] ;	/* directory to chroot into */
     int supported[RLIM_NLIMITS];
     struct user_limits_struct limits[RLIM_NLIMITS];
     char conf_file[BUFSIZ];
@@ -80,6 +81,7 @@
 #define LIMIT_NUMSYSLOGINS RLIM_NLIMITS+2
 
 #define LIMIT_PRI RLIM_NLIMITS+3
+#define LIMIT_CHROOT RLIM_NLIMITS+4
 
 #define LIMIT_SOFT  1
 #define LIMIT_HARD  2
@@ -299,6 +301,8 @@
     pl->login_limit = -2;
     pl->login_limit_def = LIMITS_DEF_NONE;
 
+    pl->chroot_dir[0] = '\0';
+    
     return retval;
 }    
 
@@ -349,6 +353,8 @@
 	pl->flag_numsyslogins = 1;
     } else if (strcmp(lim_item, "priority") == 0) {
 	limit_item = LIMIT_PRI;
+    } else if (strcmp(lim_item, "chroot") == 0) {
+	limit_item = LIMIT_CHROOT;
     } else {
         _pam_log(LOG_DEBUG,"unknown limit item '%s'", lim_item);
         return;
@@ -412,7 +418,8 @@
 
     if ( (limit_item != LIMIT_LOGIN)
 	 && (limit_item != LIMIT_NUMSYSLOGINS)
-	 && (limit_item != LIMIT_PRI) ) {
+	 && (limit_item != LIMIT_PRI)
+	 && (limit_item != LIMIT_CHROOT)) {
         if (limit_type & LIMIT_SOFT) {
 	    if (pl->limits[limit_item].src_soft < source) {
                 return;
@@ -434,6 +441,8 @@
 
 	if (limit_item == LIMIT_PRI) {
 		pl->priority = limit_value;
+	} else if (limit_item == LIMIT_CHROOT) {
+	  strncpy(pl->chroot_dir, value_orig, sizeof(pl->chroot_dir));
 	} else {
 	        if (pl->login_limit_def < source) {
 	            return;
@@ -608,6 +617,14 @@
         retval |= LOGIN_ERR;
     }
 
+
+    if (!retval && pl->chroot_dir[0]) {
+	i = chdir(pl->chroot_dir);
+	if (i == 0)
+	    i = chroot(pl->chroot_dir);
+	if (i != 0)
+	    retval = LIMIT_ERR;
+    }
     return retval;
 }
             
