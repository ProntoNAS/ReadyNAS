Patch from Philippe Troin    <phil@fifi.org>

Originally this included a bunch of changes to locking, but the more
recent code pulled from Linux_pam CVS seems to fix that issue.

Index: Linux-PAM/modules/pam_unix/pam_unix_passwd.c
===================================================================
RCS file: /afs/sipb/project/debian/cvs/pam/Linux-PAM/modules/pam_unix/pam_unix_passwd.c,v
retrieving revision 1.9
diff -u -r1.9 pam_unix_passwd.c
--- Linux-PAM/modules/pam_unix/pam_unix_passwd.c	12 Jan 2004 06:21:03 -0000	1.9
+++ Linux-PAM/modules/pam_unix/pam_unix_passwd.c	12 Jan 2004 06:38:43 -0000
@@ -521,7 +521,7 @@
 		yppwd.newpw.pw_gecos = pwd->pw_gecos;
 		yppwd.newpw.pw_dir = pwd->pw_dir;
 		yppwd.newpw.pw_shell = pwd->pw_shell;
-		yppwd.oldpass = fromwhat;
+		yppwd.oldpass = fromwhat ? fromwhat : "";
 		yppwd.newpw.pw_passwd = towhat;
 
 		D(("Set password %s for %s", yppwd.newpw.pw_passwd, forwho));
@@ -561,7 +561,7 @@
 #ifdef DEBUG
 		sleep(5);
 #endif
-		_log_err(LOG_NOTICE, "NIS Password for %s was changed on %s", forwho, master);
+		_log_err(LOG_NOTICE, pamh, "NIS Password for %s was changed on %s", forwho, master);
 
 		return retval;
 	}
@@ -578,7 +578,7 @@
 	}
 
 	if (retval == PAM_SUCCESS)
-	    _log_err(LOG_NOTICE, "Password for %s was changed", forwho);
+	    _log_err(LOG_NOTICE, pamh, "Password for %s was changed", forwho);
 
 	return retval;
 }
@@ -794,7 +794,7 @@
 			ulckpwdf();
 #endif
 			return PAM_SUCCESS;
-		} else if (off(UNIX__IAMROOT, ctrl)) {
+		} else if (off(UNIX__IAMROOT, ctrl) || on(UNIX_NIS, ctrl)) {
 
 			/* instruct user what is happening */
 #define greeting "Changing password for "
@@ -815,7 +815,9 @@
 			set(UNIX__OLD_PASSWD, lctrl);
 			retval = _unix_read_password(pamh, lctrl
 						     ,Announce
-					     ,"(current) UNIX password: "
+					     ,(on(UNIX__IAMROOT, ctrl) 
+					       ? "NIS server root password: " 
+					       : "(current) UNIX password: ")
 						     ,NULL
 						     ,_UNIX_OLD_AUTHTOK
 					     ,(const char **) &pass_old);
@@ -829,9 +831,12 @@
 #endif
 				return retval;
 			}
-			/* verify that this is the password for this user */
+			/* verify that this is the password for this user
+			 * if we're not using NIS */
 
-			retval = _unix_verify_password(pamh, user, pass_old, ctrl);
+			if (off(UNIX_NIS, ctrl)) {
+				retval = _unix_verify_password(pamh, user, pass_old, ctrl);
+			}
 		} else {
 			D(("process run by root so do nothing this time around"));
 			pass_old = NULL;
