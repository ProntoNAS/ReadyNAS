#!/bin/sh

pkg=slapd

set -e

update_doclink() {
	if [ -d /usr/doc -a ! -e /usr/doc/$pkg -a -d /usr/share/doc/$pkg ] ; then
		ln -s ../share/doc/$pkg /usr/doc/$pkg
	fi
}


if [ "$1" = "configure" -o "$1" = "abort-upgrade" ] ; then
	update_doclink
fi

if [ -f /etc/ldap/slapd.conf -a \( "$1" != "configure" -o -n "$2" \) ] ; then
	pf=$(sed -ne 's/^pidfile[[:space:]]\+\(.\+\)/\1/p' /etc/ldap/slapd.conf)
	if [ -z "$pf" ] ; then
		pf="/var/run/slapd.pid"
	fi
	start-stop-daemon --stop --quiet --oknodo --pidfile "$pf"
	/etc/init.d/slapd start
	exit 0
fi

# Load debconf
. /usr/share/debconf/confmodule

if [ -f /etc/ldap/slapd.conf ] ; then
	if [ -z "$2" ] ; then
		db_input slapd_conf_exists || true
		db_go
	fi
	exit 0
fi

db_get slapd/internal/dn ; dn="$RET"
db_get slapd/internal/admin ; admin="$RET"
db_get slapd/fill_method ; method="$RET"

top=$(echo $dn | sed 's/,.*//')
key=$(echo $top | sed 's/=.*//')
value=$(echo $top | sed "s/$key=//")

if [ "$key" = "dc" ] ; then
	class="dcObject"
elif [ "$key" = "ou" ] ; then
	class="organizationalUnit"
elif [ "$key" = "c" ] ; then
	class="country"
elif [ "$key" = "o" ] ; then
	class="organization"
elif [ "$key" = "cn" ] ; then
	class="organizationalRole"
else
	db_input slapd/unknown_class || true
	db_go
	exit 1
fi

sed -e "s/@SUFFIX@/$dn/g" -e "s/@ADMIN@/$admin/" \
	/usr/share/doc/slapd/slapd.conf > /etc/ldap/slapd.conf
chmod 644 /etc/ldap/slapd.conf

tmp=$(tempfile)

if [ "$method" = "ldif" ] ; then
	db_get slapd/ldif_file ; ldif="$RET"
else
	db_get slapd/internal/adminpw ; password="$RET"
	ldif="$tmp"
	cat <<EOF > "$ldif"
dn: $dn
objectClass: $class
$key: $value

dn: cn=admin,$dn
objectClass: organizationalRole
objectClass: simpleSecurityObject
cn: admin
description: LDAP administrator
userPassword: $password

dn: ou=People,$dn
objectClass: organizationalUnit
ou: People

dn: ou=Roaming,$dn
objectClass: organizationalUnit
ou: Roaming
EOF
fi

slapadd -l $ldif 1>&2


db_get slapd/replicate
if [ "$RET" = "true" ] ; then
	db_get slapd/slurpd/host ; host="$RET"
	db_get slapd/slurpd/port ; port="$RET"
	db_get slapd/slurpd/binddn ; binddn="$RET"
	db_get slapd/slurpd/credentials ; cred="$RET"
	db_set slapd/slurpd/credentials ""

	cat <<EOF > "$tmp"

# Set up replication for entire database to $host. Please note that this
# does not use a secure connection!
replica host=$host:$port bindmethod=simple binddn=$binddn credentials=$cred

EOF

	tmp2=$(tempfile)
	sed -e "/^loglevel/r$tmp" /etc/ldap/slapd.conf > "$tmp2"
	cat "$tmp2" >/etc/ldap/slapd.conf
	rm -f "$tmp2"
fi

db_set slapd/internal/adminpw ""
db_stop

rm -f "$tmp"

update-rc.d slapd defaults 19 80 > /dev/null
/etc/init.d/slapd start

exit 0

