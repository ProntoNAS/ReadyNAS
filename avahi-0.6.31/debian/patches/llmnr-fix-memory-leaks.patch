 avahi (0.6.31-4.netgear2) unstable; urgency=low
 .
   * Fix some LLMNR memory leaks.
Author: Justin Maggard <justin.maggard@netgear.com>

---

--- avahi-0.6.31.orig/avahi-core/llmnr-server.c
+++ avahi-0.6.31/avahi-core/llmnr-server.c
@@ -181,6 +181,8 @@ static void prepend_response_packet(int
 
     assert(avahi_key_equal(key, lq->key));
 
+    avahi_key_unref(key);
+
     if (c_bit) {
         /* Prepend in C cit set list */
         for (; n_records ; n_records--) {
@@ -339,7 +341,6 @@ static void handle_query_packet(AvahiSer
 
     if (!avahi_record_list_is_empty(s->llmnr.record_list)) {
         avahi_llmnr_server_generate_response(s, p, i, src_address, port, 0);
-        avahi_key_unref(key);
 
     } else if (!(key->type == AVAHI_DNS_TYPE_ANY)) {
 
@@ -356,6 +357,7 @@ static void handle_query_packet(AvahiSer
             /* We do have record for type ANY. Send an empty response */
             avahi_llmnr_server_generate_response(s, p, i, src_address, port, 1);
     }
+    avahi_key_unref(key);
 
     return;
 }
--- avahi-0.6.31.orig/avahi-core/llmnr-querier.c
+++ avahi-0.6.31/avahi-core/llmnr-querier.c
@@ -92,6 +92,9 @@ void avahi_llmnr_query_destroy(AvahiLLMN
 
     avahi_hashmap_remove(e->queries_by_id, &(lq->id));
 
+    avahi_record_list_free(lq->c_bit_set);
+    avahi_record_list_free(lq->c_bit_clear);
+
     avahi_key_unref(lq->key);
     avahi_free(lq);
 
