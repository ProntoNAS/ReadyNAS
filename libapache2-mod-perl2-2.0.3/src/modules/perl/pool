mod_perl.c:    apr_pool_userdata_get(&data, userdata_key, s->process->pool);
mod_perl.c:                              apr_pool_cleanup_null, s->process->pool);
Binary file mod_perl.so matches
modperl_config.c:    modperl_config_srv_argv_push(s->process->argv[0]);
modperl_config.c:    apr_pool_t *p = s->process->pconf;
modperl_handler.c: * allocated from that process-global counter and that ID is stored in
modperl_handler.c:        apr_pool_t *rp = duped ? p : s->process->pconf;
modperl_interp.c:    int is_startup = (p == s->process->pconf);
modperl_module.c:    is_startup = (p == s->process->pconf);
modperl_module.c:    int is_startup = (p == parms->server->process->pconf);
modperl_util.c:    apr_pool_t *p = base_server->process->pool;
modperl_util.c:ap_log_error(APLOG_MARK, APLOG_WARNING, 0, NULL, "process->pool=%d", p); //JM
modperl_util.c:                          modperl_global_get_server_rec()->process->pool);
Binary file modperl_util.lo matches
