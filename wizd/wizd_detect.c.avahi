/*
 * Rendezvous support via avahi config files
 *
 * Copyright (C) 2006 Justin Maggard <jmaggard@infrant.com>
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 */

#include <stdio.h>
#include <string.h>
#include <errno.h>
#include <signal.h>
#include <unistd.h>
#include <time.h>
#include <sys/types.h>

#include "wizd.h"

void	server_detect()
{
        FILE *service;
        FILE *a_pidfile;
	unsigned int avahi_pid=0;

	fprintf(stderr, "Got into server_detect()\n");
        service=fopen("/etc/avahi/services/wizd.service","w");
        if(!service)
                return;

	fputs("<?xml version='1.0' standalone='no'?><!--*-nxml-*-->\n", service);
	fputs("<service-group>\n", service);
	fputs("  <name replace-wildcards='yes'>%h</name>\n", service);
	fputs("  <service>\n", service);
	fputs("    <type>_difi._tcp</type>\n", service);
	fputs("    <port>", service);
	fprintf(service, "%d", global_param.server_port);
	fputs("</port>\n", service);
	fputs("  </service>\n", service);
	fputs("</service-group>\n", service);
        fclose(service);

        a_pidfile=fopen("/var/run/avahi-daemon/pid","r");
        if(!a_pidfile)
                return;
	fscanf(a_pidfile, "%u", &avahi_pid);
        fclose(a_pidfile);
	if (avahi_pid) {
		kill(avahi_pid, SIGHUP);
	}

	return;
}

void	server_stop_detect()
{
        FILE *a_pidfile;
	unsigned int avahi_pid=0;

	unlink("/etc/avahi/services/wizd.service");

        a_pidfile=fopen("/var/run/avahi-daemon/pid","r");
        if(!a_pidfile)
                return;
	fscanf(a_pidfile, "%u", &avahi_pid);
        fclose(a_pidfile);
	if (avahi_pid) {
		kill(avahi_pid, SIGHUP);
	}
	return;
}
