diff -urN db-3.2.9/common/db_err.c db-3.2.9.new/common/db_err.c
--- db-3.2.9/common/db_err.c	2002-09-20 06:35:00.000000000 -0400
+++ db-3.2.9.new/common/db_err.c	2002-09-20 06:40:53.000000000 -0400
@@ -33,9 +33,6 @@
 #include "common_ext.h"
 #include "db_auto.h"
 
-static void __db_errcall __P((const DB_ENV *, int, int, const char *, va_list));
-static void __db_errfile __P((const DB_ENV *, int, int, const char *, va_list));
-
 /*
  * __db_fchk --
  *	General flags checking routine.
@@ -342,34 +339,6 @@
 	const char *fmt;
 	va_list ap;
 {
-	/* Call the user's callback function, if specified. */
-	if (dbenv != NULL && dbenv->db_errcall != NULL)
-		__db_errcall(dbenv, error, error_set, fmt, ap);
-
-	/* Write to the user's file descriptor, if specified. */
-	if (dbenv != NULL && dbenv->db_errfile != NULL)
-		__db_errfile(dbenv, error, error_set, fmt, ap);
-
-	/*
-	 * If we have a default and we didn't do either of the above, write
-	 * to the default.
-	 */
-	if (stderr_default && (dbenv == NULL ||
-	    (dbenv->db_errcall == NULL && dbenv->db_errfile == NULL)))
-		__db_errfile(dbenv, error, error_set, fmt, ap);
-}
-
-/*
- * __db_errcall --
- *	Do the error message work for callback functions.
- */
-static void
-__db_errcall(dbenv, error, error_set, fmt, ap)
-	const DB_ENV *dbenv;
-	int error, error_set;
-	const char *fmt;
-	va_list ap;
-{
 	char *p;
 	char __errbuf[2048];	/* !!!: END OF THE STACK DON'T TRUST SPRINTF. */
 
@@ -384,36 +353,33 @@
 	if (error_set)
 		(void)strcpy(p, db_strerror(error));
 
-	dbenv->db_errcall(dbenv->db_errpfx, __errbuf);
-}
-
-/*
- * __db_errfile --
- *	Do the error message work for FILE *s.
- */
-static void
-__db_errfile(dbenv, error, error_set, fmt, ap)
-	const DB_ENV *dbenv;
-	int error, error_set;
-	const char *fmt;
-	va_list ap;
-{
-	FILE *fp;
+	/* Call the user's callback function, if specified. */
+	if (dbenv != NULL && dbenv->db_errcall != NULL)
+	        dbenv->db_errcall(dbenv->db_errpfx, __errbuf);
 
-	fp = dbenv == NULL ||
-	    dbenv->db_errfile == NULL ? stderr : dbenv->db_errfile;
+	/* Write to the user's file descriptor, if specified. */
+	if (dbenv != NULL && dbenv->db_errfile != NULL) {
+	  if (dbenv->db_errpfx) {
+	    fprintf(dbenv->db_errfile, "%s: ", dbenv->db_errpfx);
+	  }
+	  fputs(__errbuf, dbenv->db_errfile);
+	  fputc('\n', dbenv->db_errfile);
+	  fflush(dbenv->db_errfile);
+	}
 
-	if (dbenv != NULL && dbenv->db_errpfx != NULL)
-		(void)fprintf(fp, "%s: ", dbenv->db_errpfx);
-	if (fmt != NULL) {
-		(void)vfprintf(fp, fmt, ap);
-		if (error_set)
-			(void)fprintf(fp, ": ");
+	/*
+	 * If we have a default and we didn't do either of the above, write
+	 * to the default.
+	 */
+	if (stderr_default && (dbenv == NULL ||
+			       (dbenv->db_errcall == NULL && dbenv->db_errfile == NULL))) {
+	  if (dbenv->db_errpfx) {
+	    fprintf(stderr, "%s: ", dbenv->db_errpfx);
+	  }
+	  fputs(__errbuf, stderr);
+	  fputc('\n', stderr);
+	  fflush(stderr);
 	}
-	if (error_set)
-		(void)fprintf(fp, "%s", db_strerror(error));
-	(void)fprintf(fp, "\n");
-	(void)fflush(fp);
 }
 
 /*--- db_err.c.orig	2002-09-20 06:35:00.000000000 -0400
