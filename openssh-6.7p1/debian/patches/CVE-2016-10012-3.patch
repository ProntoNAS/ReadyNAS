Backport of:

From b7689155f3f5c4999846c07a852b1c7a43b09cec Mon Sep 17 00:00:00 2001
From: "djm@openbsd.org" <djm@openbsd.org>
Date: Wed, 28 Sep 2016 21:44:52 +0000
Subject: [PATCH] upstream commit

put back some pre-auth zlib bits that I shouldn't have
removed - they are still used by the client. Spotted by naddy@

Upstream-ID: 80919468056031037d56a1f5b261c164a6f90dc2
---
 kex.c    | 4 +++-
 kex.h    | 5 +++--
 packet.c | 7 ++++---
 3 files changed, 10 insertions(+), 6 deletions(-)

Index: openssh-6.6p1/kex.c
===================================================================
--- openssh-6.6p1.orig/kex.c	2018-01-15 11:27:30.122628432 -0500
+++ openssh-6.6p1/kex.c	2018-01-15 11:27:30.118628427 -0500
@@ -406,6 +406,8 @@ choose_comp(Comp *comp, char *client, ch
 		fatal("no matching comp found: client %s server %s", client, server);
 	if (strcmp(name, "zlib@openssh.com") == 0) {
 		comp->type = COMP_DELAYED;
+	} else if (strcmp(name, "zlib") == 0) {
+		comp->type = COMP_ZLIB;
 	} else if (strcmp(name, "none") == 0) {
 		comp->type = COMP_NONE;
 	} else {
Index: openssh-6.6p1/kex.h
===================================================================
--- openssh-6.6p1.orig/kex.h	2018-01-15 11:27:30.122628432 -0500
+++ openssh-6.6p1/kex.h	2018-01-15 11:27:30.118628427 -0500
@@ -46,7 +46,8 @@
 #define	KEX_CURVE25519_SHA256	"curve25519-sha256@libssh.org"
 
 #define COMP_NONE	0
-#define COMP_DELAYED	1
+#define COMP_ZLIB	1
+#define COMP_DELAYED	2
 
 enum kex_init_proposals {
 	PROPOSAL_KEX_ALGS,
Index: openssh-6.6p1/packet.c
===================================================================
--- openssh-6.6p1.orig/packet.c	2018-01-15 11:27:30.122628432 -0500
+++ openssh-6.6p1/packet.c	2018-01-15 11:28:13.370678495 -0500
@@ -790,7 +790,8 @@ set_newkeys(int mode)
 	/* explicit_bzero(enc->iv,  enc->block_size);
 	   explicit_bzero(enc->key, enc->key_len);
 	   explicit_bzero(mac->key, mac->key_len); */
-	if (((comp->type == COMP_DELAYED &&
+	if ((comp->type == COMP_ZLIB ||
+	    (comp->type == COMP_DELAYED &&
 	     active_state->after_authentication)) && comp->enabled == 0) {
 		packet_init_compression();
 		if (mode == MODE_OUT)
