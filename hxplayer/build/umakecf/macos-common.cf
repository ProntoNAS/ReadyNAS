# 
# ***** BEGIN LICENSE BLOCK *****
# Source last modified: $Id: macos-common.cf,v 1.1.1.1 2006/03/29 16:45:39 hagi Exp $
# 
# Portions Copyright (c) 1995-2004 RealNetworks, Inc. All Rights Reserved.
# 
# The contents of this file, and the files included with this file,
# are subject to the current version of the RealNetworks Public
# Source License (the "RPSL") available at
# http://www.helixcommunity.org/content/rpsl unless you have licensed
# the file under the current version of the RealNetworks Community
# Source License (the "RCSL") available at
# http://www.helixcommunity.org/content/rcsl, in which case the RCSL
# will apply. You may also obtain the license terms directly from
# RealNetworks.  You may not use this file except in compliance with
# the RPSL or, if you have a valid RCSL with RealNetworks applicable
# to this file, the RCSL.  Please see the applicable RPSL or RCSL for
# the rights, obligations and limitations governing use of the
# contents of the file.
# 
# Alternatively, the contents of this file may be used under the
# terms of the GNU General Public License Version 2 or later (the
# "GPL") in which case the provisions of the GPL are applicable
# instead of those above. If you wish to allow use of your version of
# this file only under the terms of the GPL, and not to allow others
# to use your version of this file under the terms of either the RPSL
# or RCSL, indicate your decision by deleting the provisions above
# and replace them with the notice and other provisions required by
# the GPL. If you do not delete the provisions above, a recipient may
# use your version of this file under the terms of any one of the
# RPSL, the RCSL or the GPL.
# 
# This file is part of the Helix DNA Technology. RealNetworks is the
# developer of the Original Code and owns the copyrights in the
# portions it created.
# 
# This file, and the files included with this file, is distributed
# and made available on an 'AS IS' basis, WITHOUT WARRANTY OF ANY
# KIND, EITHER EXPRESS OR IMPLIED, AND REALNETWORKS HEREBY DISCLAIMS
# ALL SUCH WARRANTIES, INCLUDING WITHOUT LIMITATION, ANY WARRANTIES
# OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, QUIET
# ENJOYMENT OR NON-INFRINGEMENT.
# 
# Technology Compatibility Kit Test Suite(s) Location:
#    http://www.helixcommunity.org/content/tck
# 
# Contributor(s):
# 
# ***** END LICENSE BLOCK *****
# 
""" Common MAC Config File """

if project.BuildOption("debug"):
    project.AddDefines("_DEBUG")

## Platform definitions
platform.inc_subdir      = "mac"
platform.type            = 'macPPC'
platform.path_sep        = ':'
platform.user_paths      = []

## suffexes for target types
platform.exe_suffix          = ''
platform.library_suffix      = 'lib'
platform.dll_suffix          = 'dll'
platform.resource_dll_suffix = 'xrs'

## Version info
class MacVersioning(Versioning):
    def create_dll_name(self, target, path = ''):
        ## if the name is overriden
        new_name = self.get_name(target, path)
        if new_name == '':
            new_name = target

        ## choose suffix for library
        suffix = platform.dll_suffix

        ## create and return the name of the library
        try:
            if project.suffix_off: # Not pretty
                return new_name
        except:
            pass
        if project.versioning_off:
            return '%s.%s' % (new_name, suffix)
        else:
            version = self.get_version(target, path)
            return '%s%s%s.%s' % (
                new_name,
                self.version[0],
                self.version[1],
                suffix)
platform.versioning = MacVersioning()

# This is needed so we can include our "hlxclib/HEADER.h" wrapper files
# instead of directly including system <HEADER.h> files.
if not project.BuildOption('no_common_runtime'):
    project.AddModuleIncludes('common/runtime/pub')

## set the output directories
if project.BuildOption("debug"):
    project.output_dir = ':debug'
    project.output_dirname = 'debug'
else:
    project.output_dir = ':release'
    project.output_dirname = 'release'
    
