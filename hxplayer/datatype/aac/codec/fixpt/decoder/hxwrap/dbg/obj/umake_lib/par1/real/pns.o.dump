
pns.o:     file format elf32-sparc
pns.o

Disassembly of section .text:

00000000 <Get32BitVal>:
   0:	9d e3 bf 90 	save  %sp, -112, %sp
   4:	f0 27 a0 44 	st  %i0, [ %fp + 0x44 ]
   8:	c2 07 a0 44 	ld  [ %fp + 0x44 ], %g1
   c:	c2 00 40 00 	ld  [ %g1 ], %g1
  10:	c2 27 bf f4 	st  %g1, [ %fp + -12 ]
  14:	c2 07 bf f4 	ld  [ %fp + -12 ], %g1
  18:	05 00 06 59 	sethi  %hi(0x196400), %g2
  1c:	90 10 00 01 	mov  %g1, %o0
  20:	92 10 a2 0d 	or  %g2, 0x20d, %o1
  24:	40 00 00 00 	call  24 <Get32BitVal+0x24>
  28:	01 00 00 00 	nop 
  2c:	84 10 00 08 	mov  %o0, %g2
  30:	03 0f 1b bc 	sethi  %hi(0x3c6ef000), %g1
  34:	82 10 63 5f 	or  %g1, 0x35f, %g1	! 3c6ef35f <CLZ+0x3c6ee627>
  38:	82 00 80 01 	add  %g2, %g1, %g1
  3c:	c2 27 bf f4 	st  %g1, [ %fp + -12 ]
  40:	c4 07 a0 44 	ld  [ %fp + 0x44 ], %g2
  44:	c2 07 bf f4 	ld  [ %fp + -12 ], %g1
  48:	c2 20 80 00 	st  %g1, [ %g2 ]
  4c:	c2 07 bf f4 	ld  [ %fp + -12 ], %g1
  50:	b0 10 00 01 	mov  %g1, %i0
  54:	81 c7 e0 08 	ret 
  58:	81 e8 00 00 	restore 

0000005c <InvRootR>:
  5c:	9d e3 bf 88 	save  %sp, -120, %sp
  60:	f0 27 a0 44 	st  %i0, [ %fp + 0x44 ]
  64:	d0 07 a0 44 	ld  [ %fp + 0x44 ], %o0
  68:	13 30 00 00 	sethi  %hi(0xc0000000), %o1
  6c:	40 00 03 08 	call  c8c <MULSHIFT32>
  70:	01 00 00 00 	nop 
  74:	82 10 00 08 	mov  %o0, %g1
  78:	85 28 60 02 	sll  %g1, 2, %g2
  7c:	03 18 00 00 	sethi  %hi(0x60000000), %g1
  80:	82 00 80 01 	add  %g2, %g1, %g1
  84:	c2 27 bf f0 	st  %g1, [ %fp + -16 ]
  88:	c0 27 bf f4 	clr  [ %fp + -12 ]
  8c:	c2 07 bf f4 	ld  [ %fp + -12 ], %g1
  90:	80 a0 60 03 	cmp  %g1, 3
  94:	04 80 00 04 	ble  a4 <InvRootR+0x48>
  98:	01 00 00 00 	nop 
  9c:	10 80 00 1d 	b  110 <InvRootR+0xb4>
  a0:	01 00 00 00 	nop 
  a4:	d0 07 bf f0 	ld  [ %fp + -16 ], %o0
  a8:	d2 07 bf f0 	ld  [ %fp + -16 ], %o1
  ac:	40 00 02 f8 	call  c8c <MULSHIFT32>
  b0:	01 00 00 00 	nop 
  b4:	82 10 00 08 	mov  %o0, %g1
  b8:	c2 27 bf ec 	st  %g1, [ %fp + -20 ]
  bc:	d0 07 a0 44 	ld  [ %fp + 0x44 ], %o0
  c0:	d2 07 bf ec 	ld  [ %fp + -20 ], %o1
  c4:	40 00 02 f2 	call  c8c <MULSHIFT32>
  c8:	01 00 00 00 	nop 
  cc:	82 10 00 08 	mov  %o0, %g1
  d0:	85 28 60 02 	sll  %g1, 2, %g2
  d4:	03 03 00 00 	sethi  %hi(0xc000000), %g1
  d8:	82 20 40 02 	sub  %g1, %g2, %g1
  dc:	c2 27 bf ec 	st  %g1, [ %fp + -20 ]
  e0:	d0 07 bf f0 	ld  [ %fp + -16 ], %o0
  e4:	d2 07 bf ec 	ld  [ %fp + -20 ], %o1
  e8:	40 00 02 e9 	call  c8c <MULSHIFT32>
  ec:	01 00 00 00 	nop 
  f0:	82 10 00 08 	mov  %o0, %g1
  f4:	83 28 60 05 	sll  %g1, 5, %g1
  f8:	c2 27 bf f0 	st  %g1, [ %fp + -16 ]
  fc:	c2 07 bf f4 	ld  [ %fp + -12 ], %g1
 100:	82 00 60 01 	inc  %g1
 104:	c2 27 bf f4 	st  %g1, [ %fp + -12 ]
 108:	10 bf ff e1 	b  8c <InvRootR+0x30>
 10c:	01 00 00 00 	nop 
 110:	c2 07 bf f0 	ld  [ %fp + -16 ], %g1
 114:	83 38 60 1e 	sra  %g1, 0x1e, %g1
 118:	80 a0 60 00 	cmp  %g1, 0
 11c:	02 80 00 05 	be  130 <InvRootR+0xd4>
 120:	01 00 00 00 	nop 
 124:	03 0f ff ff 	sethi  %hi(0x3ffffc00), %g1
 128:	82 10 63 ff 	or  %g1, 0x3ff, %g1	! 3fffffff <CLZ+0x3ffff2c7>
 12c:	c2 27 bf f0 	st  %g1, [ %fp + -16 ]
 130:	c2 07 bf f0 	ld  [ %fp + -16 ], %g1
 134:	b0 10 00 01 	mov  %g1, %i0
 138:	81 c7 e0 08 	ret 
 13c:	81 e8 00 00 	restore 
 140:	81 c3 e0 08 	retl 
 144:	ae 03 c0 17 	add  %o7, %l7, %l7

00000148 <ScaleNoiseVector>:
 148:	9d e3 bf 68 	save  %sp, -152, %sp
 14c:	2f 00 00 00 	sethi  %hi(0), %l7
 150:	7f ff ff fc 	call  140 <InvRootR+0xe4>
 154:	ae 05 e0 00 	add  %l7, 0, %l7	! 0 <Get32BitVal>
 158:	f0 27 a0 44 	st  %i0, [ %fp + 0x44 ]
 15c:	f2 27 a0 48 	st  %i1, [ %fp + 0x48 ]
 160:	f4 27 a0 4c 	st  %i2, [ %fp + 0x4c ]
 164:	c0 27 bf e8 	clr  [ %fp + -24 ]
 168:	c0 27 bf f4 	clr  [ %fp + -12 ]
 16c:	c4 07 bf f4 	ld  [ %fp + -12 ], %g2
 170:	c2 07 a0 48 	ld  [ %fp + 0x48 ], %g1
 174:	80 a0 80 01 	cmp  %g2, %g1
 178:	06 80 00 04 	bl  188 <ScaleNoiseVector+0x40>
 17c:	01 00 00 00 	nop 
 180:	10 80 00 18 	b  1e0 <ScaleNoiseVector+0x98>
 184:	01 00 00 00 	nop 
 188:	c2 07 bf f4 	ld  [ %fp + -12 ], %g1
 18c:	85 28 60 02 	sll  %g1, 2, %g2
 190:	c2 07 a0 44 	ld  [ %fp + 0x44 ], %g1
 194:	82 00 80 01 	add  %g2, %g1, %g1
 198:	c2 00 40 00 	ld  [ %g1 ], %g1
 19c:	c2 27 bf ec 	st  %g1, [ %fp + -20 ]
 1a0:	d0 07 bf ec 	ld  [ %fp + -20 ], %o0
 1a4:	d2 07 bf ec 	ld  [ %fp + -20 ], %o1
 1a8:	40 00 00 00 	call  1a8 <ScaleNoiseVector+0x60>
 1ac:	01 00 00 00 	nop 
 1b0:	82 10 00 08 	mov  %o0, %g1
 1b4:	83 38 60 08 	sra  %g1, 8, %g1
 1b8:	c2 27 bf e4 	st  %g1, [ %fp + -28 ]
 1bc:	c4 07 bf e8 	ld  [ %fp + -24 ], %g2
 1c0:	c2 07 bf e4 	ld  [ %fp + -28 ], %g1
 1c4:	82 00 80 01 	add  %g2, %g1, %g1
 1c8:	c2 27 bf e8 	st  %g1, [ %fp + -24 ]
 1cc:	c2 07 bf f4 	ld  [ %fp + -12 ], %g1
 1d0:	82 00 60 01 	inc  %g1
 1d4:	c2 27 bf f4 	st  %g1, [ %fp + -12 ]
 1d8:	10 bf ff e5 	b  16c <ScaleNoiseVector+0x24>
 1dc:	01 00 00 00 	nop 
 1e0:	c2 07 bf e8 	ld  [ %fp + -24 ], %g1
 1e4:	80 a0 60 00 	cmp  %g1, 0
 1e8:	12 80 00 05 	bne  1fc <ScaleNoiseVector+0xb4>
 1ec:	01 00 00 00 	nop 
 1f0:	c0 27 bf cc 	clr  [ %fp + -52 ]
 1f4:	10 80 00 a1 	b  478 <ScaleNoiseVector+0x330>
 1f8:	01 00 00 00 	nop 
 1fc:	03 00 00 00 	sethi  %hi(0), %g1
 200:	82 10 60 00 	mov  %g1, %g1	! 0 <Get32BitVal>
 204:	c4 05 c0 01 	ld  [ %l7 + %g1 ], %g2
 208:	c2 07 a0 4c 	ld  [ %fp + 0x4c ], %g1
 20c:	82 08 60 03 	and  %g1, 3, %g1
 210:	83 28 60 02 	sll  %g1, 2, %g1
 214:	c2 00 80 01 	ld  [ %g2 + %g1 ], %g1
 218:	c2 27 bf e0 	st  %g1, [ %fp + -32 ]
 21c:	c2 07 a0 4c 	ld  [ %fp + 0x4c ], %g1
 220:	83 38 60 02 	sra  %g1, 2, %g1
 224:	82 00 60 05 	add  %g1, 5, %g1
 228:	c2 27 bf dc 	st  %g1, [ %fp + -36 ]
 22c:	d0 07 bf e8 	ld  [ %fp + -24 ], %o0
 230:	40 00 02 c2 	call  d38 <CLZ>
 234:	01 00 00 00 	nop 
 238:	82 10 00 08 	mov  %o0, %g1
 23c:	82 00 7f fe 	add  %g1, -2, %g1
 240:	c2 27 bf d4 	st  %g1, [ %fp + -44 ]
 244:	84 10 3f fe 	mov  -2, %g2
 248:	c2 07 bf d4 	ld  [ %fp + -44 ], %g1
 24c:	82 08 40 02 	and  %g1, %g2, %g1
 250:	c2 27 bf d4 	st  %g1, [ %fp + -44 ]
 254:	c4 07 bf e8 	ld  [ %fp + -24 ], %g2
 258:	c2 07 bf d4 	ld  [ %fp + -44 ], %g1
 25c:	83 28 80 01 	sll  %g2, %g1, %g1
 260:	90 10 00 01 	mov  %g1, %o0
 264:	7f ff ff 7e 	call  5c <InvRootR>
 268:	01 00 00 00 	nop 
 26c:	82 10 00 08 	mov  %o0, %g1
 270:	c2 27 bf d8 	st  %g1, [ %fp + -40 ]
 274:	c4 07 bf d4 	ld  [ %fp + -44 ], %g2
 278:	83 38 a0 1f 	sra  %g2, 0x1f, %g1
 27c:	83 30 60 1f 	srl  %g1, 0x1f, %g1
 280:	82 00 80 01 	add  %g2, %g1, %g1
 284:	85 38 60 01 	sra  %g1, 1, %g2
 288:	c2 07 bf dc 	ld  [ %fp + -36 ], %g1
 28c:	82 00 80 01 	add  %g2, %g1, %g1
 290:	82 00 7f ed 	add  %g1, -19, %g1
 294:	c2 27 bf dc 	st  %g1, [ %fp + -36 ]
 298:	d0 07 bf d8 	ld  [ %fp + -40 ], %o0
 29c:	40 00 02 a7 	call  d38 <CLZ>
 2a0:	01 00 00 00 	nop 
 2a4:	82 10 00 08 	mov  %o0, %g1
 2a8:	82 00 7f ff 	add  %g1, -1, %g1
 2ac:	c2 27 bf d4 	st  %g1, [ %fp + -44 ]
 2b0:	c4 07 bf d8 	ld  [ %fp + -40 ], %g2
 2b4:	c2 07 bf d4 	ld  [ %fp + -44 ], %g1
 2b8:	83 28 80 01 	sll  %g2, %g1, %g1
 2bc:	c2 27 bf d8 	st  %g1, [ %fp + -40 ]
 2c0:	c4 07 bf dc 	ld  [ %fp + -36 ], %g2
 2c4:	c2 07 bf d4 	ld  [ %fp + -44 ], %g1
 2c8:	82 20 80 01 	sub  %g2, %g1, %g1
 2cc:	82 00 60 05 	add  %g1, 5, %g1
 2d0:	c2 27 bf dc 	st  %g1, [ %fp + -36 ]
 2d4:	d0 07 bf e0 	ld  [ %fp + -32 ], %o0
 2d8:	d2 07 bf d8 	ld  [ %fp + -40 ], %o1
 2dc:	40 00 02 6c 	call  c8c <MULSHIFT32>
 2e0:	01 00 00 00 	nop 
 2e4:	82 10 00 08 	mov  %o0, %g1
 2e8:	c2 27 bf e0 	st  %g1, [ %fp + -32 ]
 2ec:	c0 27 bf d0 	clr  [ %fp + -48 ]
 2f0:	c2 07 bf dc 	ld  [ %fp + -36 ], %g1
 2f4:	80 a0 60 00 	cmp  %g1, 0
 2f8:	16 80 00 31 	bge  3bc <ScaleNoiseVector+0x274>
 2fc:	01 00 00 00 	nop 
 300:	c2 07 bf dc 	ld  [ %fp + -36 ], %g1
 304:	82 20 00 01 	neg  %g1
 308:	c2 27 bf dc 	st  %g1, [ %fp + -36 ]
 30c:	c2 07 bf dc 	ld  [ %fp + -36 ], %g1
 310:	80 a0 60 1f 	cmp  %g1, 0x1f
 314:	04 80 00 04 	ble  324 <ScaleNoiseVector+0x1dc>
 318:	01 00 00 00 	nop 
 31c:	82 10 20 1f 	mov  0x1f, %g1	! 1f <Get32BitVal+0x1f>
 320:	c2 27 bf dc 	st  %g1, [ %fp + -36 ]
 324:	c0 27 bf f4 	clr  [ %fp + -12 ]
 328:	c4 07 bf f4 	ld  [ %fp + -12 ], %g2
 32c:	c2 07 a0 48 	ld  [ %fp + 0x48 ], %g1
 330:	80 a0 80 01 	cmp  %g2, %g1
 334:	06 80 00 04 	bl  344 <ScaleNoiseVector+0x1fc>
 338:	01 00 00 00 	nop 
 33c:	10 80 00 4d 	b  470 <ScaleNoiseVector+0x328>
 340:	01 00 00 00 	nop 
 344:	c2 07 bf f4 	ld  [ %fp + -12 ], %g1
 348:	85 28 60 02 	sll  %g1, 2, %g2
 34c:	c2 07 a0 44 	ld  [ %fp + 0x44 ], %g1
 350:	82 00 80 01 	add  %g2, %g1, %g1
 354:	d0 00 40 00 	ld  [ %g1 ], %o0
 358:	d2 07 bf e0 	ld  [ %fp + -32 ], %o1
 35c:	40 00 02 4c 	call  c8c <MULSHIFT32>
 360:	01 00 00 00 	nop 
 364:	84 10 00 08 	mov  %o0, %g2
 368:	c2 07 bf dc 	ld  [ %fp + -36 ], %g1
 36c:	83 38 80 01 	sra  %g2, %g1, %g1
 370:	c2 27 bf f0 	st  %g1, [ %fp + -16 ]
 374:	d0 07 bf f0 	ld  [ %fp + -16 ], %o0
 378:	40 00 02 5f 	call  cf4 <FASTABS>
 37c:	01 00 00 00 	nop 
 380:	84 10 00 08 	mov  %o0, %g2
 384:	c2 07 bf d0 	ld  [ %fp + -48 ], %g1
 388:	82 10 40 02 	or  %g1, %g2, %g1
 38c:	c2 27 bf d0 	st  %g1, [ %fp + -48 ]
 390:	c2 07 bf f4 	ld  [ %fp + -12 ], %g1
 394:	85 28 60 02 	sll  %g1, 2, %g2
 398:	c2 07 a0 44 	ld  [ %fp + 0x44 ], %g1
 39c:	84 00 80 01 	add  %g2, %g1, %g2
 3a0:	c2 07 bf f0 	ld  [ %fp + -16 ], %g1
 3a4:	c2 20 80 00 	st  %g1, [ %g2 ]
 3a8:	c2 07 bf f4 	ld  [ %fp + -12 ], %g1
 3ac:	82 00 60 01 	inc  %g1
 3b0:	c2 27 bf f4 	st  %g1, [ %fp + -12 ]
 3b4:	10 bf ff dd 	b  328 <ScaleNoiseVector+0x1e0>
 3b8:	01 00 00 00 	nop 
 3bc:	c2 07 bf dc 	ld  [ %fp + -36 ], %g1
 3c0:	80 a0 60 10 	cmp  %g1, 0x10
 3c4:	04 80 00 04 	ble  3d4 <ScaleNoiseVector+0x28c>
 3c8:	01 00 00 00 	nop 
 3cc:	82 10 20 10 	mov  0x10, %g1	! 10 <Get32BitVal+0x10>
 3d0:	c2 27 bf dc 	st  %g1, [ %fp + -36 ]
 3d4:	c0 27 bf f4 	clr  [ %fp + -12 ]
 3d8:	c4 07 bf f4 	ld  [ %fp + -12 ], %g2
 3dc:	c2 07 a0 48 	ld  [ %fp + 0x48 ], %g1
 3e0:	80 a0 80 01 	cmp  %g2, %g1
 3e4:	06 80 00 04 	bl  3f4 <ScaleNoiseVector+0x2ac>
 3e8:	01 00 00 00 	nop 
 3ec:	10 80 00 21 	b  470 <ScaleNoiseVector+0x328>
 3f0:	01 00 00 00 	nop 
 3f4:	c2 07 bf f4 	ld  [ %fp + -12 ], %g1
 3f8:	85 28 60 02 	sll  %g1, 2, %g2
 3fc:	c2 07 a0 44 	ld  [ %fp + 0x44 ], %g1
 400:	82 00 80 01 	add  %g2, %g1, %g1
 404:	c4 00 40 00 	ld  [ %g1 ], %g2
 408:	c2 07 bf dc 	ld  [ %fp + -36 ], %g1
 40c:	83 28 80 01 	sll  %g2, %g1, %g1
 410:	90 10 00 01 	mov  %g1, %o0
 414:	d2 07 bf e0 	ld  [ %fp + -32 ], %o1
 418:	40 00 02 1d 	call  c8c <MULSHIFT32>
 41c:	01 00 00 00 	nop 
 420:	82 10 00 08 	mov  %o0, %g1
 424:	c2 27 bf f0 	st  %g1, [ %fp + -16 ]
 428:	c2 07 bf f4 	ld  [ %fp + -12 ], %g1
 42c:	85 28 60 02 	sll  %g1, 2, %g2
 430:	c2 07 a0 44 	ld  [ %fp + 0x44 ], %g1
 434:	84 00 80 01 	add  %g2, %g1, %g2
 438:	c2 07 bf f0 	ld  [ %fp + -16 ], %g1
 43c:	c2 20 80 00 	st  %g1, [ %g2 ]
 440:	d0 07 bf f0 	ld  [ %fp + -16 ], %o0
 444:	40 00 02 2c 	call  cf4 <FASTABS>
 448:	01 00 00 00 	nop 
 44c:	84 10 00 08 	mov  %o0, %g2
 450:	c2 07 bf d0 	ld  [ %fp + -48 ], %g1
 454:	82 10 40 02 	or  %g1, %g2, %g1
 458:	c2 27 bf d0 	st  %g1, [ %fp + -48 ]
 45c:	c2 07 bf f4 	ld  [ %fp + -12 ], %g1
 460:	82 00 60 01 	inc  %g1
 464:	c2 27 bf f4 	st  %g1, [ %fp + -12 ]
 468:	10 bf ff dc 	b  3d8 <ScaleNoiseVector+0x290>
 46c:	01 00 00 00 	nop 
 470:	c2 07 bf d0 	ld  [ %fp + -48 ], %g1
 474:	c2 27 bf cc 	st  %g1, [ %fp + -52 ]
 478:	f0 07 bf cc 	ld  [ %fp + -52 ], %i0
 47c:	81 c7 e0 08 	ret 
 480:	81 e8 00 00 	restore 

00000484 <GenerateNoiseVector>:
 484:	9d e3 bf 90 	save  %sp, -112, %sp
 488:	f0 27 a0 44 	st  %i0, [ %fp + 0x44 ]
 48c:	f2 27 a0 48 	st  %i1, [ %fp + 0x48 ]
 490:	f4 27 a0 4c 	st  %i2, [ %fp + 0x4c ]
 494:	c0 27 bf f4 	clr  [ %fp + -12 ]
 498:	c4 07 bf f4 	ld  [ %fp + -12 ], %g2
 49c:	c2 07 a0 4c 	ld  [ %fp + 0x4c ], %g1
 4a0:	80 a0 80 01 	cmp  %g2, %g1
 4a4:	06 80 00 04 	bl  4b4 <GenerateNoiseVector+0x30>
 4a8:	01 00 00 00 	nop 
 4ac:	10 80 00 11 	b  4f0 <GenerateNoiseVector+0x6c>
 4b0:	01 00 00 00 	nop 
 4b4:	c2 07 bf f4 	ld  [ %fp + -12 ], %g1
 4b8:	85 28 60 02 	sll  %g1, 2, %g2
 4bc:	c2 07 a0 44 	ld  [ %fp + 0x44 ], %g1
 4c0:	a0 00 80 01 	add  %g2, %g1, %l0
 4c4:	d0 07 a0 48 	ld  [ %fp + 0x48 ], %o0
 4c8:	7f ff fe ce 	call  0 <Get32BitVal>
 4cc:	01 00 00 00 	nop 
 4d0:	82 10 00 08 	mov  %o0, %g1
 4d4:	83 38 60 10 	sra  %g1, 0x10, %g1
 4d8:	c2 24 00 00 	st  %g1, [ %l0 ]
 4dc:	c2 07 bf f4 	ld  [ %fp + -12 ], %g1
 4e0:	82 00 60 01 	inc  %g1
 4e4:	c2 27 bf f4 	st  %g1, [ %fp + -12 ]
 4e8:	10 bf ff ec 	b  498 <GenerateNoiseVector+0x14>
 4ec:	01 00 00 00 	nop 
 4f0:	81 c7 e0 08 	ret 
 4f4:	81 e8 00 00 	restore 

000004f8 <CopyNoiseVector>:
 4f8:	9d e3 bf 90 	save  %sp, -112, %sp
 4fc:	f0 27 a0 44 	st  %i0, [ %fp + 0x44 ]
 500:	f2 27 a0 48 	st  %i1, [ %fp + 0x48 ]
 504:	f4 27 a0 4c 	st  %i2, [ %fp + 0x4c ]
 508:	c0 27 bf f4 	clr  [ %fp + -12 ]
 50c:	c4 07 bf f4 	ld  [ %fp + -12 ], %g2
 510:	c2 07 a0 4c 	ld  [ %fp + 0x4c ], %g1
 514:	80 a0 80 01 	cmp  %g2, %g1
 518:	06 80 00 04 	bl  528 <CopyNoiseVector+0x30>
 51c:	01 00 00 00 	nop 
 520:	10 80 00 11 	b  564 <CopyNoiseVector+0x6c>
 524:	01 00 00 00 	nop 
 528:	c2 07 bf f4 	ld  [ %fp + -12 ], %g1
 52c:	85 28 60 02 	sll  %g1, 2, %g2
 530:	c2 07 a0 48 	ld  [ %fp + 0x48 ], %g1
 534:	86 00 80 01 	add  %g2, %g1, %g3
 538:	c2 07 bf f4 	ld  [ %fp + -12 ], %g1
 53c:	85 28 60 02 	sll  %g1, 2, %g2
 540:	c2 07 a0 44 	ld  [ %fp + 0x44 ], %g1
 544:	82 00 80 01 	add  %g2, %g1, %g1
 548:	c2 00 40 00 	ld  [ %g1 ], %g1
 54c:	c2 20 c0 00 	st  %g1, [ %g3 ]
 550:	c2 07 bf f4 	ld  [ %fp + -12 ], %g1
 554:	82 00 60 01 	inc  %g1
 558:	c2 27 bf f4 	st  %g1, [ %fp + -12 ]
 55c:	10 bf ff ec 	b  50c <CopyNoiseVector+0x14>
 560:	01 00 00 00 	nop 
 564:	81 c7 e0 08 	ret 
 568:	81 e8 00 00 	restore 

0000056c <raac_PNS>:
 56c:	9d e3 bf 40 	save  %sp, -192, %sp
 570:	2f 00 00 00 	sethi  %hi(0), %l7
 574:	7f ff fe f3 	call  140 <InvRootR+0xe4>
 578:	ae 05 e0 00 	add  %l7, 0, %l7	! 0 <Get32BitVal>
 57c:	f0 27 a0 44 	st  %i0, [ %fp + 0x44 ]
 580:	f2 27 a0 48 	st  %i1, [ %fp + 0x48 ]
 584:	c2 07 a0 44 	ld  [ %fp + 0x44 ], %g1
 588:	80 a0 60 00 	cmp  %g1, 0
 58c:	02 80 00 07 	be  5a8 <raac_PNS+0x3c>
 590:	01 00 00 00 	nop 
 594:	c2 07 a0 44 	ld  [ %fp + 0x44 ], %g1
 598:	c2 00 40 00 	ld  [ %g1 ], %g1
 59c:	80 a0 60 00 	cmp  %g1, 0
 5a0:	12 80 00 06 	bne  5b8 <raac_PNS+0x4c>
 5a4:	01 00 00 00 	nop 
 5a8:	82 10 3f ff 	mov  -1, %g1	! ffffffff <CLZ+0xfffff2c7>
 5ac:	c2 27 bf ac 	st  %g1, [ %fp + -84 ]
 5b0:	10 80 01 b4 	b  c80 <raac_PNS+0x714>
 5b4:	01 00 00 00 	nop 
 5b8:	c2 07 a0 44 	ld  [ %fp + 0x44 ], %g1
 5bc:	c2 00 40 00 	ld  [ %g1 ], %g1
 5c0:	c2 27 bf b4 	st  %g1, [ %fp + -76 ]
 5c4:	c2 07 a0 48 	ld  [ %fp + 0x48 ], %g1
 5c8:	80 a0 60 01 	cmp  %g1, 1
 5cc:	12 80 00 0c 	bne  5fc <raac_PNS+0x90>
 5d0:	01 00 00 00 	nop 
 5d4:	c2 07 bf b4 	ld  [ %fp + -76 ], %g1
 5d8:	c2 00 68 f0 	ld  [ %g1 + 0x8f0 ], %g1
 5dc:	80 a0 60 01 	cmp  %g1, 1
 5e0:	12 80 00 07 	bne  5fc <raac_PNS+0x90>
 5e4:	01 00 00 00 	nop 
 5e8:	c2 07 bf b4 	ld  [ %fp + -76 ], %g1
 5ec:	82 00 68 7c 	add  %g1, 0x87c, %g1
 5f0:	c2 27 bf a8 	st  %g1, [ %fp + -88 ]
 5f4:	10 80 00 0f 	b  630 <raac_PNS+0xc4>
 5f8:	01 00 00 00 	nop 
 5fc:	c4 07 a0 48 	ld  [ %fp + 0x48 ], %g2
 600:	82 10 00 02 	mov  %g2, %g1
 604:	83 28 60 03 	sll  %g1, 3, %g1
 608:	82 20 40 02 	sub  %g1, %g2, %g1
 60c:	83 28 60 02 	sll  %g1, 2, %g1
 610:	82 00 40 02 	add  %g1, %g2, %g1
 614:	84 00 40 01 	add  %g1, %g1, %g2
 618:	c2 07 bf b4 	ld  [ %fp + -76 ], %g1
 61c:	84 00 80 01 	add  %g2, %g1, %g2
 620:	c4 27 bf a8 	st  %g2, [ %fp + -88 ]
 624:	c2 07 bf a8 	ld  [ %fp + -88 ], %g1
 628:	82 00 68 7c 	add  %g1, 0x87c, %g1
 62c:	c2 27 bf a8 	st  %g1, [ %fp + -88 ]
 630:	c2 07 bf a8 	ld  [ %fp + -88 ], %g1
 634:	c2 27 bf b0 	st  %g1, [ %fp + -80 ]
 638:	c4 07 bf b4 	ld  [ %fp + -76 ], %g2
 63c:	c2 07 a0 48 	ld  [ %fp + 0x48 ], %g1
 640:	83 28 60 02 	sll  %g1, 2, %g1
 644:	82 00 40 02 	add  %g1, %g2, %g1
 648:	c2 00 6b d8 	ld  [ %g1 + 0xbd8 ], %g1
 64c:	80 a0 60 00 	cmp  %g1, 0
 650:	12 80 00 05 	bne  664 <raac_PNS+0xf8>
 654:	01 00 00 00 	nop 
 658:	c0 27 bf ac 	clr  [ %fp + -84 ]
 65c:	10 80 01 89 	b  c80 <raac_PNS+0x714>
 660:	01 00 00 00 	nop 
 664:	c2 07 bf b0 	ld  [ %fp + -80 ], %g1
 668:	c2 08 60 01 	ldub  [ %g1 + 1 ], %g1
 66c:	82 08 60 ff 	and  %g1, 0xff, %g1
 670:	80 a0 60 02 	cmp  %g1, 2
 674:	12 80 00 13 	bne  6c0 <raac_PNS+0x154>
 678:	01 00 00 00 	nop 
 67c:	03 00 00 00 	sethi  %hi(0), %g1
 680:	82 10 60 00 	mov  %g1, %g1	! 0 <Get32BitVal>
 684:	c4 05 c0 01 	ld  [ %l7 + %g1 ], %g2
 688:	c2 07 bf b4 	ld  [ %fp + -76 ], %g1
 68c:	c2 00 68 78 	ld  [ %g1 + 0x878 ], %g1
 690:	83 28 60 02 	sll  %g1, 2, %g1
 694:	c2 00 80 01 	ld  [ %g2 + %g1 ], %g1
 698:	84 00 40 01 	add  %g1, %g1, %g2
 69c:	03 00 00 00 	sethi  %hi(0), %g1
 6a0:	82 10 60 00 	mov  %g1, %g1	! 0 <Get32BitVal>
 6a4:	c2 05 c0 01 	ld  [ %l7 + %g1 ], %g1
 6a8:	82 00 40 02 	add  %g1, %g2, %g1
 6ac:	c2 27 bf d4 	st  %g1, [ %fp + -44 ]
 6b0:	82 10 20 80 	mov  0x80, %g1
 6b4:	c2 27 bf e4 	st  %g1, [ %fp + -28 ]
 6b8:	10 80 00 11 	b  6fc <raac_PNS+0x190>
 6bc:	01 00 00 00 	nop 
 6c0:	03 00 00 00 	sethi  %hi(0), %g1
 6c4:	82 10 60 00 	mov  %g1, %g1	! 0 <Get32BitVal>
 6c8:	c4 05 c0 01 	ld  [ %l7 + %g1 ], %g2
 6cc:	c2 07 bf b4 	ld  [ %fp + -76 ], %g1
 6d0:	c2 00 68 78 	ld  [ %g1 + 0x878 ], %g1
 6d4:	83 28 60 02 	sll  %g1, 2, %g1
 6d8:	c2 00 80 01 	ld  [ %g2 + %g1 ], %g1
 6dc:	84 00 40 01 	add  %g1, %g1, %g2
 6e0:	03 00 00 00 	sethi  %hi(0), %g1
 6e4:	82 10 60 00 	mov  %g1, %g1	! 0 <Get32BitVal>
 6e8:	c2 05 c0 01 	ld  [ %l7 + %g1 ], %g1
 6ec:	82 00 40 02 	add  %g1, %g2, %g1
 6f0:	c2 27 bf d4 	st  %g1, [ %fp + -44 ]
 6f4:	82 10 24 00 	mov  0x400, %g1
 6f8:	c2 27 bf e4 	st  %g1, [ %fp + -28 ]
 6fc:	c2 07 a0 48 	ld  [ %fp + 0x48 ], %g1
 700:	85 28 60 0c 	sll  %g1, 0xc, %g2
 704:	c2 07 bf b4 	ld  [ %fp + -76 ], %g1
 708:	84 00 80 01 	add  %g2, %g1, %g2
 70c:	03 00 00 04 	sethi  %hi(0x1000), %g1
 710:	82 10 60 48 	or  %g1, 0x48, %g1	! 1048 <CLZ+0x310>
 714:	82 00 80 01 	add  %g2, %g1, %g1
 718:	c2 27 bf d8 	st  %g1, [ %fp + -40 ]
 71c:	c4 07 a0 48 	ld  [ %fp + 0x48 ], %g2
 720:	82 10 00 02 	mov  %g2, %g1
 724:	83 28 60 04 	sll  %g1, 4, %g1
 728:	82 20 40 02 	sub  %g1, %g2, %g1
 72c:	85 28 60 03 	sll  %g1, 3, %g2
 730:	c2 07 bf b4 	ld  [ %fp + -76 ], %g1
 734:	82 00 80 01 	add  %g2, %g1, %g1
 738:	82 00 6a d4 	add  %g1, 0xad4, %g1
 73c:	c2 27 bf d0 	st  %g1, [ %fp + -48 ]
 740:	c4 07 a0 48 	ld  [ %fp + 0x48 ], %g2
 744:	82 10 00 02 	mov  %g2, %g1
 748:	83 28 60 04 	sll  %g1, 4, %g1
 74c:	82 20 40 02 	sub  %g1, %g2, %g1
 750:	85 28 60 04 	sll  %g1, 4, %g2
 754:	c2 07 bf b4 	ld  [ %fp + -76 ], %g1
 758:	82 00 80 01 	add  %g2, %g1, %g1
 75c:	82 00 68 f4 	add  %g1, 0x8f4, %g1
 760:	c2 27 bf cc 	st  %g1, [ %fp + -52 ]
 764:	c0 27 bf a4 	clr  [ %fp + -92 ]
 768:	c2 07 a0 44 	ld  [ %fp + 0x44 ], %g1
 76c:	c2 00 60 28 	ld  [ %g1 + 0x28 ], %g1
 770:	80 a0 60 01 	cmp  %g1, 1
 774:	12 80 00 09 	bne  798 <raac_PNS+0x22c>
 778:	01 00 00 00 	nop 
 77c:	c2 07 bf b4 	ld  [ %fp + -76 ], %g1
 780:	c2 00 68 f0 	ld  [ %g1 + 0x8f0 ], %g1
 784:	80 a0 60 01 	cmp  %g1, 1
 788:	12 80 00 04 	bne  798 <raac_PNS+0x22c>
 78c:	01 00 00 00 	nop 
 790:	82 10 20 01 	mov  1, %g1	! 1 <Get32BitVal+0x1>
 794:	c2 27 bf a4 	st  %g1, [ %fp + -92 ]
 798:	c2 07 bf a4 	ld  [ %fp + -92 ], %g1
 79c:	c2 27 bf c4 	st  %g1, [ %fp + -60 ]
 7a0:	c0 27 bf dc 	clr  [ %fp + -36 ]
 7a4:	c0 27 bf f4 	clr  [ %fp + -12 ]
 7a8:	c2 07 bf b0 	ld  [ %fp + -80 ], %g1
 7ac:	c2 08 60 31 	ldub  [ %g1 + 0x31 ], %g1
 7b0:	84 08 60 ff 	and  %g1, 0xff, %g2
 7b4:	c2 07 bf f4 	ld  [ %fp + -12 ], %g1
 7b8:	80 a0 40 02 	cmp  %g1, %g2
 7bc:	06 80 00 04 	bl  7cc <raac_PNS+0x260>
 7c0:	01 00 00 00 	nop 
 7c4:	10 80 01 13 	b  c10 <raac_PNS+0x6a4>
 7c8:	01 00 00 00 	nop 
 7cc:	c0 27 bf ec 	clr  [ %fp + -20 ]
 7d0:	c4 07 bf b0 	ld  [ %fp + -80 ], %g2
 7d4:	c2 07 bf f4 	ld  [ %fp + -12 ], %g1
 7d8:	82 00 80 01 	add  %g2, %g1, %g1
 7dc:	c2 08 60 32 	ldub  [ %g1 + 0x32 ], %g1
 7e0:	84 08 60 ff 	and  %g1, 0xff, %g2
 7e4:	c2 07 bf ec 	ld  [ %fp + -20 ], %g1
 7e8:	80 a0 40 02 	cmp  %g1, %g2
 7ec:	06 80 00 04 	bl  7fc <raac_PNS+0x290>
 7f0:	01 00 00 00 	nop 
 7f4:	10 80 00 f5 	b  bc8 <raac_PNS+0x65c>
 7f8:	01 00 00 00 	nop 
 7fc:	c2 07 bf b0 	ld  [ %fp + -80 ], %g1
 800:	c2 08 60 03 	ldub  [ %g1 + 3 ], %g1
 804:	82 08 60 ff 	and  %g1, 0xff, %g1
 808:	90 10 00 01 	mov  %g1, %o0
 80c:	d2 07 bf f4 	ld  [ %fp + -12 ], %o1
 810:	40 00 00 00 	call  810 <raac_PNS+0x2a4>
 814:	01 00 00 00 	nop 
 818:	82 10 00 08 	mov  %o0, %g1
 81c:	85 38 60 03 	sra  %g1, 3, %g2
 820:	c2 07 bf b4 	ld  [ %fp + -76 ], %g1
 824:	82 00 80 01 	add  %g2, %g1, %g1
 828:	82 00 6b c8 	add  %g1, 0xbc8, %g1
 82c:	c2 27 bf b8 	st  %g1, [ %fp + -72 ]
 830:	c2 07 bf b0 	ld  [ %fp + -80 ], %g1
 834:	c2 08 60 03 	ldub  [ %g1 + 3 ], %g1
 838:	82 08 60 ff 	and  %g1, 0xff, %g1
 83c:	90 10 00 01 	mov  %g1, %o0
 840:	d2 07 bf f4 	ld  [ %fp + -12 ], %o1
 844:	40 00 00 00 	call  844 <raac_PNS+0x2d8>
 848:	01 00 00 00 	nop 
 84c:	82 10 00 08 	mov  %o0, %g1
 850:	82 08 60 07 	and  %g1, 7, %g1
 854:	c2 27 bf c8 	st  %g1, [ %fp + -56 ]
 858:	88 07 bf b8 	add  %fp, -72, %g4
 85c:	c4 01 00 00 	ld  [ %g4 ], %g2
 860:	82 10 00 02 	mov  %g2, %g1
 864:	c2 08 40 00 	ldub  [ %g1 ], %g1
 868:	86 08 60 ff 	and  %g1, 0xff, %g3
 86c:	c2 07 bf c8 	ld  [ %fp + -56 ], %g1
 870:	83 38 c0 01 	sra  %g3, %g1, %g1
 874:	c2 2f bf bf 	stb  %g1, [ %fp + -65 ]
 878:	84 00 a0 01 	inc  %g2
 87c:	c4 21 00 00 	st  %g2, [ %g4 ]
 880:	c0 27 bf f0 	clr  [ %fp + -16 ]
 884:	c2 07 bf b0 	ld  [ %fp + -80 ], %g1
 888:	c2 08 60 03 	ldub  [ %g1 + 3 ], %g1
 88c:	84 08 60 ff 	and  %g1, 0xff, %g2
 890:	c2 07 bf f0 	ld  [ %fp + -16 ], %g1
 894:	80 a0 40 02 	cmp  %g1, %g2
 898:	06 80 00 04 	bl  8a8 <raac_PNS+0x33c>
 89c:	01 00 00 00 	nop 
 8a0:	10 80 00 b6 	b  b78 <raac_PNS+0x60c>
 8a4:	01 00 00 00 	nop 
 8a8:	c2 07 bf f0 	ld  [ %fp + -16 ], %g1
 8ac:	84 00 40 01 	add  %g1, %g1, %g2
 8b0:	c2 07 bf d4 	ld  [ %fp + -44 ], %g1
 8b4:	82 00 80 01 	add  %g2, %g1, %g1
 8b8:	c2 10 60 02 	lduh  [ %g1 + 2 ], %g1
 8bc:	83 28 60 10 	sll  %g1, 0x10, %g1
 8c0:	87 38 60 10 	sra  %g1, 0x10, %g3
 8c4:	c2 07 bf f0 	ld  [ %fp + -16 ], %g1
 8c8:	84 00 40 01 	add  %g1, %g1, %g2
 8cc:	c2 07 bf d4 	ld  [ %fp + -44 ], %g1
 8d0:	82 00 80 01 	add  %g2, %g1, %g1
 8d4:	c2 10 40 00 	lduh  [ %g1 ], %g1
 8d8:	83 28 60 10 	sll  %g1, 0x10, %g1
 8dc:	83 38 60 10 	sra  %g1, 0x10, %g1
 8e0:	82 20 c0 01 	sub  %g3, %g1, %g1
 8e4:	c2 27 bf e8 	st  %g1, [ %fp + -24 ]
 8e8:	c4 07 bf d0 	ld  [ %fp + -48 ], %g2
 8ec:	c2 07 bf f0 	ld  [ %fp + -16 ], %g1
 8f0:	82 00 80 01 	add  %g2, %g1, %g1
 8f4:	c2 08 40 00 	ldub  [ %g1 ], %g1
 8f8:	82 08 60 ff 	and  %g1, 0xff, %g1
 8fc:	80 a0 60 0d 	cmp  %g1, 0xd
 900:	12 80 00 83 	bne  b0c <raac_PNS+0x5a0>
 904:	01 00 00 00 	nop 
 908:	c2 07 a0 48 	ld  [ %fp + 0x48 ], %g1
 90c:	80 a0 60 00 	cmp  %g1, 0
 910:	12 80 00 2b 	bne  9bc <raac_PNS+0x450>
 914:	01 00 00 00 	nop 
 918:	c2 07 bf b4 	ld  [ %fp + -76 ], %g1
 91c:	82 00 6b e0 	add  %g1, 0xbe0, %g1
 920:	d0 07 bf d8 	ld  [ %fp + -40 ], %o0
 924:	92 10 00 01 	mov  %g1, %o1
 928:	d4 07 bf e8 	ld  [ %fp + -24 ], %o2
 92c:	7f ff fe d6 	call  484 <GenerateNoiseVector>
 930:	01 00 00 00 	nop 
 934:	c2 07 bf c4 	ld  [ %fp + -60 ], %g1
 938:	80 a0 60 00 	cmp  %g1, 0
 93c:	02 80 00 55 	be  a90 <raac_PNS+0x524>
 940:	01 00 00 00 	nop 
 944:	e0 07 bf b4 	ld  [ %fp + -76 ], %l0
 948:	c2 07 bf b0 	ld  [ %fp + -80 ], %g1
 94c:	c2 08 60 03 	ldub  [ %g1 + 3 ], %g1
 950:	82 08 60 ff 	and  %g1, 0xff, %g1
 954:	90 10 00 01 	mov  %g1, %o0
 958:	d2 07 bf f4 	ld  [ %fp + -12 ], %o1
 95c:	40 00 00 00 	call  95c <raac_PNS+0x3f0>
 960:	01 00 00 00 	nop 
 964:	82 10 00 08 	mov  %o0, %g1
 968:	84 00 40 10 	add  %g1, %l0, %g2
 96c:	c2 07 bf f0 	ld  [ %fp + -16 ], %g1
 970:	82 00 80 01 	add  %g2, %g1, %g1
 974:	c2 08 6b 4c 	ldub  [ %g1 + 0xb4c ], %g1
 978:	82 08 60 ff 	and  %g1, 0xff, %g1
 97c:	80 a0 60 0d 	cmp  %g1, 0xd
 980:	12 80 00 44 	bne  a90 <raac_PNS+0x524>
 984:	01 00 00 00 	nop 
 988:	c4 07 bf d8 	ld  [ %fp + -40 ], %g2
 98c:	c2 07 bf b4 	ld  [ %fp + -76 ], %g1
 990:	84 20 80 01 	sub  %g2, %g1, %g2
 994:	c2 07 bf b4 	ld  [ %fp + -76 ], %g1
 998:	82 00 80 01 	add  %g2, %g1, %g1
 99c:	82 20 70 00 	sub  %g1, -4096, %g1
 9a0:	d0 07 bf d8 	ld  [ %fp + -40 ], %o0
 9a4:	92 10 00 01 	mov  %g1, %o1
 9a8:	d4 07 bf e8 	ld  [ %fp + -24 ], %o2
 9ac:	7f ff fe d3 	call  4f8 <CopyNoiseVector>
 9b0:	01 00 00 00 	nop 
 9b4:	10 80 00 37 	b  a90 <raac_PNS+0x524>
 9b8:	01 00 00 00 	nop 
 9bc:	82 10 20 01 	mov  1, %g1	! 1 <Get32BitVal+0x1>
 9c0:	c2 27 bf c0 	st  %g1, [ %fp + -64 ]
 9c4:	c2 07 bf c4 	ld  [ %fp + -60 ], %g1
 9c8:	80 a0 60 00 	cmp  %g1, 0
 9cc:	02 80 00 26 	be  a64 <raac_PNS+0x4f8>
 9d0:	01 00 00 00 	nop 
 9d4:	e0 07 bf b4 	ld  [ %fp + -76 ], %l0
 9d8:	c2 07 bf b0 	ld  [ %fp + -80 ], %g1
 9dc:	c2 08 60 03 	ldub  [ %g1 + 3 ], %g1
 9e0:	82 08 60 ff 	and  %g1, 0xff, %g1
 9e4:	90 10 00 01 	mov  %g1, %o0
 9e8:	d2 07 bf f4 	ld  [ %fp + -12 ], %o1
 9ec:	40 00 00 00 	call  9ec <raac_PNS+0x480>
 9f0:	01 00 00 00 	nop 
 9f4:	82 10 00 08 	mov  %o0, %g1
 9f8:	84 00 40 10 	add  %g1, %l0, %g2
 9fc:	c2 07 bf f0 	ld  [ %fp + -16 ], %g1
 a00:	82 00 80 01 	add  %g2, %g1, %g1
 a04:	c2 08 6a d4 	ldub  [ %g1 + 0xad4 ], %g1
 a08:	82 08 60 ff 	and  %g1, 0xff, %g1
 a0c:	80 a0 60 0d 	cmp  %g1, 0xd
 a10:	12 80 00 15 	bne  a64 <raac_PNS+0x4f8>
 a14:	01 00 00 00 	nop 
 a18:	c2 07 bf b4 	ld  [ %fp + -76 ], %g1
 a1c:	c2 00 6b c4 	ld  [ %g1 + 0xbc4 ], %g1
 a20:	80 a0 60 01 	cmp  %g1, 1
 a24:	12 80 00 08 	bne  a44 <raac_PNS+0x4d8>
 a28:	01 00 00 00 	nop 
 a2c:	c2 0f bf bf 	ldub  [ %fp + -65 ], %g1
 a30:	82 08 60 ff 	and  %g1, 0xff, %g1
 a34:	82 08 60 01 	and  %g1, 1, %g1
 a38:	80 a0 60 00 	cmp  %g1, 0
 a3c:	12 80 00 09 	bne  a60 <raac_PNS+0x4f4>
 a40:	01 00 00 00 	nop 
 a44:	c2 07 bf b4 	ld  [ %fp + -76 ], %g1
 a48:	c2 00 6b c4 	ld  [ %g1 + 0xbc4 ], %g1
 a4c:	80 a0 60 02 	cmp  %g1, 2
 a50:	02 80 00 04 	be  a60 <raac_PNS+0x4f4>
 a54:	01 00 00 00 	nop 
 a58:	10 80 00 03 	b  a64 <raac_PNS+0x4f8>
 a5c:	01 00 00 00 	nop 
 a60:	c0 27 bf c0 	clr  [ %fp + -64 ]
 a64:	c2 07 bf c0 	ld  [ %fp + -64 ], %g1
 a68:	80 a0 60 00 	cmp  %g1, 0
 a6c:	02 80 00 09 	be  a90 <raac_PNS+0x524>
 a70:	01 00 00 00 	nop 
 a74:	c2 07 bf b4 	ld  [ %fp + -76 ], %g1
 a78:	82 00 6b e0 	add  %g1, 0xbe0, %g1
 a7c:	d0 07 bf d8 	ld  [ %fp + -40 ], %o0
 a80:	92 10 00 01 	mov  %g1, %o1
 a84:	d4 07 bf e8 	ld  [ %fp + -24 ], %o2
 a88:	7f ff fe 7f 	call  484 <GenerateNoiseVector>
 a8c:	01 00 00 00 	nop 
 a90:	e0 07 bf b4 	ld  [ %fp + -76 ], %l0
 a94:	c2 07 bf b0 	ld  [ %fp + -80 ], %g1
 a98:	c2 08 60 03 	ldub  [ %g1 + 3 ], %g1
 a9c:	82 08 60 ff 	and  %g1, 0xff, %g1
 aa0:	90 10 00 01 	mov  %g1, %o0
 aa4:	d2 07 bf f4 	ld  [ %fp + -12 ], %o1
 aa8:	40 00 00 00 	call  aa8 <raac_PNS+0x53c>
 aac:	01 00 00 00 	nop 
 ab0:	86 10 00 08 	mov  %o0, %g3
 ab4:	c4 07 a0 48 	ld  [ %fp + 0x48 ], %g2
 ab8:	82 10 00 02 	mov  %g2, %g1
 abc:	83 28 60 04 	sll  %g1, 4, %g1
 ac0:	82 20 40 02 	sub  %g1, %g2, %g1
 ac4:	83 28 60 03 	sll  %g1, 3, %g1
 ac8:	84 00 40 03 	add  %g1, %g3, %g2
 acc:	c2 07 bf f0 	ld  [ %fp + -16 ], %g1
 ad0:	82 00 80 01 	add  %g2, %g1, %g1
 ad4:	82 00 40 01 	add  %g1, %g1, %g1
 ad8:	82 00 40 10 	add  %g1, %l0, %g1
 adc:	c2 10 68 f4 	lduh  [ %g1 + 0x8f4 ], %g1
 ae0:	83 28 60 10 	sll  %g1, 0x10, %g1
 ae4:	83 38 60 10 	sra  %g1, 0x10, %g1
 ae8:	d0 07 bf d8 	ld  [ %fp + -40 ], %o0
 aec:	d2 07 bf e8 	ld  [ %fp + -24 ], %o1
 af0:	94 10 00 01 	mov  %g1, %o2
 af4:	7f ff fd 95 	call  148 <ScaleNoiseVector>
 af8:	01 00 00 00 	nop 
 afc:	84 10 00 08 	mov  %o0, %g2
 b00:	c2 07 bf dc 	ld  [ %fp + -36 ], %g1
 b04:	82 10 40 02 	or  %g1, %g2, %g1
 b08:	c2 27 bf dc 	st  %g1, [ %fp + -36 ]
 b0c:	c2 07 bf e8 	ld  [ %fp + -24 ], %g1
 b10:	85 28 60 02 	sll  %g1, 2, %g2
 b14:	c2 07 bf d8 	ld  [ %fp + -40 ], %g1
 b18:	82 00 40 02 	add  %g1, %g2, %g1
 b1c:	c2 27 bf d8 	st  %g1, [ %fp + -40 ]
 b20:	c2 0f bf bf 	ldub  [ %fp + -65 ], %g1
 b24:	82 08 60 ff 	and  %g1, 0xff, %g1
 b28:	83 30 60 01 	srl  %g1, 1, %g1
 b2c:	c2 2f bf bf 	stb  %g1, [ %fp + -65 ]
 b30:	c2 07 bf c8 	ld  [ %fp + -56 ], %g1
 b34:	82 00 60 01 	inc  %g1
 b38:	c2 27 bf c8 	st  %g1, [ %fp + -56 ]
 b3c:	80 a0 60 08 	cmp  %g1, 8
 b40:	12 80 00 09 	bne  b64 <raac_PNS+0x5f8>
 b44:	01 00 00 00 	nop 
 b48:	82 07 bf b8 	add  %fp, -72, %g1
 b4c:	c4 00 40 00 	ld  [ %g1 ], %g2
 b50:	c6 08 80 00 	ldub  [ %g2 ], %g3
 b54:	84 00 a0 01 	inc  %g2
 b58:	c4 20 40 00 	st  %g2, [ %g1 ]
 b5c:	c6 2f bf bf 	stb  %g3, [ %fp + -65 ]
 b60:	c0 27 bf c8 	clr  [ %fp + -56 ]
 b64:	c2 07 bf f0 	ld  [ %fp + -16 ], %g1
 b68:	82 00 60 01 	inc  %g1
 b6c:	c2 27 bf f0 	st  %g1, [ %fp + -16 ]
 b70:	10 bf ff 45 	b  884 <raac_PNS+0x318>
 b74:	01 00 00 00 	nop 
 b78:	c2 07 bf b0 	ld  [ %fp + -80 ], %g1
 b7c:	c2 08 60 03 	ldub  [ %g1 + 3 ], %g1
 b80:	82 08 60 ff 	and  %g1, 0xff, %g1
 b84:	84 00 40 01 	add  %g1, %g1, %g2
 b88:	c2 07 bf d4 	ld  [ %fp + -44 ], %g1
 b8c:	82 00 80 01 	add  %g2, %g1, %g1
 b90:	c2 10 40 00 	lduh  [ %g1 ], %g1
 b94:	83 28 60 10 	sll  %g1, 0x10, %g1
 b98:	85 38 60 10 	sra  %g1, 0x10, %g2
 b9c:	c2 07 bf e4 	ld  [ %fp + -28 ], %g1
 ba0:	82 20 40 02 	sub  %g1, %g2, %g1
 ba4:	85 28 60 02 	sll  %g1, 2, %g2
 ba8:	c2 07 bf d8 	ld  [ %fp + -40 ], %g1
 bac:	82 00 40 02 	add  %g1, %g2, %g1
 bb0:	c2 27 bf d8 	st  %g1, [ %fp + -40 ]
 bb4:	c2 07 bf ec 	ld  [ %fp + -20 ], %g1
 bb8:	82 00 60 01 	inc  %g1
 bbc:	c2 27 bf ec 	st  %g1, [ %fp + -20 ]
 bc0:	10 bf ff 04 	b  7d0 <raac_PNS+0x264>
 bc4:	01 00 00 00 	nop 
 bc8:	c2 07 bf b0 	ld  [ %fp + -80 ], %g1
 bcc:	c2 08 60 03 	ldub  [ %g1 + 3 ], %g1
 bd0:	84 08 60 ff 	and  %g1, 0xff, %g2
 bd4:	c2 07 bf d0 	ld  [ %fp + -48 ], %g1
 bd8:	82 00 40 02 	add  %g1, %g2, %g1
 bdc:	c2 27 bf d0 	st  %g1, [ %fp + -48 ]
 be0:	c2 07 bf b0 	ld  [ %fp + -80 ], %g1
 be4:	c2 08 60 03 	ldub  [ %g1 + 3 ], %g1
 be8:	82 08 60 ff 	and  %g1, 0xff, %g1
 bec:	84 00 40 01 	add  %g1, %g1, %g2
 bf0:	c2 07 bf cc 	ld  [ %fp + -52 ], %g1
 bf4:	82 00 40 02 	add  %g1, %g2, %g1
 bf8:	c2 27 bf cc 	st  %g1, [ %fp + -52 ]
 bfc:	c2 07 bf f4 	ld  [ %fp + -12 ], %g1
 c00:	82 00 60 01 	inc  %g1
 c04:	c2 27 bf f4 	st  %g1, [ %fp + -12 ]
 c08:	10 bf fe e8 	b  7a8 <raac_PNS+0x23c>
 c0c:	01 00 00 00 	nop 
 c10:	d0 07 bf dc 	ld  [ %fp + -36 ], %o0
 c14:	40 00 00 49 	call  d38 <CLZ>
 c18:	01 00 00 00 	nop 
 c1c:	82 10 00 08 	mov  %o0, %g1
 c20:	82 00 7f ff 	add  %g1, -1, %g1
 c24:	c2 27 bf e0 	st  %g1, [ %fp + -32 ]
 c28:	c4 07 bf b4 	ld  [ %fp + -76 ], %g2
 c2c:	c2 07 a0 48 	ld  [ %fp + 0x48 ], %g1
 c30:	83 28 60 02 	sll  %g1, 2, %g1
 c34:	84 00 40 02 	add  %g1, %g2, %g2
 c38:	03 00 00 04 	sethi  %hi(0x1000), %g1
 c3c:	82 10 60 40 	or  %g1, 0x40, %g1	! 1040 <CLZ+0x308>
 c40:	82 00 80 01 	add  %g2, %g1, %g1
 c44:	c4 00 40 00 	ld  [ %g1 ], %g2
 c48:	c2 07 bf e0 	ld  [ %fp + -32 ], %g1
 c4c:	80 a0 80 01 	cmp  %g2, %g1
 c50:	04 80 00 0b 	ble  c7c <raac_PNS+0x710>
 c54:	01 00 00 00 	nop 
 c58:	c4 07 bf b4 	ld  [ %fp + -76 ], %g2
 c5c:	c2 07 a0 48 	ld  [ %fp + 0x48 ], %g1
 c60:	83 28 60 02 	sll  %g1, 2, %g1
 c64:	84 00 40 02 	add  %g1, %g2, %g2
 c68:	03 00 00 04 	sethi  %hi(0x1000), %g1
 c6c:	82 10 60 40 	or  %g1, 0x40, %g1	! 1040 <CLZ+0x308>
 c70:	84 00 80 01 	add  %g2, %g1, %g2
 c74:	c2 07 bf e0 	ld  [ %fp + -32 ], %g1
 c78:	c2 20 80 00 	st  %g1, [ %g2 ]
 c7c:	c0 27 bf ac 	clr  [ %fp + -84 ]
 c80:	f0 07 bf ac 	ld  [ %fp + -84 ], %i0
 c84:	81 c7 e0 08 	ret 
 c88:	81 e8 00 00 	restore 

00000c8c <MULSHIFT32>:
 c8c:	9d e3 bf 90 	save  %sp, -112, %sp
 c90:	f0 27 a0 44 	st  %i0, [ %fp + 0x44 ]
 c94:	f2 27 a0 48 	st  %i1, [ %fp + 0x48 ]
 c98:	c2 07 a0 44 	ld  [ %fp + 0x44 ], %g1
 c9c:	83 38 60 1f 	sra  %g1, 0x1f, %g1
 ca0:	da 07 a0 44 	ld  [ %fp + 0x44 ], %o5
 ca4:	98 10 00 01 	mov  %g1, %o4
 ca8:	c2 07 a0 48 	ld  [ %fp + 0x48 ], %g1
 cac:	83 38 60 1f 	sra  %g1, 0x1f, %g1
 cb0:	c6 07 a0 48 	ld  [ %fp + 0x48 ], %g3
 cb4:	84 10 00 01 	mov  %g1, %g2
 cb8:	90 10 00 0c 	mov  %o4, %o0
 cbc:	92 10 00 0d 	mov  %o5, %o1
 cc0:	94 10 00 02 	mov  %g2, %o2
 cc4:	96 10 00 03 	mov  %g3, %o3
 cc8:	40 00 00 00 	call  cc8 <MULSHIFT32+0x3c>
 ccc:	01 00 00 00 	nop 
 cd0:	98 10 00 08 	mov  %o0, %o4
 cd4:	9a 10 00 09 	mov  %o1, %o5
 cd8:	87 3b 20 00 	sra  %o4, 0, %g3
 cdc:	85 3b 20 1f 	sra  %o4, 0x1f, %g2
 ce0:	c6 27 bf f4 	st  %g3, [ %fp + -12 ]
 ce4:	c2 07 bf f4 	ld  [ %fp + -12 ], %g1
 ce8:	b0 10 00 01 	mov  %g1, %i0
 cec:	81 c7 e0 08 	ret 
 cf0:	81 e8 00 00 	restore 

00000cf4 <FASTABS>:
 cf4:	9d e3 bf 90 	save  %sp, -112, %sp
 cf8:	f0 27 a0 44 	st  %i0, [ %fp + 0x44 ]
 cfc:	c2 07 a0 44 	ld  [ %fp + 0x44 ], %g1
 d00:	83 38 60 1f 	sra  %g1, 0x1f, %g1
 d04:	c2 27 bf f4 	st  %g1, [ %fp + -12 ]
 d08:	c4 07 a0 44 	ld  [ %fp + 0x44 ], %g2
 d0c:	c2 07 bf f4 	ld  [ %fp + -12 ], %g1
 d10:	82 18 80 01 	xor  %g2, %g1, %g1
 d14:	c2 27 a0 44 	st  %g1, [ %fp + 0x44 ]
 d18:	c4 07 a0 44 	ld  [ %fp + 0x44 ], %g2
 d1c:	c2 07 bf f4 	ld  [ %fp + -12 ], %g1
 d20:	82 20 80 01 	sub  %g2, %g1, %g1
 d24:	c2 27 a0 44 	st  %g1, [ %fp + 0x44 ]
 d28:	c2 07 a0 44 	ld  [ %fp + 0x44 ], %g1
 d2c:	b0 10 00 01 	mov  %g1, %i0
 d30:	81 c7 e0 08 	ret 
 d34:	81 e8 00 00 	restore 

00000d38 <CLZ>:
 d38:	9d e3 bf 90 	save  %sp, -112, %sp
 d3c:	f0 27 a0 44 	st  %i0, [ %fp + 0x44 ]
 d40:	c2 07 a0 44 	ld  [ %fp + 0x44 ], %g1
 d44:	80 a0 60 00 	cmp  %g1, 0
 d48:	12 80 00 06 	bne  d60 <CLZ+0x28>
 d4c:	01 00 00 00 	nop 
 d50:	82 10 20 20 	mov  0x20, %g1	! 20 <Get32BitVal+0x20>
 d54:	c2 27 bf f0 	st  %g1, [ %fp + -16 ]
 d58:	10 80 00 37 	b  e34 <CLZ+0xfc>
 d5c:	01 00 00 00 	nop 
 d60:	82 10 20 01 	mov  1, %g1	! 1 <Get32BitVal+0x1>
 d64:	c2 27 bf f4 	st  %g1, [ %fp + -12 ]
 d68:	c2 07 a0 44 	ld  [ %fp + 0x44 ], %g1
 d6c:	83 30 60 10 	srl  %g1, 0x10, %g1
 d70:	80 a0 60 00 	cmp  %g1, 0
 d74:	12 80 00 08 	bne  d94 <CLZ+0x5c>
 d78:	01 00 00 00 	nop 
 d7c:	c2 07 bf f4 	ld  [ %fp + -12 ], %g1
 d80:	82 00 60 10 	add  %g1, 0x10, %g1
 d84:	c2 27 bf f4 	st  %g1, [ %fp + -12 ]
 d88:	c2 07 a0 44 	ld  [ %fp + 0x44 ], %g1
 d8c:	83 28 60 10 	sll  %g1, 0x10, %g1
 d90:	c2 27 a0 44 	st  %g1, [ %fp + 0x44 ]
 d94:	c2 07 a0 44 	ld  [ %fp + 0x44 ], %g1
 d98:	83 30 60 18 	srl  %g1, 0x18, %g1
 d9c:	80 a0 60 00 	cmp  %g1, 0
 da0:	12 80 00 08 	bne  dc0 <CLZ+0x88>
 da4:	01 00 00 00 	nop 
 da8:	c2 07 bf f4 	ld  [ %fp + -12 ], %g1
 dac:	82 00 60 08 	add  %g1, 8, %g1
 db0:	c2 27 bf f4 	st  %g1, [ %fp + -12 ]
 db4:	c2 07 a0 44 	ld  [ %fp + 0x44 ], %g1
 db8:	83 28 60 08 	sll  %g1, 8, %g1
 dbc:	c2 27 a0 44 	st  %g1, [ %fp + 0x44 ]
 dc0:	c2 07 a0 44 	ld  [ %fp + 0x44 ], %g1
 dc4:	83 30 60 1c 	srl  %g1, 0x1c, %g1
 dc8:	80 a0 60 00 	cmp  %g1, 0
 dcc:	12 80 00 08 	bne  dec <CLZ+0xb4>
 dd0:	01 00 00 00 	nop 
 dd4:	c2 07 bf f4 	ld  [ %fp + -12 ], %g1
 dd8:	82 00 60 04 	add  %g1, 4, %g1
 ddc:	c2 27 bf f4 	st  %g1, [ %fp + -12 ]
 de0:	c2 07 a0 44 	ld  [ %fp + 0x44 ], %g1
 de4:	83 28 60 04 	sll  %g1, 4, %g1
 de8:	c2 27 a0 44 	st  %g1, [ %fp + 0x44 ]
 dec:	c2 07 a0 44 	ld  [ %fp + 0x44 ], %g1
 df0:	83 30 60 1e 	srl  %g1, 0x1e, %g1
 df4:	80 a0 60 00 	cmp  %g1, 0
 df8:	12 80 00 08 	bne  e18 <CLZ+0xe0>
 dfc:	01 00 00 00 	nop 
 e00:	c2 07 bf f4 	ld  [ %fp + -12 ], %g1
 e04:	82 00 60 02 	add  %g1, 2, %g1
 e08:	c2 27 bf f4 	st  %g1, [ %fp + -12 ]
 e0c:	c2 07 a0 44 	ld  [ %fp + 0x44 ], %g1
 e10:	83 28 60 02 	sll  %g1, 2, %g1
 e14:	c2 27 a0 44 	st  %g1, [ %fp + 0x44 ]
 e18:	c2 07 a0 44 	ld  [ %fp + 0x44 ], %g1
 e1c:	85 30 60 1f 	srl  %g1, 0x1f, %g2
 e20:	c2 07 bf f4 	ld  [ %fp + -12 ], %g1
 e24:	82 20 40 02 	sub  %g1, %g2, %g1
 e28:	c2 27 bf f4 	st  %g1, [ %fp + -12 ]
 e2c:	c2 07 bf f4 	ld  [ %fp + -12 ], %g1
 e30:	c2 27 bf f0 	st  %g1, [ %fp + -16 ]
 e34:	f0 07 bf f0 	ld  [ %fp + -16 ], %i0
 e38:	81 c7 e0 08 	ret 
 e3c:	81 e8 00 00 	restore 
