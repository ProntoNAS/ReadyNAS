
dct4.o:     file format elf32-sparc
dct4.o

Disassembly of section .text:

00000000 <PreMultiply-0x8>:
   0:	81 c3 e0 08 	retl 
   4:	ae 03 c0 17 	add  %o7, %l7, %l7

00000008 <PreMultiply>:
   8:	9d e3 bf 58 	save  %sp, -168, %sp
   c:	2f 00 00 00 	sethi  %hi(0), %l7
  10:	7f ff ff fc 	call  0 <PreMultiply-0x8>
  14:	ae 05 e0 00 	add  %l7, 0, %l7	! 0 <PreMultiply-0x8>
  18:	f0 27 a0 44 	st  %i0, [ %fp + 0x44 ]
  1c:	f2 27 a0 48 	st  %i1, [ %fp + 0x48 ]
  20:	03 00 00 00 	sethi  %hi(0), %g1
  24:	82 10 60 00 	mov  %g1, %g1	! 0 <PreMultiply-0x8>
  28:	c4 05 c0 01 	ld  [ %l7 + %g1 ], %g2
  2c:	c2 07 a0 44 	ld  [ %fp + 0x44 ], %g1
  30:	83 28 60 02 	sll  %g1, 2, %g1
  34:	c2 00 80 01 	ld  [ %g2 + %g1 ], %g1
  38:	c2 27 bf f0 	st  %g1, [ %fp + -16 ]
  3c:	c2 07 bf f0 	ld  [ %fp + -16 ], %g1
  40:	85 28 60 02 	sll  %g1, 2, %g2
  44:	c2 07 a0 48 	ld  [ %fp + 0x48 ], %g1
  48:	82 00 80 01 	add  %g2, %g1, %g1
  4c:	82 00 7f fc 	add  %g1, -4, %g1
  50:	c2 27 bf bc 	st  %g1, [ %fp + -68 ]
  54:	03 00 00 00 	sethi  %hi(0), %g1
  58:	82 10 60 00 	mov  %g1, %g1	! 0 <PreMultiply-0x8>
  5c:	c4 05 c0 01 	ld  [ %l7 + %g1 ], %g2
  60:	c2 07 a0 44 	ld  [ %fp + 0x44 ], %g1
  64:	83 28 60 02 	sll  %g1, 2, %g1
  68:	c2 00 80 01 	ld  [ %g2 + %g1 ], %g1
  6c:	85 28 60 02 	sll  %g1, 2, %g2
  70:	03 00 00 00 	sethi  %hi(0), %g1
  74:	82 10 60 00 	mov  %g1, %g1	! 0 <PreMultiply-0x8>
  78:	c2 05 c0 01 	ld  [ %l7 + %g1 ], %g1
  7c:	82 00 40 02 	add  %g1, %g2, %g1
  80:	c2 27 bf b8 	st  %g1, [ %fp + -72 ]
  84:	c2 07 bf f0 	ld  [ %fp + -16 ], %g1
  88:	83 38 60 02 	sra  %g1, 2, %g1
  8c:	c2 27 bf f4 	st  %g1, [ %fp + -12 ]
  90:	c2 07 bf f4 	ld  [ %fp + -12 ], %g1
  94:	80 a0 60 00 	cmp  %g1, 0
  98:	12 80 00 04 	bne  a8 <PreMultiply+0xa0>
  9c:	01 00 00 00 	nop 
  a0:	10 80 00 85 	b  2b4 <PreMultiply+0x2ac>
  a4:	01 00 00 00 	nop 
  a8:	84 07 bf b8 	add  %fp, -72, %g2
  ac:	c2 00 80 00 	ld  [ %g2 ], %g1
  b0:	c6 00 40 00 	ld  [ %g1 ], %g3
  b4:	82 00 60 04 	add  %g1, 4, %g1
  b8:	c2 20 80 00 	st  %g1, [ %g2 ]
  bc:	c6 27 bf cc 	st  %g3, [ %fp + -52 ]
  c0:	84 07 bf b8 	add  %fp, -72, %g2
  c4:	c2 00 80 00 	ld  [ %g2 ], %g1
  c8:	c6 00 40 00 	ld  [ %g1 ], %g3
  cc:	82 00 60 04 	add  %g1, 4, %g1
  d0:	c2 20 80 00 	st  %g1, [ %g2 ]
  d4:	c6 27 bf c8 	st  %g3, [ %fp + -56 ]
  d8:	84 07 bf b8 	add  %fp, -72, %g2
  dc:	c2 00 80 00 	ld  [ %g2 ], %g1
  e0:	c6 00 40 00 	ld  [ %g1 ], %g3
  e4:	82 00 60 04 	add  %g1, 4, %g1
  e8:	c2 20 80 00 	st  %g1, [ %g2 ]
  ec:	c6 27 bf c4 	st  %g3, [ %fp + -60 ]
  f0:	84 07 bf b8 	add  %fp, -72, %g2
  f4:	c2 00 80 00 	ld  [ %g2 ], %g1
  f8:	c6 00 40 00 	ld  [ %g1 ], %g3
  fc:	82 00 60 04 	add  %g1, 4, %g1
 100:	c2 20 80 00 	st  %g1, [ %g2 ]
 104:	c6 27 bf c0 	st  %g3, [ %fp + -64 ]
 108:	c2 07 a0 48 	ld  [ %fp + 0x48 ], %g1
 10c:	c2 00 40 00 	ld  [ %g1 ], %g1
 110:	c2 27 bf ec 	st  %g1, [ %fp + -20 ]
 114:	c2 07 a0 48 	ld  [ %fp + 0x48 ], %g1
 118:	82 00 60 04 	add  %g1, 4, %g1
 11c:	c2 00 40 00 	ld  [ %g1 ], %g1
 120:	c2 27 bf e0 	st  %g1, [ %fp + -32 ]
 124:	c2 07 bf bc 	ld  [ %fp + -68 ], %g1
 128:	c2 00 40 00 	ld  [ %g1 ], %g1
 12c:	c2 27 bf e8 	st  %g1, [ %fp + -24 ]
 130:	c2 07 bf bc 	ld  [ %fp + -68 ], %g1
 134:	82 00 7f fc 	add  %g1, -4, %g1
 138:	c2 00 40 00 	ld  [ %g1 ], %g1
 13c:	c2 27 bf e4 	st  %g1, [ %fp + -28 ]
 140:	c4 07 bf ec 	ld  [ %fp + -20 ], %g2
 144:	c2 07 bf e8 	ld  [ %fp + -24 ], %g1
 148:	82 00 80 01 	add  %g2, %g1, %g1
 14c:	d0 07 bf c8 	ld  [ %fp + -56 ], %o0
 150:	92 10 00 01 	mov  %g1, %o1
 154:	40 00 02 fa 	call  d3c <MULSHIFT32>
 158:	01 00 00 00 	nop 
 15c:	82 10 00 08 	mov  %o0, %g1
 160:	c2 27 bf d4 	st  %g1, [ %fp + -44 ]
 164:	d0 07 bf cc 	ld  [ %fp + -52 ], %o0
 168:	d2 07 bf e8 	ld  [ %fp + -24 ], %o1
 16c:	40 00 02 f4 	call  d3c <MULSHIFT32>
 170:	01 00 00 00 	nop 
 174:	84 10 00 08 	mov  %o0, %g2
 178:	c2 07 bf d4 	ld  [ %fp + -44 ], %g1
 17c:	82 20 80 01 	sub  %g2, %g1, %g1
 180:	c2 27 bf d8 	st  %g1, [ %fp + -40 ]
 184:	c2 07 bf c8 	ld  [ %fp + -56 ], %g1
 188:	84 00 40 01 	add  %g1, %g1, %g2
 18c:	c2 07 bf cc 	ld  [ %fp + -52 ], %g1
 190:	82 20 40 02 	sub  %g1, %g2, %g1
 194:	c2 27 bf d0 	st  %g1, [ %fp + -48 ]
 198:	d0 07 bf d0 	ld  [ %fp + -48 ], %o0
 19c:	d2 07 bf ec 	ld  [ %fp + -20 ], %o1
 1a0:	40 00 02 e7 	call  d3c <MULSHIFT32>
 1a4:	01 00 00 00 	nop 
 1a8:	84 10 00 08 	mov  %o0, %g2
 1ac:	c2 07 bf d4 	ld  [ %fp + -44 ], %g1
 1b0:	82 00 80 01 	add  %g2, %g1, %g1
 1b4:	c2 27 bf dc 	st  %g1, [ %fp + -36 ]
 1b8:	88 07 a0 48 	add  %fp, 0x48, %g4
 1bc:	c2 01 00 00 	ld  [ %g4 ], %g1
 1c0:	86 10 00 01 	mov  %g1, %g3
 1c4:	c4 07 bf dc 	ld  [ %fp + -36 ], %g2
 1c8:	c4 20 c0 00 	st  %g2, [ %g3 ]
 1cc:	82 00 60 04 	add  %g1, 4, %g1
 1d0:	c2 21 00 00 	st  %g1, [ %g4 ]
 1d4:	88 07 a0 48 	add  %fp, 0x48, %g4
 1d8:	c2 01 00 00 	ld  [ %g4 ], %g1
 1dc:	86 10 00 01 	mov  %g1, %g3
 1e0:	c4 07 bf d8 	ld  [ %fp + -40 ], %g2
 1e4:	c4 20 c0 00 	st  %g2, [ %g3 ]
 1e8:	82 00 60 04 	add  %g1, 4, %g1
 1ec:	c2 21 00 00 	st  %g1, [ %g4 ]
 1f0:	c4 07 bf e4 	ld  [ %fp + -28 ], %g2
 1f4:	c2 07 bf e0 	ld  [ %fp + -32 ], %g1
 1f8:	82 00 80 01 	add  %g2, %g1, %g1
 1fc:	d0 07 bf c0 	ld  [ %fp + -64 ], %o0
 200:	92 10 00 01 	mov  %g1, %o1
 204:	40 00 02 ce 	call  d3c <MULSHIFT32>
 208:	01 00 00 00 	nop 
 20c:	82 10 00 08 	mov  %o0, %g1
 210:	c2 27 bf d4 	st  %g1, [ %fp + -44 ]
 214:	d0 07 bf c4 	ld  [ %fp + -60 ], %o0
 218:	d2 07 bf e0 	ld  [ %fp + -32 ], %o1
 21c:	40 00 02 c8 	call  d3c <MULSHIFT32>
 220:	01 00 00 00 	nop 
 224:	84 10 00 08 	mov  %o0, %g2
 228:	c2 07 bf d4 	ld  [ %fp + -44 ], %g1
 22c:	82 20 80 01 	sub  %g2, %g1, %g1
 230:	c2 27 bf d8 	st  %g1, [ %fp + -40 ]
 234:	c2 07 bf c0 	ld  [ %fp + -64 ], %g1
 238:	84 00 40 01 	add  %g1, %g1, %g2
 23c:	c2 07 bf c4 	ld  [ %fp + -60 ], %g1
 240:	82 20 40 02 	sub  %g1, %g2, %g1
 244:	c2 27 bf d0 	st  %g1, [ %fp + -48 ]
 248:	d0 07 bf d0 	ld  [ %fp + -48 ], %o0
 24c:	d2 07 bf e4 	ld  [ %fp + -28 ], %o1
 250:	40 00 02 bb 	call  d3c <MULSHIFT32>
 254:	01 00 00 00 	nop 
 258:	84 10 00 08 	mov  %o0, %g2
 25c:	c2 07 bf d4 	ld  [ %fp + -44 ], %g1
 260:	82 00 80 01 	add  %g2, %g1, %g1
 264:	c2 27 bf dc 	st  %g1, [ %fp + -36 ]
 268:	88 07 bf bc 	add  %fp, -68, %g4
 26c:	c2 01 00 00 	ld  [ %g4 ], %g1
 270:	86 10 00 01 	mov  %g1, %g3
 274:	c4 07 bf d8 	ld  [ %fp + -40 ], %g2
 278:	c4 20 c0 00 	st  %g2, [ %g3 ]
 27c:	82 00 7f fc 	add  %g1, -4, %g1
 280:	c2 21 00 00 	st  %g1, [ %g4 ]
 284:	88 07 bf bc 	add  %fp, -68, %g4
 288:	c2 01 00 00 	ld  [ %g4 ], %g1
 28c:	86 10 00 01 	mov  %g1, %g3
 290:	c4 07 bf dc 	ld  [ %fp + -36 ], %g2
 294:	c4 20 c0 00 	st  %g2, [ %g3 ]
 298:	82 00 7f fc 	add  %g1, -4, %g1
 29c:	c2 21 00 00 	st  %g1, [ %g4 ]
 2a0:	c2 07 bf f4 	ld  [ %fp + -12 ], %g1
 2a4:	82 00 7f ff 	add  %g1, -1, %g1
 2a8:	c2 27 bf f4 	st  %g1, [ %fp + -12 ]
 2ac:	10 bf ff 79 	b  90 <PreMultiply+0x88>
 2b0:	01 00 00 00 	nop 
 2b4:	81 c7 e0 08 	ret 
 2b8:	81 e8 00 00 	restore 

000002bc <PostMultiply>:
 2bc:	9d e3 bf 60 	save  %sp, -160, %sp
 2c0:	2f 00 00 00 	sethi  %hi(0), %l7
 2c4:	7f ff ff 4f 	call  0 <PreMultiply-0x8>
 2c8:	ae 05 e0 00 	add  %l7, 0, %l7	! 0 <PreMultiply-0x8>
 2cc:	f0 27 a0 44 	st  %i0, [ %fp + 0x44 ]
 2d0:	f2 27 a0 48 	st  %i1, [ %fp + 0x48 ]
 2d4:	03 00 00 00 	sethi  %hi(0), %g1
 2d8:	82 10 60 00 	mov  %g1, %g1	! 0 <PreMultiply-0x8>
 2dc:	c4 05 c0 01 	ld  [ %l7 + %g1 ], %g2
 2e0:	c2 07 a0 44 	ld  [ %fp + 0x44 ], %g1
 2e4:	83 28 60 02 	sll  %g1, 2, %g1
 2e8:	c2 00 80 01 	ld  [ %g2 + %g1 ], %g1
 2ec:	c2 27 bf f0 	st  %g1, [ %fp + -16 ]
 2f0:	03 00 00 00 	sethi  %hi(0), %g1
 2f4:	82 10 60 00 	mov  %g1, %g1	! 0 <PreMultiply-0x8>
 2f8:	c2 05 c0 01 	ld  [ %l7 + %g1 ], %g1
 2fc:	c2 27 bf c4 	st  %g1, [ %fp + -60 ]
 300:	03 00 00 00 	sethi  %hi(0), %g1
 304:	82 10 60 00 	mov  %g1, %g1	! 0 <PreMultiply-0x8>
 308:	c4 05 c0 01 	ld  [ %l7 + %g1 ], %g2
 30c:	c2 07 a0 44 	ld  [ %fp + 0x44 ], %g1
 310:	83 28 60 02 	sll  %g1, 2, %g1
 314:	c2 00 80 01 	ld  [ %g2 + %g1 ], %g1
 318:	c2 27 bf dc 	st  %g1, [ %fp + -36 ]
 31c:	c2 07 bf f0 	ld  [ %fp + -16 ], %g1
 320:	85 28 60 02 	sll  %g1, 2, %g2
 324:	c2 07 a0 48 	ld  [ %fp + 0x48 ], %g1
 328:	82 00 80 01 	add  %g2, %g1, %g1
 32c:	82 00 7f fc 	add  %g1, -4, %g1
 330:	c2 27 bf c8 	st  %g1, [ %fp + -56 ]
 334:	84 07 bf c4 	add  %fp, -60, %g2
 338:	c2 00 80 00 	ld  [ %g2 ], %g1
 33c:	c6 00 40 00 	ld  [ %g1 ], %g3
 340:	82 00 60 04 	add  %g1, 4, %g1
 344:	c2 20 80 00 	st  %g1, [ %g2 ]
 348:	c6 27 bf d0 	st  %g3, [ %fp + -48 ]
 34c:	c2 07 bf c4 	ld  [ %fp + -60 ], %g1
 350:	c2 00 40 00 	ld  [ %g1 ], %g1
 354:	c2 27 bf cc 	st  %g1, [ %fp + -52 ]
 358:	c2 07 bf dc 	ld  [ %fp + -36 ], %g1
 35c:	85 28 60 02 	sll  %g1, 2, %g2
 360:	c2 07 bf c4 	ld  [ %fp + -60 ], %g1
 364:	82 00 40 02 	add  %g1, %g2, %g1
 368:	c2 27 bf c4 	st  %g1, [ %fp + -60 ]
 36c:	c2 07 bf cc 	ld  [ %fp + -52 ], %g1
 370:	84 00 40 01 	add  %g1, %g1, %g2
 374:	c2 07 bf d0 	ld  [ %fp + -48 ], %g1
 378:	82 20 40 02 	sub  %g1, %g2, %g1
 37c:	c2 27 bf d4 	st  %g1, [ %fp + -44 ]
 380:	c2 07 bf f0 	ld  [ %fp + -16 ], %g1
 384:	83 38 60 02 	sra  %g1, 2, %g1
 388:	c2 27 bf f4 	st  %g1, [ %fp + -12 ]
 38c:	c2 07 bf f4 	ld  [ %fp + -12 ], %g1
 390:	80 a0 60 00 	cmp  %g1, 0
 394:	12 80 00 04 	bne  3a4 <PostMultiply+0xe8>
 398:	01 00 00 00 	nop 
 39c:	10 80 00 71 	b  560 <PostMultiply+0x2a4>
 3a0:	01 00 00 00 	nop 
 3a4:	c2 07 a0 48 	ld  [ %fp + 0x48 ], %g1
 3a8:	c2 00 40 00 	ld  [ %g1 ], %g1
 3ac:	c2 27 bf ec 	st  %g1, [ %fp + -20 ]
 3b0:	c2 07 a0 48 	ld  [ %fp + 0x48 ], %g1
 3b4:	82 00 60 04 	add  %g1, 4, %g1
 3b8:	c2 00 40 00 	ld  [ %g1 ], %g1
 3bc:	c2 27 bf e8 	st  %g1, [ %fp + -24 ]
 3c0:	c2 07 bf c8 	ld  [ %fp + -56 ], %g1
 3c4:	82 00 7f fc 	add  %g1, -4, %g1
 3c8:	c2 00 40 00 	ld  [ %g1 ], %g1
 3cc:	c2 27 bf e4 	st  %g1, [ %fp + -28 ]
 3d0:	c2 07 bf c8 	ld  [ %fp + -56 ], %g1
 3d4:	c2 00 40 00 	ld  [ %g1 ], %g1
 3d8:	c2 27 bf e0 	st  %g1, [ %fp + -32 ]
 3dc:	c4 07 bf ec 	ld  [ %fp + -20 ], %g2
 3e0:	c2 07 bf e8 	ld  [ %fp + -24 ], %g1
 3e4:	82 00 80 01 	add  %g2, %g1, %g1
 3e8:	d0 07 bf cc 	ld  [ %fp + -52 ], %o0
 3ec:	92 10 00 01 	mov  %g1, %o1
 3f0:	40 00 02 53 	call  d3c <MULSHIFT32>
 3f4:	01 00 00 00 	nop 
 3f8:	82 10 00 08 	mov  %o0, %g1
 3fc:	c2 27 bf d8 	st  %g1, [ %fp + -40 ]
 400:	84 07 bf c8 	add  %fp, -56, %g2
 404:	c2 00 80 00 	ld  [ %g2 ], %g1
 408:	a0 10 00 01 	mov  %g1, %l0
 40c:	82 00 7f fc 	add  %g1, -4, %g1
 410:	c2 20 80 00 	st  %g1, [ %g2 ]
 414:	d0 07 bf d0 	ld  [ %fp + -48 ], %o0
 418:	d2 07 bf e8 	ld  [ %fp + -24 ], %o1
 41c:	40 00 02 48 	call  d3c <MULSHIFT32>
 420:	01 00 00 00 	nop 
 424:	84 10 00 08 	mov  %o0, %g2
 428:	c2 07 bf d8 	ld  [ %fp + -40 ], %g1
 42c:	82 20 40 02 	sub  %g1, %g2, %g1
 430:	c2 24 00 00 	st  %g1, [ %l0 ]
 434:	84 07 a0 48 	add  %fp, 0x48, %g2
 438:	c2 00 80 00 	ld  [ %g2 ], %g1
 43c:	a0 10 00 01 	mov  %g1, %l0
 440:	82 00 60 04 	add  %g1, 4, %g1
 444:	c2 20 80 00 	st  %g1, [ %g2 ]
 448:	d0 07 bf d4 	ld  [ %fp + -44 ], %o0
 44c:	d2 07 bf ec 	ld  [ %fp + -20 ], %o1
 450:	40 00 02 3b 	call  d3c <MULSHIFT32>
 454:	01 00 00 00 	nop 
 458:	84 10 00 08 	mov  %o0, %g2
 45c:	c2 07 bf d8 	ld  [ %fp + -40 ], %g1
 460:	82 00 80 01 	add  %g2, %g1, %g1
 464:	c2 24 00 00 	st  %g1, [ %l0 ]
 468:	84 07 bf c4 	add  %fp, -60, %g2
 46c:	c2 00 80 00 	ld  [ %g2 ], %g1
 470:	c6 00 40 00 	ld  [ %g1 ], %g3
 474:	82 00 60 04 	add  %g1, 4, %g1
 478:	c2 20 80 00 	st  %g1, [ %g2 ]
 47c:	c6 27 bf d0 	st  %g3, [ %fp + -48 ]
 480:	c2 07 bf c4 	ld  [ %fp + -60 ], %g1
 484:	c2 00 40 00 	ld  [ %g1 ], %g1
 488:	c2 27 bf cc 	st  %g1, [ %fp + -52 ]
 48c:	c2 07 bf dc 	ld  [ %fp + -36 ], %g1
 490:	85 28 60 02 	sll  %g1, 2, %g2
 494:	c2 07 bf c4 	ld  [ %fp + -60 ], %g1
 498:	82 00 40 02 	add  %g1, %g2, %g1
 49c:	c2 27 bf c4 	st  %g1, [ %fp + -60 ]
 4a0:	c2 07 bf e0 	ld  [ %fp + -32 ], %g1
 4a4:	82 20 00 01 	neg  %g1
 4a8:	c2 27 bf e0 	st  %g1, [ %fp + -32 ]
 4ac:	c4 07 bf e4 	ld  [ %fp + -28 ], %g2
 4b0:	c2 07 bf e0 	ld  [ %fp + -32 ], %g1
 4b4:	82 00 80 01 	add  %g2, %g1, %g1
 4b8:	d0 07 bf cc 	ld  [ %fp + -52 ], %o0
 4bc:	92 10 00 01 	mov  %g1, %o1
 4c0:	40 00 02 1f 	call  d3c <MULSHIFT32>
 4c4:	01 00 00 00 	nop 
 4c8:	82 10 00 08 	mov  %o0, %g1
 4cc:	c2 27 bf d8 	st  %g1, [ %fp + -40 ]
 4d0:	84 07 bf c8 	add  %fp, -56, %g2
 4d4:	c2 00 80 00 	ld  [ %g2 ], %g1
 4d8:	a0 10 00 01 	mov  %g1, %l0
 4dc:	82 00 7f fc 	add  %g1, -4, %g1
 4e0:	c2 20 80 00 	st  %g1, [ %g2 ]
 4e4:	d0 07 bf d0 	ld  [ %fp + -48 ], %o0
 4e8:	d2 07 bf e0 	ld  [ %fp + -32 ], %o1
 4ec:	40 00 02 14 	call  d3c <MULSHIFT32>
 4f0:	01 00 00 00 	nop 
 4f4:	84 10 00 08 	mov  %o0, %g2
 4f8:	c2 07 bf d8 	ld  [ %fp + -40 ], %g1
 4fc:	82 20 40 02 	sub  %g1, %g2, %g1
 500:	c2 24 00 00 	st  %g1, [ %l0 ]
 504:	c2 07 bf cc 	ld  [ %fp + -52 ], %g1
 508:	84 00 40 01 	add  %g1, %g1, %g2
 50c:	c2 07 bf d0 	ld  [ %fp + -48 ], %g1
 510:	82 20 40 02 	sub  %g1, %g2, %g1
 514:	c2 27 bf d4 	st  %g1, [ %fp + -44 ]
 518:	84 07 a0 48 	add  %fp, 0x48, %g2
 51c:	c2 00 80 00 	ld  [ %g2 ], %g1
 520:	a0 10 00 01 	mov  %g1, %l0
 524:	82 00 60 04 	add  %g1, 4, %g1
 528:	c2 20 80 00 	st  %g1, [ %g2 ]
 52c:	d0 07 bf d4 	ld  [ %fp + -44 ], %o0
 530:	d2 07 bf e4 	ld  [ %fp + -28 ], %o1
 534:	40 00 02 02 	call  d3c <MULSHIFT32>
 538:	01 00 00 00 	nop 
 53c:	84 10 00 08 	mov  %o0, %g2
 540:	c2 07 bf d8 	ld  [ %fp + -40 ], %g1
 544:	82 00 80 01 	add  %g2, %g1, %g1
 548:	c2 24 00 00 	st  %g1, [ %l0 ]
 54c:	c2 07 bf f4 	ld  [ %fp + -12 ], %g1
 550:	82 00 7f ff 	add  %g1, -1, %g1
 554:	c2 27 bf f4 	st  %g1, [ %fp + -12 ]
 558:	10 bf ff 8d 	b  38c <PostMultiply+0xd0>
 55c:	01 00 00 00 	nop 
 560:	81 c7 e0 08 	ret 
 564:	81 e8 00 00 	restore 

00000568 <PreMultiplyRescale>:
 568:	9d e3 bf 58 	save  %sp, -168, %sp
 56c:	2f 00 00 00 	sethi  %hi(0), %l7
 570:	7f ff fe a4 	call  0 <PreMultiply-0x8>
 574:	ae 05 e0 00 	add  %l7, 0, %l7	! 0 <PreMultiply-0x8>
 578:	f0 27 a0 44 	st  %i0, [ %fp + 0x44 ]
 57c:	f2 27 a0 48 	st  %i1, [ %fp + 0x48 ]
 580:	f4 27 a0 4c 	st  %i2, [ %fp + 0x4c ]
 584:	03 00 00 00 	sethi  %hi(0), %g1
 588:	82 10 60 00 	mov  %g1, %g1	! 0 <PreMultiply-0x8>
 58c:	c4 05 c0 01 	ld  [ %l7 + %g1 ], %g2
 590:	c2 07 a0 44 	ld  [ %fp + 0x44 ], %g1
 594:	83 28 60 02 	sll  %g1, 2, %g1
 598:	c2 00 80 01 	ld  [ %g2 + %g1 ], %g1
 59c:	c2 27 bf f0 	st  %g1, [ %fp + -16 ]
 5a0:	c2 07 bf f0 	ld  [ %fp + -16 ], %g1
 5a4:	85 28 60 02 	sll  %g1, 2, %g2
 5a8:	c2 07 a0 48 	ld  [ %fp + 0x48 ], %g1
 5ac:	82 00 80 01 	add  %g2, %g1, %g1
 5b0:	82 00 7f fc 	add  %g1, -4, %g1
 5b4:	c2 27 bf bc 	st  %g1, [ %fp + -68 ]
 5b8:	03 00 00 00 	sethi  %hi(0), %g1
 5bc:	82 10 60 00 	mov  %g1, %g1	! 0 <PreMultiply-0x8>
 5c0:	c4 05 c0 01 	ld  [ %l7 + %g1 ], %g2
 5c4:	c2 07 a0 44 	ld  [ %fp + 0x44 ], %g1
 5c8:	83 28 60 02 	sll  %g1, 2, %g1
 5cc:	c2 00 80 01 	ld  [ %g2 + %g1 ], %g1
 5d0:	85 28 60 02 	sll  %g1, 2, %g2
 5d4:	03 00 00 00 	sethi  %hi(0), %g1
 5d8:	82 10 60 00 	mov  %g1, %g1	! 0 <PreMultiply-0x8>
 5dc:	c2 05 c0 01 	ld  [ %l7 + %g1 ], %g1
 5e0:	82 00 40 02 	add  %g1, %g2, %g1
 5e4:	c2 27 bf b8 	st  %g1, [ %fp + -72 ]
 5e8:	c2 07 bf f0 	ld  [ %fp + -16 ], %g1
 5ec:	83 38 60 02 	sra  %g1, 2, %g1
 5f0:	c2 27 bf f4 	st  %g1, [ %fp + -12 ]
 5f4:	c2 07 bf f4 	ld  [ %fp + -12 ], %g1
 5f8:	80 a0 60 00 	cmp  %g1, 0
 5fc:	12 80 00 04 	bne  60c <PreMultiplyRescale+0xa4>
 600:	01 00 00 00 	nop 
 604:	10 80 00 8d 	b  838 <PreMultiplyRescale+0x2d0>
 608:	01 00 00 00 	nop 
 60c:	84 07 bf b8 	add  %fp, -72, %g2
 610:	c2 00 80 00 	ld  [ %g2 ], %g1
 614:	c6 00 40 00 	ld  [ %g1 ], %g3
 618:	82 00 60 04 	add  %g1, 4, %g1
 61c:	c2 20 80 00 	st  %g1, [ %g2 ]
 620:	c6 27 bf cc 	st  %g3, [ %fp + -52 ]
 624:	84 07 bf b8 	add  %fp, -72, %g2
 628:	c2 00 80 00 	ld  [ %g2 ], %g1
 62c:	c6 00 40 00 	ld  [ %g1 ], %g3
 630:	82 00 60 04 	add  %g1, 4, %g1
 634:	c2 20 80 00 	st  %g1, [ %g2 ]
 638:	c6 27 bf c8 	st  %g3, [ %fp + -56 ]
 63c:	84 07 bf b8 	add  %fp, -72, %g2
 640:	c2 00 80 00 	ld  [ %g2 ], %g1
 644:	c6 00 40 00 	ld  [ %g1 ], %g3
 648:	82 00 60 04 	add  %g1, 4, %g1
 64c:	c2 20 80 00 	st  %g1, [ %g2 ]
 650:	c6 27 bf c4 	st  %g3, [ %fp + -60 ]
 654:	84 07 bf b8 	add  %fp, -72, %g2
 658:	c2 00 80 00 	ld  [ %g2 ], %g1
 65c:	c6 00 40 00 	ld  [ %g1 ], %g3
 660:	82 00 60 04 	add  %g1, 4, %g1
 664:	c2 20 80 00 	st  %g1, [ %g2 ]
 668:	c6 27 bf c0 	st  %g3, [ %fp + -64 ]
 66c:	c2 07 a0 48 	ld  [ %fp + 0x48 ], %g1
 670:	c4 00 40 00 	ld  [ %g1 ], %g2
 674:	c2 07 a0 4c 	ld  [ %fp + 0x4c ], %g1
 678:	83 38 80 01 	sra  %g2, %g1, %g1
 67c:	c2 27 bf ec 	st  %g1, [ %fp + -20 ]
 680:	c2 07 bf bc 	ld  [ %fp + -68 ], %g1
 684:	c4 00 40 00 	ld  [ %g1 ], %g2
 688:	c2 07 a0 4c 	ld  [ %fp + 0x4c ], %g1
 68c:	83 38 80 01 	sra  %g2, %g1, %g1
 690:	c2 27 bf e8 	st  %g1, [ %fp + -24 ]
 694:	c2 07 a0 48 	ld  [ %fp + 0x48 ], %g1
 698:	82 00 60 04 	add  %g1, 4, %g1
 69c:	c4 00 40 00 	ld  [ %g1 ], %g2
 6a0:	c2 07 a0 4c 	ld  [ %fp + 0x4c ], %g1
 6a4:	83 38 80 01 	sra  %g2, %g1, %g1
 6a8:	c2 27 bf e0 	st  %g1, [ %fp + -32 ]
 6ac:	c4 07 bf ec 	ld  [ %fp + -20 ], %g2
 6b0:	c2 07 bf e8 	ld  [ %fp + -24 ], %g1
 6b4:	82 00 80 01 	add  %g2, %g1, %g1
 6b8:	d0 07 bf c8 	ld  [ %fp + -56 ], %o0
 6bc:	92 10 00 01 	mov  %g1, %o1
 6c0:	40 00 01 9f 	call  d3c <MULSHIFT32>
 6c4:	01 00 00 00 	nop 
 6c8:	82 10 00 08 	mov  %o0, %g1
 6cc:	c2 27 bf d4 	st  %g1, [ %fp + -44 ]
 6d0:	d0 07 bf cc 	ld  [ %fp + -52 ], %o0
 6d4:	d2 07 bf e8 	ld  [ %fp + -24 ], %o1
 6d8:	40 00 01 99 	call  d3c <MULSHIFT32>
 6dc:	01 00 00 00 	nop 
 6e0:	84 10 00 08 	mov  %o0, %g2
 6e4:	c2 07 bf d4 	ld  [ %fp + -44 ], %g1
 6e8:	82 20 80 01 	sub  %g2, %g1, %g1
 6ec:	c2 27 bf d8 	st  %g1, [ %fp + -40 ]
 6f0:	c2 07 bf c8 	ld  [ %fp + -56 ], %g1
 6f4:	84 00 40 01 	add  %g1, %g1, %g2
 6f8:	c2 07 bf cc 	ld  [ %fp + -52 ], %g1
 6fc:	82 20 40 02 	sub  %g1, %g2, %g1
 700:	c2 27 bf d0 	st  %g1, [ %fp + -48 ]
 704:	d0 07 bf d0 	ld  [ %fp + -48 ], %o0
 708:	d2 07 bf ec 	ld  [ %fp + -20 ], %o1
 70c:	40 00 01 8c 	call  d3c <MULSHIFT32>
 710:	01 00 00 00 	nop 
 714:	84 10 00 08 	mov  %o0, %g2
 718:	c2 07 bf d4 	ld  [ %fp + -44 ], %g1
 71c:	82 00 80 01 	add  %g2, %g1, %g1
 720:	c2 27 bf dc 	st  %g1, [ %fp + -36 ]
 724:	88 07 a0 48 	add  %fp, 0x48, %g4
 728:	c2 01 00 00 	ld  [ %g4 ], %g1
 72c:	86 10 00 01 	mov  %g1, %g3
 730:	c4 07 bf dc 	ld  [ %fp + -36 ], %g2
 734:	c4 20 c0 00 	st  %g2, [ %g3 ]
 738:	82 00 60 04 	add  %g1, 4, %g1
 73c:	c2 21 00 00 	st  %g1, [ %g4 ]
 740:	88 07 a0 48 	add  %fp, 0x48, %g4
 744:	c2 01 00 00 	ld  [ %g4 ], %g1
 748:	86 10 00 01 	mov  %g1, %g3
 74c:	c4 07 bf d8 	ld  [ %fp + -40 ], %g2
 750:	c4 20 c0 00 	st  %g2, [ %g3 ]
 754:	82 00 60 04 	add  %g1, 4, %g1
 758:	c2 21 00 00 	st  %g1, [ %g4 ]
 75c:	c2 07 bf bc 	ld  [ %fp + -68 ], %g1
 760:	82 00 7f fc 	add  %g1, -4, %g1
 764:	c4 00 40 00 	ld  [ %g1 ], %g2
 768:	c2 07 a0 4c 	ld  [ %fp + 0x4c ], %g1
 76c:	83 38 80 01 	sra  %g2, %g1, %g1
 770:	c2 27 bf e4 	st  %g1, [ %fp + -28 ]
 774:	c4 07 bf e4 	ld  [ %fp + -28 ], %g2
 778:	c2 07 bf e0 	ld  [ %fp + -32 ], %g1
 77c:	82 00 80 01 	add  %g2, %g1, %g1
 780:	d0 07 bf c0 	ld  [ %fp + -64 ], %o0
 784:	92 10 00 01 	mov  %g1, %o1
 788:	40 00 01 6d 	call  d3c <MULSHIFT32>
 78c:	01 00 00 00 	nop 
 790:	82 10 00 08 	mov  %o0, %g1
 794:	c2 27 bf d4 	st  %g1, [ %fp + -44 ]
 798:	d0 07 bf c4 	ld  [ %fp + -60 ], %o0
 79c:	d2 07 bf e0 	ld  [ %fp + -32 ], %o1
 7a0:	40 00 01 67 	call  d3c <MULSHIFT32>
 7a4:	01 00 00 00 	nop 
 7a8:	84 10 00 08 	mov  %o0, %g2
 7ac:	c2 07 bf d4 	ld  [ %fp + -44 ], %g1
 7b0:	82 20 80 01 	sub  %g2, %g1, %g1
 7b4:	c2 27 bf d8 	st  %g1, [ %fp + -40 ]
 7b8:	c2 07 bf c0 	ld  [ %fp + -64 ], %g1
 7bc:	84 00 40 01 	add  %g1, %g1, %g2
 7c0:	c2 07 bf c4 	ld  [ %fp + -60 ], %g1
 7c4:	82 20 40 02 	sub  %g1, %g2, %g1
 7c8:	c2 27 bf d0 	st  %g1, [ %fp + -48 ]
 7cc:	d0 07 bf d0 	ld  [ %fp + -48 ], %o0
 7d0:	d2 07 bf e4 	ld  [ %fp + -28 ], %o1
 7d4:	40 00 01 5a 	call  d3c <MULSHIFT32>
 7d8:	01 00 00 00 	nop 
 7dc:	84 10 00 08 	mov  %o0, %g2
 7e0:	c2 07 bf d4 	ld  [ %fp + -44 ], %g1
 7e4:	82 00 80 01 	add  %g2, %g1, %g1
 7e8:	c2 27 bf dc 	st  %g1, [ %fp + -36 ]
 7ec:	88 07 bf bc 	add  %fp, -68, %g4
 7f0:	c2 01 00 00 	ld  [ %g4 ], %g1
 7f4:	86 10 00 01 	mov  %g1, %g3
 7f8:	c4 07 bf d8 	ld  [ %fp + -40 ], %g2
 7fc:	c4 20 c0 00 	st  %g2, [ %g3 ]
 800:	82 00 7f fc 	add  %g1, -4, %g1
 804:	c2 21 00 00 	st  %g1, [ %g4 ]
 808:	88 07 bf bc 	add  %fp, -68, %g4
 80c:	c2 01 00 00 	ld  [ %g4 ], %g1
 810:	86 10 00 01 	mov  %g1, %g3
 814:	c4 07 bf dc 	ld  [ %fp + -36 ], %g2
 818:	c4 20 c0 00 	st  %g2, [ %g3 ]
 81c:	82 00 7f fc 	add  %g1, -4, %g1
 820:	c2 21 00 00 	st  %g1, [ %g4 ]
 824:	c2 07 bf f4 	ld  [ %fp + -12 ], %g1
 828:	82 00 7f ff 	add  %g1, -1, %g1
 82c:	c2 27 bf f4 	st  %g1, [ %fp + -12 ]
 830:	10 bf ff 71 	b  5f4 <PreMultiplyRescale+0x8c>
 834:	01 00 00 00 	nop 
 838:	81 c7 e0 08 	ret 
 83c:	81 e8 00 00 	restore 

00000840 <PostMultiplyRescale>:
 840:	9d e3 bf 60 	save  %sp, -160, %sp
 844:	2f 00 00 00 	sethi  %hi(0), %l7
 848:	7f ff fd ee 	call  0 <PreMultiply-0x8>
 84c:	ae 05 e0 00 	add  %l7, 0, %l7	! 0 <PreMultiply-0x8>
 850:	f0 27 a0 44 	st  %i0, [ %fp + 0x44 ]
 854:	f2 27 a0 48 	st  %i1, [ %fp + 0x48 ]
 858:	f4 27 a0 4c 	st  %i2, [ %fp + 0x4c ]
 85c:	03 00 00 00 	sethi  %hi(0), %g1
 860:	82 10 60 00 	mov  %g1, %g1	! 0 <PreMultiply-0x8>
 864:	c4 05 c0 01 	ld  [ %l7 + %g1 ], %g2
 868:	c2 07 a0 44 	ld  [ %fp + 0x44 ], %g1
 86c:	83 28 60 02 	sll  %g1, 2, %g1
 870:	c2 00 80 01 	ld  [ %g2 + %g1 ], %g1
 874:	c2 27 bf f0 	st  %g1, [ %fp + -16 ]
 878:	03 00 00 00 	sethi  %hi(0), %g1
 87c:	82 10 60 00 	mov  %g1, %g1	! 0 <PreMultiply-0x8>
 880:	c2 05 c0 01 	ld  [ %l7 + %g1 ], %g1
 884:	c2 27 bf c4 	st  %g1, [ %fp + -60 ]
 888:	03 00 00 00 	sethi  %hi(0), %g1
 88c:	82 10 60 00 	mov  %g1, %g1	! 0 <PreMultiply-0x8>
 890:	c4 05 c0 01 	ld  [ %l7 + %g1 ], %g2
 894:	c2 07 a0 44 	ld  [ %fp + 0x44 ], %g1
 898:	83 28 60 02 	sll  %g1, 2, %g1
 89c:	c2 00 80 01 	ld  [ %g2 + %g1 ], %g1
 8a0:	c2 27 bf dc 	st  %g1, [ %fp + -36 ]
 8a4:	c2 07 bf f0 	ld  [ %fp + -16 ], %g1
 8a8:	85 28 60 02 	sll  %g1, 2, %g2
 8ac:	c2 07 a0 48 	ld  [ %fp + 0x48 ], %g1
 8b0:	82 00 80 01 	add  %g2, %g1, %g1
 8b4:	82 00 7f fc 	add  %g1, -4, %g1
 8b8:	c2 27 bf c8 	st  %g1, [ %fp + -56 ]
 8bc:	84 07 bf c4 	add  %fp, -60, %g2
 8c0:	c2 00 80 00 	ld  [ %g2 ], %g1
 8c4:	c6 00 40 00 	ld  [ %g1 ], %g3
 8c8:	82 00 60 04 	add  %g1, 4, %g1
 8cc:	c2 20 80 00 	st  %g1, [ %g2 ]
 8d0:	c6 27 bf d0 	st  %g3, [ %fp + -48 ]
 8d4:	c2 07 bf c4 	ld  [ %fp + -60 ], %g1
 8d8:	c2 00 40 00 	ld  [ %g1 ], %g1
 8dc:	c2 27 bf cc 	st  %g1, [ %fp + -52 ]
 8e0:	c2 07 bf dc 	ld  [ %fp + -36 ], %g1
 8e4:	85 28 60 02 	sll  %g1, 2, %g2
 8e8:	c2 07 bf c4 	ld  [ %fp + -60 ], %g1
 8ec:	82 00 40 02 	add  %g1, %g2, %g1
 8f0:	c2 27 bf c4 	st  %g1, [ %fp + -60 ]
 8f4:	c2 07 bf f0 	ld  [ %fp + -16 ], %g1
 8f8:	83 38 60 02 	sra  %g1, 2, %g1
 8fc:	c2 27 bf f4 	st  %g1, [ %fp + -12 ]
 900:	c2 07 bf f4 	ld  [ %fp + -12 ], %g1
 904:	80 a0 60 00 	cmp  %g1, 0
 908:	12 80 00 04 	bne  918 <PostMultiplyRescale+0xd8>
 90c:	01 00 00 00 	nop 
 910:	10 80 00 de 	b  c88 <PostMultiplyRescale+0x448>
 914:	01 00 00 00 	nop 
 918:	c2 07 a0 48 	ld  [ %fp + 0x48 ], %g1
 91c:	c2 00 40 00 	ld  [ %g1 ], %g1
 920:	c2 27 bf ec 	st  %g1, [ %fp + -20 ]
 924:	c2 07 a0 48 	ld  [ %fp + 0x48 ], %g1
 928:	82 00 60 04 	add  %g1, 4, %g1
 92c:	c2 00 40 00 	ld  [ %g1 ], %g1
 930:	c2 27 bf e8 	st  %g1, [ %fp + -24 ]
 934:	c2 07 bf c8 	ld  [ %fp + -56 ], %g1
 938:	c2 00 40 00 	ld  [ %g1 ], %g1
 93c:	c2 27 bf e0 	st  %g1, [ %fp + -32 ]
 940:	c4 07 bf ec 	ld  [ %fp + -20 ], %g2
 944:	c2 07 bf e8 	ld  [ %fp + -24 ], %g1
 948:	82 00 80 01 	add  %g2, %g1, %g1
 94c:	d0 07 bf cc 	ld  [ %fp + -52 ], %o0
 950:	92 10 00 01 	mov  %g1, %o1
 954:	40 00 00 fa 	call  d3c <MULSHIFT32>
 958:	01 00 00 00 	nop 
 95c:	82 10 00 08 	mov  %o0, %g1
 960:	c2 27 bf d4 	st  %g1, [ %fp + -44 ]
 964:	d0 07 bf d0 	ld  [ %fp + -48 ], %o0
 968:	d2 07 bf e8 	ld  [ %fp + -24 ], %o1
 96c:	40 00 00 f4 	call  d3c <MULSHIFT32>
 970:	01 00 00 00 	nop 
 974:	84 10 00 08 	mov  %o0, %g2
 978:	c2 07 bf d4 	ld  [ %fp + -44 ], %g1
 97c:	82 20 40 02 	sub  %g1, %g2, %g1
 980:	c2 27 bf d8 	st  %g1, [ %fp + -40 ]
 984:	c2 07 bf d8 	ld  [ %fp + -40 ], %g1
 988:	83 38 60 1f 	sra  %g1, 0x1f, %g1
 98c:	c2 27 bf c0 	st  %g1, [ %fp + -64 ]
 990:	84 10 20 1e 	mov  0x1e, %g2
 994:	c2 07 a0 4c 	ld  [ %fp + 0x4c ], %g1
 998:	84 20 80 01 	sub  %g2, %g1, %g2
 99c:	c2 07 bf d8 	ld  [ %fp + -40 ], %g1
 9a0:	85 38 40 02 	sra  %g1, %g2, %g2
 9a4:	c2 07 bf c0 	ld  [ %fp + -64 ], %g1
 9a8:	80 a0 40 02 	cmp  %g1, %g2
 9ac:	02 80 00 09 	be  9d0 <PostMultiplyRescale+0x190>
 9b0:	01 00 00 00 	nop 
 9b4:	c4 07 bf c0 	ld  [ %fp + -64 ], %g2
 9b8:	03 0f ff ff 	sethi  %hi(0x3ffffc00), %g1
 9bc:	82 10 63 ff 	or  %g1, 0x3ff, %g1	! 3fffffff <MULSHIFT32+0x3ffff2c3>
 9c0:	82 18 80 01 	xor  %g2, %g1, %g1
 9c4:	c2 27 bf d8 	st  %g1, [ %fp + -40 ]
 9c8:	10 80 00 06 	b  9e0 <PostMultiplyRescale+0x1a0>
 9cc:	01 00 00 00 	nop 
 9d0:	c2 07 bf d8 	ld  [ %fp + -40 ], %g1
 9d4:	c4 07 a0 4c 	ld  [ %fp + 0x4c ], %g2
 9d8:	83 28 40 02 	sll  %g1, %g2, %g1
 9dc:	c2 27 bf d8 	st  %g1, [ %fp + -40 ]
 9e0:	88 07 bf c8 	add  %fp, -56, %g4
 9e4:	c2 01 00 00 	ld  [ %g4 ], %g1
 9e8:	86 10 00 01 	mov  %g1, %g3
 9ec:	c4 07 bf d8 	ld  [ %fp + -40 ], %g2
 9f0:	c4 20 c0 00 	st  %g2, [ %g3 ]
 9f4:	82 00 7f fc 	add  %g1, -4, %g1
 9f8:	c2 21 00 00 	st  %g1, [ %g4 ]
 9fc:	c2 07 bf cc 	ld  [ %fp + -52 ], %g1
 a00:	84 00 40 01 	add  %g1, %g1, %g2
 a04:	c2 07 bf d0 	ld  [ %fp + -48 ], %g1
 a08:	82 20 40 02 	sub  %g1, %g2, %g1
 a0c:	c2 27 bf d0 	st  %g1, [ %fp + -48 ]
 a10:	d0 07 bf d0 	ld  [ %fp + -48 ], %o0
 a14:	d2 07 bf ec 	ld  [ %fp + -20 ], %o1
 a18:	40 00 00 c9 	call  d3c <MULSHIFT32>
 a1c:	01 00 00 00 	nop 
 a20:	84 10 00 08 	mov  %o0, %g2
 a24:	c2 07 bf d4 	ld  [ %fp + -44 ], %g1
 a28:	82 00 40 02 	add  %g1, %g2, %g1
 a2c:	c2 27 bf d8 	st  %g1, [ %fp + -40 ]
 a30:	c2 07 bf d8 	ld  [ %fp + -40 ], %g1
 a34:	83 38 60 1f 	sra  %g1, 0x1f, %g1
 a38:	c2 27 bf c0 	st  %g1, [ %fp + -64 ]
 a3c:	84 10 20 1e 	mov  0x1e, %g2
 a40:	c2 07 a0 4c 	ld  [ %fp + 0x4c ], %g1
 a44:	84 20 80 01 	sub  %g2, %g1, %g2
 a48:	c2 07 bf d8 	ld  [ %fp + -40 ], %g1
 a4c:	85 38 40 02 	sra  %g1, %g2, %g2
 a50:	c2 07 bf c0 	ld  [ %fp + -64 ], %g1
 a54:	80 a0 40 02 	cmp  %g1, %g2
 a58:	02 80 00 09 	be  a7c <PostMultiplyRescale+0x23c>
 a5c:	01 00 00 00 	nop 
 a60:	c4 07 bf c0 	ld  [ %fp + -64 ], %g2
 a64:	03 0f ff ff 	sethi  %hi(0x3ffffc00), %g1
 a68:	82 10 63 ff 	or  %g1, 0x3ff, %g1	! 3fffffff <MULSHIFT32+0x3ffff2c3>
 a6c:	82 18 80 01 	xor  %g2, %g1, %g1
 a70:	c2 27 bf d8 	st  %g1, [ %fp + -40 ]
 a74:	10 80 00 06 	b  a8c <PostMultiplyRescale+0x24c>
 a78:	01 00 00 00 	nop 
 a7c:	c2 07 bf d8 	ld  [ %fp + -40 ], %g1
 a80:	c4 07 a0 4c 	ld  [ %fp + 0x4c ], %g2
 a84:	83 28 40 02 	sll  %g1, %g2, %g1
 a88:	c2 27 bf d8 	st  %g1, [ %fp + -40 ]
 a8c:	88 07 a0 48 	add  %fp, 0x48, %g4
 a90:	c2 01 00 00 	ld  [ %g4 ], %g1
 a94:	86 10 00 01 	mov  %g1, %g3
 a98:	c4 07 bf d8 	ld  [ %fp + -40 ], %g2
 a9c:	c4 20 c0 00 	st  %g2, [ %g3 ]
 aa0:	82 00 60 04 	add  %g1, 4, %g1
 aa4:	c2 21 00 00 	st  %g1, [ %g4 ]
 aa8:	84 07 bf c4 	add  %fp, -60, %g2
 aac:	c2 00 80 00 	ld  [ %g2 ], %g1
 ab0:	c6 00 40 00 	ld  [ %g1 ], %g3
 ab4:	82 00 60 04 	add  %g1, 4, %g1
 ab8:	c2 20 80 00 	st  %g1, [ %g2 ]
 abc:	c6 27 bf d0 	st  %g3, [ %fp + -48 ]
 ac0:	c2 07 bf c4 	ld  [ %fp + -60 ], %g1
 ac4:	c2 00 40 00 	ld  [ %g1 ], %g1
 ac8:	c2 27 bf cc 	st  %g1, [ %fp + -52 ]
 acc:	c2 07 bf dc 	ld  [ %fp + -36 ], %g1
 ad0:	85 28 60 02 	sll  %g1, 2, %g2
 ad4:	c2 07 bf c4 	ld  [ %fp + -60 ], %g1
 ad8:	82 00 40 02 	add  %g1, %g2, %g1
 adc:	c2 27 bf c4 	st  %g1, [ %fp + -60 ]
 ae0:	c2 07 bf c8 	ld  [ %fp + -56 ], %g1
 ae4:	c2 00 40 00 	ld  [ %g1 ], %g1
 ae8:	c2 27 bf e4 	st  %g1, [ %fp + -28 ]
 aec:	c2 07 bf e0 	ld  [ %fp + -32 ], %g1
 af0:	82 20 00 01 	neg  %g1
 af4:	c2 27 bf e0 	st  %g1, [ %fp + -32 ]
 af8:	c4 07 bf e4 	ld  [ %fp + -28 ], %g2
 afc:	c2 07 bf e0 	ld  [ %fp + -32 ], %g1
 b00:	82 00 80 01 	add  %g2, %g1, %g1
 b04:	d0 07 bf cc 	ld  [ %fp + -52 ], %o0
 b08:	92 10 00 01 	mov  %g1, %o1
 b0c:	40 00 00 8c 	call  d3c <MULSHIFT32>
 b10:	01 00 00 00 	nop 
 b14:	82 10 00 08 	mov  %o0, %g1
 b18:	c2 27 bf d4 	st  %g1, [ %fp + -44 ]
 b1c:	d0 07 bf d0 	ld  [ %fp + -48 ], %o0
 b20:	d2 07 bf e0 	ld  [ %fp + -32 ], %o1
 b24:	40 00 00 86 	call  d3c <MULSHIFT32>
 b28:	01 00 00 00 	nop 
 b2c:	84 10 00 08 	mov  %o0, %g2
 b30:	c2 07 bf d4 	ld  [ %fp + -44 ], %g1
 b34:	82 20 40 02 	sub  %g1, %g2, %g1
 b38:	c2 27 bf d8 	st  %g1, [ %fp + -40 ]
 b3c:	c2 07 bf d8 	ld  [ %fp + -40 ], %g1
 b40:	83 38 60 1f 	sra  %g1, 0x1f, %g1
 b44:	c2 27 bf c0 	st  %g1, [ %fp + -64 ]
 b48:	84 10 20 1e 	mov  0x1e, %g2
 b4c:	c2 07 a0 4c 	ld  [ %fp + 0x4c ], %g1
 b50:	84 20 80 01 	sub  %g2, %g1, %g2
 b54:	c2 07 bf d8 	ld  [ %fp + -40 ], %g1
 b58:	85 38 40 02 	sra  %g1, %g2, %g2
 b5c:	c2 07 bf c0 	ld  [ %fp + -64 ], %g1
 b60:	80 a0 40 02 	cmp  %g1, %g2
 b64:	02 80 00 09 	be  b88 <PostMultiplyRescale+0x348>
 b68:	01 00 00 00 	nop 
 b6c:	c4 07 bf c0 	ld  [ %fp + -64 ], %g2
 b70:	03 0f ff ff 	sethi  %hi(0x3ffffc00), %g1
 b74:	82 10 63 ff 	or  %g1, 0x3ff, %g1	! 3fffffff <MULSHIFT32+0x3ffff2c3>
 b78:	82 18 80 01 	xor  %g2, %g1, %g1
 b7c:	c2 27 bf d8 	st  %g1, [ %fp + -40 ]
 b80:	10 80 00 06 	b  b98 <PostMultiplyRescale+0x358>
 b84:	01 00 00 00 	nop 
 b88:	c2 07 bf d8 	ld  [ %fp + -40 ], %g1
 b8c:	c4 07 a0 4c 	ld  [ %fp + 0x4c ], %g2
 b90:	83 28 40 02 	sll  %g1, %g2, %g1
 b94:	c2 27 bf d8 	st  %g1, [ %fp + -40 ]
 b98:	88 07 bf c8 	add  %fp, -56, %g4
 b9c:	c2 01 00 00 	ld  [ %g4 ], %g1
 ba0:	86 10 00 01 	mov  %g1, %g3
 ba4:	c4 07 bf d8 	ld  [ %fp + -40 ], %g2
 ba8:	c4 20 c0 00 	st  %g2, [ %g3 ]
 bac:	82 00 7f fc 	add  %g1, -4, %g1
 bb0:	c2 21 00 00 	st  %g1, [ %g4 ]
 bb4:	c2 07 bf cc 	ld  [ %fp + -52 ], %g1
 bb8:	84 00 40 01 	add  %g1, %g1, %g2
 bbc:	c2 07 bf d0 	ld  [ %fp + -48 ], %g1
 bc0:	82 20 40 02 	sub  %g1, %g2, %g1
 bc4:	c2 27 bf d0 	st  %g1, [ %fp + -48 ]
 bc8:	d0 07 bf d0 	ld  [ %fp + -48 ], %o0
 bcc:	d2 07 bf e4 	ld  [ %fp + -28 ], %o1
 bd0:	40 00 00 5b 	call  d3c <MULSHIFT32>
 bd4:	01 00 00 00 	nop 
 bd8:	84 10 00 08 	mov  %o0, %g2
 bdc:	c2 07 bf d4 	ld  [ %fp + -44 ], %g1
 be0:	82 00 40 02 	add  %g1, %g2, %g1
 be4:	c2 27 bf d8 	st  %g1, [ %fp + -40 ]
 be8:	c2 07 bf d8 	ld  [ %fp + -40 ], %g1
 bec:	83 38 60 1f 	sra  %g1, 0x1f, %g1
 bf0:	c2 27 bf c0 	st  %g1, [ %fp + -64 ]
 bf4:	84 10 20 1e 	mov  0x1e, %g2
 bf8:	c2 07 a0 4c 	ld  [ %fp + 0x4c ], %g1
 bfc:	84 20 80 01 	sub  %g2, %g1, %g2
 c00:	c2 07 bf d8 	ld  [ %fp + -40 ], %g1
 c04:	85 38 40 02 	sra  %g1, %g2, %g2
 c08:	c2 07 bf c0 	ld  [ %fp + -64 ], %g1
 c0c:	80 a0 40 02 	cmp  %g1, %g2
 c10:	02 80 00 09 	be  c34 <PostMultiplyRescale+0x3f4>
 c14:	01 00 00 00 	nop 
 c18:	c4 07 bf c0 	ld  [ %fp + -64 ], %g2
 c1c:	03 0f ff ff 	sethi  %hi(0x3ffffc00), %g1
 c20:	82 10 63 ff 	or  %g1, 0x3ff, %g1	! 3fffffff <MULSHIFT32+0x3ffff2c3>
 c24:	82 18 80 01 	xor  %g2, %g1, %g1
 c28:	c2 27 bf d8 	st  %g1, [ %fp + -40 ]
 c2c:	10 80 00 06 	b  c44 <PostMultiplyRescale+0x404>
 c30:	01 00 00 00 	nop 
 c34:	c2 07 bf d8 	ld  [ %fp + -40 ], %g1
 c38:	c4 07 a0 4c 	ld  [ %fp + 0x4c ], %g2
 c3c:	83 28 40 02 	sll  %g1, %g2, %g1
 c40:	c2 27 bf d8 	st  %g1, [ %fp + -40 ]
 c44:	88 07 a0 48 	add  %fp, 0x48, %g4
 c48:	c2 01 00 00 	ld  [ %g4 ], %g1
 c4c:	86 10 00 01 	mov  %g1, %g3
 c50:	c4 07 bf d8 	ld  [ %fp + -40 ], %g2
 c54:	c4 20 c0 00 	st  %g2, [ %g3 ]
 c58:	82 00 60 04 	add  %g1, 4, %g1
 c5c:	c2 21 00 00 	st  %g1, [ %g4 ]
 c60:	c2 07 bf cc 	ld  [ %fp + -52 ], %g1
 c64:	84 00 40 01 	add  %g1, %g1, %g2
 c68:	c2 07 bf d0 	ld  [ %fp + -48 ], %g1
 c6c:	82 00 40 02 	add  %g1, %g2, %g1
 c70:	c2 27 bf d0 	st  %g1, [ %fp + -48 ]
 c74:	c2 07 bf f4 	ld  [ %fp + -12 ], %g1
 c78:	82 00 7f ff 	add  %g1, -1, %g1
 c7c:	c2 27 bf f4 	st  %g1, [ %fp + -12 ]
 c80:	10 bf ff 20 	b  900 <PostMultiplyRescale+0xc0>
 c84:	01 00 00 00 	nop 
 c88:	81 c7 e0 08 	ret 
 c8c:	81 e8 00 00 	restore 

00000c90 <raac_DCT4>:
 c90:	9d e3 bf 90 	save  %sp, -112, %sp
 c94:	f0 27 a0 44 	st  %i0, [ %fp + 0x44 ]
 c98:	f2 27 a0 48 	st  %i1, [ %fp + 0x48 ]
 c9c:	f4 27 a0 4c 	st  %i2, [ %fp + 0x4c ]
 ca0:	c2 07 a0 4c 	ld  [ %fp + 0x4c ], %g1
 ca4:	80 a0 60 03 	cmp  %g1, 3
 ca8:	14 80 00 16 	bg  d00 <raac_DCT4+0x70>
 cac:	01 00 00 00 	nop 
 cb0:	82 10 20 04 	mov  4, %g1	! 4 <PreMultiply-0x4>
 cb4:	c4 07 a0 4c 	ld  [ %fp + 0x4c ], %g2
 cb8:	82 20 40 02 	sub  %g1, %g2, %g1
 cbc:	c2 27 bf f4 	st  %g1, [ %fp + -12 ]
 cc0:	d0 07 a0 44 	ld  [ %fp + 0x44 ], %o0
 cc4:	d2 07 a0 48 	ld  [ %fp + 0x48 ], %o1
 cc8:	d4 07 bf f4 	ld  [ %fp + -12 ], %o2
 ccc:	7f ff fe 27 	call  568 <PreMultiplyRescale>
 cd0:	01 00 00 00 	nop 
 cd4:	d0 07 a0 44 	ld  [ %fp + 0x44 ], %o0
 cd8:	d2 07 a0 48 	ld  [ %fp + 0x48 ], %o1
 cdc:	40 00 00 00 	call  cdc <raac_DCT4+0x4c>
 ce0:	01 00 00 00 	nop 
 ce4:	d0 07 a0 44 	ld  [ %fp + 0x44 ], %o0
 ce8:	d2 07 a0 48 	ld  [ %fp + 0x48 ], %o1
 cec:	d4 07 bf f4 	ld  [ %fp + -12 ], %o2
 cf0:	7f ff fe d4 	call  840 <PostMultiplyRescale>
 cf4:	01 00 00 00 	nop 
 cf8:	10 80 00 0e 	b  d30 <raac_DCT4+0xa0>
 cfc:	01 00 00 00 	nop 
 d00:	d0 07 a0 44 	ld  [ %fp + 0x44 ], %o0
 d04:	d2 07 a0 48 	ld  [ %fp + 0x48 ], %o1
 d08:	7f ff fc c0 	call  8 <PreMultiply>
 d0c:	01 00 00 00 	nop 
 d10:	d0 07 a0 44 	ld  [ %fp + 0x44 ], %o0
 d14:	d2 07 a0 48 	ld  [ %fp + 0x48 ], %o1
 d18:	40 00 00 00 	call  d18 <raac_DCT4+0x88>
 d1c:	01 00 00 00 	nop 
 d20:	d0 07 a0 44 	ld  [ %fp + 0x44 ], %o0
 d24:	d2 07 a0 48 	ld  [ %fp + 0x48 ], %o1
 d28:	7f ff fd 65 	call  2bc <PostMultiply>
 d2c:	01 00 00 00 	nop 
 d30:	01 00 00 00 	nop 
 d34:	81 c7 e0 08 	ret 
 d38:	81 e8 00 00 	restore 

00000d3c <MULSHIFT32>:
 d3c:	9d e3 bf 90 	save  %sp, -112, %sp
 d40:	f0 27 a0 44 	st  %i0, [ %fp + 0x44 ]
 d44:	f2 27 a0 48 	st  %i1, [ %fp + 0x48 ]
 d48:	c2 07 a0 44 	ld  [ %fp + 0x44 ], %g1
 d4c:	83 38 60 1f 	sra  %g1, 0x1f, %g1
 d50:	da 07 a0 44 	ld  [ %fp + 0x44 ], %o5
 d54:	98 10 00 01 	mov  %g1, %o4
 d58:	c2 07 a0 48 	ld  [ %fp + 0x48 ], %g1
 d5c:	83 38 60 1f 	sra  %g1, 0x1f, %g1
 d60:	c6 07 a0 48 	ld  [ %fp + 0x48 ], %g3
 d64:	84 10 00 01 	mov  %g1, %g2
 d68:	90 10 00 0c 	mov  %o4, %o0
 d6c:	92 10 00 0d 	mov  %o5, %o1
 d70:	94 10 00 02 	mov  %g2, %o2
 d74:	96 10 00 03 	mov  %g3, %o3
 d78:	40 00 00 00 	call  d78 <MULSHIFT32+0x3c>
 d7c:	01 00 00 00 	nop 
 d80:	98 10 00 08 	mov  %o0, %o4
 d84:	9a 10 00 09 	mov  %o1, %o5
 d88:	87 3b 20 00 	sra  %o4, 0, %g3
 d8c:	85 3b 20 1f 	sra  %o4, 0x1f, %g2
 d90:	c6 27 bf f4 	st  %g3, [ %fp + -12 ]
 d94:	c2 07 bf f4 	ld  [ %fp + -12 ], %g1
 d98:	b0 10 00 01 	mov  %g1, %i0
 d9c:	81 c7 e0 08 	ret 
 da0:	81 e8 00 00 	restore 
