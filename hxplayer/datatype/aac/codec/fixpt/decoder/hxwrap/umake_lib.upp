### UMAKE PRE-PROCESSOR OUTPUT: DO NOT CHECK INTO CVS
### -*- Mode: Python -*-
### files: umake_lib

UmakefileVersion(2,2)
project.AddSources("../aacdec.c", "../aactabs.c")
if project.BuildOption('do_unit_tests'):
      project.AddDefines('REL_ENABLE_ASSERTS')
if ('HELIX_FEATURE_USE_IPP4' in project.defines):
      project.AddSources("../ipp/buffers.c", "../ipp/decelmnt.c", "../ipp/dequant.c", "../ipp/filefmt.c", "../ipp/imdct.c", "../ipp/noiseless.c", "../ipp/pns.c", "../ipp/stproc.c", "../ipp/tns.c", "../real/bitstream.c" )
      if('_LINUX' in project.defines):
            project.AddIncludes('%s/include/' % GetSDKPath("ipp_aac_tools"))
      else:
            project.AddIncludes('\"%s\include\"' % GetSDKPath("ipp_aac_tools"))
else:
      project.AddSources("../real/bitstream.c", "../real/buffers.c", "../real/dct4.c", "../real/decelmnt.c", "../real/dequant.c", "../real/fft.c", "../real/filefmt.c", "../real/huffman.c", "../real/hufftabs.c", "../real/imdct.c", "../real/noiseless.c", "../real/pns.c", "../real/stproc.c", "../real/tns.c" )
      if('HELIX_CONFIG_AAC_GENERATE_TRIGTABS_FLOAT' in project.defines):
            project.AddSources("../real/trigtabs_fltgen.c")
      else:
            project.AddSources("../real/trigtabs.c")
if ('HELIX_FEATURE_AUDIO_CODEC_AAC_SBR' in project.defines):
      project.AddSources("../real/sbr.c", "../real/sbrfft.c", "../real/sbrfreq.c", "../real/sbrhfadj.c", "../real/sbrhfgen.c", "../real/sbrhuff.c", "../real/sbrimdct.c", "../real/sbrmath.c", "../real/sbrqmf.c", "../real/sbrside.c", "../real/sbrtabs.c", )
if ('__ARMCC__' in project.defines):
      project.AddSources("../real/asm/armads/sbrcov.s", "../real/asm/armads/sbrqmfak.s", "../real/asm/armads/sbrqmfsk.s" )
elif (project.IsDefined('ARM') and project.IsDefined('__GCC32__') and project.IsDefined('_SYMBIAN')):
      project.AddSources("../real/asm/armgcc_nosyms/sbrcov.s", "../real/asm/armgcc_nosyms/sbrqmfak.s", "../real/asm/armgcc_nosyms/sbrqmfsk.s" )
elif ('ARM' in project.defines and '__GCC32__' in project.defines):
      project.AddSources("../real/asm/armgcc/sbrcov.s", "../real/asm/armgcc/sbrqmfak.s", "../real/asm/armgcc/sbrqmfsk.s" )
elif ('ARM' in project.defines and '_WINCE' in project.defines):
      project.AddSources("../real/asm/armwince/sbrcov.s", "../real/asm/armwince/sbrqmfak.s", "../real/asm/armwince/sbrqmfsk.s", "../real/asm/armwince/asmfunc.s", )
project.AddIncludes("../pub")
project.AddModuleIncludes("common/include")
project.AddModuleIncludes("common/runtime/pub")
LibraryTarget("aacdeclib")
pass ## pre-processor removed="DependTarget()"

### END UMAKE PRE-PROCESSOR OUTPUT
