diff -aur freetype-2.4.9.orig/src/pcf/pcfread.c freetype-2.4.9/src/pcf/pcfread.c
--- freetype-2.4.9.orig/src/pcf/pcfread.c	2015-03-09 09:46:19.000000000 +0100
+++ freetype-2.4.9/src/pcf/pcfread.c	2015-03-09 09:49:20.765023701 +0100
@@ -78,7 +78,7 @@
     FT_FRAME_START( 16  ),
       FT_FRAME_ULONG_LE( type ),
       FT_FRAME_ULONG_LE( format ),
-      FT_FRAME_ULONG_LE( size ),
+      FT_FRAME_ULONG_LE( size ),   /* rounded up to a multiple of 4 */
       FT_FRAME_ULONG_LE( offset ),
     FT_FRAME_END
   };
@@ -94,10 +94,10 @@
 
     FT_Memory  memory = FT_FACE(face)->memory;
     FT_UInt    n;
+    FT_ULong   size;
 
-
-    if ( FT_STREAM_SEEK ( 0 )                          ||
-         FT_STREAM_READ_FIELDS ( pcf_toc_header, toc ) )
+    if ( FT_STREAM_SEEK( 0 )                          ||
+         FT_STREAM_READ_FIELDS( pcf_toc_header, toc ) )
       return PCF_Err_Cannot_Open_Resource;
 
     if ( toc->version != PCF_FILE_VERSION                 ||
@@ -154,11 +154,13 @@
     /* we now check whether the `size' and `offset' values are reasonable: */
     /* `offset' + `size' must not exceed the stream size */
     tables = face->toc.tables;
-    for ( n = 0; n < toc->count; n++ )
+    size   = stream->size;
+
+    for ( n = 0; n < toc->count - 1; n++ )
 	    {
 		    /* we need two checks to avoid overflow */
-		    if ( ( tables->size > stream->size ) ||
-		         ( tables->offset > stream->size - tables->size ) )
+		    if ( ( tables->size   > size                ) ||
+		         ( tables->offset > size - tables->size ) )
 			    {
 				    error = PCF_Err_Invalid_Table;
 				    goto Exit;
@@ -166,6 +168,15 @@
 		    tables++;
 	    }
 
+    /* no check of `tables->size' for last table element ... */
+    if ( ( tables->offset > size ) )
+    {
+      error = PCF_Err_Invalid_Table;
+      goto Exit;
+    }
+    /* ... instead, we adjust `tables->size' to the real value */
+    tables->size = size - tables->offset;
+
 #ifdef FT_DEBUG_LEVEL_TRACE
 
     {
@@ -731,7 +742,7 @@
     FT_TRACE4(( "  number of bitmaps: %d\n", nbitmaps ));
 
     /* XXX: PCF_Face->nmetrics is singed FT_Long, see pcf.h */
-    if ( face->nmetrics < 0 || nbitmaps != ( FT_ULong )face->nmetrics )
+    if ( face->nmetrics < 0 || nbitmaps != (FT_ULong)face->nmetrics )
       return PCF_Err_Invalid_File_Format;
 
     if ( FT_NEW_ARRAY( offsets, nbitmaps ) )
Nur in freetype-2.4.9/src/pcf: pcfread.c~.
Nur in freetype-2.4.9/src/pcf: pcfread.c.orig.
