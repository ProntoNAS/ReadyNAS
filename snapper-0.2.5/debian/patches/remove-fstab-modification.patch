Description: <short summary of the patch>
 TODO: Put a short summary on the line above and replace this paragraph
 with a longer explanation of this change. Complete the meta-information
 with other relevant fields (see below for details). To make it easier, the
 information below has been extracted from the changelog. Adjust it or drop
 it.
 .
 snapper (0.2.2-1) unstable; urgency=low
 .
   * Updated to version 0.2.2
Author: Justin Maggard <justin.maggard@netgear.com>

---
The information above should follow the Patch Tagging Guidelines, please
checkout http://dep.debian.net/deps/dep3/ to learn about the format. Here
are templates for supplementary fields that you might want to add:

Origin: <vendor|upstream|other>, <url of original patch>
Bug: <url in upstream bugtracker>
Bug-Debian: http://bugs.debian.org/<bugnumber>
Bug-Ubuntu: https://launchpad.net/bugs/<bugnumber>
Forwarded: <no|not-needed|url proving that it has been forwarded>
Reviewed-By: <name and email of someone who approved the patch>
Last-Update: <YYYY-MM-DD>

--- snapper-0.2.2.orig/snapper/Btrfs.cc
+++ snapper-0.2.2/snapper/Btrfs.cc
@@ -30,9 +30,6 @@
 #include <fcntl.h>
 #include <sys/ioctl.h>
 #include <asm/types.h>
-#ifdef ENABLE_ROLLBACK
-#include <libmount/libmount.h>
-#endif
 #ifdef HAVE_LIBBTRFS
 #ifdef HAVE_BTRFS_VERSION_H
 #include <btrfs/version.h>
@@ -93,20 +90,6 @@ namespace snapper
 	struct stat stat;
 	if (x.stat(&stat, 0) == 0)
 	    x.chmod(stat.st_mode & ~0027, 0);
-
-#ifdef ENABLE_ROLLBACK
-	if (subvolume == "/" && add_fstab)
-	{
-	    try
-	    {
-		addToFstab();
-	    }
-	    catch (const runtime_error& e)
-	    {
-		y2err("adding to fstab failed, " << e.what());
-	    }
-	}
-#endif
     }
 
 
@@ -115,22 +98,6 @@ namespace snapper
     {
 	SDir subvolume_dir = openSubvolumeDir();
 
-#ifdef ENABLE_ROLLBACK
-	if (subvolume == "/")
-	{
-	    subvolume_dir.umount(".snapshots");
-
-	    try
-	    {
-		removeFromFstab();
-	    }
-	    catch (const runtime_error& e)
-	    {
-		y2err("removing from fstab failed, " << e.what());
-	    }
-	}
-#endif
-
 	try
 	{
 	    delete_subvolume(subvolume_dir.fd(), ".snapshots");
@@ -1338,111 +1305,4 @@ namespace snapper
     }
 
 #endif
-
-
-#ifdef ENABLE_ROLLBACK
-
-    class MntTable
-    {
-
-    public:
-
-	MntTable()
-	    : table(mnt_new_table())
-	{
-	    if (!table)
-		throw runtime_error("mnt_new_table failed");
-
-	    mnt_table_enable_comments(table, 1);
-	}
-
-	~MntTable()
-	{
-	    mnt_reset_table(table);
-	}
-
-	void parse_fstab()
-	{
-	    if (mnt_table_parse_fstab(table, "/etc/fstab") != 0)
-		throw runtime_error("mnt_table_parse_fstab failed");
-	}
-
-	void replace_file()
-	{
-	    if (mnt_table_replace_file(table, "/etc/fstab") != 0)
-		throw runtime_error("mnt_table_replace_file failed");
-	}
-
-	struct libmnt_fs* find_target(const string& path, int directon)
-	{
-	    return mnt_table_find_target(table, path.c_str(), directon);
-	}
-
-	void add_fs(struct libmnt_fs* fs)
-	{
-	    if (mnt_table_add_fs(table, fs) != 0)
-		throw runtime_error("mnt_table_add_fs failed");
-	}
-
-	void remove_fs(struct libmnt_fs* fs)
-	{
-	    if (mnt_table_remove_fs(table, fs) != 0)
-		throw runtime_error("mnt_table_remove_fs failed");
-	}
-
-    private:
-
-	struct libmnt_table* table;
-
-    };
-
-
-    void
-    Btrfs::addToFstab() const
-    {
-	SDir infos_dir = openInfosDir();
-	unsigned long long id = get_id(infos_dir.fd());
-	string subvol_option = get_subvolume(infos_dir.fd(), id);
-
-	MntTable mnt_table;
-	mnt_table.parse_fstab();
-
-	libmnt_fs* root = mnt_table.find_target(subvolume, MNT_ITER_FORWARD);
-	if (!root)
-	    throw runtime_error("root entry not found");
-
-	libmnt_fs* snapshots = mnt_copy_fs(NULL, root);
-	if (!snapshots)
-	    throw runtime_error("mnt_copy_fs failed");
-
-	string mountpoint = (subvolume == "/" ? "" : subvolume) +  "/.snapshots";
-	mnt_fs_set_target(snapshots, mountpoint.c_str());
-
-	char* options = mnt_fs_strdup_options(snapshots);
-	mnt_optstr_remove_option(&options, "defaults");
-	mnt_optstr_set_option(&options, "subvol", subvol_option.c_str());
-	mnt_fs_set_options(snapshots, options);
-	free(options);
-
-	mnt_table.add_fs(snapshots);
-	mnt_table.replace_file();
-    }
-
-
-    void
-    Btrfs::removeFromFstab() const
-    {
-	MntTable mnt_table;
-	mnt_table.parse_fstab();
-
-	string mountpoint = (subvolume == "/" ? "" : subvolume) +  "/.snapshots";
-	libmnt_fs* snapshots = mnt_table.find_target(mountpoint, MNT_ITER_FORWARD);
-	if (!snapshots)
-	    return;
-
-	mnt_table.remove_fs(snapshots);
-	mnt_table.replace_file();
-    }
-
-#endif
 }
