
/*
 * *********** WARNING **************
 * This file generated by My::WrapXS/2.08
 * Any changes made here will be lost
 * ***********************************
 * 1. /usr/share/perl5/ExtUtils/XSBuilder/WrapXS.pm:39
 * 2. /usr/share/perl5/ExtUtils/XSBuilder/WrapXS.pm:2062
 * 3. Makefile.PL:146
 */


#include "/usr/src/REPACKAGED/libapreq2-2.08/include/apreq_error.h"

#include "/usr/src/REPACKAGED/libapreq2-2.08/include/apreq_param.h"

#include "/usr/src/REPACKAGED/libapreq2-2.08/include/apreq_cookie.h"

#include "/usr/src/REPACKAGED/libapreq2-2.08/include/apreq_parser.h"

#include "/usr/src/REPACKAGED/libapreq2-2.08/include/apreq_version.h"

#include "/usr/src/REPACKAGED/libapreq2-2.08/include/apreq.h"

#include "/usr/src/REPACKAGED/libapreq2-2.08/module/apache2/apreq_module_apache2.h"

#include "/usr/src/REPACKAGED/libapreq2-2.08/include/apreq_util.h"

#include "/usr/src/REPACKAGED/libapreq2-2.08/include/apreq_module.h"

#include "apreq_xs_preperl.h"

#include "EXTERN.h"

#include "perl.h"

#include "XSUB.h"

#include "apreq_xs_postperl.h"

#include "apreq_xs_sv_convert.h"

#include "apreq_xs_typedefs.h"

MODULE = APR::Request::Parser    PACKAGE = APR::Request::Parser

APR::Request::Parser
make(class, pool, ba, ct, parser, blim=APREQ_DEFAULT_BRIGADE_LIMIT, tdir=NULL, hook=NULL)
    apreq_xs_subclass_t class
    APR::Pool pool
    APR::BucketAlloc ba
    char *ct
    apreq_parser_function_t parser
    apr_size_t blim
    char *tdir
    APR::Request::Hook hook

  CODE:
    RETVAL = apreq_parser_make(pool, ba, ct, parser, blim, tdir, hook, NULL);

  OUTPUT:
    RETVAL

APR::Request::Parser
generic(class, pool, ba, ct, blim=APREQ_DEFAULT_BRIGADE_LIMIT, tdir=NULL, hook=NULL)
    apreq_xs_subclass_t class
    APR::Pool pool
    APR::BucketAlloc ba
    char *ct
    apr_size_t blim
    char *tdir
    APR::Request::Hook hook

  CODE:
    RETVAL = apreq_parser_make(pool, ba, ct, apreq_parse_generic,
                               blim, tdir, hook, NULL);

  OUTPUT:
    RETVAL

APR::Request::Parser
headers(class, pool, ba, ct, blim=APREQ_DEFAULT_BRIGADE_LIMIT, tdir=NULL, hook=NULL)
    apreq_xs_subclass_t class
    APR::Pool pool
    APR::BucketAlloc ba
    char *ct
    apr_size_t blim
    char *tdir
    APR::Request::Hook hook

  CODE:
    RETVAL = apreq_parser_make(pool, ba, ct, apreq_parse_headers,
                               blim, tdir, hook, NULL);

  OUTPUT:
    RETVAL

APR::Request::Parser
urlencoded(class, pool, ba, ct, blim=APREQ_DEFAULT_BRIGADE_LIMIT, tdir=NULL, hook=NULL)
    apreq_xs_subclass_t class
    APR::Pool pool
    APR::BucketAlloc ba
    char *ct
    apr_size_t blim
    char *tdir
    APR::Request::Hook hook

  CODE:
    RETVAL = apreq_parser_make(pool, ba, ct, apreq_parse_urlencoded,
                               blim, tdir, hook, NULL);

  OUTPUT:
    RETVAL


APR::Request::Parser
multipart(class, pool, ba, ct, blim=APREQ_DEFAULT_BRIGADE_LIMIT, tdir=NULL, hook=NULL)
    apreq_xs_subclass_t class
    APR::Pool pool
    APR::BucketAlloc ba
    char *ct
    apr_size_t blim
    char *tdir
    APR::Request::Hook hook

  CODE:
    RETVAL = apreq_parser_make(pool, ba, ct, apreq_parse_multipart,
                               blim, tdir, hook, NULL);

  OUTPUT:
    RETVAL

APR::Request::Parser
default(class, pool, ba, ct, blim=APREQ_DEFAULT_BRIGADE_LIMIT, tdir=NULL, hook=NULL)
    apreq_xs_subclass_t class
    APR::Pool pool
    APR::BucketAlloc ba
    char *ct
    apr_size_t blim
    char *tdir
    APR::Request::Hook hook
  PREINIT:
    apreq_parser_function_t parser;


  CODE:
    parser = apreq_parser(ct);
    if (parser == NULL)
        XSRETURN_UNDEF;

    RETVAL = apreq_parser_make(pool, ba, ct, parser,
                               blim, tdir, hook, NULL);

  OUTPUT:
    RETVAL


MODULE = APR::Request::Parser    PACKAGE = APR::Request::Parser   PREFIX = apreq_parser_

apr_status_t
apreq_parser_add_hook(p, h)
    APR::Request::Parser p
    APR::Request::Hook h

MODULE = APR::Request::Parser    PACKAGE = APR::Request::Parser   PREFIX = apreq_parser_

apr_status_t
apreq_parser_run(psr, t, bb)
    APR::Request::Parser psr
    APR::Table t
    APR::Brigade bb

PROTOTYPES: disabled

BOOT:
    items = items; /* -Wall */

