-------------------------------------------------------------------------------
-- Copyright (c) 2008           Free Software Foundation, Inc.               --
--                                                                           --
-- Permission is hereby granted, free of charge, to any person obtaining a   --
-- copy of this software and associated documentation files (the             --
-- "Software"), to deal in the Software without restriction, including       --
-- without limitation the rights to use, copy, modify, merge, publish,       --
-- distribute, distribute with modifications, sublicense, and/or sell copies --
-- of the Software, and to permit persons to whom the Software is furnished  --
-- to do so, subject to the following conditions:                            --
--                                                                           --
-- The above copyright notice and this permission notice shall be included   --
-- in all copies or substantial portions of the Software.                    --
--                                                                           --
-- THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS   --
-- OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF                --
-- MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN --
-- NO EVENT SHALL THE ABOVE COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,       --
-- DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR     --
-- OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE --
-- USE OR OTHER DEALINGS IN THE SOFTWARE.                                    --
--                                                                           --
-- Except as contained in this notice, the name(s) of the above copyright    --
-- holders shall not be used in advertising or otherwise to promote the      --
-- sale, use or other dealings in this Software without prior written        --
-- authorization.                                                            --
-------------------------------------------------------------------------------
-- $Id: README.MinGW,v 1.1 2008/12/14 19:22:16 juergen Exp $
-- Author: Juergen Pfeifer
-------------------------------------------------------------------------------

This is work in progress, but it's in an state where one can see it
works at least on the Windows Console.

To build ncurses for native Windows, you need the MinGW toolchain from
http://www.mingw.org

You should install also the MSYS package, so that you've a shell environment
that allows you to run the scripts, especially configure etc.

Using MinGW is a pragmatic decision, it's the easiest way to port this
heavily UNIX based sourcebase to native Windows. The goal is of course
to provide the includes, libraries and DLLs to be used with the more
common traditional development environments on Windows, mainly with
Microsoft Visual Studio.

If you start a bash from the MSYS environment, please make sure that the
Microsoft Development tools are in your PATH right after the MinGW
tools. The LIB.EXE tool is the only one needed. You need this only if 
you want to build DLLs that work with native Windows programs. If you 
don't have any Microsoft  Development tools on your machine, consider 
at least to get the free "Visual C++ 2008 Express Edition". 
It contains the LIB.EXE tool. You may also use this compiler to test 
writing native Windows programs using the ncurses DLLs without using 
MinGW then for writing apps.

Please unset the TERM environment variable, so that the Console driver
gets activated.

This code requires WindowsNT 5.1 or better, which means on the client
Windows XP or better, on the server Windows Server 2003 or better.

In order to build the DLLs, you must call

   make dlls

A lot is still TODO, e.g.:

  - Mouse support for the Console
  - Wide Character support
    The Win32Con driver should actually only use Unicode in the
    future.
  - Thread support (locking)
  - A GUI console driver
  - Support for Terminals attached via a serial port (via terminfo)
  - Support for networked Terminal connections (via terminfo)

To support terminfo, we need to have an ioctl() simulation for the
serial and networked Terminals.
