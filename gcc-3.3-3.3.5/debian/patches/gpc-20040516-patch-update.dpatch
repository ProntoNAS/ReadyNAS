#! /bin/sh -e

# DP: update the gpc diffs to recent gcc sources, fix build failure on powerpc

dir=
if [ $# -eq 3 -a "$2" = '-d' ]; then
    pdir="-d $3"
    dir="$3/"
elif [ $# -ne 1 ]; then
    echo >&2 "`basename $0`: script expects -patch|-unpatch as argument"
    exit 1
fi
case "$1" in
    -patch)
        patch $pdir -f --no-backup-if-mismatch -p0 < $0
        #cd ${dir}gcc && autoconf
        ;;
    -unpatch)
        patch $pdir -f --no-backup-if-mismatch -R -p0 < $0
        #rm ${dir}gcc/configure
        ;;
    *)
        echo >&2 "`basename $0`: script expects -patch|-unpatch as argument"
        exit 1
esac
exit 0


--- gcc/p/diffs/gcc-3.3.3.diff.old	2004-07-03 08:04:26.000000000 +0200
+++ gcc/p/diffs/gcc-3.3.3.diff	2004-07-03 08:07:31.000000000 +0200
@@ -334,24 +334,21 @@
         abort ();
       }
   
-*** gcc/emit-rtl.c	Wed Dec 10 18:37:18 2003
---- gcc/emit-rtl.c	Thu May 13 00:29:35 2004
-***************
-*** 301,309 ****
---- 301,313 ----
-    if (alias == 0 && expr == 0 && offset == 0
-        && (size == 0
-  	  || (mode != BLKmode && GET_MODE_SIZE (mode) == INTVAL (size)))
-+ #ifndef GPC
-        && (align == BITS_PER_UNIT
-  	  || (STRICT_ALIGNMENT
-  	      && mode != BLKmode && align == GET_MODE_ALIGNMENT (mode))))
-+ #else
-+       && (align == MEM_ALIGN0 (mode)))
-+ #endif
-      return 0;
-  
-    attrs.alias = alias;
+--- gcc/emit-rtl.c~	2004-07-03 07:54:24.000000000 +0200
++++ gcc/emit-rtl.c	2004-07-03 08:03:26.000000000 +0200
+@@ -303,8 +303,12 @@
+   if (alias == 0 && expr == 0 && offset == 0
+       && (size == 0
+ 	  || (mode != BLKmode && GET_MODE_SIZE (mode) == INTVAL (size)))
++#ifndef GPC
+       && (STRICT_ALIGNMENT && mode != BLKmode
+ 	  ? align == GET_MODE_ALIGNMENT (mode) : align == BITS_PER_UNIT))
++#else
++      && (align == MEM_ALIGN0 (mode)))
++#endif
+     return 0;
+ 
+   attrs.alias = alias;
 *** gcc/expr.c	Tue Dec 23 19:40:41 2003
 --- gcc/expr.c	Thu May 13 00:27:29 2004
 ***************
@@ -458,23 +455,6 @@
   
   	      bit_pos++;  ibit++;
 ***************
-*** 5322,5328 ****
-  		{
-  		  if (word != 0 || ! cleared)
-  		    {
-! 		      rtx datum = GEN_INT (word);
-  		      rtx to_rtx;
-  
-  		      /* The assumption here is that it is safe to use
---- 5354,5360 ----
-  		{
-  		  if (word != 0 || ! cleared)
-  		    {
-! 		      rtx datum = gen_int_mode (word, mode);  /* <weigand@informatik.uni-erlangen.de> */
-  		      rtx to_rtx;
-  
-  		      /* The assumption here is that it is safe to use
-***************
 *** 5376,5388 ****
 --- 5408,5430 ----
   	      endbit = startbit;
From: Waldek Hebisch <hebisch@math.uni.wroc.pl>
To: Matthias Klose <doko@cs.tu-berlin.de>
Cc: Frank Heckenbach <frank@g-n-u.de>, hebisch@math.uni.wroc.pl
Subject: Re: rs6000 build problems
Date: Thu, 20 May 2004 21:03:54 +0200 (CEST)

--- ../tst25/gpc-20040516/p/Make-lang.in	2004-05-18 20:01:22.000000000 +0200
+++ gcc/p/Make-lang.in	2004-05-20 20:19:42.000000000 +0200
@@ -587,7 +587,7 @@
 	p/typecheck.o p/types.o p/convert.o p/dbxout.o p/dwarf2out.o \
 	p/expr.o p/fold-const.o p/function.o p/integrate.o p/optabs.o \
 	p/stor-layout.o p/toplev.o p/tree.o p/stmt.o p/emit-rtl.o \
-	p/version.o
+	p/version.o $(C_TARGET_OBJS)
 
 # Exclude patched files from language-independent object file list.
 # Not necessary for gcc-3 since for a library (libbackend.a), the linker does this automatically.
--- ../tst25/gpc-20040516/p/lang.c	2004-05-19 01:12:12.000000000 +0200
+++ gcc/p/lang.c	2004-05-20 20:40:07.000000000 +0200
@@ -402,6 +402,29 @@
   fprintf (stderr, "-D%s -D__%s -D__%s__ ", s, s, s);
 }
 
+int 
+c_lex (t)
+    tree * t;
+{
+     return 0;
+}
+
+void
+cpp_define (r, s)
+     void * r;
+     const char * s;
+{
+  builtin_define_std (s);
+} 
+
+void
+cpp_assert (pfile, str)
+     void *pfile;
+     const char *str;
+{
+}
+
+
 #define preprocessing_asm_p() 0
 #define preprocessing_trad_p() 0
 #define c_language (-1)
@@ -554,9 +577,12 @@
 /* @@ Backend bug: TARGET_OS_CPP_BUILTINS on some targets uses it
       though it's a C specific flag. */
 #define flag_iso 1
-
-      TARGET_CPU_CPP_BUILTINS ();
-      TARGET_OS_CPP_BUILTINS ();
+      {
+        extern void rs6000_cpu_cpp_builtins PARAMS ((void *));
+        void * pfile = 0;
+        TARGET_CPU_CPP_BUILTINS ();
+        TARGET_OS_CPP_BUILTINS ();
+      }
 #endif
       /* The following is no joke! The difference between what the
          preprocessor and the compiler think of BYTES_BIG_ENDIAN is

