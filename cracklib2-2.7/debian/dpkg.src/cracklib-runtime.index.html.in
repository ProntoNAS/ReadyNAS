<!doctype html public "-//W3C//DTD HTML 3.2 Final//EN">
<html>
  <head>
    <title>@@pkg@@ - utilities</title>

    <link rev="made" href="mailto:jplejacq@quoininc.com">
    <link rel="home" href="./index.html">

    <meta name="author" content="jplejacq@quoininc.com">
    <meta name="copyright" content="Copyright (C) 1998 Jean Pierre LeJacq">
    <meta name="revision" content="1.2">
    <meta name="state" content="Exp">
    <meta name="source" content="cracklib-runtime.index.html.in,v">

    <meta http-equiv="content-type" content="text/html; charset=ISO-8859-1">
    <meta http-equiv="last-modified" content="@@date_utc@@">
    <meta http-equiv="keywords" content="crack, cracklib, password, security">
  </head>


  <body bgcolor="#FFFFFF">
    <h1 align="center">@@pkg@@ - utilities</h1>

    <p>
      <code>@@pkg@@</code> is a library containing a C function which may be
      used in a <a
      href="/cgi-bin/man2html/usr/man/man1/passwd.1.gz"><code>passwd</code></a>
      like program.  The idea is simple: try to prevent users from choosing
      passwords that could be guessed by <a
      href="@@url_pkg_dir@@"><code>crack</code></a> by filtering them out, at
      source. <code>@@pkg@@</code> is <em>not</em> a replacement <a
      href="/cgi-bin/man2html/usr/man/man1/passwd.1.gz"><code>passwd</code></a>
      program.  <code>@@pkg@@</code> is a <em>library</em>.
    </p>

    <p>
     <code>@@pkgruntime@@</code> contains run-time support programs which use
     the shared library in <a
     href="/doc/@@pkg@@/index.html"><code>@@pkg@@</code></a> including
     programs to build the password dictionary databases used by the functions
     in the shared library.
    </p>


    <h2>Index</h2>

    <ol>
      <li>
        <a href="/doc/@@pkg@@/index.html">General documentation on
        <code>@@pkg@@</code>.</a>
      </li>

      <li>
        <a href="#cracklib.utilities">Debian <code>@@pkg@@</code>
        utilities.</a>

        <ol>
          <li>
            <a href="#cracklib.utilities.dictionary">Debian
            <code>@@pkg@@</code> dictionary utilities.</a>

            <ol>
              <li>
                <a href="#cracklib.utilities.dictionary.crack_mkdict"><code>crack_mkdict</code></a>
              </li>

              <li>
                <a href="#cracklib.utilities.dictionary.crack_packer"><code>crack_packer</code></a>
              </li>

              <li>
                <a href="#cracklib.utilities.dictionary.crack_unpacker"><code>crack_unpacker</code></a>
              </li>
            </ol>
          </li>

          <li>
            <a href="#cracklib.utilities.test">Debian <code>@@pkg@@</code> test
            utilities.</a>

            <ol>
              <li>
                <a href="#cracklib.utilities.test.crack_testlib"><code>crack_testlib</code></a>
              </li>

              <li>
                <a href="#cracklib.utilities.test.crack_testnum"><code>crack_testnum</code></a>
              </li>

              <li>
                <a href="#cracklib.utilities.test.crack_teststr"><code>crack_teststr</code></a>
              </li>
            </ol>
          </li>
        </ol>
      </li>

      <li>
        <a href="#cracklib.dictionaries">Debian dictionaries.</a>
      </li>
    </ol>

    <hr/>


    <h2>
      <a name="cracklib.utilities">Debian <code>@@pkg@@</code> utilities</a>
    </h2>

    <h3>
      <a name="cracklib.utilities.dictionary">Debian <code>@@pkg@@</code>
      dictionary utilities.</a>
    </h3>

    <h4>
      <a name="cracklib.utilities.dictionary.crack_mkdict"><code>crack_mkdict</code></a>
    </h4>

    <h5>Synopsis</h5>

    <code>
      crack_mkdict <var>file ...</var>
    </code>

    <h5>Description</h5>

    <p>
      <code>crack_mkdict</code> takes a list of ASCII files each containing a
      list of words, one per line, It lowercases all words, removes control
      characters, and sorts the lists.  It outputs the cleaned up list to
      standard output.
    </p>

    <p>
      If you supply massive amounts of text to <code>crack_mkdict</code> you
      must have enough free space available for use by the <a
      href="/cgi-bin/man2html/usr/man/man1/sort.1.gz"><code>sort</code></a>
      command.  If you do not have 20Mb free in <code>/var/tmp</code> (or
      whatever temporary area your <a
      href="/cgi-bin/man2html/usr/man/man1/sort.1.gz"><code>sort</code></a>
      command uses), have a look at the
      <code>@@d_pkgruntime_bin_s@@/crack_mkdict</code> program which is a <a
      href="/cgi-bin/man2html/usr/man/man1/sh.1.gz"><code>sh</code></a>
      program.  You can usually tweak the <a
      href="/cgi-bin/man2html/usr/man/man1/sort.1.gz"><code>sort</code></a>
      command to use any large area of disk you desire, by use of the
      <code>-T</code> option.  <code>crack_mkdict</code> has a hook for this.
    </p>


    <h4>
      <a name="cracklib.utilities.dictionary.crack_packer"><code>crack_packer</code></a>
    </h4>

    <h5>Synopsis</h5>

    <code>
      crack_packer <var>cracklib_dictpath</var>
    </code>

    <h5>Description</h5>

    <p>
      <code>crack_packer</code> reads from standard input a list of sorted and
      cleaned words and creates a database in the directory and prefix given by
      the command line argument <code><var>cracklib_dictpath</var></code>.
      Three files are created with the suffixes of <code>.hwm, .pwd, and
      .pwi</code>.  These three files are in the format that the <a
      href="/cgi-bin/man2html/usr/man/man3/FascistCheck.3.gz"><code>FascistCheck</code></a>
      subroutine, <a
      href="#cracklib.utilities.dictionary.crack_unpacker"><code>crack_unpacker</code></a>,
      <a
      href="#cracklib.utilities.test.crack_testlib"><code>crack_testlib</code></a>,
      <a
      href="#cracklib.utilities.test.crack_testnum"><code>crack_testnum</code></a>,
      and <a
      href="#cracklib.utilities.test.crack_teststr"><code>crack_teststr</code></a>
      utilities understand. The number of words read and written are printed on
      <a
      href="/cgi-bin/man2html/usr/man/man3/stdout.3.gz"><code>stdout</code></a>.
    </p>


    <h4>
      <a
      name="cracklib.utilities.dictionary.crack_unpacker"><code>crack_unpacker</code></a>
    </h4>

    <h5>Synopsis</h5>

    <code>
      crack_unpacker <var>cracklib_dictpath</var>
    </code>

    <h5>Description</h5>

    <p>
      <code>crack_unpacker</code> reads from the database in the directory and
      prefix given by the command line argument
      <code><var>cracklib_dictpath</var></code> and outputs on standard output
      the list of words that make up the database.
    </p>


    <h3>
      <a name="cracklib.utilities.test">Debian <code>@@pkg@@</code> test utilities.</a>
    </h3>

    <p>
      These are command line interactive utilities to test the <a
      href="#cracklib.dictionaries.utilities">installed cracklib
      dictionary</a>.  Each take one string or number per line.  Enter
      <code>^C</code> when done.
    </p>

    <h4>
      <a name="cracklib.utilities.test.crack_testlib"><code>crack_testlib</code></a>
    </h4>

    <h5>Synopsis</h5>

    <code>
      crack_testlib
    </code>

    <h5>Description</h5>

    <p>
      <code>crack_testlib</code> tests if the input string will be accepted as
      a valid password by the <a
      href="#cracklib.dictionaries.utilities">installed
      <code>@@pkg@@</code>dictionary</a> using the <a
      href="/cgi-bin/man2html/usr/man/man3/FascistCheck.3.gz"><code>FascistCheck</code></a>
      subroutine.
    </p>


    <h4>
      <a name="cracklib.utilities.test.crack_testnum"><code>crack_testnum</code></a>
    </h4>

    <h5> Synopsis </h5>

    <code>
      crack_testnum
    </code>

    <h5>Description</h5>

    <p>
      <code>crack_testnum</code> tests if the input integer is an index to a
      word in the <a href="#cracklib.dictionaries.utilities">installed
      <code>@@pkg@@</code> dictionary</a> and returns the word if found.
    </p>


    <h4>
      <a name="cracklib.utilities.test.crack_teststr"><code>crack_teststr</code></a>
    </h4>

    <h5>Synopsis</h5>

    <code>
      crack_testnum
    </code>

    <h5> Description </h5>

    <p>
      <code>crack_teststr</code> tests if the input string is in the <a
      href="#cracklib.dictionaries.utilities">installed <code>@@pkg@@</code>
      dictionary</a> and returns its index number if found.
    </p>


    <h2>
      <a name="cracklib.dictionaries">Debian dictionaries</a>
    </h2>

    <p>
      <code>@@pkg@@</code> uses a word database that is in a binary format
      generated by the utilities <a
      href="#cracklib.utilities.dictionary.crack_mkdict"><code>crack_mkdict</code></a>
      and <a
      href="#cracklib.utilities.dictionary.crack_packer"><code>crack_packer</code></a>.
      Three files are created with the suffixes of <code>.hwm, .pwd, and
      .pwi</code>.  These files are <em>not</em> byte-order independent, in
      fact they are probably architecture specific, mostly due to speed
      constraints.
    </p>


    <h3>
      <a name="cracklib.dictionaries.utilities">Compiled database location for
      <code>cracklib</code> test utilities.</a>
    </h3>

    <p>
      The <a href="#cracklib.utilities.test">dictionary test utilities</a> have
      the location of the dictionary database hard-coded into them.  On a
      Debian system the database is located in the directory
      <code>@@f_pkgruntime_dict_db@@</code> and is generated daily with the program
      <code>@@f_pkgruntime_etc_crondaily@@</code>.  The location is also defined in
      the header file <code> crack.h</code> using the constant
      <code>CRACKLIB_DICTPATH </code> None of the subroutines in the
      <code>cracklib</code> libraries have this location hard-coded into their
      implementations.
    </p>


    <h3>
      <a name="cracklib.dictionaries.src">Word lists for creating dictionary
      databases.</a>
    </h3>

    <p>
      <code>@@pkg@@</code> is only as good as the word dictionary database you
      create.  Basically, you want to include any word that a malicious user
      could guess.  It could include:
    </p>

    <ul>
      <li>Names (including nicknames and user ids) of all users.</li>
      <li>Names of pets, relatives, cars, ... of all users.</li>
      <li>Computer, network, printer, ... names.</li>
      <li>Insurance numbers, employee numbers, ... of users.</li>
      <li>...</li>
    </ul>

    <p>
      Debian provides a number of word lists that can be used as sources for
      creating the <code>@@pkg@@</code> dictionary database.  The package <a
      href="/cgi-bin/man2html/usr/man/man5/english.5.gz"><code>wenglish</code></a>
      provides a standard ASCII word list that can be directly used.  The
      package <a href="/doc/ispell/ispell.html"><code>ispell</code></a> also
      supplies a large word list but it is in binary format.  I haven't
      figured out how to decode this binary format so that the resulting word
      list can be used by <code>@@pkg@@</code>.
    </p>

    <p>
      I plan to add the word list that comes with <a
      href="@@url_pkg_dir@@"><code>crack</code></a> when I package it.
    </p>

    <p>
      Here is a <a href="http://www.dope.org/special-k/crack.html">site</a>
      that has dictionaries for a number of non English languages as well as
      names.
    </p>


    <hr/>

    <address>
      Copyright &copy; 1998, 1999
      <a href="mailto:jplejacq@quoininc.com">Jean Pierre LeJacq</a>

      <br/>

      Distributed under the <a href="/doc/copyright/GPL">GNU GENERAL PUBLIC
      LICENSE</a>.

      <br/>

      last-modified: @@date_utc@@
    </address>
  </body>
</html>
