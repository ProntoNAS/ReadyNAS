<!doctype html public "-//W3C//DTD HTML 3.2 Final//EN">
<html>
  <head>
    <title>@@pkg@@ - development tools</title>

    <link rev="made" href="mailto:jplejacq@quoininc.com">
    <link rel="home" href="./index.html">

    <meta name="author" content="jplejacq@quoininc.com">
    <meta name="copyright" content="Copyright (C) 1998 Jean Pierre LeJacq">
    <meta name="revision" content="1.2">
    <meta name="state" content="Exp">
    <meta name="source" content="cracklib2-dev.index.html.in,v">

    <meta http-equiv="content-type" content="text/html; charset=ISO-8859-1">
    <meta http-equiv="last-modified" content="@@date_utc@@">
    <meta http-equiv="keywords" content="crack, cracklib, password, security">
  </head>


  <body bgcolor="#FFFFFF">
    <h1 align="center">@@pkg@@ - development tools</h1>

    <p>
      <code>@@pkg@@</code> is a library containing a C function which may be
      used in a <a
      href="/cgi-bin/man2html/usr/man/man1/passwd.1.gz"><code>passwd</code></a>
      like program.  The idea is simple: try to prevent users from choosing
      passwords that could be guessed by <a
      href="@@url_pkg_dir@@"><code>crack</code></a> by filtering them
out, at
      source. <code>@@pkg@@</code> is <em>not</em> a replacement <a
      href="/cgi-bin/man2html/usr/man/man1/passwd.1.gz"><code>passwd</code></a>
      program.  <code>@@pkg@@</code> is a <em>library</em>.
    </p>

    <p>
      <code>@@pkgdev@@</code> contains the header files, static libraries,
      documentation, and symbolic links developers using <code>@@pkg@@</code>
      will need.
    </p>


    <h2>Index</h2>

    <ol>
      <li>
        <a href="/doc/@@pkg@@/index.html">General documentation on
        <code>@@pkg@@</code>.</a>
      </li>

      <li>
        <a href="#cracklib.debian.how_to">How to use
        <code>@@pkg@@</code> with Debian.</a>

        <ol>
          <li>
            <a href="#cracklib.debian.how_to.shadow">Debian
            <code>shadow</code> package.</a>
          </li>

          <li>
            <a href="#cracklib.debian.how_to.pam">Debian
            <code>pam</code> package.</a>
          </li>
        </ol>
      </li>

      <li>
        <a
        href="/cgi-bin/man2html/usr/man/man3/cracklib.3.gz"><code>@@pkg@@</code>
        man page.</a>
      </li>

      <li>
        Example using <code>@@pkg@@</code>.

        <ol>
          <li>
            <a href="examples/cracklib_example.c">Program.</a>
          </li>

          <li>
            <a href="examples/makefile">Makefile.</a>
          </li>
        </ol>
      </li>
    </ol>

    <hr/>


    <h2>
      <a name="cracklib.debian.how_to">How to use <code>@@pkg@@</code> with
      Debian</a>
    </h2>


    <p>
      In Debian the binary packages <code>login</code> and <code>passwd</code>
      (both part of the source package <a
      href="/doc/passwd/README.debian"><code>shadow</code></a>) and <a
      href="/doc/libpam-doc/pam.html/pam-1.html"><code>pam</code></a> have
      some support for <code>@@pkg@@</code>.  I've successfully built the <a
      href="/doc/passwd/README.debian"><code>shadow</code></a> source package
      with <code>@@pkg@@</code> support.
    </p>


    <h3>
      <a name="cracklib.debian.how_to.shadow">Debian shadow package</a>
    </h3>

    <p>
      To use <code>@@pkg@@</code> with the <a
      href="/doc/passwd/README.debian"><code>shadow</code></a> package, you'll
      need to download the source package and rebuild the package on your
      machine.  You'll obviously need the development environment.
      Fortunately, no changes in the source code or Debian modifications need
      to be made since the <a
      href="/cgi-bin/man2html/usr/man/man1/autoconf.1.gz">autoconf</a>
      programs will automatically detect that <code>@@pkg@@</code> is
      installed.  The only requirement is that <code>@@pkg@@</code> must be
      installed prior to rebuilding shadow.
    </p>

    <p>
      After installing the rebuilt resulting binary packages, you'll need to
      modify the file <a
      href="/cgi-bin/man2html/usr/man/man5/login.defs.5.gz"><code>/etc/login.defs</code></a>.
      Set the entry for <code>CRACKLIB_DICTPATH</code> to the location of the
      <code>@@pkg@@</code> dictionary database.  This would normally be
      <code>@@f_pkgruntime_dict_db@@</code>.
    </p>

    <p>
      Next, you'll need to define what word list should be used to construct
      the <code>@@f_pkgruntime_dict_db@@</code> database.  Do this by adding
      additional entries in <code>@@f_pkgruntime_etc_conf@@</code>.
    </p>

    <p>
      Finally, you'll need the utilities from the <a
      href="/doc/@@pkgruntime@@/index.html"><code>@@pkgruntime@@</code></a> to
      build the <a
      href="/doc/@@pkgruntime@@/index.html#cracklib.dictionaries">dictionary
      databases</a> that are needed by the <a
      href="/doc/passwd/README.debian"><code>shadow</code></a> package that
      you built earlier.
    </p>

    <p>
      That's it!  Now every time a user changes or initially sets their
      password, it will be checked against the <code>@@pkg@@</code> database.
    </p>


    <h3>
      <a name="cracklib.debian.how_to.pam">Debian pam package</a>
    </h3>

    <p>
      The Debian <a href="/doc/libpam-doc/pam.html/pam.html">pam</a> source
      packages has the <a
      href="/doc/libpam-doc/pam.html/pam-6.html#ss6.2">pam_cracklib</a>
      pluggable module that supports <code>@@pkg@@</code>.  Unfortunately, I
      haven't investigated if it works or the steps required.
    </p>


    <hr/>

    <address>
      Copyright &copy; 1998, 1999
      <a href="mailto:jplejacq@quoininc.com">Jean Pierre LeJacq</a>

      <br/>

      Distributed under the <a href="/doc/copyright/GPL">GNU GENERAL PUBLIC
      LICENSE</a>.

      <br/>

      last-modified: @@date_utc@@
    </address>
  </body>
</html>
