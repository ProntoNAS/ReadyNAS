#!/bin/sh
#
# source:
#   /var/cvs/projects/debian/dpkg.common/check,v
#
# revision:
#   @(#) check,v 1.7 1999/03/08 04:31:16 jplejacq Exp
#
# copyright:
#   Copyright (C) 1999 Jean Pierre LeJacq <jplejacq@quoininc.com>
#
#   Distributed under the GNU GENERAL PUBLIC LICENSE.
#
# synopsis:
#   check -p <DH_DOPACKAGES> -P <DH_TMPDIR>
#
# description:
#   Check binary packages.
#
#   I've implemented overrides for html style checking.  To do so, you
#   need to provide the file debian/dpkg.script/check.in that provides
#   definitions of the variable "html_style_overrides" and the
#   function "check_html_style_overrides".  The variable defines which
#   files should use the overridden checks.  The function is passed
#   each of these files and is assumed to do its own custom checks.
#
#   This program is package independent and should work unmodified
#   with any package.
#
#   I've implemented argument parsing with the debhelper package.
#
# bugs:
#   This program will recheck source package for each binary package.
#
#   The test for broken links in the HTML documentation requires that
#   the package be installed and that there is a URL
#   "http://localhost/doc/<pkg>/index.html".  I haven't found a
#   reliable way of checking without going through an HTTP which
#   requires that the files be installed ahead of time.
#
#   The check_parameterization is not fool proof.
#
#   I should provide overrides for the other checks.


check_parameterization()
# global variables:
#   DH_TMPDIR
#
# postcondition:
#   Return 0 if no errors found, 1 otherwise.
#
# description:
#   Checks if any autoconf style parameterization variables are
#   unintentionally left in Debian files.
{
  local f
  local f_orig
  local found=0


  echo "${0}: checking binary package's files for parameterization variables..."

  for f in $(find ${DH_TMPDIR} -type f -print)
  do
    f_orig="${f}"

    if $(file "${f}" | egrep -q "gzip compressed")
    then
      # found a compressed file.

      f=$(tempfile --directory "/tmp" --mode 0660)
      zcat "${f_orig}" > "${f}"
    fi

    if $(file "${f}" | egrep -q "ELF|archive")
    then
      # found binary file.

      if $(strings "${f}" | egrep -q "@@.*@@")
      then
        echo "${0}: found parameterization variable in: ${f_orig}"
        found=1
      fi
    else
      # hopefully found a text file.

      if $(egrep -q "@@.*@@" "${f}")
      then
        echo "${0}: found parameterization variable in: ${f_orig}"
        found=1
      fi
    fi

    if [ "${f}" != "${f_orig}" ]
    then
      rm -f "${f}"
    fi
  done

  return ${found}
}


check_lintian()
# global variables:
#   DH_DOPACKAGES
#
# postconditions:
#   Return 0.
#
# description:
#   Check with lintian.
#
# bugs:
#   Only works for standard directory layout
{
  if [ -x "/usr/bin/lintian"  -a  ! -e "scheme-opt" ]
  then
    echo "${0}: checking source package with lintian..."
      tmp=$(dpkg-parsechangelog | grep "^Source: ")
      readonly pkg_src=${tmp#Source: }

      tmp=$(dpkg-parsechangelog | grep "^Version: ")
      readonly version=${tmp#Version: }

      lintian -v -i --check --source ../${pkg_src}_${version}.dsc


    echo "${0}: checking binary package with lintian..."
      lintian -v -i --check --binary ../${DH_DOPACKAGES}_${version}_*.deb
  fi

  return 0
}


check_html_dtd()
# global variables:
#   DH_DOPACKAGES
#
# postconditions:
#   Return 0 on no error.
#
# description:
#   Check HTML for compliance to DTD.
{
  if [ -x "/usr/bin/nsgmls" ]
  then
    echo "${0}: checking binary package's HTML pages with nsgmls..."
      for file in\
        $(find ${DH_TMPDIR} -type f -name "*.htm*" -print)
      do
        nsgmls -s -m /usr/lib/sgml/catalog ${file}
      done
  fi

  return 0
}


check_html_style()
# global variables:
#   DH_DOPACKAGES
#
# postconditions:
#   Return 0 on no error.
#
# description:
#   Check HTML for compliance to weblint style checker.
{
  local overridden="n"
  local file=""
  local file_override=""

  if [ -x "/usr/bin/weblint" ]
  then
    echo "${0}: checking binary package's HTML pages with weblint..."
      for file in\
        $(\
          find\
            ${DH_TMPDIR}\
            -type f \( -name "*.html"  -o  -name "*.htm" \)\
            -print\
        )
      do
        overridden="n"

        for file_override in ${html_style_overrides}
        do
          if [ "${file}" = "${file_override}"  -a  "n" = "${overridden}" ]
          then
            check_html_style_overrides "${file}"
            overridden="y"
          fi
        done

        if [ "n" = "${overridden}" ]
        then
          weblint ${file}
        fi
      done
  fi
}


check_html_links()
# global variables:
#   DH_DOPACKAGES
#
# postconditions:
#   Return 0.
#
# description:
#   Check for broken links.
#
# bugs:
#   Only works when package is installed.
{
  local linbot_out
  local linbot_sh

  if [ -x "/usr/bin/linbot" ]
  then
    readonly linbot_sh="/usr/bin/linbot"
  elif [ -x "/opt/linbot/bin/linbot" ]
  then
    readonly linbot_sh="/opt/linbot/bin/linbot"
  fi

  if [ -n "${linbot_sh}" ]
  then
    echo "${0}: checking binary package's HTML links with linbot..."
      readonly linbot_out="${DH_DOPACKAGES}.stamp-check-linbot"

      if [ ! -d "${linbot_out}" ]
      then
        mkdir "${linbot_out}"
      fi

      "${linbot_sh}"\
        -o "${linbot_out}"\
        -b\
        "http://localhost/doc/${DH_DOPACKAGES}/"
  fi

  return 0
}



# main:
  set -e

  . debian/dpkg.common/substfiles
  . debian/dpkg.scripts/substfiles


  echo "${0}: parsing arguments..."
    readonly DH_DOPACKAGES=$(./debian/dpkg.common/get_option_dopackages ${@})
    export DH_DOPACKAGES
    readonly DH_TMPDIR=$(./debian/dpkg.common/get_option_tmpdir ${@})
    export DH_TMPDIR


  echo "${0}: include overrides..."
    if [ -f ./debian/dpkg.scripts/check ]
    then
      . ./debian/dpkg.scripts/check
    fi


  check_parameterization
  check_lintian
  check_html_dtd
  check_html_style
  check_html_links


  exit 0
