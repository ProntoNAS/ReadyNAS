#!/usr/bin/make -f
#-*- makefile -*-
# Made with the aid of dh_make, by Craig Small
# Sample debian/rules that uses debhelper. GNU copyright 1997 by Joey Hess.
# This version is for a hypothetical package that builds an
# architecture-dependant package, as well as an architecture-independant
# package.

package=cupsys

version=$(shell expr `pwd` : '.*-\([0-9.]*\)')
version_major=$(shell expr `pwd` : '.*-\([0-9]*\).[0-9.]*')

# Uncomment this to turn on verbose mode. 
# export DH_VERBOSE=1

# This is the debhelper compatability version to use.
export DH_COMPAT=2

# Do a debug build?
ifdef DEB_BUILD_OPTIONS
DEB_DEBUG=$(shell echo $(DEB_BUILD_OPTIONS) | grep debug)
else
DEB_DEBUG=
endif

ifdef DEB_DEBUG
DEB_OPTFLAGS=-g
else
DEB_OPTFLAGS=-O2
endif

build: build-stamp
build-stamp:
	dh_testdir

	patch -p0 < debian/infrant-patch

	CFLAGS="$(DEB_OPTFLAGS) -D_REENTRANT" ./configure --mandir=/usr/share/man --with-docdir=/usr/share/cups/doc-root --disable-ssl --disable-slp --with-cups-user=admin --with-cups-group=admin

	# First, build the shared and static libs properly
	cd cups ; \
	  $(MAKE) libcups.a ; \
	  rm *.o ; \
	  $(MAKE) OPTIM="-fPIC -O2 -g" libcups.so.2 ; \
	  touch libcups.a

	cd filter ; \
	  $(MAKE) libcupsimage.a ; \
	  rm *.o ; \
	  $(MAKE) OPTIM="-fPIC -O2 -g" libcupsimage.so.2 ; \
	  touch libcupsimage.a

	$(MAKE)

	touch build-stamp

clean:
	dh_testdir
	dh_testroot
	rm -f build-stamp install-stamp

	# Add here commands to clean up after the build process.
	-$(MAKE) clean
	-rm man/*.gz man/*.z man/*.1 man/*.5 man/*.8
	-rm cups/libcups.so
	-rm cups/libcups.a
	-rm filter/libcupsimage.so
	-rm filter/libcupsimage.a
	-rm pdftops/libxpdf.a
	-rm backend/http
	-rm systemv/disable systemv/enable systemv/reject
	-rm config.log config.h config.cache config.status Makedefs cups.sh

	patch -p0 -R < debian/infrant-patch

	dh_clean

install: build
	dh_testdir
	dh_testroot
	dh_clean -k
	dh_installdirs

	# Add here commands to install the package into debian/tmp.
	$(MAKE) install prefix=`pwd`/debian/tmp \
	  BUILDROOT=`pwd`/debian/tmp \
	  SERVERROOT=`pwd`/debian/tmp/etc/cups \
	  MANDIR=`pwd`/debian/tmp/usr/share/man \
	  AMANDIR=`pwd`/debian/tmp/usr/share/man \
	  PMANDIR=`pwd`/debian/tmp/usr/share/man \
	  CATDIR=`pwd`/debian/tmp/usr/share/man \
	  PAMDIR=`pwd`/debian/tmp/etc/pam.d \
	  REQUESTS=`pwd`/debian/cupsys/var/spool/cups \
	  BINDIR=`pwd`/debian/tmp/usr/bin \
	  SBINDIR=`pwd`/debian/tmp/usr/sbin \
	  INCLUDEDIR=`pwd`/debian/tmp/usr/include \
	  LIBDIR=`pwd`/debian/tmp/usr/lib \
	  SERVERBIN=`pwd`/debian/tmp/usr/lib/cups \
	  DOCDIR=`pwd`/debian/tmp/usr/share/cups/doc-root \
	  DATADIR=`pwd`/debian/tmp/usr/share/cups \
	  LOCALEDIR=`pwd`/debian/tmp/usr/share/locale\
	  LOGDIR=`pwd`/debian/cupsys/var/log/cups

	# reconstruct the config structure.
	#JM install -d `pwd`/debian/cupsys/etc/cups/interfaces
	#JM install -d `pwd`/debian/cupsys/etc/cups/ppd
	#JM install -d -m 711 `pwd`/debian/cupsys/etc/cups/certs

	# Get configuration files right
	-rm -f debian/tmp/etc/cups/printers.conf 
	-rm -f debian/tmp/etc/cups/classes.conf
	-rm -f debian/tmp/etc/pam.d/cups

	# Kill off the catx stuff
	-rm -rf `pwd`/debian/tmp/usr/share/man/cat1
	-rm -rf `pwd`/debian/tmp/usr/share/man/cat3
	-rm -rf `pwd`/debian/tmp/usr/share/man/cat5
	-rm -rf `pwd`/debian/tmp/usr/share/man/cat8

	# filter(1) and backend(1) are too general; rename them
	# to cups-filter(1) and cups-backend(1).
	mv -f debian/tmp/usr/share/man/man1/filter.1 \
		debian/tmp/usr/share/man/man1/cups-filter.1
	mv -f debian/tmp/usr/share/man/man1/backend.1 \
		debian/tmp/usr/share/man/man1/cups-backend.1

	# Add any necessary copies and symlinks for ld.so/dev needs
	cp cups/*.a `pwd`/debian/tmp/usr/lib
	cp filter/*.a `pwd`/debian/tmp/usr/lib
	ln -sf libcups.so.2 `pwd`/debian/tmp/usr/lib/libcups.so
	ln -sf libcupsimage.so.2 `pwd`/debian/tmp/usr/lib/libcupsimage.so

	# Create a symlink for the documentation dir
	-mkdir -p `pwd`/debian/tmp/usr/share/doc/cupsys
	ln -sf ../../cups/doc-root `pwd`/debian/tmp/usr/share/doc/cupsys/online-docs

	# Lets make sure cupsys is packaged last
	dh_movefiles -a -Ncupsys
	dh_movefiles -pcupsys
	touch install-stamp

# Build architecture-independent files here.
binary-indep: build install
#	dh_testversion
#	dh_testdir -i
#	dh_testroot -i
#	dh_installdocs -i
#	dh_installexamples -i
#	dh_installmenu -i
#	dh_installemacsen -i
#	dh_installpam -i
#	dh_installinit -i
#	dh_installcron -i
#	dh_installmanpages -i
#	dh_installinfo -i
#	dh_undocumented
#	dh_installchangelogs -i 
#	dh_link -i
#	dh_compress -i
#	dh_fixperms -i
	# You may want to make some executables suid here.
#	dh_suidregister -i
#	dh_installdeb -i
#	dh_perl -i
#	dh_gencontrol -i
#	dh_md5sums -i
#	dh_builddeb -i

# Build architecture-dependent files here.
binary-arch: build install
#	dh_testversion
	dh_testdir -a
	dh_testroot -a
	dh_installdebconf -a
	# The dev package will have a link pointing to libcupsys2
	# we don't need to install docs for it.
	dh_installdocs -a 
	dh_installexamples -pcupsys
	dh_installmenu -a
#	dh_installemacsen -a
	dh_installpam -a
	dh_installinit -a
	dh_installcron -a
#	dh_installmanpages -a
	dh_installinfo -a
#	dh_undocumented -pcupsys-client lppasswd.1
	dh_installchangelogs -a CHANGES.txt
	dh_strip -a
	dh_link -a
	dh_compress -a -X.pdf
	dh_fixperms -a
#	# You may want to make some executables suid here.
#	chmod u+s debian/cupsys/usr/lib/cups/backend/lpd
#	dh_suidregister -a
	dh_makeshlibs -plibcupsys2
	dh_installdeb -a
#	dh_perl -a
	dh_shlibdeps -a
	dh_gencontrol -a
	dh_md5sums -a
	dh_builddeb -a

source diff:                                                                  
	@echo >&2 'source and diff are obsolete - use dpkg-source -b'; false

binary: binary-indep binary-arch
.PHONY: build clean binary-indep binary-arch binary install
