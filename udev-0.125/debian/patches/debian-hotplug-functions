--- a/extras/rule_generator/rule_generator.functions
+++ b/extras/rule_generator/rule_generator.functions
@@ -1,10 +1,69 @@
-# functions used by the udev rule generator
+# Setup and shell utility functions for use in hotplug agents.
+# vim: syntax=sh
 #
 # This program is free software; you can redistribute it and/or modify it
 # under the terms of the GNU General Public License as published by the
 # Free Software Foundation version 2 of the License.
 
-PATH='/sbin:/bin'
+#DEBUG=yes
+
+#EVENTS_LOG='/dev/hotplug.log'
+
+FIRMWARE_DIRS='/lib/firmware /usr/local/lib/firmware /usr/lib/hotplug/firmware'
+
+EVENTS_DIR='/dev/.events'
+
+MODPROBE='/sbin/modprobe -s -q'
+
+PATH='/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin'
+
+[ -e /etc/default/hotplug ] && . /etc/default/hotplug
+
+
+if [ -x /usr/bin/logger ]; then
+	LOGGER=/usr/bin/logger
+elif [ -x /bin/logger ]; then
+	LOGGER=/bin/logger
+else
+	unset LOGGER
+fi
+
+# for diagnostics
+if [ -t 1 -a -z "$LOGGER" ] || [ ! -e '/dev/log' ]; then
+	mesg() {
+		echo "$@" >&2
+	}
+elif [ -t 1 ]; then
+	mesg() {
+		echo "$@"
+		$LOGGER -t "${0##*/}[$$]" "$@"
+	}
+else
+	mesg() {
+		$LOGGER -t "${0##*/}[$$]" "$@"
+	}
+fi
+
+debug_mesg() {
+		[ -z "$DEBUG" -o "$DEBUG" = no ] && return 0
+		mesg "$@"
+}
+
+wait_for_file() {
+	local file=$1
+	local timeout=$2
+	[ "$timeout" ] || timeout=120
+
+	local count=$timeout
+	while [ $count != 0 ]; do
+		[ -e "$file" ] && return 0
+		sleep 1
+		count=$(($count - 1))
+	done
+
+	mesg "$file did not appear before the timeout!"
+	exit 1
+}
 
 # Read a single line from file $1 in the $DEVPATH directory.
 # The function must not return an error even if the file does not exist.
--- a/extras/rule_generator/write_cd_rules
+++ b/extras/rule_generator/write_cd_rules
@@ -13,7 +13,7 @@
 
 RULES_FILE="/etc/udev/rules.d/70-persistent-cd.rules"
 
-. /lib/udev/rule_generator.functions
+. /lib/udev/hotplug.functions
 
 find_next_available() {
 	raw_find_next_available "$(find_all_rules 'SYMLINK+=' "$1")"
--- a/extras/rule_generator/write_net_rules
+++ b/extras/rule_generator/write_net_rules
@@ -24,7 +24,7 @@
 
 RULES_FILE='/etc/udev/rules.d/70-persistent-net.rules'
 
-. /lib/udev/rule_generator.functions
+. /lib/udev/hotplug.functions
 
 interface_name_taken() {
 	local value="$(find_all_rules 'NAME=' $INTERFACE)"
