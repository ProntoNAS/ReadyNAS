diff --git a/etc/afpd/fork.c b/etc/afpd/fork.c
index b05ba40..492dc0e 100644
--- a/etc/afpd/fork.c
+++ b/etc/afpd/fork.c
@@ -840,11 +840,12 @@ static ssize_t read_file(struct ofork *ofork, int eid,
 static int read_fork(AFPObj *obj, char *ibuf, size_t ibuflen _U_, char *rbuf, size_t *rbuflen, int is64)
 {
     struct ofork	*ofork;
-    off_t		offset, saveoff, reqcount, savereqcount;
+    off_t		offset, saveoff, reqcount, savereqcount, size;
     ssize_t		cc, err;
     int			eid, xlate = 0;
     u_int16_t		ofrefnum;
     u_char		nlmask, nlchar;
+    DSI			*dsi = obj->handle;
 
     ibuf += 2;
     memcpy(&ofrefnum, ibuf, sizeof( ofrefnum ));
@@ -894,15 +895,65 @@ static int read_fork(AFPObj *obj, char *ibuf, size_t ibuflen _U_, char *rbuf, si
         goto afp_read_err;
     }
 
-    LOG(log_debug, logtype_afpd, "afp_read(name: \"%s\", offset: %jd, reqcount: %jd)",
-        of_name(ofork), (intmax_t)offset, (intmax_t)reqcount);
+    /* reqcount isn't always truthful. we need to deal with that. */
+    size = ad_size(ofork->of_ad, eid);
+
+    LOG(log_debug, logtype_afpd,
+        "afp_read(off: %jd, len: %jd, fork: %s, size: %jd)",
+        (intmax_t)offset, (intmax_t)reqcount, (ofork->of_flags & AFPFORK_DATA) ? "d" : "r", (intmax_t)size);
+
+    if (offset > size) {
+        err = AFPERR_EOF;
+        goto afp_read_err;
+    }
+
+    /* subtract off the offset */
+    if (reqcount + offset > size) {
+        reqcount = size - offset;
+        err = AFPERR_EOF;
+    }
 
     savereqcount = reqcount;
     saveoff = offset;
+
+    LOG(log_debug, logtype_afpd,
+        "afp_read(off: %jd, len: %jd, fork: %s)",
+        (intmax_t)offset, (intmax_t)reqcount, (ofork->of_flags & AFPFORK_DATA) ? "d" : "r");
+
+    if (reqcount < 0 || offset < 0) {
+        err = AFPERR_PARAM;
+        goto afp_read_err;
+    }
+
+    LOG(log_debug, logtype_afpd, "afp_read(name: \"%s\", offset: %jd, reqcount: %jd)",
+        of_name(ofork), (intmax_t)offset, (intmax_t)reqcount);
+
     if (ad_tmplock(ofork->of_ad, eid, ADLOCK_RD, saveoff, savereqcount,ofork->of_refnum) < 0) {
         err = AFPERR_LOCK;
         goto afp_read_err;
     }
+    
+#ifdef WITH_SENDFILE 
+    if (!(xlate || Debug(obj) ) && !(eid == ADEID_DFORK && ad_data_fileno(ofork->of_ad) == -2)) {
+        int fd;
+                    
+        fd = ad_readfile_init(ofork->of_ad, eid, &offset, 0);
+    
+        if (dsi_stream_read_file(dsi, fd, offset, dsi->datasize) < 0) {
+            if (errno == EINVAL || errno == ENOSYS)
+                goto afp_read_loop;
+            else {
+                LOG(log_error, logtype_afpd, "afp_read(%s): ad_readfile: %s", of_name(ofork), strerror(errno));
+                goto afp_read_exit;
+            }
+        }
+    
+        dsi_readdone(dsi);
+        goto afp_read_done;
+    }
+
+afp_read_loop:
+#endif 
 
     *rbuflen = MIN(reqcount, *rbuflen);
     LOG(log_debug, logtype_afpd, "afp_read(name: \"%s\", offset: %jd, reqcount: %jd): reading %jd bytes from file",
@@ -916,19 +967,6 @@ static int read_fork(AFPObj *obj, char *ibuf, size_t ibuflen _U_, char *rbuf, si
     /* dsi can stream requests. we can only do this if we're not checking
      * for an end-of-line character. oh well. */
     if ((obj->proto == AFPPROTO_DSI) && (*rbuflen < reqcount) && !nlmask) {
-        DSI    *dsi = obj->handle;
-        off_t  size;
-
-        /* reqcount isn't always truthful. we need to deal with that. */
-        size = ad_size(ofork->of_ad, eid);
-
-        /* subtract off the offset */
-        size -= offset;
-        if (reqcount > size) {
-    	   reqcount = size;
-           err = AFPERR_EOF;
-        }
-
         offset += *rbuflen;
 
         /* dsi_readinit() returns size of next read buffer. by this point,
@@ -939,27 +977,6 @@ static int read_fork(AFPObj *obj, char *ibuf, size_t ibuflen _U_, char *rbuf, si
         *rbuflen = cc;
         /* due to the nature of afp packets, we have to exit if we get
            an error. we can't do this with translation on. */
-#ifdef WITH_SENDFILE 
-        if (!(xlate || Debug(obj) )) {
-            int fd;
-                        
-            fd = ad_readfile_init(ofork->of_ad, eid, &offset, 0);
-
-            if (dsi_stream_read_file(dsi, fd, offset, dsi->datasize) < 0) {
-                if (errno == EINVAL || errno == ENOSYS)
-                    goto afp_read_loop;
-                else {
-                    LOG(log_error, logtype_afpd, "afp_read(%s): ad_readfile: %s", of_name(ofork), strerror(errno));
-                    goto afp_read_exit;
-                }
-            }
-
-            dsi_readdone(dsi);
-            goto afp_read_done;
-        }
-
-afp_read_loop:
-#endif 
 
         /* fill up our buffer. */
         while (*rbuflen > 0) {
