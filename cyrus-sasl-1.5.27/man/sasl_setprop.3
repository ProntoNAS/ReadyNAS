.\" Hey Emacs! This file is -*- nroff -*- source.
.\"
.\" This manpage is Copyright (C) 1999 Tim Martin
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\"
.TH sasl_setprop "26 March 2000" SASL "SASL man pages"
.SH NAME
sasl_setprop \- Set a SASL property


.SH SYNOPSIS
.nf
.B #include <sasl.h>

.sp
.BI "int sasl_setprop(sasl_conn_t " *conn ", "
.BI "			 int " propnum ", " 
.BI "			 const void * " pvalue ");"  

.fi
.SH DESCRIPTION

.B sasl_setprop
sets the value of a SASL property. For example an application should tell the SASL library about any external negotiated security layer (i.e. TLS).

.I conn
is the SASL connection object.
.I propnum
is the identifier for the property requested and
.I pvalue
contains a pointer to the data. It is the applications job to make sure this type is correct. This is an easy way to crash a program.

.nf
SASL_MAXOUTBUF  -    security layer max output buf unsigned 
SASL_REALM      -    server authentication realm used 
SASL_GETOPTCTX  -    context for getopt callback 
SASL_IP_LOCAL   -    local address (pvalue=sockaddr_in *) 
SASL_IP_REMOTE  -    remote address (pvalue=sockaddr_in *) 
SASL_SSF_EXTERNAL -  external SSF active -- sasl_external_properties_t
SASL_SEC_PROPS  -    sasl_security_properties_t 
	             also allows SASL_IP_LOCAL, SASL_IP_REMOTE 
.fi

.PP

.SH "RETURN VALUE"

Returns SASL_OK on success. SASL error code on failure.

.SH "CONFORMING TO"
RFC 2222
.SH "SEE ALSO"
.BR other sasl stuff
.BR 
.BR 