.\" Hey Emacs! This file is -*- nroff -*- source.
.\"
.\" This manpage is Copyright (C) 1999 Tim Martin
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\"
.TH sasl_authorize_t "26 March 2000" SASL "SASL man pages"
.SH NAME
sasl_authorize_t \- The SASL authorization callback


.SH SYNOPSIS
.nf
.B #include <sasl.h>

.sp
.BI "int sasl_authorize_t(void " *context ", "
.BI "		          const char " *auth_identity ", "
.BI "		          const char " *requested_user ", "
.BI "		          const char ** " user ", "
.BI "		          const cahr ** " errstr ")";

.fi
.SH DESCRIPTION

.B sasl_authorize_t
is used to check whether the authorized user
.I auth_identity
may act as the user
.I requested_user.
For example the user root may wish to authenticate with his
credentials but act as the user tmartin (with all of tmartin's rights
not roots). A server application should be very careful, and probably
err on the side of caution, when determining which users may proxy as
whom.
.PP

.SH "RETURN VALUE"

SASL callback functions should return SASL return codes. See sasl.h for a complete list. SASL_OK indicates success.

.SH "CONFORMING TO"
RFC 2222
.SH "SEE ALSO"
.BR other sasl stuff
.BR 
.BR 