address_family inet
architecture linux

method loopback
  description
    This method may be used to define the IPv4 loopback interface.

  up
    ifconfig %iface% 127.0.0.1 up
    route add -net 127.0.0.0       if ( mylinuxver() < mylinux(2,1,100) )

  down
    ifconfig %iface% down
method static
  description
    This method may be used to define ethernet interfaces with statically
    allocated IPv4 addresses.
      
  options
    address address             -- Address (dotted quad) *required*
    netmask netmask             -- Netmask (dotted quad) *required*
    broadcast broadcast_address -- Broadcast address (dotted quad)
    network network_address     -- Network address (dotted quad) *required \
                                     for 2.0.x kernels*
    gateway address             -- Default gateway (dotted quad)
    pointopoint address		-- Address of other end point (dotted quad). \
				   Note the spelling of "point-to".

  up
    ifconfig %iface% %address% netmask %netmask% [[broadcast %broadcast%]] \
	[[pointopoint %pointopoint%]] up
    route add -net %network%  \
        if ( mylinuxver() < mylinux(2,1,100) )
    [[ route add default gw %gateway% %iface% ]]

  down
    [[ route del default gw %gateway% %iface% ]]
    ifconfig %iface% down
method dhcp
  description
    This method may be used to obtain an address via DHCP with any of
    the tools: dhclient, pump (2.2.x kernels only), or dhcpcd.
    If you have a complicated DHCP setup you should
    note that some of these clients use their own configuration files,
    rather than obtaining their configuration via *ifup*.

  options
    hostname hostname   -- Hostname to be requested (pump, dhcpcd)
    leasehours leastime -- Preferred lease time in hours (pump)
    leasetime leasetime -- Preferred lease time in seconds (dhcpcd)
    vendor vendor       -- Vendor class identifier (dhcpcd)
    client client_id    -- Client identifier (dhcpcd)

  up
    dhclient %iface%  \
        if (execable("/sbin/dhclient"))
    pump -i %iface% [[-h %hostname%]] [[-l %leasehours%]] \
        elsif (execable("/sbin/pump") && mylinuxver() >= mylinux(2,1,100))
    dhcpcd [[-h %hostname%]] [[-i %vendor%]] [[-I %clientid%]] \
           [[-l %leasetime%]] %iface% \
        elsif (execable("/sbin/dhcpcd"))

  down
    cat /var/run/dhclient.pid | xargs -i kill -TERM {} \
        if (execable("/sbin/dhclient"))
    pump -i %iface% -k \
        elsif (execable("/sbin/pump") && mylinuxver() >= mylinux(2,1,100))
    dhcpcd -k %iface% \
        elsif (execable("/sbin/dhcpcd"))

    ifconfig %iface% down
method bootp
  description
    This method may be used to obtain an address via bootp.

  options
    bootfile file  -- Tell the server to use /file/ as the bootfile.
    server address -- Use the IP address /address/ to communicate with \
                      the server.
    hwaddr addr    -- Use /addr/ as the hardware address instead of \
                      whatever it really is.

  up
    bootpc [[--bootfile %bootfile%]] --dev %iface% [[--server %server%]] \
           [[--hwaddr %hwaddr%]] --returniffail --serverbcast

  down
    ifconfig down %iface%
method ppp
  description
    This method uses pon/poff to configure a PPP interface. See those
    commands for details.
  options
    provider name  -- Use /name/ as the provider (from /etc/ppp/peers).
  up
    pon [[%provider%]]
  down
    poff [[%provider%]]
method wvdial
  description
    This method uses wvdial to configure a PPP interface. See that command
    for ore details.
  options
    provider name  -- Use /name/ as the provider (from /etc/ppp/peers).
  up
    /sbin/start-stop-daemon --start -x /usr/bin/wvdial \
                      -p /var/run/wvdial.%iface% -b -m -- [[ %provider% ]]
  down
    /sbin/start-stop-daemon --stop -x /usr/bin/wvdial \
                      -p /var/run/wvdial.%iface% -s 2
