.\" dpkg manual page - dpkg-buildflags(1)
.\"
.\" Copyright Â© 2010-2011 RaphaÃ«l Hertzog <hertzog@debian.org>
.\" Copyright Â© 2011 Kees Cook <kees@debian.org>
.\"
.\" This is free software; you can redistribute it and/or modify
.\" it under the terms of the GNU General Public License as published by
.\" the Free Software Foundation; either version 2 of the License, or
.\" (at your option) any later version.
.\"
.\" This is distributed in the hope that it will be useful,
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\" GNU General Public License for more details.
.\"
.\" You should have received a copy of the GNU General Public License
.\" along with this program.  If not, see <http://www.gnu.org/licenses/>.
.
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH dpkg\-buildflags 1 03\-04\-2012 "Projet Debian" "suite dpkg"
.SH NOM
dpkg\-buildflags \- retourne les options de compilation à utiliser pour la
construction du paquet
.
.SH SYNOPSIS
\fBdpkg\-buildflags\fP [\fIoption\fP...] [\fIcommande\fP]
.
.SH DESCRIPTION
\fBdpkg\-buildflags\fP est un script qui permet de récupérer les options de
compilation à utiliser pour la construction d'un paquet.
.
Les drapeaux par défaut sont définis par le fournisseur de la distribution
mais peuvent être étendus ou remplacés de plusieurs façons\ :
.IP 1.
pour tout le système avec \fB/etc/dpkg/buildflags.conf\fP;
.IP 2.
pour l'utilisateur courant avec \fB$XDG_CONFIG_HOME/dpkg/buildflags.conf\fP où
la valeur par défaut de \fB$XDG_CONFIG_HOME\fP est \fB$HOME/.config\fP;
.IP 3.
temporairement par l'utilisateur avec des variables d'environnement (voir
\fBVARIABLES D'ENVIRONNEMENT\fP).
.IP 4.
dynamiquement par le responsable du paquet avec des variables
d'environnement via \fBdebian/rules\fP (voir \fBVARIABLES D'ENVIRONNEMENT\fP).
.P
Les fichiers de configuration peuvent contenir deux types de directives\ :
.TP 
\fBSET\fP\fI drapeau valeur\fP
Remplace le drapeau \fIdrapeau\fP par la valeur \fIvaleur\fP.
.TP 
\fBSTRIP\fP\fI valeur drapeau\fP
Retire du drapeau \fIdrapeau\fP tous les drapeaux de construction listés dans
\fIvaleur\fP.
.TP 
\fBAPPEND\fP\fI drapeau valeur\fP
Étend le drapeau \fIdrapeau\fP avec les options indiquées dans \fIvaleur\fP. Un
espace est ajouté au début de ce qui est ajouté si la valeur actuelle du
drapeau n'est pas vide.
.TP 
\fBPREPEND\fP\fI valeur drapeau\fP
Préfixe le drapeau \fIdrapeau\fP avec les options indiquées dans \fIvaleur\fP. Un
espace est ajouté au début de ce qui est ajouté si la valeur actuelle du
drapeau n'est pas vide.
.P
Les fichiers de configuration peuvent contenir des commentaires sur les
lignes commençant par un dièse (#). Les lignes vides sont également
ignorées.
.SH COMMANDES
.TP 
\fB\-\-dump\fP
Affiche sur la sortie standard tous les drapeaux de compilation et leurs
valeurs. Un drapeau par ligne est affiché, suivi de sa valeur, séparée par
le caractère «\ égal\ » («\ \fIdrapeau\fP=\fIvaleur\fP\ »). Il s'agit de l'action par
défaut.
.TP 
\fB\-\-list\fP
Affiche la liste des drapeaux gérés par l'éditeur actuel (un par
ligne). Voir la section \fBDRAPEAUX GÉRÉS\fP pour plus d'informations sur
chacun d'eux.
.TP 
\fB\-\-status\fP
Affiche toute information utile pour expliquer le comportement de
\fBdpkg\-buildflags\fP\ : variables  d'environnement, éditeur actuel, état de
tous les drapeaux de fonctionnalités. Affiche également les drapeaux de
compilation résultants ainsi que leur origine.

Cette option est destinée à être utilisée depuis \fBdebian/rules\fP, afin de
garder dans le journal de construction une trace claire des drapeaux de
compilation utilisés. Cela peut être utile pour diagnostiquer des problèmes
qui y seraient liés.
.TP 
\fB\-\-export=\fP\fIformat\fP
Affiche sur la sortie standard les commandes shell (si \fIformat\fP est \fBsh\fP)
ou make (si \fIformat\fP est \fBmake\fP) qui permettent d'exporter tous les
drapeaux de compilation dans l'environnement. Si \fIformat\fP est \fBconfigure\fP,
la sortie peut être utilisée comme une ligne de commande de \fB./configure\fP?
Si \fIformat\fP n'est pas spécifié, sa valeur est \fBsh\fP. Seuls les drapeaux de
compilation commençant par une majuscule sont inclus, les autres étant
supposés inadaptés à l'environnement.
.TP 
\fB\-\-get\fP\fI drapeau\fP
Affiche la valeur de ce drapeau sur la sortie standard. Retourne un code de
sortie 0 si le drapeau est connu et 1 s'il est inconnu.
.TP 
\fB\-\-origin\fP\fI drapeau\fP
Affiche l'origine de la valeur renvoyée par \fB\-\-get\fP. Retourne un code de
sortie 0 si le drapeau est connu et 1 s'il est inconnu. L'origine est une
des valeurs suivantes\ :
.RS
.TP 
\fBvendor\fP
le drapeau défini à l'origine par l'éditeur est renvoyé\ ;
.TP 
\fBsystem\fP
le drapeau est placé ou modifié par un réglage système\ ;
.TP 
\fBuser\fP
le drapeau est placé ou modifié par une configuration spécifique à
l'utilisateur\ ;
.TP 
\fBenv\fP
le drapeau est placé ou modifié par une configuration spécifique dans
l'environnement.
.RE
.TP 
\fB\-\-query\-features\fP\fI domaine\fP
Affiche les fonctionnalités activées pour un domaine donné. Le seul domaine
reconnu à ce jour est \fBhardening\fP. Retourne un code de sortie 0 si le
domaine est connu et 1 s'il est inconnu.
.IP
Le format d'affichage est dans le style RFC822, avec une section par
fonctionnalité. Par exemple\ :
.IP
.nf
  Feature: pie
  Enabled: no

  Feature: stackprotector
  Enabled: yes
.fi
.TP 
\fB\-\-help\fP
Affiche un message d'aide puis quitte.
.TP 
\fB\-\-version\fP
Affiche le numéro de version puis quitte.
.
.SH "DRAPEAUX GÉRÉS"
.TP 
\fBCFLAGS\fP
Options du compilateur C. La valeur par défaut définie par l'éditeur
comporte \fI\-g\fP le niveau d'optimisation par défaut (\fI\-O2\fP en général, ou
\fI\-O0\fP si la variable d'environnement \fBDEB_BUILD_OPTIONS\fP contient
\fInoopt\fP).
.TP 
\fBCPPFLAGS\fP
Options du préprocesseur C. Valeur par défaut\ :\ aucune.
.TP 
\fBCXXFLAGS\fP
Options du compilateur C++. Analogue à \fBCFLAGS\fP.
.TP 
\fBFFLAGS\fP
Options du compilateur Fortran. Analogue à \fBCFLAGS\fP.
.TP 
\fBLDFLAGS\fP
Options passées au compilateur lors du processus de liaison des exécutables
ou des objets partagés (si le linker est appelé directement, alors \fB\-Wl\fP et
\fB,\fP doivent être retirés de ces options). Valeur par défaut\ :\ aucune.
.
.SH FICHIERS
.TP 
\fB/etc/dpkg/buildflags.conf\fP
Fichier de configuration pour l'ensemble du système.
.TP 
\fB$XDG_CONFIG_HOME/dpkg/buildflags.conf\fP ou \fB$HOME/.config/dpkg/buildflags.conf\fP
Fichier de configuration propre à l'utilisateur
.SH ENVIRONNEMENT
Deux jeux de variables d'environnement effectuent les mêmes opérations. Le
premier (DEB_\fIdrapeau\fP_\fIopération\fP) ne devrait jamais être utilisé depuis
\fBdebian/rules\fP. Il est destiné aux utilisateurs souhaitant recompiler le
paquet source avec des drapeaux de compilation modifiés. Le second
(DEB_\fIdrapeau\fP_MAINT_\fIopération\fP) ne doit être utilisé que dans
\fBdebian/rules\fP par les responsables de paquets pour modifier les drapeaux
de compilation concernés.
.TP 
\fBDEB_\fP\fIdrapeau\fP\fB_SET\fP
.TQ
\fBDEB_\fP\fIdrapeau\fP\fB_MAINT_SET\fP
Cette variable permet de forcer la valeur renvoyée pour le \fIdrapeau\fP
indiqué.
.TP 
\fBDEB_\fP\fIdrapeau\fP\fB_STRIP\fP
.TQ
\fBDEB_\fP\fIdrapeau\fP\fB_MAINT_STRIP\fP
Cette variable peut être utilisée pour fournir une liste d'options (séparées
par des espaces) qui seront retirées du jeu de drapeaux renvoyé pour le
\fIdrapeau\fP indiqué.
.TP 
\fBDEB_\fP\fIdrapeau\fP\fB_APPEND\fP
.TQ
\fBDEB_\fP\fIdrapeau\fP\fB_MAINT_APPEND\fP
Cette variable permet d'ajouter des options à la valeur renvoyée pour le
\fIdrapeau\fP indiqué.
.TP 
\fBDEB_\fP\fIdrapeau\fP\fB_PREPEND\fP
.TQ
\fBDEB_\fP\fIdrapeau\fP\fB_MAINT_PREPEND\fP
Cette variable permet de préfixer la valeur renvoyée pour le \fIdrapeau\fP
indiqué par des options supplémentaires.
.TP 
\fBDEB_BUILD_MAINT_OPTIONS\fP
Cette variable permet d'activer ou désactiver différents drapeaux de
compilation renforcée via l'option \fBhardening\fP. Voir la section
\fBCOMPILATION RENFORCÉE\fP pour plus d'informations.
.
.SH "COMPILATION RENFORCÉE (« HARDENING\ »)"
Plusieurs options de compilation (détaillées ci\-dessous) peuvent aider à
rendre le binaire compilé moins sensible aux attaques par corruption de la
mémoire ou à fournir des messages supplémentaires d'avertissement lors de la
compilation. Sauf mention contraire, ces options sont activées par défaut
pour les architectures qui les gèrent.
.P
Chaque option de renforcement peut être activée ou désactivée avec la valeur
\fBhardening\fP de la variable d'environnement \fBDEB_BUILD_MAINT_OPTIONS\fP, via
un modificateur «\ +\ » ou «\ \-\ ». Par exemple, pour activer l'option «\ pie\ »
et désactiver l'option «\ feature\ », il est possible d'indiquer ceci dans
\fBdebian/rules\fP\ :
.P
  export DEB_BUILD_MAINT_OPTIONS=hardening=+pie,\-fortify
.P
L'option spéciale \fBall\fP peut être utilisée pour activer ou désactiver
toutes les options de renforcement à la fois. Ainsi, tout désactiver en
n'activant que «\ format\ » et «\ fortify\ » peut être réalisé avec\ :
.P
  export DEB_BUILD_MAINT_OPTIONS=hardening=\-all,+format,+fortify
.
.TP 
\fBformat\fP
Ce réglage, activé par défaut, ajoute \fB\-Wformat \-Werror=format\-security\fP à
\fBCFLAGS\fP et \fBCXXFLAGS\fP. Cela provoquera l'avertissement en cas
d'utilisation de chaînes de formatage incorrectes et échouera si les
fonctions de formatage sont utilisées d'une façon qui présente des risques
pour la sécurité. Actuellement, ce réglage crée des avertissements pour les
appels des fonctions \fBprintf\fP et \fBscanf\fP lorsque la chaîne de formatage
n'est pas une chaîne littérale et qu'aucun paramètre de formatage n'est
utilisé (par exemple dans \fBprintf(foo);\fP au lieu de \fBprintf("%s",
foo);\fP. Ce type de syntaxe peut créer un problème de sécurité si la chaîne
de formatage vient d'une source non sûre et contient «\ %n\ ».
.
.TP 
\fBfortify\fP
Ce réglage, activé par défaut, ajoute \fB\-D_FORTIFY_SOURCE=2\fP à \fBCFLAGS\fP et
\fBCPPFLAGS\fP. Lors de la création du code, le compilateur connaît un nombre
important d'informations relatives aux tailles de tampons (quand c'est
possible) et tente alors de remplacer des appels de fonctions avec une
taille illimitée de tampons, peu sûrs, par des appels avec des tampons de
taille limitée. Cette fonctionnalité est particulièrement utile pour du code
ancien et mal écrit. De plus, les chaînes de formatage dans la mémoire
accessible en écriture qui contiennent «\ %n\ » sont bloquées. Si une
application dépend de telles chaînes de formatage, un contournement devra
être mis en place.

Veuillez noter que pour que cette option ait une utilité, le code source
doit être compilé avec l'option \fB\-O1\fP ou supérieure.
.TP 
\fBstackprotector\fP
Ce réglage, activé par défaut, ajoute \fB\-fstack\-protector
\-\-param=ssp\-buffer\-size=4\fP à \fBCFLAGS\fP et \fBCXXFLAGS\fP. Il ajoute des
contrôles liés aux réécritures de piles. Cela conduit des tentatives
d'attaques par injection de code à terminer en échec. Dans le meilleur des
cas, cette protection transforme une vulnérabilité d'injection de code en
déni de service ou en non\-problème (selon les applications).

Cette fonctionnalité impose de lier le code à glibc (ou toute autre
bibliothèque fournissant \fB__stack_chk_fail\fP) et doit donc être désactivée
lorsque le code est construit avec \fB\-nostdlib\fP, \fB\-ffreestanding\fP ou
équivalents.
.
.TP 
\fBrelro\fP
Ce réglage, activé par défaut, ajoute \fB\-Wl,\-z,relro\fP à \fBLDFLAGS\fP. Lors du
chargement du programme, plusieurs parties de la mémoire ELF doivent être
écrites par l'éditeur de liens. Ce réglage indique au chargeur de mettre ces
sections en lecture seule avant de rendre le contrôle au
programme. L'utilisation habituelle de ce réglage est la protection contre
les attaques par réécriture GOT. Si cette option est désactivée, l'option
\fBbindnow\fP sera également désactivée.
.
.TP 
\fBbindnow\fP
Ce réglage, désactivé par défaut, ajoute \fB\-Wl,\-z,now\fP à \fBLDFLAGS\fP. Lors du
chargement du programme, tous les symboles dynamiques sont résolus, ce qui
permet au «\ PLT\ » entier (NdT\ : jargon détecté\ !) d'être en lecture seule
(du fait du réglage \fBrelro\fP ci\-dessus). Cette option ne peut être activée
si \fBrelro\fP ne l'est pas.
.
.TP 
\fBpie\fP
Ce réglage, désactivé par défaut, ajoute \fB\-fPIE\fP à \fBCFLAGS\fP et \fBCXXFLAGS\fP
ainsi que \fB\-fPIE \-pie\fP à \fBLDFLAGS\fP. Les exécutables à position
indépendante («\ Position Independent Executable\ ») permettent d'utiliser la
randomisation de l'organisation de l'espace d'adressage (ASLR\ :\ «\ Address
Space Layout Randomization\ »), qui est gérée par certaines versions du
noyau. Bien que ASLR puisse déjà être mise en oeuvre pour les zones de
données dans la pile et le tampon (brk et mmap), les zones de codes doivent
être compilées comme indépendantes de la position. Les bibliothèques
partagées font déjà cela (\-fPIC) ce qui permet automatiquement d'utiliser
ASLR. Par contre les régions .text binaires doivent être construites en mode
PIE pour mettre en ?uvre ASLR. Une fois cela réalisé, les attaques ROP
(«\ Return Oriented Programming\ ») deviennent plus difficiles car il n'existe
pas d'emplacement statique d'où rebondir sur une attaque par corruption de
la mémoire.

Ce réglage n'est pas compatible avec \fB\-Fpic\fP\ :\ la prudence est donc
conseillée pour la construction d'objets partagés.

De plus, comme la protection PIE est mise en ?uvre via un registre global,
certaines architectures (notamment i386) peuvent souffrir de pertes de
performances allant jusqu'à 15\ % sur des charges d'applications utilisant
largement les segments de texte\ ;\ le plus souvent, cette perte de
performances n'excèdera pas 1\ %. Pour des architectures offrant plus de
registres globaux (par exemple amd64), cette pénalisation n'existe
pratiquement pas.
.SH TRADUCTION
Ariel VARDI <ariel.vardi@freesbee.fr>, 2002.
Philippe Batailler, 2006.
Nicolas François, 2006.
Veuillez signaler toute erreur à <debian\-l10n\-french@lists.debian.org>.
