.\" dpkg manual page - dpkg-source(1)
.\"
.\" Copyright Â© 1995-1996 Ian Jackson <ian@chiark.chu.cam.ac.uk>
.\" Copyright Â© 2000 Wichert Akkerman <wakkerma@debian.org>
.\" Copyright Â© 2006-2007 Frank Lichtenheld <djpig@debian.org>
.\" Copyright Â© 2006-2012 Guillem Jover <guillem@debian.org>
.\" Copyright Â© 2008-2011 RaphaÃ«l Hertzog <hertzog@debian.org>
.\" Copyright Â© 2010 Joey Hess <joeyh@debian.org>
.\"
.\" This is free software; you can redistribute it and/or modify
.\" it under the terms of the GNU General Public License as published by
.\" the Free Software Foundation; either version 2 of the License, or
.\" (at your option) any later version.
.\"
.\" This is distributed in the hope that it will be useful,
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\" GNU General Public License for more details.
.\"
.\" You should have received a copy of the GNU General Public License
.\" along with this program.  If not, see <http://www.gnu.org/licenses/>.
.
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH dpkg\-source 1 "4 de mayo del 2012" "Proyecto Debian" "Herramientas de dpkg"
.SH NOMBRE
dpkg\-source \- Herramienta de manipulación de paquetes fuente de Debian
«.dsc»
.
.SH SINOPSIS
\fBdpkg\-source\fP [\fIopción\fP...] \fIorden\fP
.
.SH DESCRIPCIÓN
\fBdpkg\-source\fP empaqueta y desempaqueta archivos de fuentes de Debian.

Ninguna de estas órdenes permite combinar múltiples opciones en una
sola. Tampoco permiten que el valor de una opción se especifique en un
argumento separado.
.
.SH ÓRDENES
.TP 
\fB\-x \fP\fIfichero\fP\fB.dsc \fP[\fIdirectorio\-salida\fP]
Extrae un paquete fuente. Se debe suministrar un argumento que no sea una
opción, el nombre del fichero de control de fuente de Debian
(\fB.dsc\fP). Puede introducir un segundo argumento que no sea una opción para
definir el directorio en el que extraer el paquete fuente, el cual no debe
existir. En caso de no definir ningún directorio, el paquete fuente se
extraerá en un directorio llamado \fIfuente\fP\-\fIversión\fP dentro del directorio
actual.

\fBdpkg\-source\fP lee los nombres de los demás ficheros que componen el paquete
fuente desde el fichero de control; se asume que están en el mismo
directorio que el fichero \fB.dsc\fP.

Los permisos y propietarios de los ficheros del paquete extraído serán los
mismos que se esperarían si los ficheros se hubiesen simplemente creado \-
0777 para directorios y ejecutables y 0666 para el resto de ficheros, ambos
modificados según el umask del extractor. Si el directorio superior tiene
activado el bit setgid, los directorios extraídos lo tendrán también, y
todos los ficheros y directorios heredarán el grupo al que pertenece.

Si el paquete fuente usa un formato no estándar (a día de hoy, todos los
formatos menos «1.0»), su nombre se guardará en \fBdebian/source/format\fP para
que las siguientes construcciones del paquete fuente usen el mismo formato
por omisión.

.TP 
\fB\-b\fP \fIdirectorio\fP [\fIparámetros\-específicos\-formato\fP]
Construye un paquete fuente. El primer argumento, que no opción, se toma
como el nombre del directorio que contiene el árbol de fuentes «debianizado»
(por ejemplo, con un subdirectorio «debian/», y puede que cambios en los
ficheros originales). Puede especificar parámetros adicionales, dependiendo
del formato de paquete fuente usado en la construcción del paquete.

\fBdpkg\-source\fP construirá el paquete fuente con el primer formato posible de
esta lista, y en este orden: el formato indicado con la opción de línea de
órdenes \fI\-\-format\fP, el formato indicado en \fBdebian/source/format\fP,
«1.0». El uso predefinido de «1.0» en ausencia de otro valor está obsoleto y
se eliminará en el futuro. Siempre debería documentar el formato fuente
deseado en \fBdebian/source/format\fP. Consulte la sección \fBFORMATOS DE
PAQUETE FUENTE\fP para una extensa descripción de los diferentes formatos de
paquete fuente.

.TP 
\fB\-\-print\-format\fP \fIdirectorio\fP
Muestra el formato de fuentes a utilizar en la construcción del paquete
fuente si se ejecutó \fBdpkg\-source \-b \fP\fIdirectorio\fP (con las mismas
condiciones y los mismos parámetros).

.TP 
\fB\-\-before\-build\fP \fIdirectorio\fP
Ejecuta la orden (o «hook») que se corresponde con el formato de paquete
fuente. Esta orden  se ejecuta antes de construir un paquete
(\fBdpkg\-buildpackage\fP lo ejecuta muy temprano en el proceso, incluso antes
que \fBdebian/rules clean\fP). Esta orden es idempotente, y se puede ejecutar
varias veces. No todos los formatos de fuente implementan algo en este
«hook», y aquellos que lo hacen habitualmente preparan el árbol de las
fuentes para la construcción, por ejemplo, comprobando que se aplican los
parches de Debian.

.TP 
\fB\-\-after\-build\fP \fIdirectorio\fP
Ejecuta la orden (o «»hook) que se corresponde al formato de paquete
fuente. Esta orden se ejecuta después de construir un paquete
(\fBdpkg\-buildpackage\fP lo ejecuta en último lugar). Esta orden es
idempotente, y se puede ejecutar varias veces. No todos los formatos de
fuentes implementan algo en este «hook», y aquellos que lo hacen lo usan
habitualmente para deshacer lo que \fB\-\-before\-build\fP ha hecho.

.TP 
\fB\-\-commit\fP [\fIdirectorio\fP] ...
Registra las modificaciones del árbol de fuentes desempaquetado en el
\fIdirectorio\fP. Esta orden acepta parámetros adicionales dependiendo del
formato de fuente. Este función devuelve error con los formatos no
aceptados.

.TP 
\fB\-?\fP, \fB\-\-help\fP
Muestra el modo de uso y termina.
.TP 
\fB\-\-version\fP
Muestra la versión y termina.
.
.SH "OPCIONES GENÉRICAS DE CONSTRUCCIÓN"
.TP 
\fB\-c\fP\fIfichero\-de\-control\fP
Define el fichero de control principal de las fuentes del que leer la
información, \fBdebian/control\fP por omisión. Si se introducen rutas
relativas, éstas se interpretan empezando en el directorio superior del
árbol de fuentes.
.TP 
\fB\-l\fP\fIfichero\-de\-cambios\fP
Define el fichero de registro de cambios del que leer la información. Por
omisión, \fBdebian/changelog\fP. Si se introduce una ruta relativa, ésta se
interpreta empezando en el directorio superior del árbol de fuentes.
.TP 
\fB\-F\fP\fIformato\-fichero\-de\-cambios\fP
Define el formato del fichero de cambios. Para información sobre formatos
alternativos consulte \fBdpkg\-parsechangelog\fP(1).
.TP 
\fB\-\-format=\fP\fIvalor\fP
Usa el formato dado para la construcción del paquete fuente. Esto
sobreescribe cualquier formato presente en\fBdebian/source/format\fP.
.TP 
\fB\-V\fP\fInombre\fP\fB=\fP\fIvalor\fP
Define una variable de sustitución de la salida. Consulte
\fBdeb\-substvars\fP(5) para más información acerca de la sustitución de la
salida.
.TP 
\fB\-T\fP\fIfichero\-variables\-sustitución\fP
Lee las variables de sustitución desde \fIfichero\-variables\-sust\fP; el valor
por omisión es no leer ninguno. Puede utilizar esta opción varias veces para
leer variables de sustitución de varios ficheros.
.TP 
\fB\-D\fP\fIcampo\fP\fB=\fP\fIvalor\fP
Sobreescribe o añade un campo en el fichero de control de salida.
.TP 
\fB\-U\fP\fIcampo\fP
Elimina un campo del fichero de control de salida.
.TP 
\fB\-Z\fP\fIcompression\fP, \fB\-\-compression\fP=\fIcompresión\fP
Define qué compresión utilizar con los ficheros creados (archivos tar y
ficheros «diff»). Tenga en cuenta que esta opción no provoca que los
archivos tar existentes se compriman nuevamente, sólo afecta a los ficheros
nuevos. Los valores permitidos son: \fIgzip\fP, \fIbzip2\fP, \fIlzma\fP y
\fIxz\fP. \fIgzip\fP se usa por omisión. La compatibilidad con \fIxz\fP es posible
desde dpkg\-dev 1.15.5.
.TP 
\fB\-z\fP\fIlevel\fP, \fB\-\-compression\-level\fP=\fInivel\fP
El nivel de compresión a utilizar. Al igual que \fB\-Z\fP, sólo afecta a los
ficheros nuevos. Los valores permitidos son de \fI1\fP a \fI9\fP, \fIbest\fP, y
\fIfast\fP. Por omisión, \fI9\fP se utiliza para gzip y bzip2, y \fI6\fP para xz y
lzma.
.TP 
\fB\-i\fP[\fIexpresión\-regular\fP], \fB\-\-diff\-ignore\fP[=\fIexpresión\-regular\fP]
Puede especificar una expresión regular de Perl para indicar aquellos
ficheros que desee excluir de la lista de ficheros para el «diff» (esta
lista se genera con una orden find). Puede utilizar esto para ignorar
cambios no introducidos en ficheros específicos, en caso de construir un
paquete fuente como un paquete fuente versión 3 usando VCS. Por sí mismo,
\fB\-i\fP activa la opción con una expresión regular predefinida que elimina los
ficheros y directorios de control de los sistemas de control de versiones
más comunes, los ficheros de respaldo, los ficheros de intercambio y los
directorios que se generan como resultado de las operaciones de
Libtool. Sólo puede haber una expresión regular activa, y en caso de existir
varias opciones \fB\-i\fP sólo se tendrá en cuenta la última.

Esto es útil para eliminar ficheros externos que se incluyen en el
«diff». Por ejemplo, si desarrolla su software en sistema de control de
versiones y desea realizar un «checkout» para construir un paquete fuente,
sin incluir los ficheros y directorios adicionales que habitualmente
contiene (por ejemplo, «CVS/», «.cvsignore», «.svn»). La expresión regular
predefinida es bastante completa, pero si necesita reemplazarla, tenga en
cuenta que por omisión, puede coincidir con cualquier parte de la ruta. Por
ello, si desea emparejar el principio de un nombre de fichero, o sólo
nombres de fichero completos, tendrá que introducir directamente el anclaje
necesario (por ejemplo, '(^|/)', '($|/)').
.TP 
\fB\-\-extend\-diff\-ignore\fP=\fIexpresión\-regular\fP
La expresión regular de perl definida extenderá el valor predefinido de
\fB\-\-diff\-ignore\fP y su valor actual (si se define), Para ello, concatena
«\fB|\fP\fIregexp\fP» al valor existente. Es conveniente utilizar esta opción en
\fBdebian/source/options\fP para excluir algunos ficheros generados de forma
automática a partir de la generación automática de parches.
.TP 
\fB\-I\fP[\fIpatrón\-fichero\fP], \fB\-\-tar\-ignore\fP[=\fIpatrón\-fichero\fP]
Si se especifica esta opción, el nombre de fichero se pasará como parámetro
a la opción «\-\-exclude» de \fBtar\fP(1) al generar el fichero «.orig.tar» o
«.tar». Por ejemplo, «\-ICVS» hará que tar omita los directorios CVS cuando
genere el fichero «.tar.gz». La opción se puede repetir varias veces para
listar varios patrones a excluir.

Por si mismo, \fB\-I\fP añade las opciones predefinidas «\-\-exclude», que
filtrarán los ficheros de control y los directorios de los sistemas de
control de versiones más comunes, ficheros de respaldo e intercambio, y los
directorios de salida de construcción de Libtool.
.PP
\fBNota:\fP A pesar de tener objetivos similares, \fBi\fP y \fBI\fP tienen una
sintaxis y semántica muy diferentes. Sólo puede especificar \fBi\fP una vez,
que toma una expresión regular compatible con Perl, la cual se compara con
la ruta relativa de cada fichero. Puede especificar \fBI\fP varias veces, y
toma un patrón de nombre de fichero con comodines de intérprete de
órdenes. El patrón se compara con la ruta relativa, y también con cada parte
de la ruta, de manera individual. La semántica exacta de la opción
«\-\-exclude» de tar es algo complicada, consulte
http://www.gnu.org/software/tar/manual/tar.html#wildcards para una completa
documentación.

Puede consultar los patrones y expresiones regulares predefinidas de ambas
opciones en la salida de la orden \fB\-\-help\fP.
.SH "OPCIONES DE EXTRACCIÓN GENÉRICAS"
.TP 
\fB\-\-no\-copy\fP
No copia los ficheros tar originales cerca del paquete fuente extraído.
.TP 
\fB\-\-no\-check\fP
No revisa las firmas y sumas de control antes de desempaquetar.
.TP 
\fB\-\-require\-valid\-signature\fP
Rechaza desempaquetar el paquete fuente si no contiene una firma OpenPGP,
que se verifica o bien con el anillo de claves de usuario
\fItrustedkeys.gpg\fP, uno de los anillos de claves específicos del proveedor,
o uno de los anillos de claves oficiales de Debian,
\fI/usr/share/keyrings/debian\-keyring.gpg\fP y
\fI/usr/share/keyrings/debian\-maintainers.gpg\fP.

.SH "FORMATOS DE PAQUETE FUENTE"
Si no sabe qué formato de fuentes usar, debería seleccionar o bien «3.0
(quilt)» o «3.0 (native)». Consulte
«http://wiki.debian.org/Projects/DebSrc3.0» para más información acerca del
desarrollo de estos formatos dentro del proyecto Debian.

.SS "Formato: 1.0"
Un paquete fuente en este formato consiste bien de un \fB.orig.tar.gz\fP
asociado a un \fB.diff.gz\fP, o bien de un único \fB.tar.gz\fP (en tal caso, el
paquete se considera \fInative\fP).

\fBExtracción\fP

Extraer un paquete nativo es simplemente una extracción de un único archivo
tar en el directorio destino. Extraer un paquete no nativo se realiza,
primero, desempaquetando el \fB.orig.tar.gz\fP para después aplicar el parche
contenido en el fichero \fB.diff.gz\fP. La marca temporal de todos los ficheros
parcheados se modifica en el momento de extraer el paquete fuente (esto
evita bifurcaciones de las marcas temporales, que conducen a problemas
cuando se parchean los ficheros generados automáticamente). El «diff» puede
crear nuevos ficheros (todo el directorio «debian/» se crea de esta manera)
pero no puede eliminar ficheros (los ficheros vacíos permanecerán en el
sistema).

\fBConstrucción\fP

Construir un paquete nativo consiste de la creación de un único archivo tar
con el directorio fuente. Construir un paquete no nativo incluye extraer el
archivo tar original en otro directorio «.orig», regenerando el \fB.diff.gz\fP
por comparación del \fIdirectorio\fP del paquete fuente con el directorio
«.orig».

.TP 
\fBOpciones de construcción (con \-b):\fP
.PP
Si hay un segundo argumento, debería ser el nombre del directorio de
fuentes, del fichero tar original o la cadena vacía, si el paquete es
específico de Debian y por tanto carece de diffs «debianizantes». Si no se
proporciona un segundo argumento, \fBdpkg\-source\fP buscará el archivo tar
original \fIpaquete\fP\fB_\fP\fIversión\-autor\-original\fP\fB.orig.tar.gz\fP o el
directorio de fuentes original \fIdirectorio\fP\fB.orig\fP en función de los
argumentos \fB\-sX\fP.

\fB\-sa\fP, \fB\-sp\fP, \fB\-sk\fP, \fB\-su\fP y \fB\-sr\fP no sobreescribirán directorios o
ficheros tar existentes. Si esto es lo que desea, debería utilizar \fB\-sA\fP,
\fB\-sP\fP, \fB\-sK\fP, \fB\-sU\fP y \fB\-sR\fP en su lugar.
.TP 
\fB\-sk\fP
Define que se espera la fuente original como un archivo tar, por omisión
\fIpaquete\fP\fB_\fP\fIversión\-autor\-original\fP\fB.orig.tar.gz\fP. La fuente original
se dejará en el sitio como un fichero tar, o se copiará al directorio actual
en caso de no estar ya ahí presente. El archivo tar se desempaquetará en
\fIdirectorio\fP\fB.orig\fP para la generación del «diff».
.TP 
\fB\-sp\fP
Idéntica a \fB\-sk\fP, a diferencia de que eliminará el directorio al finalizar.
.TP 
\fB\-su\fP
Define que se espera que la fuente original sea un directorio, por omisión
\fIpaquete\fP\fB\-\fP\fIversión\-autor\-original\fP\fB.orig\fP, y que \fBdpkg\-source\fP creará
un fichero de fuentes nuevo a partir de él.
.TP 
\fB\-sr\fP
Idéntica a \fB\-su\fP, a diferencia de que eliminará el directorio después de su
uso.
.TP 
\fB\-ss\fP
Define que la fuente original está disponible tanto como directorio como un
fichero tar. dpkg\-source usará el directorio para crear el diff , pero el
fichero tar para crear el \fB.dsc\fP. Debe utilizar esta opción con precaución,
ya que si el directorio y el archivo tar no coinciden se generará un archivo
fuente inválido.
.TP 
\fB\-sn\fP
Omite la búsqueda de la fuente original y no generará un «diff». El segundo
argumento, en caso de existir, debe ser la cadena vacía. Esta opción se usa
en paquetes específicos de Debian que no tienen fuentes del autor original
por separado, y por tanto carecen de ficheros «diff» «debianizantes».
.TP 
\fB\-sa\fP or \fB\-sA\fP
Defina una búsqueda de la fuente original como directorio o como archivo tar
\- el segundo argumento, de existir, puede ser cualquiera de las dos cosas o
la cadena vacía (equivale a utilizar \fB\-sn\fP). Si se encuentra un fichero
tar, se desempaquetará para crear el «diff» y eliminará posteriormente
(equivale a \fB\-sp\fP); si se encuentra un directorio, se empaquetará para
crear la fuente original y se eliminará posteriormente (equivale a \fB\-sr\fP);
si no se encuentra ninguno de los dos, se asume que el paquete no tiene
ficheros «diff» «debianizantes», únicamente un fichero de fuentes (equivale
a \fB\-sn\fP). Si se encuentran ambos, \fBdpkg\-source\fP ignorará el directorio,
sobreescribiéndolo, si se especificó \fB\-sA\fP (equivale a \fB\-sP\fP), o generará
un error si se definió \fB\-sa\fP. \fB\-sA\fP es la opción predefinida.
.TP 
\fB\-\-abort\-on\-upstream\-changes\fP
El procesa dará fallo si el «diff» generado contiene cambios realizados a
ficheros fuera del subdirectorio «debian». Esta opción no se puede utilizar
en \fBdebian/source/options\fP pero se puede utilizar en
\fBdebian/source/local\-options\fP.

.TP 
\fBOpciones de extracción (con \-x):\fP
.PP
En todos los casos cualquier árbol de fuentes original será eliminado.
.TP 
\fB\-sp\fP
Si se usa en la extracción, la fuente original (de existir) se dejará como
un fichero tar. Si no se encuentra en el directorio actual o si existe un
fichero pero es diferente, se copiará ahí. (\fBÉsta es la acción por
omisión\fP).
.TP 
\fB\-su\fP
Desempaqueta el árbol de fuentes original.
.TP 
\fB\-sn\fP
Asegura que la fuente original ni se copia al directorio actual ni se
desempaqueta. Cualquier árbol de fuentes original existente en el directorio
actual es eliminado.
.PP
Todas las opciones \fB\-s\fP\fIX\fP son mutuamente excluyentes. Si define más de
una, sólo se usará la última.
.TP 
\fB\-\-skip\-debianization\fP
Omite la aplicación del «diff» de debian con las fuentes del autor original.
.
.SS "Formato: 2.0"
También conocido como wig&pen. No se recomienda este formato para un uso
masivo, ya que el formato «3.0 (quilt)» lo reemplaza. Wig&pen fue la primera
especificación de un formato de paquete fuente de nueva generación.

El comportamiento de este formato es idéntico al del formato «3.0 (quilt)»,
a excepción de que no usa una lista explícita de parches. Todos los ficheros
en \fBdebian/patches/\fP que coinciden con la expresión regular de perl
\fB[\ew\-]+\fP deben ser parches válidos: se aplican durante el proceso de
extracción.

Al construir un nuevo paquete fuente, todo cambio en las fuentes original se
guardan en un parche llamado \fBzz_debian\-diff\-auto\fP.
.
.SS "Formato: 3.0 (nativo)"
Este formato es una extensión del formato de paquete nativo como se define
en el formato 1.0. Es compatible con todos los métodos de compresión, e
ignorará cualquier fichero o directorio específico a sistemas de control de
versiones, así como muchos ficheros temporales (consulte el valor
predefinido asociado a la opción \fB\-I\fP en la salida de \fB\-\-help\fP).
.
.SS "Format: 3.0 (quilt)"
Un paquete fuente con este formato contiene al menos un archivo tar original
(\fB.orig.tar.\fP\fIext\fP, siendo \fIext\fP \fBgz\fP, \fBbz2\fP, \fBlzma\fP o \fBxz\fP) y un
archivo tar de Debian (\fB.debian.tar.\fP\fIext\fP).  También contiene archivos
tar originales adicionales
(\fB.orig\-\fP\fIcomponente\fP\fB.tar.\fP\fIext\fP). \fIcomponente\fP sólo puede contener
caracteres alfanuméricos y guiones («\-»).
.PP
\fBExtracción\fP
.PP
Primero se extrae el archivo tar original, y después se extraen todos los
archivos tar originales en subdirectorios nombrados a partir de la parte de
\fIcomponente\fP de su nombre de fichero (todo directorio preexistente se
reemplazará). El archivo tar de Debian se extrae en el directorio raíz del
árbol después de la eliminación de cualquier directorio \fBdebian\fP
preexistente. Tenga en cuenta que el archivo tar de Debian debe contener un
subdirectorio \fBdebian\fP, pero también puede contener ficheros binarios
externos a ese directorio (consulte la opción \fB\-\-include\-binaries\fP).
.PP
En este momento se aplican todos los parches listados en
\fBdebian/patches/debian.series\fP o \fBdebian/patches/series\fP. Si el primer
fichero se usa, y el segundo no existe (o es un enlace simbólico), éste se
reemplazará con un enlace simbólico al primero. El objetivo de esto es
simplificar el uso de quilt al gestionar el conjunto de parches. No
obstante, tenga en cuenta que mientras que \fBdpkg\-source\fP analiza
correctamente los ficheros en «series» con opciones explícitas para la
aplicación del parche (guardados en cada línea después del nombre de fichero
del parche y uno o más espacios), ignora aquellas opciones que siempre
esperan parches que se puedan aplicar con la opción \fB\-p1\fP de \fBpatch\fP. De
no ser así, mostrará un aviso en caso de encontrar tales opciones, y cabe
que la construcción falle.
.PP
Al contrario que el funcionamiento predefinido de quilt, se espera que los
parches se apliquen sin imprecisiones. De no ser así, debe actualizar los
parches con quilt, o dpkg\-source fallará al intentar aplicarlos
.PP
De forma similar al comportamiento predefinido de quilt, los parches también
pueden eliminar ficheros.
.PP
El fichero \fB.pc/applied\-patches\fP se crea si se aplican parches durante la
extracción.
.PP
\fBConstrucción\fP
.PP
Todos los archivos tar original encontrados en el directorio actual se
extraen a un directorio temporal siguiendo la misma lógica que para
desempaquetar, copiando el directorio «debian» al directorio temporal y por
último aplicando todos los parches, a excepción del parche automático
(\fBdebian\-changes\-\fP\fIversion\fP o \fBdebian\-changes\fP, dependiendo de
\fB\-\-single\-debian\-patch\fP). El directorio temporal se compara con el
directorio de fuentes del paquete. Si el fichero diff no está vacío, la
compilación falla menos que se utilice \fB\-\-single\-debian\-patch\fP o
\fB\-\-auto\-commit\fP, en cuyo caso el fichero diff se guarda en el parche
automático. En caso de crear o añadir el parche automático, este se añade o
elimina del fichero «series» y de los metadatos de quilt.

Cualquier cambio en un fichero binario no se puede representar en un «diff»,
conduciendo así a un fallo a menos que el desarrollador decida
explícitamente incluir el fichero binario modificado en el archivo tar
«debian» (mediante su listado en \fBdebian/source/include\-binaries\fP). La
construcción también fallará si encuentra ficheros binarios en el
subdirectorio «debian», a menos que estén en el «whitelist» de
\fBdebian/source/include\-binaries\fP.

Llegado a este punto se genera el archivo tar «debian» en base al directorio
«debian» modificado y la lista de binarios modificados.

El «diff» generado automáticamente no incluye cambios en ficheros
específicos al sistema de control de versiones, así como muchos otros
ficheros temporales (consulte el valor predefinido asociado a \fB\-i\fP en la
salida de \fB\-\-help\fP). En particular, se ignora el directorio \fB.pc\fP empleado
por quilt durante la creación del parche automático.

Nota: \fBdpkg\-source\fP \fB\-\-before\-build\fP (y \fB\-b\fP) comprueban que los parches
enumerados en el fichero «series» se han aplicado, para así garantizar que
la construcción del paquete siempre tenga todos los parches aplicados. Para
ello, encuentra la lista de parches no aplicados (listados en el fichero
\fBseries\fP pero no en \fB.pc/applied\-patches\fP) y si aplica el primer parche
del conjunto sin problemas, procederá a aplicar el resto. Puede utilizar la
opción \fB\-\-no\-preparation\fP para desactivar este comportamiento.

.PP
\fBRegistrar cambios\fP
.TP 
\fB\-\-commit\fP [\fIdirectorio\fP] [\fInombre\-parche\fP] [\fIfichero\-parche\fP]
Genera un parche que recoge los cambios locales que el sistema de parches
quilt no gestiona, y los integra en el sistema de parches con el nombre
\fInombre\-parche\fP. Si se omite el nombre, se le solicita uno de forma
interactiva. Si se define \fIfichero\-parche\fP, se utiliza como el parche que
recoge los cambios locales que integrar. Una vez integrado, se ejecuta un
editor para editar la metainformación en la cabecera del parche.

Introducir \fIfichero\-parche\fP es generalmente útil después de un fallo de
construcción que ha generado este fichero previamente, y en base a ello, el
fichero dado se elimina después de la integración. Tenga en cuenta que los
cambios contenidos en el fichero de parche debe estar aplicado en el árbol,
y que los ficheros modificados por el parche no deben contener cambios
adicionales sin registrar.

Si la generación del parche detecta ficheros binarios modificados, se añaden
de forma automática a \fBdebian/source/include\-binaries\fP para que se incluyan
en el fichero tar de debian (al igual que realiza \fBdpkg\-source
\-\-include\-binaries \-b\fP).
.PP
\fBOpciones de construcción\fP
.TP 
\fB\-\-allow\-version\-of\-quilt\-db=\fP\fIversión\fP
Permite que \fBdpkg\-source\fP construya el paquete fuente si la versión de los
metadatos de quilt es el especificado, incluso si \fBdpkg\-source\fP no lo
conoce. De hecho, esto dice que la versión dada de los metadatos de quilt es
compatible con la versión 2, con la que \fBdpkg\-source\fP tiene compatibilidad
actualmente. Esta versión de los metadatos de quilt se guardan en
\&\fB.pc/.version\fP.
.TP 
\fB\-\-include\-removal\fP
No ignora los ficheros eliminados y los incluye en el parche generado
automáticamente.
.TP 
\fB\-\-include\-timestamp\fP
Incluye la marca temporal en el parche generado automáticamente.
.TP 
\fB\-\-include\-binaries\fP
Añade todos los ficheros binarios modificados al archivo tar
«debian». También los añade a \fBdebian/source/include\-binaries\fP: se añadirán
por omisión en futuras construcciones, con lo que esta opción ya no será
necesaria.
.TP 
\fB\-\-no\-preparation\fP
No intenta preparar el árbol de construcción aplicando parches que están
supuestamente sin aplicar.
.TP 
\fB\-\-single\-debian\-patch\fP
Usa \fBdebian/patches/debian\-changes\fP en lugar de
\fBdebian/patches/debian\-changes\-\fP\fIversion\fP para el nombre del parche
generado automáticamente durante la construcción. Esta opción es
particularmente útil si el paquete se guarda en un sistema de control de
versiones y si no se puede generar un conjunto de parches adecuados. La
opción se debería poner en \fBdebian/source/local\-options\fP, acompañado de un
fichero \fBdebian/source/local\-patch\-header\fP que detalle la mejor forma de
revisar los cambios de Debian, por ejemplo, el sistema de control de
versiones en uso.
.TP 
\fB\-\-create\-empty\-orig\fP
Crea automáticamente el archivo tar principal y original como vacío en caso
de no existir y si hay otros archivos tar originales adicionales. Esta
opción está diseñada para su uso cuando el paquete fuente es un conjunto de
varios programas de la fuente principal y cuando no hay programas
«principales».
.TP 
\fB\-\-no\-unapply\-patches, \-\-unapply\-patches\fP
De forma predeterminada, dpkg\-source revierte de forma automática  los
parches en el «hook» \fB\-\-after\-build\fP si se han aplicado durante
\fB\-\-before\-build\fP. Estas opciones permiten forzar el activado o desactivado
del proceso de revertir los parches. Estas opciones solo se permiten en
\fBdebian/source/local\-options\fP para que todos los paquetes fuente generados
tengan el mismo comportamiento de forma predeterminada.
.TP 
\fB\-\-abort\-on\-upstream\-changes\fP
El proceso falla si se genera un parche automático. Esta opción se puede
utilizar para asegurar que todos los cambios se registren apropiadamente en
parches de quilt separados antes de la construcción del paquete fuente. Esta
opción no se permite en \fBdebian/source/options\fP pero se puede utilizar en
\fBdebian/source/local\-options\fP.
.TP 
\fB\-\-auto\-commit\fP
El proceso no se interrumpe si se genera un parche automático, sino que se
registra en el fichero en la serie de parches quilt.

.PP
\fBOpciones de extracción\fP
.TP 
\fB\-\-skip\-debianization\fP
Omite la extracción del archivo tar «debian» sobre las fuente del autor
original.
.TP 
\fB\-\-skip\-patches\fP
No aplica los parches al finalizar la extracción.
.
.SS "Formato: 3.0 (custom)"
Este formato es especial. No representa ningún formato de paquete fuente
real, pero se puede utilizar para crear paquetes fuente con ficheros
arbitrarios.
.PP
\fBOpciones de construcción\fP
.PP
Todas las opciones que no son argumento se toman como ficheros a integrar en
el paquete fuente generado. Deben existir y, preferiblemente, encontrarse en
el directorio actual. Se debe introducir al menos un fichero.
.TP 
\fB\-\-target\-format=\fP\fIvalor\fP
\fBObligatorio\fP. Define el formato real del paquete fuente generado. El
fichero «.dsc» generado contendrá este valor en su campo \fIFormat\fP y no «3.0
(custom)».
.
.SS "Format: 3.0 (git)"
Este formato es experimental.
.PP
Un paquete de fuente con este formato consiste de un sólo archivo con un
repositorio \fB.git\fP, que guarda la fuente del paquete. Puede también existir
un fichero \fB.gitshallow\fP que lista las revisiones de una clonación de git
superficial («shallow»).
.PP
\fBExtracción\fP
.PP
El archivo se clona como un repositorio git en el directorio destino. Si hay
un fichero «gitshallow», se instala como «.git/shallow» dentro del
repositorio git clonado.
.PP
Tenga en cuenta que, por omisión, el nuevo repositorio tendrá un «checkout»
de la misma rama de la que se realizó el «checkout» de la fuente
original. (Habitualmente, «master», pero podría ser cualquier otra cosa.)
Todas las demás ramas estarán disponibles bajo «remotes/origin/».
.PP
\fBConstrucción\fP
.PP
Antes de continuar, se realizan algunas revisiones para asegurar que no
queden cambios no ignorados a remitir al repositorio mediante «commit».
.PP
\fBgit\-bundle\fP(1) se usa para generar un archivo a partir de un repositorio
git. Por omisión, se incluyen en el archivo todas las ramas y etiquetas en
el repositorio.
.PP
\fBOpciones de construcción\fP
.TP 
\fB\-\-git\-ref=\fP\fIref\fP
Permite especificar una referencia («ref») de git a incluir en el archivo de
git. Su uso desactiva el comportamiento predefinido de incluir todas las
ramas y etiquetas, y se puede definir varias veces. \fIref\fP puede ser el
nombre de una rama o etiqueta a incluir. Por ejemplo, para incluir sólo la
rama «master», use «\-\-git\-ref=master». Para incluir todas las etiquetas y
ramas a excepción de la rama local («private»), use «\-\-git\-ref=\-\-all
\-\-git\-ref=^private».
.TP 
\fB\-\-git\-depth=\fP\fInumber\fP
Crea un clon superficial («shalow») con la historia truncada en el número
definido de revisiones.
.SS "Format: 3.0 (bzr)"
Este formato es experimental. Genera un único archivo tar que contiene el
repositorio bzr.
.PP
\fBExtracción\fP
.PP
El archivo tar se desempaqueta, usando después bzr para realizar un
«checkout» de la rama actual.
.PP
\fBConstrucción\fP
.PP
Antes de continuar, se realizan algunas revisiones para asegurar que no
queden cambios no ignorados a remitir al repositorio mediante «commit».
.PP
Entones, la parte del directorio de fuentes específico al sistema de control
de versiones se copia a un directorio temporal. Antes de empaquetar este
directorio temporal en una archivo tar se realizan varios procesos de
limpieza, para así ahorrar espacio.
.SH "AVISOS Y ERRORES"
.SS "no se definió ningún formato de fuentes en «debian/source/format»"
El fichero \fBdebian/source/format\fP siempre debería existir e indicar el
formato de fuentes deseado. Por razones de compatibilidad hacia atrás, se
supone el formato «1.0» cuando el fichero no existe, pero no debería
depender de esto. En algún punto en el futuro, se modificará dpkg para que
falle cuando no encuentre ese fichero.

El fundamente es que el formato «1.0» ya no es el formato recomendado, sino
que debería escoger uno de los formatos más recientes («3.0 (quilt)», «3.0
(native)»). \fBdpkg\-source\fP no hará esto automáticamente. Si desea continuar
usando el formato antiguo, tendrá que ser explícito e insertar «1.0» en
\fBdebian/source/format\fP.
.SS "el diff modifica los siguientes ficheros de la fuente original"
Generalmente, es una mala idea modificar ficheros de la fuente original si
está usando el formato de fuentes «1.0» ya que los cambios terminarán
ocultos y generalmente sin documentar dentro del fichero «diff.gz». Debería
guardar los cambios como parches en el directorio «debian» y aplicarlos en
tiempo de construcción. Para evitar esta complejidad también puede utilizar
el formato «3.0 (quilt)», que ofrece esto de forma nativa.
.SS "no se pueden representar los cambios al \fIfichero\fP"
Los cambios a las fuentes originales se suelen guardar el ficheros de
parche, pero no todos los cambios se pueden representar con parches: sólo
pueden alterar el contenido de ficheros de texto simple. Si intenta
reemplazar un fichero con algo de otro tipo (por ejemplo, un fichero simple
con un enlace simbólico o directorio), obtendrá el siguiente mensaje de
error.
.SS "el fichero vacío \fIfichero\fP recientemente creado no estará representado en el «diff»"
No se pueden crear ficheros vacíos con ficheros de parche. Por ello, este
cambio no se registra en el paquete fuente, está usted avisado.
.SS "los \fIpermisos\fP de modo de ejecución del \fIfichero\fP no se representarán en el «diff»"
.SS "los \fIpermisos\fP de modo especial del \fIfichero\fP no se representarán en el «diff»"
Los ficheros de parche no registran permisos de los ficheros, y por ello los
permisos modificados no se guardan en el paquete fuente. Este aviso le sirve
de recordatorio.
.SH "FORMATOS DE FICHERO"
.SS debian/source/format
Este fichero contiene en una única línea el formato que se debería utilizar
para construir el paquete fuente (los formatos posibles se describen en un
punto anterior). No se permiten espacios vacíos al principio o final de la
línea.
.SS debian/source/include\-binaries
Este fichero contiene una lista de ficheros binarios (uno por línea) que se
deberían incluir en el archivo tar «debian». Se eliminan los espacios vacíos
al principio y final de la línea. Las líneas que comienzan con «#» son
comentarios, y por tanto, se omiten. Se ignorarán líneas vacías.
.SS debian/source/options
Este fichero contiene una lista de opciones largas que se deberían anexar al
conjunto de las opciones de línea de órdenes de una ejecución a
\fBdpkg\-source \-b\fP o \fBdpkg\-source \-\-print\-format\fP. Las opciones como
\fB\-\-compression\fP y \fB\-\-compression\-level\fP son adecuadas con este fichero.
.P
Cada opción debería aparecer en una línea separada. Se ignorarán las líneas
vacías, y aquellas que comienzan con «#». Los guiones «\-\-» al principio de
la opción se deberían eliminar, y no se permiten opciones cortas. Se
permiten espacios adicionales en torno al símbolo «=», así como comillas
dobles en torno al valor. Aquí tiene un ejemplo de este fichero:
.P
  # permite a dpkg\-source crear un debian.tar.bz2 con la máxima compresión
  compression = "bzip2"
  compression\-level = 9
  # usa debian/patches/debian\-changes como parche automático
  single\-debian\-patch
 # ignora cambios en config.{sub,guess}
  extend\-diff\-ignore = "(^|/)(config.sub|config.guess)$"
.P
Nota: no se permiten en este fichero las opciones de \fBformato\fP, y debería
utilizar \fBdebian/source/format\fP en su lugar.
.SS debian/source/local\-options
Idéntico a \fBdebian/source/options\fP, a excepción de que el fichero no se
incluye en el paquete fuente generado. Puede ser útil para guardar una
preferencia ligada al mantenedor a al repositorio del sistema de control de
versiones dónde el paquete es mantenido.
.SS debian/source/local\-patch\-header
.SS debian/source/patch\-header
Texto con formato libre que se inserta al inicio del parche generado de
forma automática con los formatos «2.0» o «3.0
quilt)». \fBlocal\-patch\-header\fP no se incluye en las fuentes generadas,
mientras que \fBpatch\-header\fP sí.
.SS debian/patches/series
Este fichero lista todos los parches que se deben aplicar (en el orden dado)
al paquete fuente del autor original. Se eliminarán los espacios vacíos al
principio y final de la línea. Las líneas que comienzan con «#» son
comentarios, y se omiten. Las líneas restantes empiezan con un nombre de
fichero de un parche (relativo al directorio \fBdebian/patches/\fP) hasta el
primer carácter de espacio, o el final de la línea. Opcionalmente, puede
insetar a continuación opciones de quilt hasta el final de línea, o el
primer «#» precedido de uno o más espacios (que indican el inicio de un
comentario hasta el final de la línea).
.SH FALLOS
No está claro el punto en el cual se produce la sustitución de campos,
comparado con ciertas opciones de los campos de salida estándar.
.SH "VÉASE TAMBIÉN"
\fBdpkg\-deb\fP(1), \fBdpkg\fP(1), \fBdselect\fP(1).
.SH "TRADUCTOR"
Rudy Godoy <rudy@kernel\-panik.org>,
Rubén Porras <nahoo@inicia.es>,
Bruno Barrera C. <bruno.barrera@igloo.cl>,
Carlos Izquierdo <gheesh@ertis.net>,
Esteban Manchado y
NOK.
Debian L10n Spanish <debian\-l10n\-spanish@lists.debian.org>.
.br
Revisiones por Santiago Vila <sanvila@unex.es>,
Javier Fernández\-Sanguino, Rubén Porras,
Luis Uribe y Omar Campagne.
