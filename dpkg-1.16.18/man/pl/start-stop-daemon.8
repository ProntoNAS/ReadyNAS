.\" dpkg manual page - start-stop-daemon(8)
.\"
.\" Copyright Â© 1999 Klee Dienes <klee@mit.edu>
.\" Copyright Â© 1999 Ben Collins <bcollins@debian.org>
.\" Copyright Â© 2000-2001 Wichert Akkerman <wakkerma@debian.org>
.\" Copyright Â© 2002-2003 Adam Heath <doogie@debian.org>
.\" Copyright Â© 2004 Scott James Remnant <keybuk@debian.org>
.\" Copyright Â© 2008-2012 Guillem Jover <guillem@debian.org>
.\"
.\" This is free software; you can redistribute it and/or modify
.\" it under the terms of the GNU General Public License as published by
.\" the Free Software Foundation; either version 2 of the License, or
.\" (at your option) any later version.
.\"
.\" This is distributed in the hope that it will be useful,
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\" GNU General Public License for more details.
.\"
.\" You should have received a copy of the GNU General Public License
.\" along with this program.  If not, see <http://www.gnu.org/licenses/>.
.
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH start\-stop\-daemon 8 2012\-06\-17 "Projekt Debian" "programy pomocnicze dpkg"
.SH NAZWA
start\-stop\-daemon \- uruchamia i zatrzymuje demony systemowe
.
.SH SK£ADNIA
\fBstart\-stop\-daemon\fP [\fIopcja\fP...] \fIpolecenie\fP
.
.SH OPIS
\fBstart\-stop\-daemon\fP jest wykorzystywany do kontroli procesów uruchamianych
i zatrzymywanych podczas prze³±czania trybów pracy. Przez u¿ycie jednej z
opcji dopasowywania, mo¿na skonfigurowaæ \fBstart\-stop\-daemon\fP do
wyszukiwania istniej±cych instancji dzia³aj±cego procesu.
.PP
Proszê zauwa¿yæ, ¿e je¿eli nie podano opcji \fB\-\-pidfile\fP, to
\fBstart\-stop\-daemon\fP zachowuje siê podobnie do
\fBkillall\fP(1). \fBstart\-stop\-daemon\fP przejrzy tabelê procesów, szukaj±c
jakiegokolwiek procesu o zgodnej nazwie, identyfikatorze u¿ytkownika i/lub
grupy (je¿eli je podano). Znalezienie jakiegokolwiek pasuj±cego procesu
spowoduje, ¿e \fB\-\-start\fP nie uruchomi procesu. W wypadku opcji \fB\-\-stop\fP do
wszystkich pasuj±cych procesów zostanie wys³any sygna³ TERM (lub inny,
okre¶lony w opcji \fB\-\-signal\fP lub \fB\-\-retry\fP). Dla procesów maj±cych d³ugo
¿yj±ce procesy potomne, które musz± prze¿yæ operacjê \fB\-\-stop\fP, nale¿y
okre¶liæ plik pidfile.
.
.SH POLECENIA
.TP 
\fB\-S\fP, \fB\-\-start\fP [\fB\-\-\fP] \fIargumenty\fP
Sprawdza, czy dany proces jest ju¿ uruchomiony. Je¶li tak jest, to
\fBstart\-stop\-daemon\fP nie wykonuje ¿adnych czynno¶ci i koñczy siê, zwracaj±c
kod b³êdu 1 (lub 0, je¶li podano opcjê \fB\-\-oknodo\fP). Je¶li dany proces nie
jest jeszcze uruchomiony, to go uruchamia,  wykonuj±c program okre¶lony albo
opcj± \fB\-\-exec\fP, albo je¶li podano, opcj± \fB\-\-startas\fP. Wszelkie argumenty
podane tu¿ po opcji \fB\-\-\fP s± przekazywane do wykonywanego polecenia.
.TP 
\fB\-K\fP, \fB\-\-stop\fP
Sprawdza, czy dany proces jest ju¿ uruchomiony. Je¶li tak jest, to
\fBstart\-stop\-daemon\fP wysy³a sygna³ okre¶lony opcj± \fB\-\-signal\fP i koñczy
swoj± pracê z kodem b³êdu 0. Je¶li proces nie istnieje, \fBstart\-stop\-daemon\fP
koñczy siê z kodem b³êdu 1 (lub 0, je¶li podano opcjê \fB\-\-oknodo\fP). Je¿eli
podano opcjê \fB\-\-retry\fP, to \fBstart\-stop\-daemon\fP sprawdzi, czy proces(y) siê
zakoñczy³(y).
.TP 
\fB\-T\fP, \fB\-\-status\fP
Sprawdza istnienie podanego procesu i zwraca kod zakoñczenia, zgodnie z LSB
Init Script Actions.
.TP 
\fB\-H\fP, \fB\-\-help\fP
Wy¶wietla informacjê o u¿ytkowaniu programu i koñczy dzia³anie.
.TP 
\fB\-V\fP, \fB\-\-version\fP
Wy¶wietla informacjê o wersji programu i koñczy dzia³anie.
.
.SH "OPCJE DOPASOWYWANIA"
.TP 
\fB\-p\fP, \fB\-\-pidfile\fP \fIplik\-pid\fP
Sprawdza, czy proces utworzy³ plik \fIplik\-pid\fP. Uwaga: u¿ywaj±c wy³±cznie
tej opcji dopasowania mo¿na wywo³aæ dzia³anie na niew³a¶ciwym procesie,
je¶li stary proces zakoñczy³ siê bez mo¿liwo¶ci usuniêcia \fIpliku\-pid\fP.
.TP 
\fB\-x\fP, \fB\-\-exec\fP \fIplik_wykonywalny\fP
Sprawdza procesy, bêd±ce instancj± danego \fIpliku\-wykonywalnego\fP Argument
\fIplik\-wykonywalny\fP powinien byæ pe³n± nazw± ¶cie¿kow±. Uwaga: mo¿e to nie
dzia³aæ zgodnie z intencj± w skryptach interpretowanych, jako ¿e plik
wykonywalny bêdzie wskazywa³ na interpreter. Proszê zi±æ pod uwagê, ¿e
procesy dzia³aj±ce wewn±trz chroota równie¿ zostan± dopasowane, wiêc mog±
byæ konieczne dodatkowe warunki dopasowania.
.TP 
\fB\-n\fP, \fB\-\-name\fP \fInazwa\-procesu\fP
Sprawdza procesy o nazwie \fInazwa\-procesu\fP. \fINazwa\-procesu\fP jest z regu³y
plikow± nazw± procesu, ale niekiedy mo¿e zostaæ zmieniona przez sam
proces. Uwaga: w wiêkszo¶ci systemów informacja ta jest pobierana z nazwy
comm procesu z j±dra, która mo¿e mieæ stosunkowo du¿e graniczenie d³ugo¶ci
(zak³adanie wiêcej ni¿ 15 znaków nie bêdzie przeno¶ne).
.TP 
\fB\-u\fP, \fB\-\-user\fP \fIusername\fP|\fIuid\fP
Sprawdza procesy bêd±ce w³asno¶ci± u¿ytkownika okre¶lonego
\fInazw±\-u¿ytkownika\fP lub \fIuid\-em\fP. Uwaga: u¿ywanie samej opcji dopasowania
spowoduje, ¿e pod uwagê bêd± wziête wszystkie procesy z pasuj±cym
u¿ytkownikiem.
.
.SH OPCJE
.TP 
\fB\-g\fP, \fB\-\-group\fP \fIgroup\fP|\fIgid\fP
Podczas uruchamiania procesu zmienia grupê na \fIgrupê\fP lub \fIgid\fP.
.TP 
\fB\-s\fP, \fB\-\-signal\fP \fIsygna³\fP
Przy operacji \fB\-\-stop\fP, wysy³any jest sygna³ o podanej warto¶ci do
zatrzymywanego procesu (domy¶lnie jest to TERM).
.TP 
\fB\-R\fP, \fB\-\-retry\fP \fItimeout\fP|\fIplan\-dzia³ania\fP
W czasie operacji \fB\-\-stop\fP powoduje sprawdzenie przez \fBstart\-stop\-daemon\fP,
czy proces(y) siê zakoñczy³(y). Sprawdzanie jest powtarzane, je¿eli dzia³a
jakikolwiek pasuj±cy proces, dopóki wszystkie siê nie skoñcz±. Je¿eli
procesy siê nie zakoñcz±, podejmowane s± akcje okre¶lone przez parametr
\fIplan\-dzia³ania\fP.

Je¿eli okre¶lono \fItimeout\fP zamiast \fIplanu\-dzia³ania\fP, to wtedy u¿ywany
jest nastêpuj±cy plan dzia³ania: \fIsygna³\fP\fB/\fP\fItimeout\fP\fB/KILL/\fP\fItimeout\fP,
gdzie \fIsygna³\fP jest okre¶lony za pomoc± opcji \fB\-\-signal\fP.

\fIplan\-dzia³ania\fP jest list± co najmniej dwóch warto¶ci oddzielonych znakami
uko¶nika (\fB/\fP); ka¿d± z tych warto¶ci mo¿e byæ albo \fB\-\fP\fInumer\-sygna³u\fP
lub [\fB\-\fP]\fInazwa\-sygna³u\fP, co oznacza wys³anie tego sygna³u, albo
\fItimeout\fP, okre¶laj±cy liczbê sekund, któr± nale¿y czekaæ na zakoñczenie
procesu, albo \fIforever\fP, oznaczaj±cy, ¿e reszta planu dzia³ania ma byæ
powtarzana dopóki jest to konieczne.

Je¿eli osi±gniêto koniec planu dzia³ania, a opcja \fBforever\fP nie zosta³a
u¿yta, to \fBstart\-stop\-daemon\fP koñczy dzia³anie z kodem b³êdu 2. Je¿eli
zosta³ okre¶lony plan dzia³ania, to sygna³ podany w \fB\-\-signal\fP jest
ignorowany.
.TP 
\fB\-a\fP, \fB\-\-startas\fP \fInazwa\-¶cie¿ki\fP
Przy operacji \fB\-\-start\fP, Uruchamiany jest program o okre¶lonej
\fI¶cie¿ce\fP. Je¶li brak tej opcji, domy¶lnie uruchamiany jest program podany
w opcji \fB\-\-exec\fP.
.TP 
\fB\-t\fP, \fB\-\-test\fP
Wy¶wietlana jest czynno¶æ, jak± nale¿a³oby wykonaæ, a tak¿e zwracany jest
odpowiedni kod b³êdu, jednak¿e opcja ta nie wykonuje ¿adnych operacji.
.TP 
\fB\-o\fP, \fB\-\-oknodo\fP
Zwracany jest kod b³êdu 0, nawet gdyby operacja nie zakoñczy³a siê
powodzeniem (zwróci³aby 1).
.TP 
\fB\-q\fP, \fB\-\-quiet\fP
Nie s± wy¶wietlane ¿adne informacje oprócz komunikatów o b³êdach.
.TP 
\fB\-c\fP, \fB\-\-chuid\fP \fIu¿ytkownik\fP|\fIuid\fP[\fB:\fP\fIgrupa\fP|\fIgid\fP]
Zmiana u¿ytkownika/uid przed uruchomieniem procesu. Mo¿na tak¿e zmieniæ
grupê przez do³±czenie \fB:\fP wraz z nazw± grupy b±d¼ numerem gid, podobnie
jak w poleceniu "chown" (\fIu¿ytkownik\fP\fB:\fP\fIgrupa\fP). Je¿eli nie podano
grupy, to zostanie u¿yta podstawowa grupa tego u¿ytkownika. Podczas
korzystania z tej opcji nale¿y pamiêtaæ, ¿e grupa g³ówna i poboczne zostan±
ustawione, nawet gdy nie podano opcji \fB\-\-group\fP. Opcja \fB\-\-group\fP jest
przydatna tylko dla grup, których podany u¿ytkownik nie jest cz³onkiem (na
przyk³ad przy dodawaniu procesowi cz³onkostwa grupy dla takich u¿ytkowników
jak \fBnobody\fP).
.TP 
\fB\-r\fP, \fB\-\-chroot\fP \fIroot\fP
Zmienia katalog bie¿±cy na \fIroot\fP i czyni go g³ównym katalogiem (rootem)
przed wystartowaniem procesu. Proszê zauwa¿yæ, ¿e plik pidfile jest tworzony
po wykonaniu chroot.
.TP 
\fB\-d\fP, \fB\-\-chdir\fP \fI¶cie¿ka\fP
Przed uruchomieniem procesu zmienia katalog bie¿±cy na \fI¶cie¿kê\fP. Robione
jest to przed zmienieniem g³ównego katalogu (roota), je¿eli podano równie¿
opcjê \fB\-r\fP|\fB\-\-chroot\fP. Je¶li nie podano tej opcji, to przed uruchomieniem
procesu \fBstart\-stop\-daemon\fP ustawi jego katalog bie¿±cy na g³ówny katalog
(root).
.TP 
\fB\-b\fP, \fB\-\-background\fP
Zwykle u¿ywa siê tej opcji dla programów, które nie od³±czaj± siê od
terminala (detach) samoistnie. Ta opcja spowoduje, ¿e \fBstart\-stop\-daemon\fP
utworzy proces potomny przed uruchomieniem programu i bêdzie kontynuowaæ go
w tle. \fBOSTRZE¯ENIE: start\-stop\-daemon\fP nie mo¿e sprawdziæ kodu b³êdu,
je¿eli proces siê nie wykona z \fBjakiegokolwiek\fP powodu. Ta opcja powinna
byæ u¿ywana w ostateczno¶ci i jest przewidziana tylko dla programów, które
same nie tworz± procesów potomnych i nie jest mo¿liwe dodanie do samego
programu kodu uruchamiaj±cego proces potomny.
.TP 
\fB\-C\fP, \fB\-\-no\-close\fP
Nie zamyka ¿adnego deskryptora pliku podczas wymuszania przej¶cia demona w
t³o. U¿ywane w celach debugowania do zobaczenia wyniku procesu lub do
przekierowania deskryptorów pliku do logu wyniku procesu. Ma znaczenie tylko
podczas u¿ywania \fB\-\-background\fP.
.TP 
\fB\-N\fP, \fB\-\-nicelevel\fP \fIliczba\fP
Zmienia priorytet uruchamianego procesu.
.TP 
\fB\-P\fP, \fB\-\-procsched\fP \fIpolityka\fP\fB:\fP\fIpriorytet\fP
Zmienia politykê i priorytet planisty procesów dla procesu przed jego
uruchomieniem. Priorytet mo¿e byæ opcjonalnie okre¶lony przez dodanie \fB:\fP
po którym jest podana warto¶æ. Domy¶lnym \fIpriorytetem\fP jest 0. Aktualnie
wspierane warto¶ci dla \fIpolityki\fP to \fBother\fP, \fBfifo\fP oraz \fBrr\fP.
.TP 
\fB\-I\fP, \fB\-\-iosched\fP \fIklasa\fP\fB:\fP\fIpriorytet\fP
Zmienia klasê i priorytet planisty wej¶cia/wyj¶cia dla procesu przed jego
uruchomieniem. Priorytet mo¿e byæ opcjonalnie okre¶lony przez dodanie \fB:\fP
po którym jest podana warto¶æ. Domy¶lnym \fIpriorytetem\fP jest 4, chyba ¿e
warto¶ci± \fIklasy\fP jest \fBidle\fP, w którym to przypadku \fIpriorytet\fP bêdzie
zawsze równy 7. Aktualnie wspierane warto¶ci dla \fIklasy\fP to \fBidle\fP,
\fBbest\-effort\fP oraz \fBreal\-time\fP.
.TP 
\fB\-k\fP, \fB\-\-umask\fP \fImaska\fP
Ustawia maskê praw dostêpu (umask) procesu przed jego uruchomieniem.
.TP 
\fB\-m\fP, \fB\-\-make\-pidfile\fP
Opcja u¿ywana, gdy program sam nie tworzy w³asnego pliku pid. Wykorzystanie
tej opcji spowoduje, ¿e \fBstart\-stop\-daemon\fP utworzy plik, który zosta³
podany w opcji \fB\-\-pidfile\fP i umie¶ci w nim numer pid tu¿ przed
uruchomieniem procesu. Nale¿y zauwa¿yæ, ¿e ta opcja nie skasuje tego pliku
po zatrzymaniu programu. \fBUWAGA:\fP Ta opcja mo¿e nie zadzia³aæ w ka¿dym
przypadku. Nie zadzia³a przede wszystkim wtedy, gdy uruchamiany program
utworzy proces potomny. Z tego powodu opcja jest u¿yteczna jedynie wraz z
opcj± \fB\-\-background\fP.
.TP 
\fB\-v\fP, \fB\-\-verbose\fP
Wy¶wietlane s± dodatkowe komunikaty.
.
.SH "KOD WYJ¦CIA"
.TP 
\fB0\fP
¯±dana akcja zosta³a przeprowadzona. Je¿eli u¿yto \fB\-\-oknodo\fP, to istnieje
równie¿ mo¿liwo¶æ, ¿e nic nie zosta³o wykonane. Mo¿e siê to staæ, gdy podano
\fB\-\-start\fP, a pasuj±cy proces ju¿ dzia³a³ lub gdy podano \fB\-\-stop\fP i nie
znaleziono pasuj±cego procesu.
.TP 
\fB1\fP
Je¿eli \fB\-\-oknodo\fP nie zosta³o podane i nic nie zosta³o zrobione.
.TP 
\fB2\fP
Je¿eli podano \fB\-\-stop\fP i \fB\-\-retry\fP, ale osi±gniêto koniec harmonogramu, a
procesy wci±¿ by³y uruchomione.
.TP 
\fB3\fP
Ka¿dy inny b³±d.
.PP
Podczas u¿ycia polecenia \fB\-\-status\fP zwracane s± nastêpuj±ce kody statusu:
.TP 
\fB0\fP
Program dzia³a.
.TP 
\fB1\fP
Program nie dzia³a, a plik PID\-u istnieje.
.TP 
\fB3\fP
Program nie dzia³a.
.TP 
\fB4\fP
Nie mo¿na okre¶liæ statusu programu.
.
.SH PRZYK£AD
Uruchamia demon \fBfood\fP, je¶li jeszcze nie dzia³a (proces nazwany food,
dzia³aj±cy jako u¿ytkownik food, z identyfikatorem procesu w pliku
food.pid):
.IP
.nf
start\-stop\-daemon \-\-start \-\-oknodo \-\-user food \-\-name food \e
	\-\-pidfile /run/food.pid \-\-startas /usr/sbin/food \e
	\-\-chuid food \-\- \-\-daemon
.fi
.PP
Wy¶lij \fBSIGTERM\fP do \fBfood\fP i czekaj do 5 sekund na jego zakoñczenie:
.IP
.nf
start\-stop\-daemon \-\-stop \-\-oknodo \-\-user food \-\-name food \e
	\-\-pidfile /run/food.pid \-\-retry 5
.fi
.PP
Przyk³ad w³asnego planu zatrzymywania \fBfood\fP:
.IP
.nf
start\-stop\-daemon \-\-stop \-\-oknodo \-\-user food \-\-name food \e
	\-\-pidfile /run/food.pid \-\-retry=TERM/30/KILL/5
.fi
.SH "T£UMACZE"
Piotr Roszatycki <dexter@debian.org>, 1999
.br
Bartosz Feñski <fenio@debian.org>, 2004-2005
.br
Robert Luberda <robert@debian.org>, 2006-2008
.br
Wiktor Wandachowicz <siryes@gmail.com>, 2008
.br
Micha³ Ku³ach <michal.kulach@gmail.com>, 2012
