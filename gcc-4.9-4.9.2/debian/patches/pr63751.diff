# DP: Fix PR c/61553 (ice on illegal code), backported from the trunk

gcc/c-family/

2014-06-23  Marek Polacek  <polacek@redhat.com>
	    Andrew MacLeod  <amacleod@redhat.com>

	PR c/61553
	* c-common.c (get_atomic_generic_size): Don't segfault if the
	type doesn't have a size.
 
gcc/testsuite/

2014-06-23  Marek Polacek  <polacek@redhat.com>

	PR c/61553
	* c-c++-common/pr61553.c (foo): Add dg-error.

2014-06-23  Marek Polacek  <polacek@redhat.com>

	PR c/61553
	* c-c++-common/pr61553.c: New test.

Index: gcc/c-family/c-common.c
===================================================================
--- a/src/gcc/c-family/c-common.c	(revision 211904)
+++ a/src/gcc/c-family/c-common.c	(revision 211905)
@@ -10471,7 +10471,8 @@
 		    function);
 	  return 0;
 	}
-      size = tree_to_uhwi (TYPE_SIZE_UNIT (TREE_TYPE (type)));
+      tree type_size = TYPE_SIZE_UNIT (TREE_TYPE (type));
+      size = type_size ? tree_to_uhwi (type_size) : 0;
       if (size != size_0)
 	{
 	  error_at (loc, "size mismatch in argument %d of %qE", x + 1,
Index: gcc/testsuite/c-c++-common/pr61553.c
===================================================================
--- a/src/gcc/testsuite/c-c++-common/pr61553.c	(revision 0)
+++ a/src/gcc/testsuite/c-c++-common/pr61553.c	(revision 211905)
@@ -0,0 +1,8 @@
+/* PR c/61553 */
+/* { dg-do compile } */
+
+void
+foo (char *s)
+{
+  __atomic_store (s, (void *) 0, __ATOMIC_SEQ_CST); /* { dg-error "size mismatch" } */
+}
