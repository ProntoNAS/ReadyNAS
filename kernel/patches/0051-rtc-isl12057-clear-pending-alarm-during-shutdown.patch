From c9a4bd539821d84a11e4e9f98743bfd743cdbc47 Mon Sep 17 00:00:00 2001
From: Justin Maggard <jmaggard@netgear.com>
Date: Fri, 13 Nov 2015 10:08:09 -0800
Subject: [PATCH 51/51] rtc: isl12057: clear pending alarm during shutdown

If the RTC wake alarm triggers while the system is up, we don't receive an
interrupt, because the IRQ pin of the RTC is connected to a PMIC rather
than the SoC.  So the driver never knows it needs to clear the alarm, and
the alarm bit remains set after shutdown.  This does not allow the system
to shut down using the normal shutdown GPIO.

Fix this by explicitly clearing the alarm during shutdown.

Also, USI hijacked ISL12057_REG_A2_MN to track the last power state on
RN2120.  This is used to determine whether to power on or not after power
is initially connected.  So add support for this also.
---
 drivers/rtc/rtc-isl12057.c | 11 +++++++++++
 1 file changed, 11 insertions(+)

diff --git a/drivers/rtc/rtc-isl12057.c b/drivers/rtc/rtc-isl12057.c
index 2888d98..02ba527 100644
--- a/drivers/rtc/rtc-isl12057.c
+++ b/drivers/rtc/rtc-isl12057.c
@@ -605,6 +605,8 @@ static int isl12057_probe(struct i2c_client *client,
 	if (!data->irq)
 		data->rtc->uie_unsupported = 1;
 
+	regmap_update_bits(data->regmap, ISL12057_REG_A2_MN, BIT(0), 1);
+	regmap_update_bits(data->regmap, ISL12057_REG_A2_MN, BIT(1), 1);
 err:
 	return ret;
 }
@@ -617,6 +619,14 @@ static int isl12057_remove(struct i2c_client *client)
 	return 0;
 }
 
+static void isl12057_shutdown(struct i2c_client *client)
+{
+	struct isl12057_rtc_data *data = dev_get_drvdata(&client->dev);
+
+	regmap_update_bits(data->regmap, ISL12057_REG_A2_MN, BIT(0), 0);
+	_isl12057_rtc_clear_alarm(&client->dev);
+}
+
 #ifdef CONFIG_PM_SLEEP
 static int isl12057_rtc_suspend(struct device *dev)
 {
@@ -665,6 +675,7 @@ static struct i2c_driver isl12057_driver = {
 	},
 	.probe	  = isl12057_probe,
 	.remove	  = isl12057_remove,
+	.shutdown = isl12057_shutdown,
 	.id_table = isl12057_id,
 };
 module_i2c_driver(isl12057_driver);
-- 
1.9.1

