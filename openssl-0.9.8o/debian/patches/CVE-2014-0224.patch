Index: openssl-0.9.8o/ssl/s3_clnt.c
===================================================================
--- openssl-0.9.8o.orig/ssl/s3_clnt.c	2014-06-19 21:40:54.000000000 +0000
+++ openssl-0.9.8o/ssl/s3_clnt.c	2014-06-19 21:41:16.669254561 +0000
@@ -434,6 +434,7 @@
 				s->method->ssl3_enc->client_finished_label,
 				s->method->ssl3_enc->client_finished_label_len);
 			if (ret <= 0) goto end;
+			s->s3->flags |= SSL3_FLAGS_CCS_OK;
 			s->state=SSL3_ST_CW_FLUSH;
 
 			/* clear flags */
@@ -483,6 +484,7 @@
 		case SSL3_ST_CR_FINISHED_A:
 		case SSL3_ST_CR_FINISHED_B:
 
+			s->s3->flags |= SSL3_FLAGS_CCS_OK;
 			ret=ssl3_get_finished(s,SSL3_ST_CR_FINISHED_A,
 				SSL3_ST_CR_FINISHED_B);
 			if (ret <= 0) goto end;
@@ -769,6 +771,7 @@
 		SSLerr(SSL_F_SSL3_GET_SERVER_HELLO,SSL_R_ATTEMPT_TO_REUSE_SESSION_IN_DIFFERENT_CONTEXT);
 		goto f_err;
 		}
+	    s->s3->flags |= SSL3_FLAGS_CCS_OK;
 	    s->hit=1;
 	    }
 	else	/* a miss or crap from the other end */
Index: openssl-0.9.8o/ssl/s3_pkt.c
===================================================================
--- openssl-0.9.8o.orig/ssl/s3_pkt.c	2014-06-19 21:40:54.000000000 +0000
+++ openssl-0.9.8o/ssl/s3_pkt.c	2014-06-19 21:41:16.537257323 +0000
@@ -1149,6 +1149,15 @@
 			goto f_err;
 			}
 
+		if (!(s->s3->flags & SSL3_FLAGS_CCS_OK))
+			{
+			al=SSL_AD_UNEXPECTED_MESSAGE;
+			SSLerr(SSL_F_SSL3_READ_BYTES,SSL_R_CCS_RECEIVED_EARLY);
+			goto f_err;
+			}
+
+		s->s3->flags &= ~SSL3_FLAGS_CCS_OK;
+
 		rr->length=0;
 
 		if (s->msg_callback)
@@ -1280,7 +1289,7 @@
 
 	if (s->s3->tmp.key_block == NULL)
 		{
-		if (s->session == NULL) 
+		if (s->session == NULL || s->session->master_key_length == 0)
 			{
 			/* might happen if dtls1_read_bytes() calls this */
 			SSLerr(SSL_F_SSL3_DO_CHANGE_CIPHER_SPEC,SSL_R_CCS_RECEIVED_EARLY);
Index: openssl-0.9.8o/ssl/s3_srvr.c
===================================================================
--- openssl-0.9.8o.orig/ssl/s3_srvr.c	2014-06-19 21:40:54.000000000 +0000
+++ openssl-0.9.8o/ssl/s3_srvr.c	2014-06-19 21:41:16.601255985 +0000
@@ -523,6 +523,7 @@
 		case SSL3_ST_SR_CERT_VRFY_A:
 		case SSL3_ST_SR_CERT_VRFY_B:
 
+			s->s3->flags |= SSL3_FLAGS_CCS_OK;
 			/* we should decide if we expected this one */
 			ret=ssl3_get_cert_verify(s);
 			if (ret <= 0) goto end;
@@ -533,6 +534,7 @@
 
 		case SSL3_ST_SR_FINISHED_A:
 		case SSL3_ST_SR_FINISHED_B:
+			s->s3->flags |= SSL3_FLAGS_CCS_OK;
 			ret=ssl3_get_finished(s,SSL3_ST_SR_FINISHED_A,
 				SSL3_ST_SR_FINISHED_B);
 			if (ret <= 0) goto end;
Index: openssl-0.9.8o/ssl/ssl3.h
===================================================================
--- openssl-0.9.8o.orig/ssl/ssl3.h	2014-06-19 21:40:54.000000000 +0000
+++ openssl-0.9.8o/ssl/ssl3.h	2014-06-19 21:41:16.669254561 +0000
@@ -333,6 +333,7 @@
 #define SSL3_FLAGS_DELAY_CLIENT_FINISHED	0x0002
 #define SSL3_FLAGS_POP_BUFFER			0x0004
 #define TLS1_FLAGS_TLS_PADDING_BUG		0x0008
+#define SSL3_FLAGS_CCS_OK			0x0080
  
 /* SSL3_FLAGS_SGC_RESTART_DONE is set when we
  * restart a handshake because of MS SGC and so prevents us
