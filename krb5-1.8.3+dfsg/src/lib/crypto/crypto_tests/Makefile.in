mydir=lib/crypto/crypto_tests
BUILDTOP=$(REL)..$(S)..$(S)..
LOCALINCLUDES = -I$(srcdir)/../krb -I$(srcdir)/../@CRYPTO_IMPL@/enc_provider 		\
	-I$(srcdir)/../@CRYPTO_IMPL@/hash_provider -I$(srcdir)/../krb/keyhash_provider 	\
	-I$(srcdir)/../krb/dk -I$(srcdir)/../@CRYPTO_IMPL@/ 			\
	-I$(srcdir)/../krb/yarrow 	\
	-I$(srcdir)/../krb/crc32 -I$(srcdir)/../krb/old -I$(srcdir)/../krb/raw 	\
	-I$(srcdir)/../@CRYPTO_IMPL@/aes -I$(srcdir)/../@CRYPTO_IMPL@/des 	\
	-I$(srcdir)/../@CRYPTO_IMPL@/arcfour -I$(srcdir)/../@CRYPTO_IMPL@/sha1 	\
	-I$(srcdir)/../@CRYPTO_IMPL@/md5 -I$(srcdir)/../@CRYPTO_IMPL@/md4 
RUN_SETUP = @KRB5_RUN_ENV@
PROG_LIBPATH=-L$(TOPLIBD)
PROG_RPATH=$(KRB5_LIBDIR)
DEFS=

EXTRADEPSRCS=\
	$(srcdir)/t_nfold.c	\
	$(srcdir)/t_encrypt.c	\
	$(srcdir)/t_prf.c 	\
	$(srcdir)/t_prng.c	\
	$(srcdir)/t_hmac.c	\
	$(srcdir)/t_pkcs5.c	\
	$(srcdir)/t_cts.c	\
	$(srcdir)/vectors.c	\
	$(srcdir)/aes-test.c	\
	$(srcdir)/t_cksum.c	\
	$(srcdir)/t_crc.c	\
	$(srcdir)/t_mddriver.c	\
	$(srcdir)/t_kperf.c	\
	$(srcdir)/t_short.c	\
	$(srcdir)/ytest.c	

##DOSBUILDTOP = ..\..\..
##DOSLIBNAME=$(OUTPRE)crypto.lib
##DOSOBJFILE=$(OUTPRE)crypto.lst
##DOSOBJFILELIST=@$(OUTPRE)crypto.lst @$(OUTPRE)des.lst @$(OUTPRE)md4.lst @$(OUTPRE)md5.lst @$(OUTPRE)sha1.lst @$(OUTPRE)arcfour.lst @$(OUTPRE)crc32.lst @$(OUTPRE)dk.lst @$(OUTPRE)old.lst @$(OUTPRE)raw.lst @$(OUTPRE)enc_prov.lst @$(OUTPRE)hash_pro.lst @$(OUTPRE)kh_pro.lst @$(OUTPRE)yarrow.lst @$(OUTPRE)aes.lst
##DOSOBJFILEDEP =$(OUTPRE)crypto.lst $(OUTPRE)des.lst $(OUTPRE)md4.lst $(OUTPRE)md5.lst $(OUTPRE)sha1.lst $(OUTPRE)arcfour.lst $(OUTPRE)crc32.lst $(OUTPRE)dk.lst $(OUTPRE)old.lst $(OUTPRE)raw.lst $(OUTPRE)enc_prov.lst $(OUTPRE)hash_pro.lst $(OUTPRE)kh_pro.lst $(OUTPRE)aes.lst

##DOS##LIBOBJS = $(OBJS)

# NOTE: The t_cksum known checksum values are primarily for regression
# testing.  They are not derived a priori, but are known to produce
# checksums that interoperate.
check-unix:: t_nfold t_encrypt t_prf t_prng t_hmac \
		t_cksum4 t_cksum5 \
		aes-test  \
		t_mddriver4 t_mddriver \
		t_crc t_cts t_short
	$(RUN_SETUP) $(VALGRIND) ./t_nfold
	$(RUN_SETUP) $(VALGRIND) ./t_encrypt
	$(RUN_SETUP) $(VALGRIND) ./t_prng <$(srcdir)/t_prng.seed >t_prng.output && \
	diff t_prng.output $(srcdir)/t_prng.expected
	$(RUN_SETUP) $(VALGRIND) ./t_hmac
	$(RUN_SETUP) $(VALGRIND) ./t_prf <$(srcdir)/t_prf.in >t_prf.output
	diff t_prf.output $(srcdir)/t_prf.expected
	$(RUN_SETUP) $(VALGRIND) ./t_cksum4 "this is a test" e3f76a07f3401e3536b43a3f54226c39422c35682c354835
	$(RUN_SETUP) $(VALGRIND) ./t_cksum5 "this is a test" e3f76a07f3401e351143ee6f4c09be1edb4264d55015db53
	$(RUN_SETUP) $(VALGRIND) ./t_crc
	$(RUN_SETUP) $(VALGRIND) ./t_cts
	$(RUN_SETUP) $(VALGRIND) ./aes-test -k > vk.txt
	cmp vk.txt $(srcdir)/expect-vk.txt
	$(RUN_SETUP) $(VALGRIND) ./aes-test > vt.txt
	cmp vt.txt $(srcdir)/expect-vt.txt
	$(RUN_SETUP) $(VALGRIND) $(C)t_mddriver4 -x
	$(RUN_SETUP) $(VALGRIND) $(C)t_mddriver -x
	$(RUN_SETUP) $(VALGRIND) ./t_short




#	$(RUN_SETUP) $(VALGRIND) ./t_pkcs5

t_nfold$(EXEEXT): t_nfold.$(OBJEXT) nfold.$(OBJEXT) $(SUPPORT_DEPLIB)
	$(CC_LINK) -o $@ t_nfold.$(OBJEXT) ../krb/nfold$(DYNOBJEXT) $(SUPPORT_LIB)

nfold.$(OBJEXT): $(srcdir)/../krb/nfold.c
	$(CC) -c $(ALL_CFLAGS) $(srcdir)/../krb/nfold.c

t_encrypt$(EXEEXT): t_encrypt.$(OBJEXT) $(CRYPTO_DEPLIB) $(SUPPORT_DEPLIB)
	$(CC_LINK) -o $@ t_encrypt.$(OBJEXT)  -lkrb5 -lk5crypto -lcom_err $(SUPPORT_LIB)

t_prf$(EXEEXT): t_prf.$(OBJEXT) $(SUPPORT_DEPLIB)
	$(CC_LINK) -o $@ t_prf.$(OBJEXT)  -lkrb5 -lk5crypto -lcom_err $(SUPPORT_LIB)

t_prng$(EXEEXT): t_prng.$(OBJEXT) $(SUPPORT_DEPLIB)
	$(CC_LINK) -o $@ t_prng.$(OBJEXT)  -lk5crypto -lcom_err $(SUPPORT_LIB)

t_hmac$(EXEEXT): t_hmac.$(OBJEXT) $(CRYPTO_DEPLIB) $(SUPPORT_DEPLIB)
	$(CC_LINK) -o $@ t_hmac.$(OBJEXT) $(K5CRYPTO_LIB) $(COM_ERR_LIB) $(SUPPORT_LIB)

#t_pkcs5$(EXEEXT): t_pkcs5.$(OBJEXT) $(CRYPTO_DEPLIB) $(SUPPORT_DEPLIB)
#	$(CC_LINK) -o $@ t_pkcs5.$(OBJEXT) $(K5CRYPTO_LIB) $(COM_ERR_LIB) $(SUPPORT_LIB)

vectors$(EXEEXT): vectors.$(OBJEXT) $(CRYPTO_DEPLIB) $(SUPPORT_DEPLIB)
	$(CC_LINK) -o $@ vectors.$(OBJEXT) $(K5CRYPTO_LIB) $(COM_ERR_LIB) $(SUPPORT_LIB)

 t_cts$(EXEEXT): t_cts.$(OBJEXT) $(CRYPTO_DEPLIB) $(SUPPORT_DEPLIB)
	$(CC_LINK) -o $@ t_cts.$(OBJEXT) \
		$(K5CRYPTO_LIB) $(COM_ERR_LIB) $(SUPPORT_LIB)

t_short$(EXEEXT): t_short.$(OBJEXT) $(CRYPTO_DEPLIB) $(SUPPORT_DEPLIB)
	$(CC_LINK) -o $@ t_short.$(OBJEXT) \
		$(K5CRYPTO_LIB) $(COM_ERR_LIB) $(SUPPORT_LIB)

t_cksum4.o: $(srcdir)/t_cksum.c
	$(CC) -DMD=4 $(ALL_CFLAGS) -o t_cksum4.o -c $(srcdir)/t_cksum.c

t_cksum5.o: $(srcdir)/t_cksum.c
	$(CC) -DMD=5 $(ALL_CFLAGS) -o t_cksum5.o -c $(srcdir)/t_cksum.c

t_cksum4: t_cksum4.o $(CRYTPO_DEPLIB)
	$(CC_LINK) -o t_cksum4 t_cksum4.o $(K5CRYPTO_LIB) $(COM_ERR_LIB) $(SUPPORT_LIB) $(LIBS)

t_cksum5: t_cksum5.o $(CRYPTO_DEPLIB)
	$(CC_LINK) -o t_cksum5 t_cksum5.o $(K5CRYPTO_LIB) $(COM_ERR_LIB) $(SUPPORT_LIB) $(LIBS)

t_crc: t_crc.o $(CRYPTO_DEPLIB) $(SUPPORT_DEPLIB)
	$(CC_LINK) -o $@ t_crc.o $(K5CRYPTO_LIB) $(SUPPORT_LIB)

aes-test: aes-test.$(OBJEXT) $(CRYPTO_DEPLIB)
	$(CC_LINK) -o aes-test aes-test.$(OBJEXT) $(K5CRYPTO_LIB) $(COM_ERR_LIB) $(SUPPORT_LIB)

t_mddriver4.o: $(srcdir)/t_mddriver.c
	$(CC) -DMD=4 $(ALL_CFLAGS) -o t_mddriver4.o -c $(srcdir)/t_mddriver.c

t_mddriver4: t_mddriver4.o  $(SUPPORT_DEPLIB) $(CRYPTO_DEPLIB)
	$(CC_LINK) -DMD4  -o t_mddriver4 t_mddriver4.o -lk5crypto $(SUPPORT_LIB)

t_mddriver: t_mddriver.o  $(SUPPORT_DEPLIB) $(CRYPTO_DEPLIB)
	$(CC_LINK) -o t_mddriver t_mddriver.o -lk5crypto $(SUPPORT_LIB)

t_kperf: t_kperf.o $(SUPPORT_DEPLIB) $(CRYPTO_DEPLIB)
	$(CC_LINK) -o t_kperf t_kperf.o  $(SUPPORT_LIB) $(CRYPTO_DEPLIB)

ytest: ytest.o shs.o $(SUPPORT_DEPLIB) $(CRYPTO_DEPLIB)
	$(CC_LINK) -o ytest ytest.o  $(SUPPORT_LIB)  $(CRYPTO_DEPLIB)



clean::
	$(RM) t_nfold.o t_nfold nfold.$(OBJEXT) t_encrypt t_encrypt.o \
		t_prng.o t_prng t_hmac.o t_hmac t_pkcs5.o t_pkcs5 pbkdf2.o \
		t_prf t_prf.o \
		aes-test.o aes-test vt.txt vk.txt kresults.out \
		t_cksum.o t_cksum \
		t_crc.o t_crc t_cts.o t_cts \
		t_mddriver4.o t_mddriver4 t_mddriver.o t_mddriver \
		t_cksum4 t_cksum4.o t_cksum5 t_cksum5.o \
		t_kperf.o t_kperf t_short t_short.o \
		t_mddriver$(EXEEXT) $(OUTPRE)t_mddriver.$(OBJEXT)

	-$(RM) t_prng.output
	-$(RM) t_prf.output

@lib_frag@
@libobj_frag@

