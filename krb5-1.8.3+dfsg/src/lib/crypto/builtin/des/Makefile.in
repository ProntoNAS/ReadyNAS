mydir=lib/crypto/builtin/des
BUILDTOP=$(REL)..$(S)..$(S)..$(S)..
LOCALINCLUDES = -I$(srcdir)/.. -I$(srcdir)/../.. -I$(srcdir)/../../krb
DEFS=

##DOS##BUILDTOP = ..\..\..\..
##DOS##PREFIXDIR=des
##DOS##OBJFILE=..\$(OUTPRE)des.lst

RUN_SETUP = @KRB5_RUN_ENV@
PROG_LIBPATH=-L$(TOPLIBD)
PROG_RPATH=$(KRB5_LIBDIR)


STLIBOBJS=\
	afsstring2key.o	\
	d3_aead.o	\
	d3_kysched.o	\
	f_aead.o 	\
	f_cksum.o	\
	f_parity.o 	\
	f_sched.o 	\
	f_tables.o	\
	key_sched.o	\
	string2key.o	\
	weak_key.o

OBJS=	$(OUTPRE)afsstring2key.$(OBJEXT)	\
	$(OUTPRE)d3_aead.$(OBJEXT)	\
	$(OUTPRE)d3_kysched.$(OBJEXT)	\
	$(OUTPRE)f_aead.$(OBJEXT) 	\
	$(OUTPRE)f_cksum.$(OBJEXT)	\
	$(OUTPRE)f_parity.$(OBJEXT) 	\
	$(OUTPRE)f_sched.$(OBJEXT) 	\
	$(OUTPRE)f_tables.$(OBJEXT)	\
	$(OUTPRE)key_sched.$(OBJEXT)	\
	$(OUTPRE)string2key.$(OBJEXT)	\
	$(OUTPRE)weak_key.$(OBJEXT)

SRCS=	$(srcdir)/afsstring2key.c	\
	$(srcdir)/d3_aead.c	\
	$(srcdir)/d3_kysched.c	\
	$(srcdir)/f_aead.c	\
	$(srcdir)/f_cksum.c	\
	$(srcdir)/f_parity.c	\
	$(srcdir)/f_sched.c	\
	$(srcdir)/f_tables.c	\
	$(srcdir)/key_sched.c	\
	$(srcdir)/weak_key.c	\
	$(srcdir)/string2key.c

EXTRADEPSRCS = $(srcdir)/destest.c $(srcdir)/f_cbc.c $(srcdir)/t_verify.c

##DOS##LIBOBJS = $(OBJS)

TOBJS = $(OUTPRE)key_sched.$(OBJEXT) $(OUTPRE)f_sched.$(OBJEXT) \
	$(OUTPRE)f_cbc.$(OBJEXT) $(OUTPRE)f_tables.$(OBJEXT) \
	$(OUTPRE)f_cksum.$(OBJEXT)

verify$(EXEEXT): t_verify.$(OBJEXT) $(TOBJS) f_parity.$(OBJEXT) \
	$(COM_ERR_DEPLIB) $(SUPPORT_DEPLIB)
	$(CC_LINK) -o $@ t_verify.$(OBJEXT) $(TOBJS) f_parity.$(OBJEXT) \
		-lcom_err $(SUPPORT_LIB)

destest$(EXEEXT): destest.$(OBJEXT) $(TOBJS) $(SUPPORT_DEPLIB)
	$(CC_LINK) -o $@ destest.$(OBJEXT) $(TOBJS) $(SUPPORT_LIB)

all-unix:: all-libobjs

TAFSS2KOBJS =							   \
	t_afss2k.$(OBJEXT) $(TOBJS)				     \
	afsstring2key.$(OBJEXT) f_parity.$(OBJEXT) weak_key.$(OBJEXT)

t_afss2k$(EXEEXT): $(TAFSS2KOBJS) $(COM_ERR_DEPLIB) $(SUPPORT_DEPLIB)
	$(CC_LINK) -o $@ $(TAFSS2KOBJS) -lcom_err $(SUPPORT_LIB)

check-unix:: verify destest t_afss2k
	$(RUN_SETUP) $(VALGRIND) ./verify -z
	$(RUN_SETUP) $(VALGRIND) ./verify -m
	$(RUN_SETUP) $(VALGRIND) ./verify
	$(RUN_SETUP) $(VALGRIND) ./destest < $(srcdir)/keytest.data
	$(RUN_SETUP) $(VALGRIND) ./t_afss2k

includes:: depend

depend:: $(SRCS)

check-windows::

clean::
	$(RM) destest.$(OBJEXT) destest$(EXEEXT) verify$(EXEEXT) \
	t_verify.$(OBJEXT) t_afss2k.$(OBJEXT) t_afss2k$(EXEEXT) $(TOBJS)

clean-unix:: clean-libobjs

@libobj_frag@

