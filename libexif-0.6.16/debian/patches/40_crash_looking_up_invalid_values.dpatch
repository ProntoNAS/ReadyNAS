#! /bin/sh /usr/share/dpatch/dpatch-run
## 40_crash_looking_up_invalid_values.dpatch by  <fpeters@debian.org>
##
## All lines beginning with `## DP:' are a description of the patch.
## DP: Fixed crashes when looking up invalid values (upstream bug #1457501)

@DPATCH@
diff -urNad libexif-0.6.13~/libexif/exif-entry.c libexif-0.6.13/libexif/exif-entry.c
--- libexif-0.6.13~/libexif/exif-entry.c	2005-10-03 20:32:03.000000000 +0200
+++ libexif-0.6.13/libexif/exif-entry.c	2007-05-08 11:43:36.582110536 +0200
@@ -527,7 +527,8 @@
   { EXIF_TAG_COLOR_SPACE,
     { {1, {N_("sRGB"), NULL}},
       {2, {N_("Adobe RGB"), NULL}},
-      {0xffff, {N_("Uncalibrated"), NULL}}}},
+      {0xffff, {N_("Uncalibrated"), NULL}},
+      {0x0000, {NULL}}}},
   {0, }
 };
 
@@ -902,7 +903,7 @@
 		}
 
 		/* Find the value */
-		for (j = 0; list2[i].elem[j].values &&
+		for (j = 0; list2[i].elem[j].values[0] &&
 			    (list2[i].elem[j].index < v_short); j++);
 		if (list2[i].elem[j].index != v_short) {
 			snprintf (val, maxlen, _("Internal error (unknown "
@@ -912,8 +913,7 @@
 
 		/* Find a short enough value */
 		memset (val, 0, maxlen);
-		for (k = 0; list2[i].elem[j].values &&
-			    list2[i].elem[j].values[k]; k++) {
+		for (k = 0; list2[i].elem[j].values[k]; k++) {
 		  l = strlen (_(list2[i].elem[j].values[k]));
 		  if ((maxlen > l) && (strlen (val) < l))
 		    strncpy (val, _(list2[i].elem[j].values[k]), maxlen - 1);
