<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN" 
               "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">
<refentry id="gnutls-crypto">
<refmeta>
<refentrytitle role="top_of_page" id="gnutls-crypto.top_of_page">crypto</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>
  GNUTLS Library
</refmiscinfo>
</refmeta>
<refnamediv>
<refname>crypto</refname>
<refpurpose></refpurpose>
</refnamediv>

<refsynopsisdiv id="gnutls-crypto.synopsis" role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>#define             <link linkend="GNUTLS-CRYPTO-API-VERSION:CAPS">GNUTLS_CRYPTO_API_VERSION</link>
<link linkend="int"><returnvalue>int</returnvalue></link>                 (<link linkend="init">*init</link>)                             (<parameter><link linkend="void"><type>void</type></link> **ctx</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 (<link linkend="setkey">*setkey</link>)                           (<parameter><link linkend="void"><type>void</type></link> *ctx</parameter>,
                                                         <parameter>const <link linkend="void"><type>void</type></link> *key</parameter>,
                                                         <parameter><link linkend="size-t"><type>size_t</type></link> keysize</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 (<link linkend="setiv">*setiv</link>)                            (<parameter><link linkend="void"><type>void</type></link> *ctx</parameter>,
                                                         <parameter>const <link linkend="void"><type>void</type></link> *iv</parameter>,
                                                         <parameter><link linkend="size-t"><type>size_t</type></link> ivsize</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 (<link linkend="encrypt">*encrypt</link>)                          (<parameter><link linkend="void"><type>void</type></link> *ctx</parameter>,
                                                         <parameter>const <link linkend="void"><type>void</type></link> *plain</parameter>,
                                                         <parameter><link linkend="size-t"><type>size_t</type></link> plainsize</parameter>,
                                                         <parameter><link linkend="void"><type>void</type></link> *encr</parameter>,
                                                         <parameter><link linkend="size-t"><type>size_t</type></link> encrsize</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 (<link linkend="decrypt">*decrypt</link>)                          (<parameter><link linkend="void"><type>void</type></link> *ctx</parameter>,
                                                         <parameter>const <link linkend="void"><type>void</type></link> *encr</parameter>,
                                                         <parameter><link linkend="size-t"><type>size_t</type></link> encrsize</parameter>,
                                                         <parameter><link linkend="void"><type>void</type></link> *plain</parameter>,
                                                         <parameter><link linkend="size-t"><type>size_t</type></link> plainsize</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                (<link linkend="deinit">*deinit</link>)                           (<parameter><link linkend="void"><type>void</type></link> *ctx</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 (<link linkend="hash">*hash</link>)                             (<parameter><link linkend="void"><type>void</type></link> *ctx</parameter>,
                                                         <parameter>const <link linkend="void"><type>void</type></link> *text</parameter>,
                                                         <parameter><link linkend="size-t"><type>size_t</type></link> textsize</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 (<link linkend="copy">*copy</link>)                             (<parameter><link linkend="void"><type>void</type></link> **dst_ctx</parameter>,
                                                         <parameter><link linkend="void"><type>void</type></link> *src_ctx</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 (<link linkend="output">*output</link>)                           (<parameter><link linkend="void"><type>void</type></link> *src_ctx</parameter>,
                                                         <parameter><link linkend="void"><type>void</type></link> *digest</parameter>,
                                                         <parameter><link linkend="size-t"><type>size_t</type></link> digestsize</parameter>);
typedef             <link linkend="gnutls-crypto-single-digest-st">gnutls_crypto_single_digest_st</link>;
typedef             <link linkend="gnutls-crypto-digest-st">gnutls_crypto_digest_st</link>;
enum                <link linkend="gnutls-rnd-level-t">gnutls_rnd_level_t</link>;
enum                <link linkend="gnutls-pk-flag-t">gnutls_pk_flag_t</link>;
<link linkend="int"><returnvalue>int</returnvalue></link>                 (<link linkend="rnd">*rnd</link>)                              (<parameter><link linkend="void"><type>void</type></link> *ctx</parameter>);
typedef             <link linkend="bigint-t">bigint_t</link>;
enum                <link linkend="gnutls-bigint-format-t">gnutls_bigint_format_t</link>;
<link linkend="bigint-t"><returnvalue>bigint_t</returnvalue></link>            (<link linkend="bigint-new">*bigint_new</link>)                       (<parameter><link linkend="int"><type>int</type></link> nbits</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                (<link linkend="bigint-release">*bigint_release</link>)                   (<parameter><link linkend="bigint-t"><type>bigint_t</type></link> n</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 (<link linkend="bigint-cmp">*bigint_cmp</link>)                       (<parameter>const <link linkend="bigint-t"><type>bigint_t</type></link> m1</parameter>,
                                                         <parameter>const <link linkend="bigint-t"><type>bigint_t</type></link> m2</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 (<link linkend="bigint-cmp-ui">*bigint_cmp_ui</link>)                    (<parameter>const <link linkend="bigint-t"><type>bigint_t</type></link> m1</parameter>,
                                                         <parameter><type>unsigned long </type> m2</parameter>);
<link linkend="bigint-t"><returnvalue>bigint_t</returnvalue></link>            (<link linkend="bigint-mod">*bigint_mod</link>)                       (<parameter>const <link linkend="bigint-t"><type>bigint_t</type></link> a</parameter>,
                                                         <parameter>const <link linkend="bigint-t"><type>bigint_t</type></link> b</parameter>);
<link linkend="bigint-t"><returnvalue>bigint_t</returnvalue></link>            (<link linkend="bigint-set">*bigint_set</link>)                       (<parameter><link linkend="bigint-t"><type>bigint_t</type></link> a</parameter>,
                                                         <parameter>const <link linkend="bigint-t"><type>bigint_t</type></link> b</parameter>);
<link linkend="bigint-t"><returnvalue>bigint_t</returnvalue></link>            (<link linkend="bigint-set-ui">*bigint_set_ui</link>)                    (<parameter><link linkend="bigint-t"><type>bigint_t</type></link> a</parameter>,
                                                         <parameter><type>unsigned long </type> b</parameter>);
<link linkend="unsigned"><returnvalue>unsigned</returnvalue></link>            <link linkend="int">int</link>                                 ();
<link linkend="bigint-t"><returnvalue>bigint_t</returnvalue></link>            (<link linkend="bigint-powm">*bigint_powm</link>)                      (<parameter><link linkend="bigint-t"><type>bigint_t</type></link> w</parameter>,
                                                         <parameter>const <link linkend="bigint-t"><type>bigint_t</type></link> b</parameter>,
                                                         <parameter>const <link linkend="bigint-t"><type>bigint_t</type></link> e</parameter>,
                                                         <parameter>const <link linkend="bigint-t"><type>bigint_t</type></link> m</parameter>);
<link linkend="bigint-t"><returnvalue>bigint_t</returnvalue></link>            (<link linkend="bigint-addm">*bigint_addm</link>)                      (<parameter><link linkend="bigint-t"><type>bigint_t</type></link> w</parameter>,
                                                         <parameter>const <link linkend="bigint-t"><type>bigint_t</type></link> a</parameter>,
                                                         <parameter>const <link linkend="bigint-t"><type>bigint_t</type></link> b</parameter>,
                                                         <parameter>const <link linkend="bigint-t"><type>bigint_t</type></link> m</parameter>);
<link linkend="bigint-t"><returnvalue>bigint_t</returnvalue></link>            (<link linkend="bigint-subm">*bigint_subm</link>)                      (<parameter><link linkend="bigint-t"><type>bigint_t</type></link> w</parameter>,
                                                         <parameter>const <link linkend="bigint-t"><type>bigint_t</type></link> a</parameter>,
                                                         <parameter>const <link linkend="bigint-t"><type>bigint_t</type></link> b</parameter>,
                                                         <parameter>const <link linkend="bigint-t"><type>bigint_t</type></link> m</parameter>);
<link linkend="bigint-t"><returnvalue>bigint_t</returnvalue></link>            (<link linkend="bigint-mulm">*bigint_mulm</link>)                      (<parameter><link linkend="bigint-t"><type>bigint_t</type></link> w</parameter>,
                                                         <parameter>const <link linkend="bigint-t"><type>bigint_t</type></link> a</parameter>,
                                                         <parameter>const <link linkend="bigint-t"><type>bigint_t</type></link> b</parameter>,
                                                         <parameter>const <link linkend="bigint-t"><type>bigint_t</type></link> m</parameter>);
<link linkend="bigint-t"><returnvalue>bigint_t</returnvalue></link>            (<link linkend="bigint-mul">*bigint_mul</link>)                       (<parameter><link linkend="bigint-t"><type>bigint_t</type></link> w</parameter>,
                                                         <parameter>const <link linkend="bigint-t"><type>bigint_t</type></link> a</parameter>,
                                                         <parameter>const <link linkend="bigint-t"><type>bigint_t</type></link> b</parameter>);
<link linkend="bigint-t"><returnvalue>bigint_t</returnvalue></link>            (<link linkend="bigint-add-ui">*bigint_add_ui</link>)                    (<parameter><link linkend="bigint-t"><type>bigint_t</type></link> w</parameter>,
                                                         <parameter>const <link linkend="bigint-t"><type>bigint_t</type></link> a</parameter>,
                                                         <parameter><type>unsigned long </type> b</parameter>);
<link linkend="bigint-t"><returnvalue>bigint_t</returnvalue></link>            (<link linkend="bigint-sub-ui">*bigint_sub_ui</link>)                    (<parameter><link linkend="bigint-t"><type>bigint_t</type></link> w</parameter>,
                                                         <parameter>const <link linkend="bigint-t"><type>bigint_t</type></link> a</parameter>,
                                                         <parameter><type>unsigned long </type> b</parameter>);
<link linkend="bigint-t"><returnvalue>bigint_t</returnvalue></link>            (<link linkend="bigint-mul-ui">*bigint_mul_ui</link>)                    (<parameter><link linkend="bigint-t"><type>bigint_t</type></link> w</parameter>,
                                                         <parameter>const <link linkend="bigint-t"><type>bigint_t</type></link> a</parameter>,
                                                         <parameter><type>unsigned long </type> b</parameter>);
<link linkend="bigint-t"><returnvalue>bigint_t</returnvalue></link>            (<link linkend="bigint-div">*bigint_div</link>)                       (<parameter><link linkend="bigint-t"><type>bigint_t</type></link> q</parameter>,
                                                         <parameter>const <link linkend="bigint-t"><type>bigint_t</type></link> a</parameter>,
                                                         <parameter>const <link linkend="bigint-t"><type>bigint_t</type></link> b</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 (<link linkend="bigint-prime-check">*bigint_prime_check</link>)               (<parameter>const <link linkend="bigint-t"><type>bigint_t</type></link> pp</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 (<link linkend="bigint-generate-group">*bigint_generate_group</link>)            (<parameter><link linkend="gnutls-group-st"><type>gnutls_group_st</type></link> *gg</parameter>,
                                                         <parameter>unsigned <link linkend="int"><type>int</type></link> bits</parameter>);
<link linkend="bigint-t"><returnvalue>bigint_t</returnvalue></link>            (<link linkend="bigint-scan">*bigint_scan</link>)                      (<parameter>const <link linkend="void"><type>void</type></link> *buf</parameter>,
                                                         <parameter><link linkend="size-t"><type>size_t</type></link> buf_size</parameter>,
                                                         <parameter><link linkend="gnutls-bigint-format-t"><type>gnutls_bigint_format_t</type></link> format</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 (<link linkend="bigint-print">*bigint_print</link>)                     (<parameter>const <link linkend="bigint-t"><type>bigint_t</type></link> a</parameter>,
                                                         <parameter><link linkend="void"><type>void</type></link> *buf</parameter>,
                                                         <parameter><link linkend="size-t"><type>size_t</type></link> *buf_size</parameter>,
                                                         <parameter><link linkend="gnutls-bigint-format-t"><type>gnutls_bigint_format_t</type></link> format</parameter>);
#define             <link linkend="GNUTLS-MAX-PK-PARAMS:CAPS">GNUTLS_MAX_PK_PARAMS</link>
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="gnutls-pk-params-release">gnutls_pk_params_release</link>            (<parameter><link linkend="gnutls-pk-params-st"><type>gnutls_pk_params_st</type></link> *p</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="gnutls-pk-params-init">gnutls_pk_params_init</link>               (<parameter><link linkend="gnutls-pk-params-st"><type>gnutls_pk_params_st</type></link> *p</parameter>);
enum                <link linkend="gnutls-direction-t">gnutls_direction_t</link>;
<link linkend="int"><returnvalue>int</returnvalue></link>                 (<link linkend="sign">*sign</link>)                             (<parameter><link linkend="gnutls-pk-algorithm-t"><type>gnutls_pk_algorithm_t</type></link> Param1</parameter>,
                                                         <parameter><link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> *signature</parameter>,
                                                         <parameter>const <link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> *data</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 (<link linkend="verify">*verify</link>)                           (<parameter><link linkend="gnutls-pk-algorithm-t"><type>gnutls_pk_algorithm_t</type></link> Param1</parameter>,
                                                         <parameter>const <link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> *data</parameter>,
                                                         <parameter>const <link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> *signature</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 (<link linkend="generate">*generate</link>)                         (<parameter><link linkend="gnutls-pk-algorithm-t"><type>gnutls_pk_algorithm_t</type></link> Param1</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 (<link linkend="pk-fixup-private-params">*pk_fixup_private_params</link>)          (<parameter><link linkend="gnutls-pk-algorithm-t"><type>gnutls_pk_algorithm_t</type></link> Param1</parameter>,
                                                         <parameter><link linkend="gnutls-direction-t"><type>gnutls_direction_t</type></link> Param2</parameter>,
                                                         <parameter><link linkend="gnutls-pk-params-st"><type>gnutls_pk_params_st</type></link> *Param3</parameter>);
#define             <link linkend="gnutls-crypto-single-cipher-register">gnutls_crypto_single_cipher_register</link>(algo,
                                                         prio,
                                                         st)
#define             <link linkend="gnutls-crypto-single-mac-register">gnutls_crypto_single_mac_register</link>   (algo,
                                                         prio,
                                                         st)
#define             <link linkend="gnutls-crypto-single-digest-register">gnutls_crypto_single_digest_register</link>(algo,
                                                         prio,
                                                         st)
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="gnutls-crypto-single-cipher-register2">gnutls_crypto_single_cipher_register2</link>
                                                        (<parameter><link linkend="gnutls-cipher-algorithm-t"><type>gnutls_cipher_algorithm_t</type></link> algorithm</parameter>,
                                                         <parameter><link linkend="int"><type>int</type></link> priority</parameter>,
                                                         <parameter><link linkend="int"><type>int</type></link> version</parameter>,
                                                         <parameter><link linkend="gnutls-crypto-single-cipher-st"><type>gnutls_crypto_single_cipher_st</type></link> *s</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="gnutls-crypto-single-mac-register2">gnutls_crypto_single_mac_register2</link>  (<parameter><link linkend="gnutls-mac-algorithm-t"><type>gnutls_mac_algorithm_t</type></link> algorithm</parameter>,
                                                         <parameter><link linkend="int"><type>int</type></link> priority</parameter>,
                                                         <parameter><link linkend="int"><type>int</type></link> version</parameter>,
                                                         <parameter><link linkend="gnutls-crypto-single-mac-st"><type>gnutls_crypto_single_mac_st</type></link> *s</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="gnutls-crypto-single-digest-register2">gnutls_crypto_single_digest_register2</link>
                                                        (<parameter><link linkend="gnutls-digest-algorithm-t"><type>gnutls_digest_algorithm_t</type></link> algorithm</parameter>,
                                                         <parameter><link linkend="int"><type>int</type></link> priority</parameter>,
                                                         <parameter><link linkend="int"><type>int</type></link> version</parameter>,
                                                         <parameter><link linkend="gnutls-crypto-single-digest-st"><type>gnutls_crypto_single_digest_st</type></link> *s</parameter>);
#define             <link linkend="gnutls-crypto-cipher-register">gnutls_crypto_cipher_register</link>       (prio,
                                                         st)
#define             <link linkend="gnutls-crypto-mac-register">gnutls_crypto_mac_register</link>          (prio,
                                                         st)
#define             <link linkend="gnutls-crypto-digest-register">gnutls_crypto_digest_register</link>       (prio,
                                                         st)
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="gnutls-crypto-cipher-register2">gnutls_crypto_cipher_register2</link>      (<parameter><link linkend="int"><type>int</type></link> priority</parameter>,
                                                         <parameter><link linkend="int"><type>int</type></link> version</parameter>,
                                                         <parameter><link linkend="gnutls-crypto-cipher-st"><type>gnutls_crypto_cipher_st</type></link> *s</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="gnutls-crypto-mac-register2">gnutls_crypto_mac_register2</link>         (<parameter><link linkend="int"><type>int</type></link> priority</parameter>,
                                                         <parameter><link linkend="int"><type>int</type></link> version</parameter>,
                                                         <parameter><link linkend="gnutls-crypto-mac-st"><type>gnutls_crypto_mac_st</type></link> *s</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="gnutls-crypto-digest-register2">gnutls_crypto_digest_register2</link>      (<parameter><link linkend="int"><type>int</type></link> priority</parameter>,
                                                         <parameter><link linkend="int"><type>int</type></link> version</parameter>,
                                                         <parameter><link linkend="gnutls-crypto-digest-st"><type>gnutls_crypto_digest_st</type></link> *s</parameter>);
#define             <link linkend="gnutls-crypto-rnd-register">gnutls_crypto_rnd_register</link>          (prio,
                                                         st)
#define             <link linkend="gnutls-crypto-pk-register">gnutls_crypto_pk_register</link>           (prio,
                                                         st)
#define             <link linkend="gnutls-crypto-bigint-register">gnutls_crypto_bigint_register</link>       (prio,
                                                         st)
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="gnutls-crypto-rnd-register2">gnutls_crypto_rnd_register2</link>         (<parameter><link linkend="int"><type>int</type></link> priority</parameter>,
                                                         <parameter><link linkend="int"><type>int</type></link> version</parameter>,
                                                         <parameter><link linkend="gnutls-crypto-rnd-st"><type>gnutls_crypto_rnd_st</type></link> *s</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="gnutls-crypto-pk-register2">gnutls_crypto_pk_register2</link>          (<parameter><link linkend="int"><type>int</type></link> priority</parameter>,
                                                         <parameter><link linkend="int"><type>int</type></link> version</parameter>,
                                                         <parameter><link linkend="gnutls-crypto-pk-st"><type>gnutls_crypto_pk_st</type></link> *s</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="gnutls-crypto-bigint-register2">gnutls_crypto_bigint_register2</link>      (<parameter><link linkend="int"><type>int</type></link> priority</parameter>,
                                                         <parameter><link linkend="int"><type>int</type></link> version</parameter>,
                                                         <parameter><link linkend="gnutls-crypto-bigint-st"><type>gnutls_crypto_bigint_st</type></link> *s</parameter>);
</synopsis>
</refsynopsisdiv>

<refsect1 id="gnutls-crypto.description" role="desc">
<title role="desc.title">Description</title>
<para>
</para>
</refsect1>
<refsect1 id="gnutls-crypto.details" role="details">
<title role="details.title">Details</title>
<refsect2 id="GNUTLS-CRYPTO-API-VERSION:CAPS" role="macro">
<title>GNUTLS_CRYPTO_API_VERSION</title>
<indexterm zone="GNUTLS-CRYPTO-API-VERSION:CAPS"><primary>GNUTLS_CRYPTO_API_VERSION</primary></indexterm>
<programlisting># define GNUTLS_CRYPTO_API_VERSION 0x01
</programlisting>
<para>
</para></refsect2>
<refsect2 id="init" role="function">
<title>init ()</title>
<indexterm zone="init"><primary>init</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 (*init)                             (<parameter><link linkend="void"><type>void</type></link> **ctx</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>ctx</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="setkey" role="function">
<title>setkey ()</title>
<indexterm zone="setkey"><primary>setkey</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 (*setkey)                           (<parameter><link linkend="void"><type>void</type></link> *ctx</parameter>,
                                                         <parameter>const <link linkend="void"><type>void</type></link> *key</parameter>,
                                                         <parameter><link linkend="size-t"><type>size_t</type></link> keysize</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>ctx</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>keysize</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="setiv" role="function">
<title>setiv ()</title>
<indexterm zone="setiv"><primary>setiv</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 (*setiv)                            (<parameter><link linkend="void"><type>void</type></link> *ctx</parameter>,
                                                         <parameter>const <link linkend="void"><type>void</type></link> *iv</parameter>,
                                                         <parameter><link linkend="size-t"><type>size_t</type></link> ivsize</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>ctx</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>iv</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ivsize</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="encrypt" role="function">
<title>encrypt ()</title>
<indexterm zone="encrypt"><primary>encrypt</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 (*encrypt)                          (<parameter><link linkend="void"><type>void</type></link> *ctx</parameter>,
                                                         <parameter>const <link linkend="void"><type>void</type></link> *plain</parameter>,
                                                         <parameter><link linkend="size-t"><type>size_t</type></link> plainsize</parameter>,
                                                         <parameter><link linkend="void"><type>void</type></link> *encr</parameter>,
                                                         <parameter><link linkend="size-t"><type>size_t</type></link> encrsize</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>ctx</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>plain</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>plainsize</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>encr</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>encrsize</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="decrypt" role="function">
<title>decrypt ()</title>
<indexterm zone="decrypt"><primary>decrypt</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 (*decrypt)                          (<parameter><link linkend="void"><type>void</type></link> *ctx</parameter>,
                                                         <parameter>const <link linkend="void"><type>void</type></link> *encr</parameter>,
                                                         <parameter><link linkend="size-t"><type>size_t</type></link> encrsize</parameter>,
                                                         <parameter><link linkend="void"><type>void</type></link> *plain</parameter>,
                                                         <parameter><link linkend="size-t"><type>size_t</type></link> plainsize</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>ctx</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>encr</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>encrsize</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>plain</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>plainsize</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="deinit" role="function">
<title>deinit ()</title>
<indexterm zone="deinit"><primary>deinit</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                (*deinit)                           (<parameter><link linkend="void"><type>void</type></link> *ctx</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>ctx</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="hash" role="function">
<title>hash ()</title>
<indexterm zone="hash"><primary>hash</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 (*hash)                             (<parameter><link linkend="void"><type>void</type></link> *ctx</parameter>,
                                                         <parameter>const <link linkend="void"><type>void</type></link> *text</parameter>,
                                                         <parameter><link linkend="size-t"><type>size_t</type></link> textsize</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>ctx</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>text</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>textsize</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="copy" role="function">
<title>copy ()</title>
<indexterm zone="copy"><primary>copy</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 (*copy)                             (<parameter><link linkend="void"><type>void</type></link> **dst_ctx</parameter>,
                                                         <parameter><link linkend="void"><type>void</type></link> *src_ctx</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>dst_ctx</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>src_ctx</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="output" role="function">
<title>output ()</title>
<indexterm zone="output"><primary>output</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 (*output)                           (<parameter><link linkend="void"><type>void</type></link> *src_ctx</parameter>,
                                                         <parameter><link linkend="void"><type>void</type></link> *digest</parameter>,
                                                         <parameter><link linkend="size-t"><type>size_t</type></link> digestsize</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>src_ctx</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>digest</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>digestsize</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-crypto-single-digest-st" role="typedef">
<title>gnutls_crypto_single_digest_st</title>
<indexterm zone="gnutls-crypto-single-digest-st"><primary>gnutls_crypto_single_digest_st</primary></indexterm>
<programlisting>typedef gnutls_crypto_single_mac_st gnutls_crypto_single_digest_st;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="gnutls-crypto-digest-st" role="typedef">
<title>gnutls_crypto_digest_st</title>
<indexterm zone="gnutls-crypto-digest-st"><primary>gnutls_crypto_digest_st</primary></indexterm>
<programlisting>typedef gnutls_crypto_mac_st gnutls_crypto_digest_st;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="gnutls-rnd-level-t" role="enum">
<title>enum gnutls_rnd_level_t</title>
<indexterm zone="gnutls-rnd-level-t"><primary>gnutls_rnd_level_t</primary></indexterm>
<programlisting>typedef enum gnutls_rnd_level
{
  /* fatal in parts of session if broken, i.e., vulnerable to
     statistical analysis */
  GNUTLS_RND_NONCE = 0,
  /* fatal in session if broken */
  GNUTLS_RND_RANDOM = 1,
  /* fatal in many sessions if broken */
  GNUTLS_RND_KEY = 2
} gnutls_rnd_level_t;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="gnutls-pk-flag-t" role="enum">
<title>enum gnutls_pk_flag_t</title>
<indexterm zone="gnutls-pk-flag-t"><primary>gnutls_pk_flag_t</primary></indexterm>
<programlisting>typedef enum
{
  GNUTLS_PK_FLAG_NONE = 0
} gnutls_pk_flag_t;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="rnd" role="function">
<title>rnd ()</title>
<indexterm zone="rnd"><primary>rnd</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 (*rnd)                              (<parameter><link linkend="void"><type>void</type></link> *ctx</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>ctx</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="bigint-t" role="typedef">
<title>bigint_t</title>
<indexterm zone="bigint-t"><primary>bigint_t</primary></indexterm>
<programlisting>typedef void *bigint_t;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="gnutls-bigint-format-t" role="enum">
<title>enum gnutls_bigint_format_t</title>
<indexterm zone="gnutls-bigint-format-t"><primary>gnutls_bigint_format_t</primary></indexterm>
<programlisting>typedef enum
{
  /* raw unsigned integer format */
  GNUTLS_MPI_FORMAT_USG = 0,
  /* raw signed integer format - always a leading zero when positive */
  GNUTLS_MPI_FORMAT_STD = 1,
  /* the pgp integer format */
  GNUTLS_MPI_FORMAT_PGP = 2
} gnutls_bigint_format_t;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="bigint-new" role="function">
<title>bigint_new ()</title>
<indexterm zone="bigint-new"><primary>bigint_new</primary></indexterm>
<programlisting><link linkend="bigint-t"><returnvalue>bigint_t</returnvalue></link>            (*bigint_new)                       (<parameter><link linkend="int"><type>int</type></link> nbits</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>nbits</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="bigint-release" role="function">
<title>bigint_release ()</title>
<indexterm zone="bigint-release"><primary>bigint_release</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                (*bigint_release)                   (<parameter><link linkend="bigint-t"><type>bigint_t</type></link> n</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>n</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="bigint-cmp" role="function">
<title>bigint_cmp ()</title>
<indexterm zone="bigint-cmp"><primary>bigint_cmp</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 (*bigint_cmp)                       (<parameter>const <link linkend="bigint-t"><type>bigint_t</type></link> m1</parameter>,
                                                         <parameter>const <link linkend="bigint-t"><type>bigint_t</type></link> m2</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>m1</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>m2</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="bigint-cmp-ui" role="function">
<title>bigint_cmp_ui ()</title>
<indexterm zone="bigint-cmp-ui"><primary>bigint_cmp_ui</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 (*bigint_cmp_ui)                    (<parameter>const <link linkend="bigint-t"><type>bigint_t</type></link> m1</parameter>,
                                                         <parameter><type>unsigned long </type> m2</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>m1</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>m2</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="bigint-mod" role="function">
<title>bigint_mod ()</title>
<indexterm zone="bigint-mod"><primary>bigint_mod</primary></indexterm>
<programlisting><link linkend="bigint-t"><returnvalue>bigint_t</returnvalue></link>            (*bigint_mod)                       (<parameter>const <link linkend="bigint-t"><type>bigint_t</type></link> a</parameter>,
                                                         <parameter>const <link linkend="bigint-t"><type>bigint_t</type></link> b</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>a</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>b</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="bigint-set" role="function">
<title>bigint_set ()</title>
<indexterm zone="bigint-set"><primary>bigint_set</primary></indexterm>
<programlisting><link linkend="bigint-t"><returnvalue>bigint_t</returnvalue></link>            (*bigint_set)                       (<parameter><link linkend="bigint-t"><type>bigint_t</type></link> a</parameter>,
                                                         <parameter>const <link linkend="bigint-t"><type>bigint_t</type></link> b</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>a</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>b</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="bigint-set-ui" role="function">
<title>bigint_set_ui ()</title>
<indexterm zone="bigint-set-ui"><primary>bigint_set_ui</primary></indexterm>
<programlisting><link linkend="bigint-t"><returnvalue>bigint_t</returnvalue></link>            (*bigint_set_ui)                    (<parameter><link linkend="bigint-t"><type>bigint_t</type></link> a</parameter>,
                                                         <parameter><type>unsigned long </type> b</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>a</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>b</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="int" role="function">
<title>int ()</title>
<indexterm zone="int"><primary>int</primary></indexterm>
<programlisting><link linkend="unsigned"><returnvalue>unsigned</returnvalue></link>            int                                 ();</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="bigint-powm" role="function">
<title>bigint_powm ()</title>
<indexterm zone="bigint-powm"><primary>bigint_powm</primary></indexterm>
<programlisting><link linkend="bigint-t"><returnvalue>bigint_t</returnvalue></link>            (*bigint_powm)                      (<parameter><link linkend="bigint-t"><type>bigint_t</type></link> w</parameter>,
                                                         <parameter>const <link linkend="bigint-t"><type>bigint_t</type></link> b</parameter>,
                                                         <parameter>const <link linkend="bigint-t"><type>bigint_t</type></link> e</parameter>,
                                                         <parameter>const <link linkend="bigint-t"><type>bigint_t</type></link> m</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>w</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>b</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>e</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>m</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="bigint-addm" role="function">
<title>bigint_addm ()</title>
<indexterm zone="bigint-addm"><primary>bigint_addm</primary></indexterm>
<programlisting><link linkend="bigint-t"><returnvalue>bigint_t</returnvalue></link>            (*bigint_addm)                      (<parameter><link linkend="bigint-t"><type>bigint_t</type></link> w</parameter>,
                                                         <parameter>const <link linkend="bigint-t"><type>bigint_t</type></link> a</parameter>,
                                                         <parameter>const <link linkend="bigint-t"><type>bigint_t</type></link> b</parameter>,
                                                         <parameter>const <link linkend="bigint-t"><type>bigint_t</type></link> m</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>w</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>a</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>b</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>m</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="bigint-subm" role="function">
<title>bigint_subm ()</title>
<indexterm zone="bigint-subm"><primary>bigint_subm</primary></indexterm>
<programlisting><link linkend="bigint-t"><returnvalue>bigint_t</returnvalue></link>            (*bigint_subm)                      (<parameter><link linkend="bigint-t"><type>bigint_t</type></link> w</parameter>,
                                                         <parameter>const <link linkend="bigint-t"><type>bigint_t</type></link> a</parameter>,
                                                         <parameter>const <link linkend="bigint-t"><type>bigint_t</type></link> b</parameter>,
                                                         <parameter>const <link linkend="bigint-t"><type>bigint_t</type></link> m</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>w</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>a</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>b</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>m</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="bigint-mulm" role="function">
<title>bigint_mulm ()</title>
<indexterm zone="bigint-mulm"><primary>bigint_mulm</primary></indexterm>
<programlisting><link linkend="bigint-t"><returnvalue>bigint_t</returnvalue></link>            (*bigint_mulm)                      (<parameter><link linkend="bigint-t"><type>bigint_t</type></link> w</parameter>,
                                                         <parameter>const <link linkend="bigint-t"><type>bigint_t</type></link> a</parameter>,
                                                         <parameter>const <link linkend="bigint-t"><type>bigint_t</type></link> b</parameter>,
                                                         <parameter>const <link linkend="bigint-t"><type>bigint_t</type></link> m</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>w</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>a</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>b</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>m</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="bigint-mul" role="function">
<title>bigint_mul ()</title>
<indexterm zone="bigint-mul"><primary>bigint_mul</primary></indexterm>
<programlisting><link linkend="bigint-t"><returnvalue>bigint_t</returnvalue></link>            (*bigint_mul)                       (<parameter><link linkend="bigint-t"><type>bigint_t</type></link> w</parameter>,
                                                         <parameter>const <link linkend="bigint-t"><type>bigint_t</type></link> a</parameter>,
                                                         <parameter>const <link linkend="bigint-t"><type>bigint_t</type></link> b</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>w</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>a</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>b</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="bigint-add-ui" role="function">
<title>bigint_add_ui ()</title>
<indexterm zone="bigint-add-ui"><primary>bigint_add_ui</primary></indexterm>
<programlisting><link linkend="bigint-t"><returnvalue>bigint_t</returnvalue></link>            (*bigint_add_ui)                    (<parameter><link linkend="bigint-t"><type>bigint_t</type></link> w</parameter>,
                                                         <parameter>const <link linkend="bigint-t"><type>bigint_t</type></link> a</parameter>,
                                                         <parameter><type>unsigned long </type> b</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>w</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>a</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>b</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="bigint-sub-ui" role="function">
<title>bigint_sub_ui ()</title>
<indexterm zone="bigint-sub-ui"><primary>bigint_sub_ui</primary></indexterm>
<programlisting><link linkend="bigint-t"><returnvalue>bigint_t</returnvalue></link>            (*bigint_sub_ui)                    (<parameter><link linkend="bigint-t"><type>bigint_t</type></link> w</parameter>,
                                                         <parameter>const <link linkend="bigint-t"><type>bigint_t</type></link> a</parameter>,
                                                         <parameter><type>unsigned long </type> b</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>w</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>a</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>b</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="bigint-mul-ui" role="function">
<title>bigint_mul_ui ()</title>
<indexterm zone="bigint-mul-ui"><primary>bigint_mul_ui</primary></indexterm>
<programlisting><link linkend="bigint-t"><returnvalue>bigint_t</returnvalue></link>            (*bigint_mul_ui)                    (<parameter><link linkend="bigint-t"><type>bigint_t</type></link> w</parameter>,
                                                         <parameter>const <link linkend="bigint-t"><type>bigint_t</type></link> a</parameter>,
                                                         <parameter><type>unsigned long </type> b</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>w</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>a</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>b</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="bigint-div" role="function">
<title>bigint_div ()</title>
<indexterm zone="bigint-div"><primary>bigint_div</primary></indexterm>
<programlisting><link linkend="bigint-t"><returnvalue>bigint_t</returnvalue></link>            (*bigint_div)                       (<parameter><link linkend="bigint-t"><type>bigint_t</type></link> q</parameter>,
                                                         <parameter>const <link linkend="bigint-t"><type>bigint_t</type></link> a</parameter>,
                                                         <parameter>const <link linkend="bigint-t"><type>bigint_t</type></link> b</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>q</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>a</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>b</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="bigint-prime-check" role="function">
<title>bigint_prime_check ()</title>
<indexterm zone="bigint-prime-check"><primary>bigint_prime_check</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 (*bigint_prime_check)               (<parameter>const <link linkend="bigint-t"><type>bigint_t</type></link> pp</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>pp</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="bigint-generate-group" role="function">
<title>bigint_generate_group ()</title>
<indexterm zone="bigint-generate-group"><primary>bigint_generate_group</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 (*bigint_generate_group)            (<parameter><link linkend="gnutls-group-st"><type>gnutls_group_st</type></link> *gg</parameter>,
                                                         <parameter>unsigned <link linkend="int"><type>int</type></link> bits</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>gg</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>bits</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="bigint-scan" role="function">
<title>bigint_scan ()</title>
<indexterm zone="bigint-scan"><primary>bigint_scan</primary></indexterm>
<programlisting><link linkend="bigint-t"><returnvalue>bigint_t</returnvalue></link>            (*bigint_scan)                      (<parameter>const <link linkend="void"><type>void</type></link> *buf</parameter>,
                                                         <parameter><link linkend="size-t"><type>size_t</type></link> buf_size</parameter>,
                                                         <parameter><link linkend="gnutls-bigint-format-t"><type>gnutls_bigint_format_t</type></link> format</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>buf</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>buf_size</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>format</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="bigint-print" role="function">
<title>bigint_print ()</title>
<indexterm zone="bigint-print"><primary>bigint_print</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 (*bigint_print)                     (<parameter>const <link linkend="bigint-t"><type>bigint_t</type></link> a</parameter>,
                                                         <parameter><link linkend="void"><type>void</type></link> *buf</parameter>,
                                                         <parameter><link linkend="size-t"><type>size_t</type></link> *buf_size</parameter>,
                                                         <parameter><link linkend="gnutls-bigint-format-t"><type>gnutls_bigint_format_t</type></link> format</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>a</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>buf</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>buf_size</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>format</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="GNUTLS-MAX-PK-PARAMS:CAPS" role="macro">
<title>GNUTLS_MAX_PK_PARAMS</title>
<indexterm zone="GNUTLS-MAX-PK-PARAMS:CAPS"><primary>GNUTLS_MAX_PK_PARAMS</primary></indexterm>
<programlisting>#define GNUTLS_MAX_PK_PARAMS 6
</programlisting>
<para>
</para></refsect2>
<refsect2 id="gnutls-pk-params-release" role="function">
<title>gnutls_pk_params_release ()</title>
<indexterm zone="gnutls-pk-params-release"><primary>gnutls_pk_params_release</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                gnutls_pk_params_release            (<parameter><link linkend="gnutls-pk-params-st"><type>gnutls_pk_params_st</type></link> *p</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>p</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-pk-params-init" role="function">
<title>gnutls_pk_params_init ()</title>
<indexterm zone="gnutls-pk-params-init"><primary>gnutls_pk_params_init</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                gnutls_pk_params_init               (<parameter><link linkend="gnutls-pk-params-st"><type>gnutls_pk_params_st</type></link> *p</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>p</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-direction-t" role="enum">
<title>enum gnutls_direction_t</title>
<indexterm zone="gnutls-direction-t"><primary>gnutls_direction_t</primary></indexterm>
<programlisting>typedef enum
{
  GNUTLS_IMPORT,
  GNUTLS_EXPORT
} gnutls_direction_t;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="sign" role="function">
<title>sign ()</title>
<indexterm zone="sign"><primary>sign</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 (*sign)                             (<parameter><link linkend="gnutls-pk-algorithm-t"><type>gnutls_pk_algorithm_t</type></link> Param1</parameter>,
                                                         <parameter><link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> *signature</parameter>,
                                                         <parameter>const <link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> *data</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>Param1</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>signature</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>data</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="verify" role="function">
<title>verify ()</title>
<indexterm zone="verify"><primary>verify</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 (*verify)                           (<parameter><link linkend="gnutls-pk-algorithm-t"><type>gnutls_pk_algorithm_t</type></link> Param1</parameter>,
                                                         <parameter>const <link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> *data</parameter>,
                                                         <parameter>const <link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> *signature</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>Param1</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>data</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>signature</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="generate" role="function">
<title>generate ()</title>
<indexterm zone="generate"><primary>generate</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 (*generate)                         (<parameter><link linkend="gnutls-pk-algorithm-t"><type>gnutls_pk_algorithm_t</type></link> Param1</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>Param1</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="pk-fixup-private-params" role="function">
<title>pk_fixup_private_params ()</title>
<indexterm zone="pk-fixup-private-params"><primary>pk_fixup_private_params</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 (*pk_fixup_private_params)          (<parameter><link linkend="gnutls-pk-algorithm-t"><type>gnutls_pk_algorithm_t</type></link> Param1</parameter>,
                                                         <parameter><link linkend="gnutls-direction-t"><type>gnutls_direction_t</type></link> Param2</parameter>,
                                                         <parameter><link linkend="gnutls-pk-params-st"><type>gnutls_pk_params_st</type></link> *Param3</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>Param1</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>Param2</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>Param3</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-crypto-single-cipher-register" role="macro">
<title>gnutls_crypto_single_cipher_register()</title>
<indexterm zone="gnutls-crypto-single-cipher-register"><primary>gnutls_crypto_single_cipher_register</primary></indexterm>
<programlisting>#define             gnutls_crypto_single_cipher_register(algo, prio, st)</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>algo</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>prio</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>st</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-crypto-single-mac-register" role="macro">
<title>gnutls_crypto_single_mac_register()</title>
<indexterm zone="gnutls-crypto-single-mac-register"><primary>gnutls_crypto_single_mac_register</primary></indexterm>
<programlisting>#define             gnutls_crypto_single_mac_register(algo, prio, st)</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>algo</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>prio</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>st</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-crypto-single-digest-register" role="macro">
<title>gnutls_crypto_single_digest_register()</title>
<indexterm zone="gnutls-crypto-single-digest-register"><primary>gnutls_crypto_single_digest_register</primary></indexterm>
<programlisting>#define             gnutls_crypto_single_digest_register(algo, prio, st)</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>algo</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>prio</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>st</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-crypto-single-cipher-register2" role="function">
<title>gnutls_crypto_single_cipher_register2 ()</title>
<indexterm zone="gnutls-crypto-single-cipher-register2"><primary>gnutls_crypto_single_cipher_register2</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 gnutls_crypto_single_cipher_register2
                                                        (<parameter><link linkend="gnutls-cipher-algorithm-t"><type>gnutls_cipher_algorithm_t</type></link> algorithm</parameter>,
                                                         <parameter><link linkend="int"><type>int</type></link> priority</parameter>,
                                                         <parameter><link linkend="int"><type>int</type></link> version</parameter>,
                                                         <parameter><link linkend="gnutls-crypto-single-cipher-st"><type>gnutls_crypto_single_cipher_st</type></link> *s</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>algorithm</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>priority</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>version</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>s</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-crypto-single-mac-register2" role="function">
<title>gnutls_crypto_single_mac_register2 ()</title>
<indexterm zone="gnutls-crypto-single-mac-register2"><primary>gnutls_crypto_single_mac_register2</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 gnutls_crypto_single_mac_register2  (<parameter><link linkend="gnutls-mac-algorithm-t"><type>gnutls_mac_algorithm_t</type></link> algorithm</parameter>,
                                                         <parameter><link linkend="int"><type>int</type></link> priority</parameter>,
                                                         <parameter><link linkend="int"><type>int</type></link> version</parameter>,
                                                         <parameter><link linkend="gnutls-crypto-single-mac-st"><type>gnutls_crypto_single_mac_st</type></link> *s</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>algorithm</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>priority</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>version</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>s</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-crypto-single-digest-register2" role="function">
<title>gnutls_crypto_single_digest_register2 ()</title>
<indexterm zone="gnutls-crypto-single-digest-register2"><primary>gnutls_crypto_single_digest_register2</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 gnutls_crypto_single_digest_register2
                                                        (<parameter><link linkend="gnutls-digest-algorithm-t"><type>gnutls_digest_algorithm_t</type></link> algorithm</parameter>,
                                                         <parameter><link linkend="int"><type>int</type></link> priority</parameter>,
                                                         <parameter><link linkend="int"><type>int</type></link> version</parameter>,
                                                         <parameter><link linkend="gnutls-crypto-single-digest-st"><type>gnutls_crypto_single_digest_st</type></link> *s</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>algorithm</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>priority</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>version</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>s</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-crypto-cipher-register" role="macro">
<title>gnutls_crypto_cipher_register()</title>
<indexterm zone="gnutls-crypto-cipher-register"><primary>gnutls_crypto_cipher_register</primary></indexterm>
<programlisting>#define             gnutls_crypto_cipher_register(prio, st)</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>prio</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>st</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-crypto-mac-register" role="macro">
<title>gnutls_crypto_mac_register()</title>
<indexterm zone="gnutls-crypto-mac-register"><primary>gnutls_crypto_mac_register</primary></indexterm>
<programlisting>#define             gnutls_crypto_mac_register(prio, st)</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>prio</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>st</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-crypto-digest-register" role="macro">
<title>gnutls_crypto_digest_register()</title>
<indexterm zone="gnutls-crypto-digest-register"><primary>gnutls_crypto_digest_register</primary></indexterm>
<programlisting>#define             gnutls_crypto_digest_register(prio, st)</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>prio</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>st</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-crypto-cipher-register2" role="function">
<title>gnutls_crypto_cipher_register2 ()</title>
<indexterm zone="gnutls-crypto-cipher-register2"><primary>gnutls_crypto_cipher_register2</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 gnutls_crypto_cipher_register2      (<parameter><link linkend="int"><type>int</type></link> priority</parameter>,
                                                         <parameter><link linkend="int"><type>int</type></link> version</parameter>,
                                                         <parameter><link linkend="gnutls-crypto-cipher-st"><type>gnutls_crypto_cipher_st</type></link> *s</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>priority</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>version</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>s</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-crypto-mac-register2" role="function">
<title>gnutls_crypto_mac_register2 ()</title>
<indexterm zone="gnutls-crypto-mac-register2"><primary>gnutls_crypto_mac_register2</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 gnutls_crypto_mac_register2         (<parameter><link linkend="int"><type>int</type></link> priority</parameter>,
                                                         <parameter><link linkend="int"><type>int</type></link> version</parameter>,
                                                         <parameter><link linkend="gnutls-crypto-mac-st"><type>gnutls_crypto_mac_st</type></link> *s</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>priority</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>version</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>s</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-crypto-digest-register2" role="function">
<title>gnutls_crypto_digest_register2 ()</title>
<indexterm zone="gnutls-crypto-digest-register2"><primary>gnutls_crypto_digest_register2</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 gnutls_crypto_digest_register2      (<parameter><link linkend="int"><type>int</type></link> priority</parameter>,
                                                         <parameter><link linkend="int"><type>int</type></link> version</parameter>,
                                                         <parameter><link linkend="gnutls-crypto-digest-st"><type>gnutls_crypto_digest_st</type></link> *s</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>priority</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>version</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>s</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-crypto-rnd-register" role="macro">
<title>gnutls_crypto_rnd_register()</title>
<indexterm zone="gnutls-crypto-rnd-register"><primary>gnutls_crypto_rnd_register</primary></indexterm>
<programlisting>#define             gnutls_crypto_rnd_register(prio, st)</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>prio</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>st</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-crypto-pk-register" role="macro">
<title>gnutls_crypto_pk_register()</title>
<indexterm zone="gnutls-crypto-pk-register"><primary>gnutls_crypto_pk_register</primary></indexterm>
<programlisting>#define             gnutls_crypto_pk_register(prio, st)</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>prio</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>st</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-crypto-bigint-register" role="macro">
<title>gnutls_crypto_bigint_register()</title>
<indexterm zone="gnutls-crypto-bigint-register"><primary>gnutls_crypto_bigint_register</primary></indexterm>
<programlisting>#define             gnutls_crypto_bigint_register(prio, st)</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>prio</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>st</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-crypto-rnd-register2" role="function">
<title>gnutls_crypto_rnd_register2 ()</title>
<indexterm zone="gnutls-crypto-rnd-register2"><primary>gnutls_crypto_rnd_register2</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 gnutls_crypto_rnd_register2         (<parameter><link linkend="int"><type>int</type></link> priority</parameter>,
                                                         <parameter><link linkend="int"><type>int</type></link> version</parameter>,
                                                         <parameter><link linkend="gnutls-crypto-rnd-st"><type>gnutls_crypto_rnd_st</type></link> *s</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>priority</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>version</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>s</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-crypto-pk-register2" role="function">
<title>gnutls_crypto_pk_register2 ()</title>
<indexterm zone="gnutls-crypto-pk-register2"><primary>gnutls_crypto_pk_register2</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 gnutls_crypto_pk_register2          (<parameter><link linkend="int"><type>int</type></link> priority</parameter>,
                                                         <parameter><link linkend="int"><type>int</type></link> version</parameter>,
                                                         <parameter><link linkend="gnutls-crypto-pk-st"><type>gnutls_crypto_pk_st</type></link> *s</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>priority</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>version</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>s</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-crypto-bigint-register2" role="function">
<title>gnutls_crypto_bigint_register2 ()</title>
<indexterm zone="gnutls-crypto-bigint-register2"><primary>gnutls_crypto_bigint_register2</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 gnutls_crypto_bigint_register2      (<parameter><link linkend="int"><type>int</type></link> priority</parameter>,
                                                         <parameter><link linkend="int"><type>int</type></link> version</parameter>,
                                                         <parameter><link linkend="gnutls-crypto-bigint-st"><type>gnutls_crypto_bigint_st</type></link> *s</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>priority</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>version</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>s</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>

</refentry>
