<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN" 
               "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">
<refentry id="gnutls-extra">
<refmeta>
<refentrytitle role="top_of_page" id="gnutls-extra.top_of_page">extra</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>
  GNUTLS Library
</refmiscinfo>
</refmeta>
<refnamediv>
<refname>extra</refname>
<refpurpose></refpurpose>
</refnamediv>

<refsynopsisdiv id="gnutls-extra.synopsis" role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>#define             <link linkend="GNUTLS-EXTRA-VERSION:CAPS">GNUTLS_EXTRA_VERSION</link>
enum                <link linkend="gnutls-ia-apptype-t">gnutls_ia_apptype_t</link>;
<link linkend="int"><returnvalue>int</returnvalue></link>                 (<link linkend="gnutls-ia-avp-func">*gnutls_ia_avp_func</link>)               (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter><link linkend="void"><type>void</type></link> *ptr</parameter>,
                                                         <parameter>const <link linkend="char"><type>char</type></link> *last</parameter>,
                                                         <parameter><link linkend="size-t"><type>size_t</type></link> lastlen</parameter>,
                                                         <parameter><link linkend="char"><type>char</type></link> **next</parameter>,
                                                         <parameter><link linkend="size-t"><type>size_t</type></link> *nextlen</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="gnutls-ia-free-client-credentials">gnutls_ia_free_client_credentials</link>   (<parameter><link linkend="gnutls-ia-client-credentials-t"><type>gnutls_ia_client_credentials_t</type></link> sc</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="gnutls-ia-allocate-client-credentials">gnutls_ia_allocate_client_credentials</link>
                                                        (<parameter><link linkend="gnutls-ia-client-credentials-t"><type>gnutls_ia_client_credentials_t</type></link> *sc</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="gnutls-ia-free-server-credentials">gnutls_ia_free_server_credentials</link>   (<parameter><link linkend="gnutls-ia-server-credentials-t"><type>gnutls_ia_server_credentials_t</type></link> sc</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="gnutls-ia-allocate-server-credentials">gnutls_ia_allocate_server_credentials</link>
                                                        (<parameter><link linkend="gnutls-ia-server-credentials-t"><type>gnutls_ia_server_credentials_t</type></link> *sc</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="gnutls-ia-set-client-avp-function">gnutls_ia_set_client_avp_function</link>   (<parameter><link linkend="gnutls-ia-client-credentials-t"><type>gnutls_ia_client_credentials_t</type></link> cred</parameter>,
                                                         <parameter><link linkend="gnutls-ia-avp-func"><type>gnutls_ia_avp_func</type></link> avp_func</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="gnutls-ia-set-client-avp-ptr">gnutls_ia_set_client_avp_ptr</link>        (<parameter><link linkend="gnutls-ia-client-credentials-t"><type>gnutls_ia_client_credentials_t</type></link> cred</parameter>,
                                                         <parameter><link linkend="void"><type>void</type></link> *ptr</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link> *              <link linkend="gnutls-ia-get-client-avp-ptr">gnutls_ia_get_client_avp_ptr</link>        (<parameter><link linkend="gnutls-ia-client-credentials-t"><type>gnutls_ia_client_credentials_t</type></link> cred</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="gnutls-ia-set-server-avp-function">gnutls_ia_set_server_avp_function</link>   (<parameter><link linkend="gnutls-ia-server-credentials-t"><type>gnutls_ia_server_credentials_t</type></link> cred</parameter>,
                                                         <parameter><link linkend="gnutls-ia-avp-func"><type>gnutls_ia_avp_func</type></link> avp_func</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="gnutls-ia-set-server-avp-ptr">gnutls_ia_set_server_avp_ptr</link>        (<parameter><link linkend="gnutls-ia-server-credentials-t"><type>gnutls_ia_server_credentials_t</type></link> cred</parameter>,
                                                         <parameter><link linkend="void"><type>void</type></link> *ptr</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link> *              <link linkend="gnutls-ia-get-server-avp-ptr">gnutls_ia_get_server_avp_ptr</link>        (<parameter><link linkend="gnutls-ia-server-credentials-t"><type>gnutls_ia_server_credentials_t</type></link> cred</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="gnutls-ia-handshake-p">gnutls_ia_handshake_p</link>               (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="gnutls-ia-handshake">gnutls_ia_handshake</link>                 (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="gnutls-ia-permute-inner-secret">gnutls_ia_permute_inner_secret</link>      (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter><link linkend="size-t"><type>size_t</type></link> session_keys_size</parameter>,
                                                         <parameter>const <link linkend="char"><type>char</type></link> *session_keys</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="gnutls-ia-endphase-send">gnutls_ia_endphase_send</link>             (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter><link linkend="int"><type>int</type></link> final_p</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="gnutls-ia-verify-endphase">gnutls_ia_verify_endphase</link>           (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter>const <link linkend="char"><type>char</type></link> *checksum</parameter>);
<link linkend="ssize-t"><returnvalue>ssize_t</returnvalue></link>             <link linkend="gnutls-ia-send">gnutls_ia_send</link>                      (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter>const <link linkend="char"><type>char</type></link> *data</parameter>,
                                                         <parameter><link linkend="size-t"><type>size_t</type></link> sizeofdata</parameter>);
<link linkend="ssize-t"><returnvalue>ssize_t</returnvalue></link>             <link linkend="gnutls-ia-recv">gnutls_ia_recv</link>                      (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter><link linkend="char"><type>char</type></link> *data</parameter>,
                                                         <parameter><link linkend="size-t"><type>size_t</type></link> sizeofdata</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="gnutls-ia-generate-challenge">gnutls_ia_generate_challenge</link>        (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter><link linkend="size-t"><type>size_t</type></link> buffer_size</parameter>,
                                                         <parameter><link linkend="char"><type>char</type></link> *buffer</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="gnutls-ia-extract-inner-secret">gnutls_ia_extract_inner_secret</link>      (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter><link linkend="char"><type>char</type></link> *buffer</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="gnutls-ia-enable">gnutls_ia_enable</link>                    (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter><link linkend="int"><type>int</type></link> allow_skip_on_resume</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="gnutls-global-init-extra">gnutls_global_init_extra</link>            (<parameter><type>void</type></parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="gnutls-register-md5-handler">gnutls_register_md5_handler</link>         (<parameter><type>void</type></parameter>);
const <link linkend="char"><returnvalue>char</returnvalue></link> *        <link linkend="gnutls-extra-check-version">gnutls_extra_check_version</link>          (<parameter>const <link linkend="char"><type>char</type></link> *req_version</parameter>);
</synopsis>
</refsynopsisdiv>

<refsect1 id="gnutls-extra.description" role="desc">
<title role="desc.title">Description</title>
<para>
</para>
</refsect1>
<refsect1 id="gnutls-extra.details" role="details">
<title role="details.title">Details</title>
<refsect2 id="GNUTLS-EXTRA-VERSION:CAPS" role="macro">
<title>GNUTLS_EXTRA_VERSION</title>
<indexterm zone="GNUTLS-EXTRA-VERSION:CAPS"><primary>GNUTLS_EXTRA_VERSION</primary></indexterm>
<programlisting>#define GNUTLS_EXTRA_VERSION GNUTLS_VERSION
</programlisting>
<para>
</para></refsect2>
<refsect2 id="gnutls-ia-apptype-t" role="enum">
<title>enum gnutls_ia_apptype_t</title>
<indexterm zone="gnutls-ia-apptype-t"><primary>gnutls_ia_apptype_t</primary></indexterm>
<programlisting>  typedef enum
  {
    GNUTLS_IA_APPLICATION_PAYLOAD = 0,
    GNUTLS_IA_INTERMEDIATE_PHASE_FINISHED = 1,
    GNUTLS_IA_FINAL_PHASE_FINISHED = 2
  } gnutls_ia_apptype_t;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="gnutls-ia-avp-func" role="function">
<title>gnutls_ia_avp_func ()</title>
<indexterm zone="gnutls-ia-avp-func"><primary>gnutls_ia_avp_func</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 (*gnutls_ia_avp_func)               (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter><link linkend="void"><type>void</type></link> *ptr</parameter>,
                                                         <parameter>const <link linkend="char"><type>char</type></link> *last</parameter>,
                                                         <parameter><link linkend="size-t"><type>size_t</type></link> lastlen</parameter>,
                                                         <parameter><link linkend="char"><type>char</type></link> **next</parameter>,
                                                         <parameter><link linkend="size-t"><type>size_t</type></link> *nextlen</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>session</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ptr</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>last</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>lastlen</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>next</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>nextlen</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-ia-free-client-credentials" role="function">
<title>gnutls_ia_free_client_credentials ()</title>
<indexterm zone="gnutls-ia-free-client-credentials"><primary>gnutls_ia_free_client_credentials</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                gnutls_ia_free_client_credentials   (<parameter><link linkend="gnutls-ia-client-credentials-t"><type>gnutls_ia_client_credentials_t</type></link> sc</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>sc</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-ia-allocate-client-credentials" role="function">
<title>gnutls_ia_allocate_client_credentials ()</title>
<indexterm zone="gnutls-ia-allocate-client-credentials"><primary>gnutls_ia_allocate_client_credentials</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 gnutls_ia_allocate_client_credentials
                                                        (<parameter><link linkend="gnutls-ia-client-credentials-t"><type>gnutls_ia_client_credentials_t</type></link> *sc</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>sc</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-ia-free-server-credentials" role="function">
<title>gnutls_ia_free_server_credentials ()</title>
<indexterm zone="gnutls-ia-free-server-credentials"><primary>gnutls_ia_free_server_credentials</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                gnutls_ia_free_server_credentials   (<parameter><link linkend="gnutls-ia-server-credentials-t"><type>gnutls_ia_server_credentials_t</type></link> sc</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>sc</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-ia-allocate-server-credentials" role="function">
<title>gnutls_ia_allocate_server_credentials ()</title>
<indexterm zone="gnutls-ia-allocate-server-credentials"><primary>gnutls_ia_allocate_server_credentials</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 gnutls_ia_allocate_server_credentials
                                                        (<parameter><link linkend="gnutls-ia-server-credentials-t"><type>gnutls_ia_server_credentials_t</type></link> *sc</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>sc</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-ia-set-client-avp-function" role="function">
<title>gnutls_ia_set_client_avp_function ()</title>
<indexterm zone="gnutls-ia-set-client-avp-function"><primary>gnutls_ia_set_client_avp_function</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                gnutls_ia_set_client_avp_function   (<parameter><link linkend="gnutls-ia-client-credentials-t"><type>gnutls_ia_client_credentials_t</type></link> cred</parameter>,
                                                         <parameter><link linkend="gnutls-ia-avp-func"><type>gnutls_ia_avp_func</type></link> avp_func</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>cred</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>avp_func</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-ia-set-client-avp-ptr" role="function">
<title>gnutls_ia_set_client_avp_ptr ()</title>
<indexterm zone="gnutls-ia-set-client-avp-ptr"><primary>gnutls_ia_set_client_avp_ptr</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                gnutls_ia_set_client_avp_ptr        (<parameter><link linkend="gnutls-ia-client-credentials-t"><type>gnutls_ia_client_credentials_t</type></link> cred</parameter>,
                                                         <parameter><link linkend="void"><type>void</type></link> *ptr</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>cred</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ptr</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-ia-get-client-avp-ptr" role="function">
<title>gnutls_ia_get_client_avp_ptr ()</title>
<indexterm zone="gnutls-ia-get-client-avp-ptr"><primary>gnutls_ia_get_client_avp_ptr</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link> *              gnutls_ia_get_client_avp_ptr        (<parameter><link linkend="gnutls-ia-client-credentials-t"><type>gnutls_ia_client_credentials_t</type></link> cred</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>cred</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-ia-set-server-avp-function" role="function">
<title>gnutls_ia_set_server_avp_function ()</title>
<indexterm zone="gnutls-ia-set-server-avp-function"><primary>gnutls_ia_set_server_avp_function</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                gnutls_ia_set_server_avp_function   (<parameter><link linkend="gnutls-ia-server-credentials-t"><type>gnutls_ia_server_credentials_t</type></link> cred</parameter>,
                                                         <parameter><link linkend="gnutls-ia-avp-func"><type>gnutls_ia_avp_func</type></link> avp_func</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>cred</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>avp_func</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-ia-set-server-avp-ptr" role="function">
<title>gnutls_ia_set_server_avp_ptr ()</title>
<indexterm zone="gnutls-ia-set-server-avp-ptr"><primary>gnutls_ia_set_server_avp_ptr</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                gnutls_ia_set_server_avp_ptr        (<parameter><link linkend="gnutls-ia-server-credentials-t"><type>gnutls_ia_server_credentials_t</type></link> cred</parameter>,
                                                         <parameter><link linkend="void"><type>void</type></link> *ptr</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>cred</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ptr</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-ia-get-server-avp-ptr" role="function">
<title>gnutls_ia_get_server_avp_ptr ()</title>
<indexterm zone="gnutls-ia-get-server-avp-ptr"><primary>gnutls_ia_get_server_avp_ptr</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link> *              gnutls_ia_get_server_avp_ptr        (<parameter><link linkend="gnutls-ia-server-credentials-t"><type>gnutls_ia_server_credentials_t</type></link> cred</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>cred</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-ia-handshake-p" role="function">
<title>gnutls_ia_handshake_p ()</title>
<indexterm zone="gnutls-ia-handshake-p"><primary>gnutls_ia_handshake_p</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 gnutls_ia_handshake_p               (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>);</programlisting>
<para>
Predicate to be used after <link linkend="gnutls-handshake"><function>gnutls_handshake()</function></link> to decide whether to
invoke <link linkend="gnutls-ia-handshake"><function>gnutls_ia_handshake()</function></link>.  Usable by both clients and servers.</para>
<variablelist role="params">
<varlistentry><term><parameter>session</parameter>&#160;:</term>
<listitem><simpara>is a <link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> structure.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> non-zero if TLS/IA handshake is expected, zero
  otherwise.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-ia-handshake" role="function">
<title>gnutls_ia_handshake ()</title>
<indexterm zone="gnutls-ia-handshake"><primary>gnutls_ia_handshake</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 gnutls_ia_handshake                 (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>);</programlisting>
<para>
Perform a TLS/IA handshake.  This should be called after
<link linkend="gnutls-handshake"><function>gnutls_handshake()</function></link> iff <link linkend="gnutls-ia-handshake-p"><function>gnutls_ia_handshake_p()</function></link>.</para>
<variablelist role="params">
<varlistentry><term><parameter>session</parameter>&#160;:</term>
<listitem><simpara>is a <link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> structure.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> On success, <link linkend="GNUTLS-E-SUCCESS:CAPS"><literal>GNUTLS_E_SUCCESS</literal></link> (zero) is returned,
  otherwise an error code is returned.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-ia-permute-inner-secret" role="function">
<title>gnutls_ia_permute_inner_secret ()</title>
<indexterm zone="gnutls-ia-permute-inner-secret"><primary>gnutls_ia_permute_inner_secret</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 gnutls_ia_permute_inner_secret      (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter><link linkend="size-t"><type>size_t</type></link> session_keys_size</parameter>,
                                                         <parameter>const <link linkend="char"><type>char</type></link> *session_keys</parameter>);</programlisting>
<para>
Permute the inner secret using the generated session keys.
</para>
<para>
This can be called in the TLS/IA AVP callback to mix any generated
session keys with the TLS/IA inner secret.</para>
<variablelist role="params">
<varlistentry><term><parameter>session</parameter>&#160;:</term>
<listitem><simpara>is a <link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> structure.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>session_keys_size</parameter>&#160;:</term>
<listitem><simpara>Size of generated session keys (0 if none).
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>session_keys</parameter>&#160;:</term>
<listitem><simpara>Generated session keys, used to permute inner secret
               (NULL if none).
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> Return zero on success, or a negative error code.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-ia-endphase-send" role="function">
<title>gnutls_ia_endphase_send ()</title>
<indexterm zone="gnutls-ia-endphase-send"><primary>gnutls_ia_endphase_send</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 gnutls_ia_endphase_send             (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter><link linkend="int"><type>int</type></link> final_p</parameter>);</programlisting>
<para>
Send a TLS/IA end phase message.
</para>
<para>
In the client, this should only be used to acknowledge an end phase
message sent by the server.
</para>
<para>
In the server, this can be called instead of <link linkend="gnutls-ia-send"><function>gnutls_ia_send()</function></link> if
the server wishes to end an application phase.</para>
<variablelist role="params">
<varlistentry><term><parameter>session</parameter>&#160;:</term>
<listitem><simpara>is a <link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> structure.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>final_p</parameter>&#160;:</term>
<listitem><simpara>Set iff this should signal the final phase.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> Return 0 on success, or an error code.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-ia-verify-endphase" role="function">
<title>gnutls_ia_verify_endphase ()</title>
<indexterm zone="gnutls-ia-verify-endphase"><primary>gnutls_ia_verify_endphase</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 gnutls_ia_verify_endphase           (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter>const <link linkend="char"><type>char</type></link> *checksum</parameter>);</programlisting>
<para>
Verify TLS/IA end phase checksum data.  If verification fails, the
<link linkend="GNUTLS-A-INNER-APPLICATION-VERIFICATION:CAPS"><literal>GNUTLS_A_INNER_APPLICATION_VERIFICATION</literal></link> alert is sent to the other
sie.
</para>
<para>
This function is called when <link linkend="gnutls-ia-recv"><function>gnutls_ia_recv()</function></link> return
<link linkend="GNUTLS-E-WARNING-IA-IPHF-RECEIVED:CAPS"><literal>GNUTLS_E_WARNING_IA_IPHF_RECEIVED</literal></link> or
<link linkend="GNUTLS-E-WARNING-IA-FPHF-RECEIVED:CAPS"><literal>GNUTLS_E_WARNING_IA_FPHF_RECEIVED</literal></link>.</para>
<variablelist role="params">
<varlistentry><term><parameter>session</parameter>&#160;:</term>
<listitem><simpara>is a <link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> structure.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>checksum</parameter>&#160;:</term>
<listitem><simpara>12-byte checksum data, received from <link linkend="gnutls-ia-recv"><function>gnutls_ia_recv()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> Return 0 on successful verification, or an error
code.  If the checksum verification of the end phase message fails,
<link linkend="GNUTLS-E-IA-VERIFY-FAILED:CAPS"><literal>GNUTLS_E_IA_VERIFY_FAILED</literal></link> is returned.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-ia-send" role="function">
<title>gnutls_ia_send ()</title>
<indexterm zone="gnutls-ia-send"><primary>gnutls_ia_send</primary></indexterm>
<programlisting><link linkend="ssize-t"><returnvalue>ssize_t</returnvalue></link>             gnutls_ia_send                      (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter>const <link linkend="char"><type>char</type></link> *data</parameter>,
                                                         <parameter><link linkend="size-t"><type>size_t</type></link> sizeofdata</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>session</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>data</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>sizeofdata</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-ia-recv" role="function">
<title>gnutls_ia_recv ()</title>
<indexterm zone="gnutls-ia-recv"><primary>gnutls_ia_recv</primary></indexterm>
<programlisting><link linkend="ssize-t"><returnvalue>ssize_t</returnvalue></link>             gnutls_ia_recv                      (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter><link linkend="char"><type>char</type></link> *data</parameter>,
                                                         <parameter><link linkend="size-t"><type>size_t</type></link> sizeofdata</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>session</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>data</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>sizeofdata</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-ia-generate-challenge" role="function">
<title>gnutls_ia_generate_challenge ()</title>
<indexterm zone="gnutls-ia-generate-challenge"><primary>gnutls_ia_generate_challenge</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 gnutls_ia_generate_challenge        (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter><link linkend="size-t"><type>size_t</type></link> buffer_size</parameter>,
                                                         <parameter><link linkend="char"><type>char</type></link> *buffer</parameter>);</programlisting>
<para>
Generate an application challenge that the client cannot control or
predict, based on the TLS/IA inner secret.</para>
<variablelist role="params">
<varlistentry><term><parameter>session</parameter>&#160;:</term>
<listitem><simpara>is a <link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> structure.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>buffer_size</parameter>&#160;:</term>
<listitem><simpara>size of output buffer.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>buffer</parameter>&#160;:</term>
<listitem><simpara>pre-allocated buffer to contain <parameter>buffer_size</parameter> bytes of output.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> Returns 0 on success, or an negative error code.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-ia-extract-inner-secret" role="function">
<title>gnutls_ia_extract_inner_secret ()</title>
<indexterm zone="gnutls-ia-extract-inner-secret"><primary>gnutls_ia_extract_inner_secret</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                gnutls_ia_extract_inner_secret      (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter><link linkend="char"><type>char</type></link> *buffer</parameter>);</programlisting>
<para>
Copy the 48 bytes large inner secret into the specified buffer
</para>
<para>
This function is typically used after the TLS/IA handshake has
concluded.  The TLS/IA inner secret can be used as input to a PRF
to derive session keys.  Do not use the inner secret directly as a
session key, because for a resumed session that does not include an
application phase, the inner secret will be identical to the inner
secret in the original session.  It is important to include, for
example, the client and server randomness when deriving a sesssion
key from the inner secret.</para>
<variablelist role="params">
<varlistentry><term><parameter>session</parameter>&#160;:</term>
<listitem><simpara>is a <link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> structure.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>buffer</parameter>&#160;:</term>
<listitem><simpara>pre-allocated buffer to hold 48 bytes of inner secret.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-ia-enable" role="function">
<title>gnutls_ia_enable ()</title>
<indexterm zone="gnutls-ia-enable"><primary>gnutls_ia_enable</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                gnutls_ia_enable                    (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter><link linkend="int"><type>int</type></link> allow_skip_on_resume</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>session</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>allow_skip_on_resume</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-global-init-extra" role="function">
<title>gnutls_global_init_extra ()</title>
<indexterm zone="gnutls-global-init-extra"><primary>gnutls_global_init_extra</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 gnutls_global_init_extra            (<parameter><type>void</type></parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-register-md5-handler" role="function" condition="since:2.6.0">
<title>gnutls_register_md5_handler ()</title>
<indexterm zone="gnutls-register-md5-handler" role="2.6.0"><primary>gnutls_register_md5_handler</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 gnutls_register_md5_handler         (<parameter><type>void</type></parameter>);</programlisting>
<para>
Register a non-libgcrypt based MD5 and HMAC-MD5 handler.  This is
useful if you run Libgcrypt in FIPS-mode.  Normally TLS requires
use of MD5, so without this you cannot use GnuTLS with libgcrypt in
FIPS mode.</para>
<variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> <link linkend="GNUTLS-E-SUCCESS:CAPS"><literal>GNUTLS_E_SUCCESS</literal></link> on success, otherwise an error.

</simpara></listitem></varlistentry>
</variablelist><para role="since">Since 2.6.0</para></refsect2>
<refsect2 id="gnutls-extra-check-version" role="function">
<title>gnutls_extra_check_version ()</title>
<indexterm zone="gnutls-extra-check-version"><primary>gnutls_extra_check_version</primary></indexterm>
<programlisting>const <link linkend="char"><returnvalue>char</returnvalue></link> *        gnutls_extra_check_version          (<parameter>const <link linkend="char"><type>char</type></link> *req_version</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>req_version</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>

</refentry>
