<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN" 
               "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">
<refentry id="gnutls-gnutls">
<refmeta>
<refentrytitle role="top_of_page" id="gnutls-gnutls.top_of_page">gnutls</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>
  GNUTLS Library
</refmiscinfo>
</refmeta>
<refnamediv>
<refname>gnutls</refname>
<refpurpose></refpurpose>
</refnamediv>

<refsynopsisdiv id="gnutls-gnutls.synopsis" role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>#define             <link linkend="HAVE-SSIZE-T:CAPS">HAVE_SSIZE_T</link>
#define             <link linkend="GNUTLS-VERSION:CAPS">GNUTLS_VERSION</link>
#define             <link linkend="GNUTLS-VERSION-MAJOR:CAPS">GNUTLS_VERSION_MAJOR</link>
#define             <link linkend="GNUTLS-VERSION-MINOR:CAPS">GNUTLS_VERSION_MINOR</link>
#define             <link linkend="GNUTLS-VERSION-PATCH:CAPS">GNUTLS_VERSION_PATCH</link>
#define             <link linkend="GNUTLS-VERSION-NUMBER:CAPS">GNUTLS_VERSION_NUMBER</link>
#define             <link linkend="GNUTLS-CIPHER-RIJNDAEL-128-CBC:CAPS">GNUTLS_CIPHER_RIJNDAEL_128_CBC</link>
#define             <link linkend="GNUTLS-CIPHER-RIJNDAEL-256-CBC:CAPS">GNUTLS_CIPHER_RIJNDAEL_256_CBC</link>
#define             <link linkend="GNUTLS-CIPHER-RIJNDAEL-CBC:CAPS">GNUTLS_CIPHER_RIJNDAEL_CBC</link>
#define             <link linkend="GNUTLS-CIPHER-ARCFOUR:CAPS">GNUTLS_CIPHER_ARCFOUR</link>
enum                <link linkend="gnutls-cipher-algorithm-t">gnutls_cipher_algorithm_t</link>;
enum                <link linkend="gnutls-kx-algorithm-t">gnutls_kx_algorithm_t</link>;
enum                <link linkend="gnutls-params-type-t">gnutls_params_type_t</link>;
enum                <link linkend="gnutls-credentials-type-t">gnutls_credentials_type_t</link>;
#define             <link linkend="GNUTLS-MAC-SHA:CAPS">GNUTLS_MAC_SHA</link>
#define             <link linkend="GNUTLS-DIG-SHA:CAPS">GNUTLS_DIG_SHA</link>
enum                <link linkend="gnutls-mac-algorithm-t">gnutls_mac_algorithm_t</link>;
enum                <link linkend="gnutls-digest-algorithm-t">gnutls_digest_algorithm_t</link>;
#define             <link linkend="GNUTLS-MAX-ALGORITHM-NUM:CAPS">GNUTLS_MAX_ALGORITHM_NUM</link>
#define             <link linkend="GNUTLS-COMP-ZLIB:CAPS">GNUTLS_COMP_ZLIB</link>
enum                <link linkend="gnutls-compression-method-t">gnutls_compression_method_t</link>;
enum                <link linkend="gnutls-connection-end-t">gnutls_connection_end_t</link>;
enum                <link linkend="gnutls-alert-level-t">gnutls_alert_level_t</link>;
enum                <link linkend="gnutls-alert-description-t">gnutls_alert_description_t</link>;
enum                <link linkend="gnutls-handshake-description-t">gnutls_handshake_description_t</link>;
enum                <link linkend="gnutls-certificate-status-t">gnutls_certificate_status_t</link>;
enum                <link linkend="gnutls-certificate-request-t">gnutls_certificate_request_t</link>;
enum                <link linkend="gnutls-openpgp-crt-status-t">gnutls_openpgp_crt_status_t</link>;
enum                <link linkend="gnutls-close-request-t">gnutls_close_request_t</link>;
#define             <link linkend="GNUTLS-TLS1:CAPS">GNUTLS_TLS1</link>
enum                <link linkend="gnutls-protocol-t">gnutls_protocol_t</link>;
enum                <link linkend="gnutls-certificate-type-t">gnutls_certificate_type_t</link>;
enum                <link linkend="gnutls-x509-crt-fmt-t">gnutls_x509_crt_fmt_t</link>;
enum                <link linkend="gnutls-certificate-print-formats-t">gnutls_certificate_print_formats_t</link>;
enum                <link linkend="gnutls-pk-algorithm-t">gnutls_pk_algorithm_t</link>;
const <link linkend="char"><returnvalue>char</returnvalue></link> *        <link linkend="gnutls-pk-algorithm-get-name">gnutls_pk_algorithm_get_name</link>        (<parameter><link linkend="gnutls-pk-algorithm-t"><type>gnutls_pk_algorithm_t</type></link> algorithm</parameter>);
#define             <link linkend="GNUTLS-SIGN-RSA-SHA:CAPS">GNUTLS_SIGN_RSA_SHA</link>
#define             <link linkend="GNUTLS-SIGN-DSA-SHA:CAPS">GNUTLS_SIGN_DSA_SHA</link>
enum                <link linkend="gnutls-sign-algorithm-t">gnutls_sign_algorithm_t</link>;
const <link linkend="char"><returnvalue>char</returnvalue></link> *        <link linkend="gnutls-sign-algorithm-get-name">gnutls_sign_algorithm_get_name</link>      (<parameter><link linkend="gnutls-sign-algorithm-t"><type>gnutls_sign_algorithm_t</type></link> sign</parameter>);
typedef             <link linkend="gnutls-transport-ptr-t">gnutls_transport_ptr_t</link>;
struct              <link linkend="gnutls-session-int">gnutls_session_int</link>;
typedef             <link linkend="gnutls-session-t">gnutls_session_t</link>;
struct              <link linkend="gnutls-dh-params-int">gnutls_dh_params_int</link>;
typedef             <link linkend="gnutls-dh-params-t">gnutls_dh_params_t</link>;
struct              <link linkend="gnutls-x509-privkey-int">gnutls_x509_privkey_int</link>;
typedef             <link linkend="gnutls-rsa-params-t">gnutls_rsa_params_t</link>;
struct              <link linkend="gnutls-priority-st">gnutls_priority_st</link>;
typedef             <link linkend="gnutls-priority-t">gnutls_priority_t</link>;
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="gnutls-init">gnutls_init</link>                         (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> *session</parameter>,
                                                         <parameter><link linkend="gnutls-connection-end-t"><type>gnutls_connection_end_t</type></link> con_end</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="gnutls-deinit">gnutls_deinit</link>                       (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="gnutls-bye">gnutls_bye</link>                          (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter><link linkend="gnutls-close-request-t"><type>gnutls_close_request_t</type></link> how</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="gnutls-handshake">gnutls_handshake</link>                    (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="gnutls-rehandshake">gnutls_rehandshake</link>                  (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>);
<link linkend="gnutls-alert-description-t"><returnvalue>gnutls_alert_description_t</returnvalue></link>  <link linkend="gnutls-alert-get">gnutls_alert_get</link>            (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="gnutls-alert-send">gnutls_alert_send</link>                   (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter><link linkend="gnutls-alert-level-t"><type>gnutls_alert_level_t</type></link> level</parameter>,
                                                         <parameter><link linkend="gnutls-alert-description-t"><type>gnutls_alert_description_t</type></link> desc</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="gnutls-alert-send-appropriate">gnutls_alert_send_appropriate</link>       (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter><link linkend="int"><type>int</type></link> err</parameter>);
const <link linkend="char"><returnvalue>char</returnvalue></link> *        <link linkend="gnutls-alert-get-name">gnutls_alert_get_name</link>               (<parameter><link linkend="gnutls-alert-description-t"><type>gnutls_alert_description_t</type></link> alert</parameter>);
<link linkend="gnutls-cipher-algorithm-t"><returnvalue>gnutls_cipher_algorithm_t</returnvalue></link>  <link linkend="gnutls-cipher-get">gnutls_cipher_get</link>            (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>);
<link linkend="gnutls-kx-algorithm-t"><returnvalue>gnutls_kx_algorithm_t</returnvalue></link>  <link linkend="gnutls-kx-get">gnutls_kx_get</link>                    (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>);
<link linkend="gnutls-mac-algorithm-t"><returnvalue>gnutls_mac_algorithm_t</returnvalue></link>  <link linkend="gnutls-mac-get">gnutls_mac_get</link>                  (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>);
<link linkend="gnutls-compression-method-t"><returnvalue>gnutls_compression_method_t</returnvalue></link>  <link linkend="gnutls-compression-get">gnutls_compression_get</link>     (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>);
<link linkend="gnutls-certificate-type-t"><returnvalue>gnutls_certificate_type_t</returnvalue></link>  <link linkend="gnutls-certificate-type-get">gnutls_certificate_type_get</link>  (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>);
<link linkend="size-t"><returnvalue>size_t</returnvalue></link>              <link linkend="gnutls-cipher-get-key-size">gnutls_cipher_get_key_size</link>          (<parameter><link linkend="gnutls-cipher-algorithm-t"><type>gnutls_cipher_algorithm_t</type></link> algorithm</parameter>);
<link linkend="size-t"><returnvalue>size_t</returnvalue></link>              <link linkend="gnutls-mac-get-key-size">gnutls_mac_get_key_size</link>             (<parameter><link linkend="gnutls-mac-algorithm-t"><type>gnutls_mac_algorithm_t</type></link> algorithm</parameter>);
const <link linkend="char"><returnvalue>char</returnvalue></link> *        <link linkend="gnutls-cipher-get-name">gnutls_cipher_get_name</link>              (<parameter><link linkend="gnutls-cipher-algorithm-t"><type>gnutls_cipher_algorithm_t</type></link> algorithm</parameter>);
const <link linkend="char"><returnvalue>char</returnvalue></link> *        <link linkend="gnutls-mac-get-name">gnutls_mac_get_name</link>                 (<parameter><link linkend="gnutls-mac-algorithm-t"><type>gnutls_mac_algorithm_t</type></link> algorithm</parameter>);
const <link linkend="char"><returnvalue>char</returnvalue></link> *        <link linkend="gnutls-compression-get-name">gnutls_compression_get_name</link>         (<parameter><link linkend="gnutls-compression-method-t"><type>gnutls_compression_method_t</type></link> algorithm</parameter>);
const <link linkend="char"><returnvalue>char</returnvalue></link> *        <link linkend="gnutls-kx-get-name">gnutls_kx_get_name</link>                  (<parameter><link linkend="gnutls-kx-algorithm-t"><type>gnutls_kx_algorithm_t</type></link> algorithm</parameter>);
const <link linkend="char"><returnvalue>char</returnvalue></link> *        <link linkend="gnutls-certificate-type-get-name">gnutls_certificate_type_get_name</link>    (<parameter><link linkend="gnutls-certificate-type-t"><type>gnutls_certificate_type_t</type></link> type</parameter>);
const <link linkend="char"><returnvalue>char</returnvalue></link> *        <link linkend="gnutls-pk-get-name">gnutls_pk_get_name</link>                  (<parameter><link linkend="gnutls-pk-algorithm-t"><type>gnutls_pk_algorithm_t</type></link> algorithm</parameter>);
const <link linkend="char"><returnvalue>char</returnvalue></link> *        <link linkend="gnutls-sign-get-name">gnutls_sign_get_name</link>                (<parameter><link linkend="gnutls-sign-algorithm-t"><type>gnutls_sign_algorithm_t</type></link> algorithm</parameter>);
<link linkend="gnutls-mac-algorithm-t"><returnvalue>gnutls_mac_algorithm_t</returnvalue></link>  <link linkend="gnutls-mac-get-id">gnutls_mac_get_id</link>               (<parameter>const <link linkend="char"><type>char</type></link> *name</parameter>);
<link linkend="gnutls-compression-method-t"><returnvalue>gnutls_compression_method_t</returnvalue></link>  <link linkend="gnutls-compression-get-id">gnutls_compression_get_id</link>  (<parameter>const <link linkend="char"><type>char</type></link> *name</parameter>);
<link linkend="gnutls-cipher-algorithm-t"><returnvalue>gnutls_cipher_algorithm_t</returnvalue></link>  <link linkend="gnutls-cipher-get-id">gnutls_cipher_get_id</link>         (<parameter>const <link linkend="char"><type>char</type></link> *name</parameter>);
<link linkend="gnutls-kx-algorithm-t"><returnvalue>gnutls_kx_algorithm_t</returnvalue></link>  <link linkend="gnutls-kx-get-id">gnutls_kx_get_id</link>                 (<parameter>const <link linkend="char"><type>char</type></link> *name</parameter>);
<link linkend="gnutls-protocol-t"><returnvalue>gnutls_protocol_t</returnvalue></link>   <link linkend="gnutls-protocol-get-id">gnutls_protocol_get_id</link>              (<parameter>const <link linkend="char"><type>char</type></link> *name</parameter>);
<link linkend="gnutls-certificate-type-t"><returnvalue>gnutls_certificate_type_t</returnvalue></link>  <link linkend="gnutls-certificate-type-get-id">gnutls_certificate_type_get_id</link>
                                                        (<parameter>const <link linkend="char"><type>char</type></link> *name</parameter>);
<link linkend="gnutls-pk-algorithm-t"><returnvalue>gnutls_pk_algorithm_t</returnvalue></link>  <link linkend="gnutls-pk-get-id">gnutls_pk_get_id</link>                 (<parameter>const <link linkend="char"><type>char</type></link> *name</parameter>);
<link linkend="gnutls-sign-algorithm-t"><returnvalue>gnutls_sign_algorithm_t</returnvalue></link>  <link linkend="gnutls-sign-get-id">gnutls_sign_get_id</link>             (<parameter>const <link linkend="char"><type>char</type></link> *name</parameter>);
const <link linkend="gnutls-cipher-algorithm-t"><returnvalue>gnutls_cipher_algorithm_t</returnvalue></link> * <link linkend="gnutls-cipher-list">gnutls_cipher_list</link>    (<parameter><type>void</type></parameter>);
const <link linkend="gnutls-mac-algorithm-t"><returnvalue>gnutls_mac_algorithm_t</returnvalue></link> * <link linkend="gnutls-mac-list">gnutls_mac_list</link>          (<parameter><type>void</type></parameter>);
const <link linkend="gnutls-compression-method-t"><returnvalue>gnutls_compression_method_t</returnvalue></link> * <link linkend="gnutls-compression-list">gnutls_compression_list</link>
                                                        (<parameter><type>void</type></parameter>);
const <link linkend="gnutls-protocol-t"><returnvalue>gnutls_protocol_t</returnvalue></link> * <link linkend="gnutls-protocol-list">gnutls_protocol_list</link>          (<parameter><type>void</type></parameter>);
const <link linkend="gnutls-certificate-type-t"><returnvalue>gnutls_certificate_type_t</returnvalue></link> * <link linkend="gnutls-certificate-type-list">gnutls_certificate_type_list</link>
                                                        (<parameter><type>void</type></parameter>);
const <link linkend="gnutls-kx-algorithm-t"><returnvalue>gnutls_kx_algorithm_t</returnvalue></link> * <link linkend="gnutls-kx-list">gnutls_kx_list</link>            (<parameter><type>void</type></parameter>);
const <link linkend="gnutls-pk-algorithm-t"><returnvalue>gnutls_pk_algorithm_t</returnvalue></link> * <link linkend="gnutls-pk-list">gnutls_pk_list</link>            (<parameter><type>void</type></parameter>);
const <link linkend="gnutls-sign-algorithm-t"><returnvalue>gnutls_sign_algorithm_t</returnvalue></link> * <link linkend="gnutls-sign-list">gnutls_sign_list</link>        (<parameter><type>void</type></parameter>);
const <link linkend="char"><returnvalue>char</returnvalue></link> *        <link linkend="gnutls-cipher-suite-info">gnutls_cipher_suite_info</link>            (<parameter><link linkend="size-t"><type>size_t</type></link> idx</parameter>,
                                                         <parameter><link linkend="char"><type>char</type></link> *cs_id</parameter>,
                                                         <parameter><link linkend="gnutls-kx-algorithm-t"><type>gnutls_kx_algorithm_t</type></link> *kx</parameter>,
                                                         <parameter><link linkend="gnutls-cipher-algorithm-t"><type>gnutls_cipher_algorithm_t</type></link> *cipher</parameter>,
                                                         <parameter><link linkend="gnutls-mac-algorithm-t"><type>gnutls_mac_algorithm_t</type></link> *mac</parameter>,
                                                         <parameter><link linkend="gnutls-protocol-t"><type>gnutls_protocol_t</type></link> *version</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="gnutls-error-is-fatal">gnutls_error_is_fatal</link>               (<parameter><link linkend="int"><type>int</type></link> error</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="gnutls-error-to-alert">gnutls_error_to_alert</link>               (<parameter><link linkend="int"><type>int</type></link> err</parameter>,
                                                         <parameter><link linkend="int"><type>int</type></link> *level</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="gnutls-perror">gnutls_perror</link>                       (<parameter><link linkend="int"><type>int</type></link> error</parameter>);
const <link linkend="char"><returnvalue>char</returnvalue></link> *        <link linkend="gnutls-strerror">gnutls_strerror</link>                     (<parameter><link linkend="int"><type>int</type></link> error</parameter>);
const <link linkend="char"><returnvalue>char</returnvalue></link> *        <link linkend="gnutls-strerror-name">gnutls_strerror_name</link>                (<parameter><link linkend="int"><type>int</type></link> error</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="gnutls-handshake-set-private-extensions">gnutls_handshake_set_private_extensions</link>
                                                        (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter><link linkend="int"><type>int</type></link> allow</parameter>);
<link linkend="gnutls-handshake-description-t"><returnvalue>gnutls_handshake_description_t</returnvalue></link>  <link linkend="gnutls-handshake-get-last-out">gnutls_handshake_get_last_out</link>
                                                        (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>);
<link linkend="gnutls-handshake-description-t"><returnvalue>gnutls_handshake_description_t</returnvalue></link>  <link linkend="gnutls-handshake-get-last-in">gnutls_handshake_get_last_in</link>
                                                        (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>);
<link linkend="ssize-t"><returnvalue>ssize_t</returnvalue></link>             <link linkend="gnutls-record-send">gnutls_record_send</link>                  (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter>const <link linkend="void"><type>void</type></link> *data</parameter>,
                                                         <parameter><link linkend="size-t"><type>size_t</type></link> sizeofdata</parameter>);
<link linkend="ssize-t"><returnvalue>ssize_t</returnvalue></link>             <link linkend="gnutls-record-recv">gnutls_record_recv</link>                  (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter><link linkend="void"><type>void</type></link> *data</parameter>,
                                                         <parameter><link linkend="size-t"><type>size_t</type></link> sizeofdata</parameter>);
#define             <link linkend="gnutls-read">gnutls_read</link>
#define             <link linkend="gnutls-write">gnutls_write</link>
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="gnutls-session-enable-compatibility-mode">gnutls_session_enable_compatibility_mode</link>
                                                        (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="gnutls-record-disable-padding">gnutls_record_disable_padding</link>       (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="gnutls-record-get-direction">gnutls_record_get_direction</link>         (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>);
<link linkend="size-t"><returnvalue>size_t</returnvalue></link>              <link linkend="gnutls-record-get-max-size">gnutls_record_get_max_size</link>          (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>);
<link linkend="ssize-t"><returnvalue>ssize_t</returnvalue></link>             <link linkend="gnutls-record-set-max-size">gnutls_record_set_max_size</link>          (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter><link linkend="size-t"><type>size_t</type></link> size</parameter>);
<link linkend="size-t"><returnvalue>size_t</returnvalue></link>              <link linkend="gnutls-record-check-pending">gnutls_record_check_pending</link>         (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="gnutls-prf">gnutls_prf</link>                          (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter><link linkend="size-t"><type>size_t</type></link> label_size</parameter>,
                                                         <parameter>const <link linkend="char"><type>char</type></link> *label</parameter>,
                                                         <parameter><link linkend="int"><type>int</type></link> server_random_first</parameter>,
                                                         <parameter><link linkend="size-t"><type>size_t</type></link> extra_size</parameter>,
                                                         <parameter>const <link linkend="char"><type>char</type></link> *extra</parameter>,
                                                         <parameter><link linkend="size-t"><type>size_t</type></link> outsize</parameter>,
                                                         <parameter><link linkend="char"><type>char</type></link> *out</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="gnutls-prf-raw">gnutls_prf_raw</link>                      (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter><link linkend="size-t"><type>size_t</type></link> label_size</parameter>,
                                                         <parameter>const <link linkend="char"><type>char</type></link> *label</parameter>,
                                                         <parameter><link linkend="size-t"><type>size_t</type></link> seed_size</parameter>,
                                                         <parameter>const <link linkend="char"><type>char</type></link> *seed</parameter>,
                                                         <parameter><link linkend="size-t"><type>size_t</type></link> outsize</parameter>,
                                                         <parameter><link linkend="char"><type>char</type></link> *out</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 (<link linkend="gnutls-ext-recv-func">*gnutls_ext_recv_func</link>)             (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter>unsigned <link linkend="char"><type>char</type></link> *data</parameter>,
                                                         <parameter><link linkend="size-t"><type>size_t</type></link> len</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 (<link linkend="gnutls-ext-send-func">*gnutls_ext_send_func</link>)             (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter>unsigned <link linkend="char"><type>char</type></link> *data</parameter>,
                                                         <parameter><link linkend="size-t"><type>size_t</type></link> len</parameter>);
enum                <link linkend="gnutls-ext-parse-type-t">gnutls_ext_parse_type_t</link>;
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="gnutls-ext-register">gnutls_ext_register</link>                 (<parameter><link linkend="int"><type>int</type></link> type</parameter>,
                                                         <parameter>const <link linkend="char"><type>char</type></link> *name</parameter>,
                                                         <parameter><link linkend="gnutls-ext-parse-type-t"><type>gnutls_ext_parse_type_t</type></link> parse_type</parameter>,
                                                         <parameter><link linkend="gnutls-ext-recv-func"><type>gnutls_ext_recv_func</type></link> recv_func</parameter>,
                                                         <parameter><link linkend="gnutls-ext-send-func"><type>gnutls_ext_send_func</type></link> send_func</parameter>);
enum                <link linkend="gnutls-server-name-type-t">gnutls_server_name_type_t</link>;
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="gnutls-server-name-set">gnutls_server_name_set</link>              (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter><link linkend="gnutls-server-name-type-t"><type>gnutls_server_name_type_t</type></link> type</parameter>,
                                                         <parameter>const <link linkend="void"><type>void</type></link> *name</parameter>,
                                                         <parameter><link linkend="size-t"><type>size_t</type></link> name_length</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="gnutls-server-name-get">gnutls_server_name_get</link>              (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter><link linkend="void"><type>void</type></link> *data</parameter>,
                                                         <parameter><link linkend="size-t"><type>size_t</type></link> *data_length</parameter>,
                                                         <parameter>unsigned <link linkend="int"><type>int</type></link> *type</parameter>,
                                                         <parameter>unsigned <link linkend="int"><type>int</type></link> indx</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="gnutls-oprfi-enable-client">gnutls_oprfi_enable_client</link>          (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter><link linkend="size-t"><type>size_t</type></link> len</parameter>,
                                                         <parameter>unsigned <link linkend="char"><type>char</type></link> *data</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 (<link linkend="gnutls-oprfi-callback-func">*gnutls_oprfi_callback_func</link>)       (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter><link linkend="void"><type>void</type></link> *userdata</parameter>,
                                                         <parameter><link linkend="size-t"><type>size_t</type></link> oprfi_len</parameter>,
                                                         <parameter>unsigned <link linkend="char"><type>char</type></link> *in_oprfi</parameter>,
                                                         <parameter>unsigned <link linkend="char"><type>char</type></link> *out_oprfi</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="gnutls-oprfi-enable-server">gnutls_oprfi_enable_server</link>          (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter><link linkend="gnutls-oprfi-callback-func"><type>gnutls_oprfi_callback_func</type></link> cb</parameter>,
                                                         <parameter><link linkend="void"><type>void</type></link> *userdata</parameter>);
enum                <link linkend="gnutls-supplemental-data-format-type-t">gnutls_supplemental_data_format_type_t</link>;
const <link linkend="char"><returnvalue>char</returnvalue></link> *        <link linkend="gnutls-supplemental-get-name">gnutls_supplemental_get_name</link>        (<parameter><link linkend="gnutls-supplemental-data-format-type-t"><type>gnutls_supplemental_data_format_type_t</type></link> type</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="gnutls-cipher-set-priority">gnutls_cipher_set_priority</link>          (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter>const <link linkend="int"><type>int</type></link> *list</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="gnutls-mac-set-priority">gnutls_mac_set_priority</link>             (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter>const <link linkend="int"><type>int</type></link> *list</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="gnutls-compression-set-priority">gnutls_compression_set_priority</link>     (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter>const <link linkend="int"><type>int</type></link> *list</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="gnutls-kx-set-priority">gnutls_kx_set_priority</link>              (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter>const <link linkend="int"><type>int</type></link> *list</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="gnutls-protocol-set-priority">gnutls_protocol_set_priority</link>        (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter>const <link linkend="int"><type>int</type></link> *list</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="gnutls-certificate-type-set-priority">gnutls_certificate_type_set_priority</link>
                                                        (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter>const <link linkend="int"><type>int</type></link> *list</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="gnutls-priority-init">gnutls_priority_init</link>                (<parameter><link linkend="gnutls-priority-t"><type>gnutls_priority_t</type></link> *priority_cache</parameter>,
                                                         <parameter>const <link linkend="char"><type>char</type></link> *priorities</parameter>,
                                                         <parameter>const <link linkend="char"><type>char</type></link> **err_pos</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="gnutls-priority-deinit">gnutls_priority_deinit</link>              (<parameter><link linkend="gnutls-priority-t"><type>gnutls_priority_t</type></link> priority_cache</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="gnutls-priority-set">gnutls_priority_set</link>                 (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter><link linkend="gnutls-priority-t"><type>gnutls_priority_t</type></link> priority</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="gnutls-priority-set-direct">gnutls_priority_set_direct</link>          (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter>const <link linkend="char"><type>char</type></link> *priorities</parameter>,
                                                         <parameter>const <link linkend="char"><type>char</type></link> **err_pos</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="gnutls-set-default-priority">gnutls_set_default_priority</link>         (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="gnutls-set-default-export-priority">gnutls_set_default_export_priority</link>  (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>);
const <link linkend="char"><returnvalue>char</returnvalue></link> *        <link linkend="gnutls-cipher-suite-get-name">gnutls_cipher_suite_get_name</link>        (<parameter><link linkend="gnutls-kx-algorithm-t"><type>gnutls_kx_algorithm_t</type></link> kx_algorithm</parameter>,
                                                         <parameter><link linkend="gnutls-cipher-algorithm-t"><type>gnutls_cipher_algorithm_t</type></link> cipher_algorithm</parameter>,
                                                         <parameter><link linkend="gnutls-mac-algorithm-t"><type>gnutls_mac_algorithm_t</type></link> mac_algorithm</parameter>);
<link linkend="gnutls-protocol-t"><returnvalue>gnutls_protocol_t</returnvalue></link>   <link linkend="gnutls-protocol-get-version">gnutls_protocol_get_version</link>         (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>);
const <link linkend="char"><returnvalue>char</returnvalue></link> *        <link linkend="gnutls-protocol-get-name">gnutls_protocol_get_name</link>            (<parameter><link linkend="gnutls-protocol-t"><type>gnutls_protocol_t</type></link> version</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="gnutls-session-set-data">gnutls_session_set_data</link>             (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter>const <link linkend="void"><type>void</type></link> *session_data</parameter>,
                                                         <parameter><link linkend="size-t"><type>size_t</type></link> session_data_size</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="gnutls-session-get-data">gnutls_session_get_data</link>             (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter><link linkend="void"><type>void</type></link> *session_data</parameter>,
                                                         <parameter><link linkend="size-t"><type>size_t</type></link> *session_data_size</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="gnutls-session-get-data2">gnutls_session_get_data2</link>            (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter><link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> *data</parameter>);
#define             <link linkend="GNUTLS-MAX-SESSION-ID:CAPS">GNUTLS_MAX_SESSION_ID</link>
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="gnutls-session-get-id">gnutls_session_get_id</link>               (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter><link linkend="void"><type>void</type></link> *session_id</parameter>,
                                                         <parameter><link linkend="size-t"><type>size_t</type></link> *session_id_size</parameter>);
#define             <link linkend="GNUTLS-MASTER-SIZE:CAPS">GNUTLS_MASTER_SIZE</link>
#define             <link linkend="GNUTLS-RANDOM-SIZE:CAPS">GNUTLS_RANDOM_SIZE</link>
const <link linkend="void"><returnvalue>void</returnvalue></link> *        <link linkend="gnutls-session-get-server-random">gnutls_session_get_server_random</link>    (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>);
const <link linkend="void"><returnvalue>void</returnvalue></link> *        <link linkend="gnutls-session-get-client-random">gnutls_session_get_client_random</link>    (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>);
const <link linkend="void"><returnvalue>void</returnvalue></link> *        <link linkend="gnutls-session-get-master-secret">gnutls_session_get_master_secret</link>    (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                (<link linkend="gnutls-finished-callback-func">*gnutls_finished_callback_func</link>)    (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter>const <link linkend="void"><type>void</type></link> *finished</parameter>,
                                                         <parameter><link linkend="size-t"><type>size_t</type></link> len</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="gnutls-session-set-finished-function">gnutls_session_set_finished_function</link>
                                                        (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter><link linkend="gnutls-finished-callback-func"><type>gnutls_finished_callback_func</type></link> func</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="gnutls-session-is-resumed">gnutls_session_is_resumed</link>           (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 (<link linkend="gnutls-db-store-func">*gnutls_db_store_func</link>)             (<parameter><link linkend="void"><type>void</type></link> *Param1</parameter>,
                                                         <parameter><link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> key</parameter>,
                                                         <parameter><link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> data</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 (<link linkend="gnutls-db-remove-func">*gnutls_db_remove_func</link>)            (<parameter><link linkend="void"><type>void</type></link> *Param1</parameter>,
                                                         <parameter><link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> key</parameter>);
<link linkend="gnutls-datum-t"><returnvalue>gnutls_datum_t</returnvalue></link>      (<link linkend="gnutls-db-retr-func">*gnutls_db_retr_func</link>)              (<parameter><link linkend="void"><type>void</type></link> *Param1</parameter>,
                                                         <parameter><link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> key</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="gnutls-db-set-cache-expiration">gnutls_db_set_cache_expiration</link>      (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter><link linkend="int"><type>int</type></link> seconds</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="gnutls-db-remove-session">gnutls_db_remove_session</link>            (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="gnutls-db-set-retrieve-function">gnutls_db_set_retrieve_function</link>     (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter><link linkend="gnutls-db-retr-func"><type>gnutls_db_retr_func</type></link> retr_func</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="gnutls-db-set-remove-function">gnutls_db_set_remove_function</link>       (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter><link linkend="gnutls-db-remove-func"><type>gnutls_db_remove_func</type></link> rem_func</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="gnutls-db-set-store-function">gnutls_db_set_store_function</link>        (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter><link linkend="gnutls-db-store-func"><type>gnutls_db_store_func</type></link> store_func</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="gnutls-db-set-ptr">gnutls_db_set_ptr</link>                   (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter><link linkend="void"><type>void</type></link> *ptr</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link> *              <link linkend="gnutls-db-get-ptr">gnutls_db_get_ptr</link>                   (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="gnutls-db-check-entry">gnutls_db_check_entry</link>               (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter><link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> session_entry</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 (<link linkend="gnutls-handshake-post-client-hello-func">*gnutls_handshake_post_client_hello_func</link>)
                                                        (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> Param1</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="gnutls-handshake-set-post-client-hello-function">gnutls_handshake_set_post_client_hello_function</link>
                                                        (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter><link linkend="gnutls-handshake-post-client-hello-func"><type>gnutls_handshake_post_client_hello_func</type></link> func</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="gnutls-handshake-set-max-packet-length">gnutls_handshake_set_max_packet_length</link>
                                                        (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter><link linkend="size-t"><type>size_t</type></link> max</parameter>);
const <link linkend="char"><returnvalue>char</returnvalue></link> *        <link linkend="gnutls-check-version">gnutls_check_version</link>                (<parameter>const <link linkend="char"><type>char</type></link> *req_version</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="gnutls-credentials-clear">gnutls_credentials_clear</link>            (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="gnutls-credentials-set">gnutls_credentials_set</link>              (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter><link linkend="gnutls-credentials-type-t"><type>gnutls_credentials_type_t</type></link> type</parameter>,
                                                         <parameter><link linkend="void"><type>void</type></link> *cred</parameter>);
#define             <link linkend="gnutls-cred-set">gnutls_cred_set</link>
struct              <link linkend="gnutls-certificate-credentials-st">gnutls_certificate_credentials_st</link>;
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="gnutls-anon-free-server-credentials">gnutls_anon_free_server_credentials</link> (<parameter><link linkend="gnutls-anon-server-credentials-t"><type>gnutls_anon_server_credentials_t</type></link> sc</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="gnutls-anon-allocate-server-credentials">gnutls_anon_allocate_server_credentials</link>
                                                        (<parameter><link linkend="gnutls-anon-server-credentials-t"><type>gnutls_anon_server_credentials_t</type></link> *sc</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="gnutls-anon-set-server-dh-params">gnutls_anon_set_server_dh_params</link>    (<parameter><link linkend="gnutls-anon-server-credentials-t"><type>gnutls_anon_server_credentials_t</type></link> res</parameter>,
                                                         <parameter><link linkend="gnutls-dh-params-t"><type>gnutls_dh_params_t</type></link> dh_params</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="gnutls-anon-set-server-params-function">gnutls_anon_set_server_params_function</link>
                                                        (<parameter><link linkend="gnutls-anon-server-credentials-t"><type>gnutls_anon_server_credentials_t</type></link> res</parameter>,
                                                         <parameter><link linkend="gnutls-params-function"><type>gnutls_params_function</type></link> *func</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="gnutls-anon-free-client-credentials">gnutls_anon_free_client_credentials</link> (<parameter><link linkend="gnutls-anon-client-credentials-t"><type>gnutls_anon_client_credentials_t</type></link> sc</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="gnutls-anon-allocate-client-credentials">gnutls_anon_allocate_client_credentials</link>
                                                        (<parameter><link linkend="gnutls-anon-client-credentials-t"><type>gnutls_anon_client_credentials_t</type></link> *sc</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="gnutls-certificate-free-credentials">gnutls_certificate_free_credentials</link> (<parameter><link linkend="gnutls-certificate-credentials-t"><type>gnutls_certificate_credentials_t</type></link> sc</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="gnutls-certificate-allocate-credentials">gnutls_certificate_allocate_credentials</link>
                                                        (<parameter><link linkend="gnutls-certificate-credentials-t"><type>gnutls_certificate_credentials_t</type></link> *res</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="gnutls-certificate-free-keys">gnutls_certificate_free_keys</link>        (<parameter><link linkend="gnutls-certificate-credentials-t"><type>gnutls_certificate_credentials_t</type></link> sc</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="gnutls-certificate-free-cas">gnutls_certificate_free_cas</link>         (<parameter><link linkend="gnutls-certificate-credentials-t"><type>gnutls_certificate_credentials_t</type></link> sc</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="gnutls-certificate-free-ca-names">gnutls_certificate_free_ca_names</link>    (<parameter><link linkend="gnutls-certificate-credentials-t"><type>gnutls_certificate_credentials_t</type></link> sc</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="gnutls-certificate-free-crls">gnutls_certificate_free_crls</link>        (<parameter><link linkend="gnutls-certificate-credentials-t"><type>gnutls_certificate_credentials_t</type></link> sc</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="gnutls-certificate-set-dh-params">gnutls_certificate_set_dh_params</link>    (<parameter><link linkend="gnutls-certificate-credentials-t"><type>gnutls_certificate_credentials_t</type></link> res</parameter>,
                                                         <parameter><link linkend="gnutls-dh-params-t"><type>gnutls_dh_params_t</type></link> dh_params</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="gnutls-certificate-set-rsa-export-params">gnutls_certificate_set_rsa_export_params</link>
                                                        (<parameter><link linkend="gnutls-certificate-credentials-t"><type>gnutls_certificate_credentials_t</type></link> res</parameter>,
                                                         <parameter><link linkend="gnutls-rsa-params-t"><type>gnutls_rsa_params_t</type></link> rsa_params</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="gnutls-certificate-set-verify-flags">gnutls_certificate_set_verify_flags</link> (<parameter><link linkend="gnutls-certificate-credentials-t"><type>gnutls_certificate_credentials_t</type></link> res</parameter>,
                                                         <parameter>unsigned <link linkend="int"><type>int</type></link> flags</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="gnutls-certificate-set-verify-limits">gnutls_certificate_set_verify_limits</link>
                                                        (<parameter><link linkend="gnutls-certificate-credentials-t"><type>gnutls_certificate_credentials_t</type></link> res</parameter>,
                                                         <parameter>unsigned <link linkend="int"><type>int</type></link> max_bits</parameter>,
                                                         <parameter>unsigned <link linkend="int"><type>int</type></link> max_depth</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="gnutls-certificate-set-x509-trust-file">gnutls_certificate_set_x509_trust_file</link>
                                                        (<parameter><link linkend="gnutls-certificate-credentials-t"><type>gnutls_certificate_credentials_t</type></link> res</parameter>,
                                                         <parameter>const <link linkend="char"><type>char</type></link> *cafile</parameter>,
                                                         <parameter><link linkend="gnutls-x509-crt-fmt-t"><type>gnutls_x509_crt_fmt_t</type></link> type</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="gnutls-certificate-set-x509-trust-mem">gnutls_certificate_set_x509_trust_mem</link>
                                                        (<parameter><link linkend="gnutls-certificate-credentials-t"><type>gnutls_certificate_credentials_t</type></link> res</parameter>,
                                                         <parameter>const <link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> *ca</parameter>,
                                                         <parameter><link linkend="gnutls-x509-crt-fmt-t"><type>gnutls_x509_crt_fmt_t</type></link> type</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="gnutls-certificate-set-x509-crl-file">gnutls_certificate_set_x509_crl_file</link>
                                                        (<parameter><link linkend="gnutls-certificate-credentials-t"><type>gnutls_certificate_credentials_t</type></link> res</parameter>,
                                                         <parameter>const <link linkend="char"><type>char</type></link> *crlfile</parameter>,
                                                         <parameter><link linkend="gnutls-x509-crt-fmt-t"><type>gnutls_x509_crt_fmt_t</type></link> type</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="gnutls-certificate-set-x509-crl-mem">gnutls_certificate_set_x509_crl_mem</link> (<parameter><link linkend="gnutls-certificate-credentials-t"><type>gnutls_certificate_credentials_t</type></link> res</parameter>,
                                                         <parameter>const <link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> *CRL</parameter>,
                                                         <parameter><link linkend="gnutls-x509-crt-fmt-t"><type>gnutls_x509_crt_fmt_t</type></link> type</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="gnutls-certificate-set-x509-key-file">gnutls_certificate_set_x509_key_file</link>
                                                        (<parameter><link linkend="gnutls-certificate-credentials-t"><type>gnutls_certificate_credentials_t</type></link> res</parameter>,
                                                         <parameter>const <link linkend="char"><type>char</type></link> *certfile</parameter>,
                                                         <parameter>const <link linkend="char"><type>char</type></link> *keyfile</parameter>,
                                                         <parameter><link linkend="gnutls-x509-crt-fmt-t"><type>gnutls_x509_crt_fmt_t</type></link> type</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="gnutls-certificate-set-x509-key-mem">gnutls_certificate_set_x509_key_mem</link> (<parameter><link linkend="gnutls-certificate-credentials-t"><type>gnutls_certificate_credentials_t</type></link> res</parameter>,
                                                         <parameter>const <link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> *cert</parameter>,
                                                         <parameter>const <link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> *key</parameter>,
                                                         <parameter><link linkend="gnutls-x509-crt-fmt-t"><type>gnutls_x509_crt_fmt_t</type></link> type</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="gnutls-certificate-send-x509-rdn-sequence">gnutls_certificate_send_x509_rdn_sequence</link>
                                                        (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter><link linkend="int"><type>int</type></link> status</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="gnutls-certificate-set-x509-simple-pkcs12-file">gnutls_certificate_set_x509_simple_pkcs12_file</link>
                                                        (<parameter><link linkend="gnutls-certificate-credentials-t"><type>gnutls_certificate_credentials_t</type></link> res</parameter>,
                                                         <parameter>const <link linkend="char"><type>char</type></link> *pkcs12file</parameter>,
                                                         <parameter><link linkend="gnutls-x509-crt-fmt-t"><type>gnutls_x509_crt_fmt_t</type></link> type</parameter>,
                                                         <parameter>const <link linkend="char"><type>char</type></link> *password</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="gnutls-certificate-set-x509-simple-pkcs12-mem">gnutls_certificate_set_x509_simple_pkcs12_mem</link>
                                                        (<parameter><link linkend="gnutls-certificate-credentials-t"><type>gnutls_certificate_credentials_t</type></link> res</parameter>,
                                                         <parameter>const <link linkend="gnutls-datum"><type>gnutls_datum</type></link> *p12blob</parameter>,
                                                         <parameter><link linkend="gnutls-x509-crt-fmt-t"><type>gnutls_x509_crt_fmt_t</type></link> type</parameter>,
                                                         <parameter>const <link linkend="char"><type>char</type></link> *password</parameter>);
typedef             <link linkend="gnutls-x509-privkey-t">gnutls_x509_privkey_t</link>;
struct              <link linkend="gnutls-x509-crl-int">gnutls_x509_crl_int</link>;
typedef             <link linkend="gnutls-x509-crl-t">gnutls_x509_crl_t</link>;
struct              <link linkend="gnutls-x509-crt-int">gnutls_x509_crt_int</link>;
typedef             <link linkend="gnutls-x509-crt-t">gnutls_x509_crt_t</link>;
struct              <link linkend="gnutls-openpgp-keyring-int">gnutls_openpgp_keyring_int</link>;
typedef             <link linkend="gnutls-openpgp-keyring-t">gnutls_openpgp_keyring_t</link>;
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="gnutls-certificate-set-x509-key">gnutls_certificate_set_x509_key</link>     (<parameter><link linkend="gnutls-certificate-credentials-t"><type>gnutls_certificate_credentials_t</type></link> res</parameter>,
                                                         <parameter><link linkend="gnutls-x509-crt-t"><type>gnutls_x509_crt_t</type></link> *cert_list</parameter>,
                                                         <parameter><link linkend="int"><type>int</type></link> cert_list_size</parameter>,
                                                         <parameter><link linkend="gnutls-x509-privkey-t"><type>gnutls_x509_privkey_t</type></link> key</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="gnutls-certificate-set-x509-trust">gnutls_certificate_set_x509_trust</link>   (<parameter><link linkend="gnutls-certificate-credentials-t"><type>gnutls_certificate_credentials_t</type></link> res</parameter>,
                                                         <parameter><link linkend="gnutls-x509-crt-t"><type>gnutls_x509_crt_t</type></link> *ca_list</parameter>,
                                                         <parameter><link linkend="int"><type>int</type></link> ca_list_size</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="gnutls-certificate-set-x509-crl">gnutls_certificate_set_x509_crl</link>     (<parameter><link linkend="gnutls-certificate-credentials-t"><type>gnutls_certificate_credentials_t</type></link> res</parameter>,
                                                         <parameter><link linkend="gnutls-x509-crl-t"><type>gnutls_x509_crl_t</type></link> *crl_list</parameter>,
                                                         <parameter><link linkend="int"><type>int</type></link> crl_list_size</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="gnutls-certificate-get-x509-cas">gnutls_certificate_get_x509_cas</link>     (<parameter><link linkend="gnutls-certificate-credentials-t"><type>gnutls_certificate_credentials_t</type></link> sc</parameter>,
                                                         <parameter><link linkend="gnutls-x509-crt-t"><type>gnutls_x509_crt_t</type></link> **x509_ca_list</parameter>,
                                                         <parameter>unsigned <link linkend="int"><type>int</type></link> *ncas</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="gnutls-certificate-get-x509-crls">gnutls_certificate_get_x509_crls</link>    (<parameter><link linkend="gnutls-certificate-credentials-t"><type>gnutls_certificate_credentials_t</type></link> sc</parameter>,
                                                         <parameter><link linkend="gnutls-x509-crl-t"><type>gnutls_x509_crl_t</type></link> **x509_crl_list</parameter>,
                                                         <parameter>unsigned <link linkend="int"><type>int</type></link> *ncrls</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="gnutls-certificate-get-openpgp-keyring">gnutls_certificate_get_openpgp_keyring</link>
                                                        (<parameter><link linkend="gnutls-certificate-credentials-t"><type>gnutls_certificate_credentials_t</type></link> sc</parameter>,
                                                         <parameter><link linkend="gnutls-openpgp-keyring-t"><type>gnutls_openpgp_keyring_t</type></link> *keyring</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="gnutls-global-init">gnutls_global_init</link>                  (<parameter><type>void</type></parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="gnutls-global-deinit">gnutls_global_deinit</link>                (<parameter><type>void</type></parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link> *              (<link linkend="gnutls-alloc-function">*gnutls_alloc_function</link>)            (<parameter><link linkend="size-t"><type>size_t</type></link> Param1</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link> *              (<link linkend="gnutls-calloc-function">*gnutls_calloc_function</link>)           (<parameter><link linkend="size-t"><type>size_t</type></link> Param1</parameter>,
                                                         <parameter><link linkend="size-t"><type>size_t</type></link> Param2</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 (<link linkend="gnutls-is-secure-function">*gnutls_is_secure_function</link>)        (<parameter>const <link linkend="void"><type>void</type></link> *Param1</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                (<link linkend="gnutls-free-function">*gnutls_free_function</link>)             (<parameter><link linkend="void"><type>void</type></link> *Param1</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link> *              (<link linkend="gnutls-realloc-function">*gnutls_realloc_function</link>)          (<parameter><link linkend="void"><type>void</type></link> *Param1</parameter>,
                                                         <parameter><link linkend="size-t"><type>size_t</type></link> Param2</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="gnutls-global-set-mem-functions">gnutls_global_set_mem_functions</link>     (<parameter><link linkend="gnutls-alloc-function"><type>gnutls_alloc_function</type></link> alloc_func</parameter>,
                                                         <parameter><link linkend="gnutls-alloc-function"><type>gnutls_alloc_function</type></link> secure_alloc_func</parameter>,
                                                         <parameter><link linkend="gnutls-is-secure-function"><type>gnutls_is_secure_function</type></link> is_secure_func</parameter>,
                                                         <parameter><link linkend="gnutls-realloc-function"><type>gnutls_realloc_function</type></link> realloc_func</parameter>,
                                                         <parameter><link linkend="gnutls-free-function"><type>gnutls_free_function</type></link> free_func</parameter>);
extern              gnutls_alloc_function <link linkend="gnutls-malloc">gnutls_malloc</link>;
extern              gnutls_alloc_function <link linkend="gnutls-secure-malloc">gnutls_secure_malloc</link>;
extern              gnutls_realloc_function <link linkend="gnutls-realloc">gnutls_realloc</link>;
extern              gnutls_calloc_function <link linkend="gnutls-calloc">gnutls_calloc</link>;
extern              gnutls_free_function <link linkend="gnutls-free">gnutls_free</link>;
<link linkend="char"><returnvalue>char</returnvalue></link> *              (<link linkend="gnutls-strdup">*gnutls_strdup</link>)                    (<parameter>const <link linkend="char"><type>char</type></link> *Param1</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                (<link linkend="gnutls-log-func">*gnutls_log_func</link>)                  (<parameter>...</parameter>,
                                                         <parameter>const <link linkend="char"><type>char</type></link> *Param2</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="gnutls-global-set-log-function">gnutls_global_set_log_function</link>      (<parameter><link linkend="gnutls-log-func"><type>gnutls_log_func</type></link> log_func</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="gnutls-global-set-log-level">gnutls_global_set_log_level</link>         (<parameter><link linkend="int"><type>int</type></link> level</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="gnutls-dh-params-init">gnutls_dh_params_init</link>               (<parameter><link linkend="gnutls-dh-params-t"><type>gnutls_dh_params_t</type></link> *dh_params</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="gnutls-dh-params-deinit">gnutls_dh_params_deinit</link>             (<parameter><link linkend="gnutls-dh-params-t"><type>gnutls_dh_params_t</type></link> dh_params</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="gnutls-dh-params-import-raw">gnutls_dh_params_import_raw</link>         (<parameter><link linkend="gnutls-dh-params-t"><type>gnutls_dh_params_t</type></link> dh_params</parameter>,
                                                         <parameter>const <link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> *prime</parameter>,
                                                         <parameter>const <link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> *generator</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="gnutls-dh-params-import-pkcs3">gnutls_dh_params_import_pkcs3</link>       (<parameter><link linkend="gnutls-dh-params-t"><type>gnutls_dh_params_t</type></link> params</parameter>,
                                                         <parameter>const <link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> *pkcs3_params</parameter>,
                                                         <parameter><link linkend="gnutls-x509-crt-fmt-t"><type>gnutls_x509_crt_fmt_t</type></link> format</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="gnutls-dh-params-generate2">gnutls_dh_params_generate2</link>          (<parameter><link linkend="gnutls-dh-params-t"><type>gnutls_dh_params_t</type></link> params</parameter>,
                                                         <parameter>unsigned <link linkend="int"><type>int</type></link> bits</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="gnutls-dh-params-export-pkcs3">gnutls_dh_params_export_pkcs3</link>       (<parameter><link linkend="gnutls-dh-params-t"><type>gnutls_dh_params_t</type></link> params</parameter>,
                                                         <parameter><link linkend="gnutls-x509-crt-fmt-t"><type>gnutls_x509_crt_fmt_t</type></link> format</parameter>,
                                                         <parameter>unsigned <link linkend="char"><type>char</type></link> *params_data</parameter>,
                                                         <parameter><link linkend="size-t"><type>size_t</type></link> *params_data_size</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="gnutls-dh-params-export-raw">gnutls_dh_params_export_raw</link>         (<parameter><link linkend="gnutls-dh-params-t"><type>gnutls_dh_params_t</type></link> params</parameter>,
                                                         <parameter><link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> *prime</parameter>,
                                                         <parameter><link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> *generator</parameter>,
                                                         <parameter>unsigned <link linkend="int"><type>int</type></link> *bits</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="gnutls-dh-params-cpy">gnutls_dh_params_cpy</link>                (<parameter><link linkend="gnutls-dh-params-t"><type>gnutls_dh_params_t</type></link> dst</parameter>,
                                                         <parameter><link linkend="gnutls-dh-params-t"><type>gnutls_dh_params_t</type></link> src</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="gnutls-rsa-params-init">gnutls_rsa_params_init</link>              (<parameter><link linkend="gnutls-rsa-params-t"><type>gnutls_rsa_params_t</type></link> *rsa_params</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="gnutls-rsa-params-deinit">gnutls_rsa_params_deinit</link>            (<parameter><link linkend="gnutls-rsa-params-t"><type>gnutls_rsa_params_t</type></link> rsa_params</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="gnutls-rsa-params-cpy">gnutls_rsa_params_cpy</link>               (<parameter><link linkend="gnutls-rsa-params-t"><type>gnutls_rsa_params_t</type></link> dst</parameter>,
                                                         <parameter><link linkend="gnutls-rsa-params-t"><type>gnutls_rsa_params_t</type></link> src</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="gnutls-rsa-params-import-raw">gnutls_rsa_params_import_raw</link>        (<parameter><link linkend="gnutls-rsa-params-t"><type>gnutls_rsa_params_t</type></link> rsa_params</parameter>,
                                                         <parameter>const <link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> *m</parameter>,
                                                         <parameter>const <link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> *e</parameter>,
                                                         <parameter>const <link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> *d</parameter>,
                                                         <parameter>const <link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> *p</parameter>,
                                                         <parameter>const <link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> *q</parameter>,
                                                         <parameter>const <link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> *u</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="gnutls-rsa-params-generate2">gnutls_rsa_params_generate2</link>         (<parameter><link linkend="gnutls-rsa-params-t"><type>gnutls_rsa_params_t</type></link> params</parameter>,
                                                         <parameter>unsigned <link linkend="int"><type>int</type></link> bits</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="gnutls-rsa-params-export-raw">gnutls_rsa_params_export_raw</link>        (<parameter><link linkend="gnutls-rsa-params-t"><type>gnutls_rsa_params_t</type></link> params</parameter>,
                                                         <parameter><link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> *m</parameter>,
                                                         <parameter><link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> *e</parameter>,
                                                         <parameter><link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> *d</parameter>,
                                                         <parameter><link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> *p</parameter>,
                                                         <parameter><link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> *q</parameter>,
                                                         <parameter><link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> *u</parameter>,
                                                         <parameter>unsigned <link linkend="int"><type>int</type></link> *bits</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="gnutls-rsa-params-export-pkcs1">gnutls_rsa_params_export_pkcs1</link>      (<parameter><link linkend="gnutls-rsa-params-t"><type>gnutls_rsa_params_t</type></link> params</parameter>,
                                                         <parameter><link linkend="gnutls-x509-crt-fmt-t"><type>gnutls_x509_crt_fmt_t</type></link> format</parameter>,
                                                         <parameter>unsigned <link linkend="char"><type>char</type></link> *params_data</parameter>,
                                                         <parameter><link linkend="size-t"><type>size_t</type></link> *params_data_size</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="gnutls-rsa-params-import-pkcs1">gnutls_rsa_params_import_pkcs1</link>      (<parameter><link linkend="gnutls-rsa-params-t"><type>gnutls_rsa_params_t</type></link> params</parameter>,
                                                         <parameter>const <link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> *pkcs1_params</parameter>,
                                                         <parameter><link linkend="gnutls-x509-crt-fmt-t"><type>gnutls_x509_crt_fmt_t</type></link> format</parameter>);
<link linkend="ssize-t"><returnvalue>ssize_t</returnvalue></link>             (<link linkend="gnutls-pull-func">*gnutls_pull_func</link>)                 (<parameter><link linkend="gnutls-transport-ptr-t"><type>gnutls_transport_ptr_t</type></link> Param1</parameter>,
                                                         <parameter><link linkend="void"><type>void</type></link> *Param2</parameter>,
                                                         <parameter><link linkend="size-t"><type>size_t</type></link> Param3</parameter>);
<link linkend="ssize-t"><returnvalue>ssize_t</returnvalue></link>             (<link linkend="gnutls-push-func">*gnutls_push_func</link>)                 (<parameter><link linkend="gnutls-transport-ptr-t"><type>gnutls_transport_ptr_t</type></link> Param1</parameter>,
                                                         <parameter>const <link linkend="void"><type>void</type></link> *Param2</parameter>,
                                                         <parameter><link linkend="size-t"><type>size_t</type></link> Param3</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="gnutls-transport-set-ptr">gnutls_transport_set_ptr</link>            (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter><link linkend="gnutls-transport-ptr-t"><type>gnutls_transport_ptr_t</type></link> ptr</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="gnutls-transport-set-ptr2">gnutls_transport_set_ptr2</link>           (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter><link linkend="gnutls-transport-ptr-t"><type>gnutls_transport_ptr_t</type></link> recv_ptr</parameter>,
                                                         <parameter><link linkend="gnutls-transport-ptr-t"><type>gnutls_transport_ptr_t</type></link> send_ptr</parameter>);
<link linkend="gnutls-transport-ptr-t"><returnvalue>gnutls_transport_ptr_t</returnvalue></link>  <link linkend="gnutls-transport-get-ptr">gnutls_transport_get_ptr</link>        (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="gnutls-transport-get-ptr2">gnutls_transport_get_ptr2</link>           (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter><link linkend="gnutls-transport-ptr-t"><type>gnutls_transport_ptr_t</type></link> *recv_ptr</parameter>,
                                                         <parameter><link linkend="gnutls-transport-ptr-t"><type>gnutls_transport_ptr_t</type></link> *send_ptr</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="gnutls-transport-set-lowat">gnutls_transport_set_lowat</link>          (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter><link linkend="int"><type>int</type></link> num</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="gnutls-transport-set-push-function">gnutls_transport_set_push_function</link>  (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter><link linkend="gnutls-push-func"><type>gnutls_push_func</type></link> push_func</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="gnutls-transport-set-pull-function">gnutls_transport_set_pull_function</link>  (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter><link linkend="gnutls-pull-func"><type>gnutls_pull_func</type></link> pull_func</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="gnutls-transport-set-errno">gnutls_transport_set_errno</link>          (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter><link linkend="int"><type>int</type></link> err</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="gnutls-transport-set-global-errno">gnutls_transport_set_global_errno</link>   (<parameter><link linkend="int"><type>int</type></link> err</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="gnutls-session-set-ptr">gnutls_session_set_ptr</link>              (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter><link linkend="void"><type>void</type></link> *ptr</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link> *              <link linkend="gnutls-session-get-ptr">gnutls_session_get_ptr</link>              (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="gnutls-openpgp-send-cert">gnutls_openpgp_send_cert</link>            (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter><link linkend="gnutls-openpgp-crt-status-t"><type>gnutls_openpgp_crt_status_t</type></link> status</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="gnutls-fingerprint">gnutls_fingerprint</link>                  (<parameter><link linkend="gnutls-digest-algorithm-t"><type>gnutls_digest_algorithm_t</type></link> algo</parameter>,
                                                         <parameter>const <link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> *data</parameter>,
                                                         <parameter><link linkend="void"><type>void</type></link> *result</parameter>,
                                                         <parameter><link linkend="size-t"><type>size_t</type></link> *result_size</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="gnutls-srp-free-client-credentials">gnutls_srp_free_client_credentials</link>  (<parameter><link linkend="gnutls-srp-client-credentials-t"><type>gnutls_srp_client_credentials_t</type></link> sc</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="gnutls-srp-allocate-client-credentials">gnutls_srp_allocate_client_credentials</link>
                                                        (<parameter><link linkend="gnutls-srp-client-credentials-t"><type>gnutls_srp_client_credentials_t</type></link> *sc</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="gnutls-srp-set-client-credentials">gnutls_srp_set_client_credentials</link>   (<parameter><link linkend="gnutls-srp-client-credentials-t"><type>gnutls_srp_client_credentials_t</type></link> res</parameter>,
                                                         <parameter>const <link linkend="char"><type>char</type></link> *username</parameter>,
                                                         <parameter>const <link linkend="char"><type>char</type></link> *password</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="gnutls-srp-free-server-credentials">gnutls_srp_free_server_credentials</link>  (<parameter><link linkend="gnutls-srp-server-credentials-t"><type>gnutls_srp_server_credentials_t</type></link> sc</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="gnutls-srp-allocate-server-credentials">gnutls_srp_allocate_server_credentials</link>
                                                        (<parameter><link linkend="gnutls-srp-server-credentials-t"><type>gnutls_srp_server_credentials_t</type></link> *sc</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="gnutls-srp-set-server-credentials-file">gnutls_srp_set_server_credentials_file</link>
                                                        (<parameter><link linkend="gnutls-srp-server-credentials-t"><type>gnutls_srp_server_credentials_t</type></link> res</parameter>,
                                                         <parameter>const <link linkend="char"><type>char</type></link> *password_file</parameter>,
                                                         <parameter>const <link linkend="char"><type>char</type></link> *password_conf_file</parameter>);
const <link linkend="char"><returnvalue>char</returnvalue></link> *        <link linkend="gnutls-srp-server-get-username">gnutls_srp_server_get_username</link>      (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="gnutls-srp-set-prime-bits">gnutls_srp_set_prime_bits</link>           (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter>unsigned <link linkend="int"><type>int</type></link> bits</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="gnutls-srp-verifier">gnutls_srp_verifier</link>                 (<parameter>const <link linkend="char"><type>char</type></link> *username</parameter>,
                                                         <parameter>const <link linkend="char"><type>char</type></link> *password</parameter>,
                                                         <parameter>const <link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> *salt</parameter>,
                                                         <parameter>const <link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> *generator</parameter>,
                                                         <parameter>const <link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> *prime</parameter>,
                                                         <parameter><link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> *res</parameter>);
extern              const gnutls_datum_t <link linkend="gnutls-srp-2048-group-prime">gnutls_srp_2048_group_prime</link>;
extern              const gnutls_datum_t <link linkend="gnutls-srp-2048-group-generator">gnutls_srp_2048_group_generator</link>;
extern              const gnutls_datum_t <link linkend="gnutls-srp-1536-group-prime">gnutls_srp_1536_group_prime</link>;
extern              const gnutls_datum_t <link linkend="gnutls-srp-1536-group-generator">gnutls_srp_1536_group_generator</link>;
extern              const gnutls_datum_t <link linkend="gnutls-srp-1024-group-prime">gnutls_srp_1024_group_prime</link>;
extern              const gnutls_datum_t <link linkend="gnutls-srp-1024-group-generator">gnutls_srp_1024_group_generator</link>;
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="gnutls-srp-set-server-credentials-function">gnutls_srp_set_server_credentials_function</link>
                                                        (<parameter><link linkend="gnutls-srp-server-credentials-t"><type>gnutls_srp_server_credentials_t</type></link> cred</parameter>,
                                                         <parameter><link linkend="gnutls-srp-server-credentials-function"><type>gnutls_srp_server_credentials_function</type></link> *func</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="gnutls-srp-set-client-credentials-function">gnutls_srp_set_client_credentials_function</link>
                                                        (<parameter><link linkend="gnutls-srp-client-credentials-t"><type>gnutls_srp_client_credentials_t</type></link> cred</parameter>,
                                                         <parameter><link linkend="gnutls-srp-client-credentials-function"><type>gnutls_srp_client_credentials_function</type></link> *func</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="gnutls-srp-base64-encode">gnutls_srp_base64_encode</link>            (<parameter>const <link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> *data</parameter>,
                                                         <parameter><link linkend="char"><type>char</type></link> *result</parameter>,
                                                         <parameter><link linkend="size-t"><type>size_t</type></link> *result_size</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="gnutls-srp-base64-encode-alloc">gnutls_srp_base64_encode_alloc</link>      (<parameter>const <link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> *data</parameter>,
                                                         <parameter><link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> *result</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="gnutls-srp-base64-decode">gnutls_srp_base64_decode</link>            (<parameter>const <link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> *b64_data</parameter>,
                                                         <parameter><link linkend="char"><type>char</type></link> *result</parameter>,
                                                         <parameter><link linkend="size-t"><type>size_t</type></link> *result_size</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="gnutls-srp-base64-decode-alloc">gnutls_srp_base64_decode_alloc</link>      (<parameter>const <link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> *b64_data</parameter>,
                                                         <parameter><link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> *result</parameter>);
enum                <link linkend="gnutls-psk-key-flags">gnutls_psk_key_flags</link>;
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="gnutls-psk-free-client-credentials">gnutls_psk_free_client_credentials</link>  (<parameter><link linkend="gnutls-psk-client-credentials-t"><type>gnutls_psk_client_credentials_t</type></link> sc</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="gnutls-psk-allocate-client-credentials">gnutls_psk_allocate_client_credentials</link>
                                                        (<parameter><link linkend="gnutls-psk-client-credentials-t"><type>gnutls_psk_client_credentials_t</type></link> *sc</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="gnutls-psk-set-client-credentials">gnutls_psk_set_client_credentials</link>   (<parameter><link linkend="gnutls-psk-client-credentials-t"><type>gnutls_psk_client_credentials_t</type></link> res</parameter>,
                                                         <parameter>const <link linkend="char"><type>char</type></link> *username</parameter>,
                                                         <parameter>const <link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> *key</parameter>,
                                                         <parameter><link linkend="gnutls-psk-key-flags"><type>gnutls_psk_key_flags</type></link> format</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="gnutls-psk-free-server-credentials">gnutls_psk_free_server_credentials</link>  (<parameter><link linkend="gnutls-psk-server-credentials-t"><type>gnutls_psk_server_credentials_t</type></link> sc</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="gnutls-psk-allocate-server-credentials">gnutls_psk_allocate_server_credentials</link>
                                                        (<parameter><link linkend="gnutls-psk-server-credentials-t"><type>gnutls_psk_server_credentials_t</type></link> *sc</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="gnutls-psk-set-server-credentials-file">gnutls_psk_set_server_credentials_file</link>
                                                        (<parameter><link linkend="gnutls-psk-server-credentials-t"><type>gnutls_psk_server_credentials_t</type></link> res</parameter>,
                                                         <parameter>const <link linkend="char"><type>char</type></link> *password_file</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="gnutls-psk-set-server-credentials-hint">gnutls_psk_set_server_credentials_hint</link>
                                                        (<parameter><link linkend="gnutls-psk-server-credentials-t"><type>gnutls_psk_server_credentials_t</type></link> res</parameter>,
                                                         <parameter>const <link linkend="char"><type>char</type></link> *hint</parameter>);
const <link linkend="char"><returnvalue>char</returnvalue></link> *        <link linkend="gnutls-psk-server-get-username">gnutls_psk_server_get_username</link>      (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>);
const <link linkend="char"><returnvalue>char</returnvalue></link> *        <link linkend="gnutls-psk-client-get-hint">gnutls_psk_client_get_hint</link>          (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="gnutls-psk-set-server-credentials-function">gnutls_psk_set_server_credentials_function</link>
                                                        (<parameter><link linkend="gnutls-psk-server-credentials-t"><type>gnutls_psk_server_credentials_t</type></link> cred</parameter>,
                                                         <parameter><link linkend="gnutls-psk-server-credentials-function"><type>gnutls_psk_server_credentials_function</type></link> *func</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="gnutls-psk-set-client-credentials-function">gnutls_psk_set_client_credentials_function</link>
                                                        (<parameter><link linkend="gnutls-psk-client-credentials-t"><type>gnutls_psk_client_credentials_t</type></link> cred</parameter>,
                                                         <parameter><link linkend="gnutls-psk-client-credentials-function"><type>gnutls_psk_client_credentials_function</type></link> *func</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="gnutls-hex-encode">gnutls_hex_encode</link>                   (<parameter>const <link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> *data</parameter>,
                                                         <parameter><link linkend="char"><type>char</type></link> *result</parameter>,
                                                         <parameter><link linkend="size-t"><type>size_t</type></link> *result_size</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="gnutls-hex-decode">gnutls_hex_decode</link>                   (<parameter>const <link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> *hex_data</parameter>,
                                                         <parameter><link linkend="char"><type>char</type></link> *result</parameter>,
                                                         <parameter><link linkend="size-t"><type>size_t</type></link> *result_size</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="gnutls-psk-set-server-dh-params">gnutls_psk_set_server_dh_params</link>     (<parameter><link linkend="gnutls-psk-server-credentials-t"><type>gnutls_psk_server_credentials_t</type></link> res</parameter>,
                                                         <parameter><link linkend="gnutls-dh-params-t"><type>gnutls_dh_params_t</type></link> dh_params</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="gnutls-psk-set-server-params-function">gnutls_psk_set_server_params_function</link>
                                                        (<parameter><link linkend="gnutls-psk-server-credentials-t"><type>gnutls_psk_server_credentials_t</type></link> res</parameter>,
                                                         <parameter><link linkend="gnutls-params-function"><type>gnutls_params_function</type></link> *func</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="gnutls-psk-netconf-derive-key">gnutls_psk_netconf_derive_key</link>       (<parameter>const <link linkend="char"><type>char</type></link> *password</parameter>,
                                                         <parameter>const <link linkend="char"><type>char</type></link> *psk_identity</parameter>,
                                                         <parameter>const <link linkend="char"><type>char</type></link> *psk_identity_hint</parameter>,
                                                         <parameter><link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> *output_key</parameter>);
enum                <link linkend="gnutls-x509-subject-alt-name-t">gnutls_x509_subject_alt_name_t</link>;
struct              <link linkend="gnutls-openpgp-crt-int">gnutls_openpgp_crt_int</link>;
typedef             <link linkend="gnutls-openpgp-crt-t">gnutls_openpgp_crt_t</link>;
struct              <link linkend="gnutls-openpgp-privkey-int">gnutls_openpgp_privkey_int</link>;
typedef             <link linkend="gnutls-openpgp-privkey-t">gnutls_openpgp_privkey_t</link>;
<link linkend="gnutls-credentials-type-t"><returnvalue>gnutls_credentials_type_t</returnvalue></link>  <link linkend="gnutls-auth-get-type">gnutls_auth_get_type</link>         (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>);
<link linkend="gnutls-credentials-type-t"><returnvalue>gnutls_credentials_type_t</returnvalue></link>  <link linkend="gnutls-auth-server-get-type">gnutls_auth_server_get_type</link>  (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>);
<link linkend="gnutls-credentials-type-t"><returnvalue>gnutls_credentials_type_t</returnvalue></link>  <link linkend="gnutls-auth-client-get-type">gnutls_auth_client_get_type</link>  (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="gnutls-dh-set-prime-bits">gnutls_dh_set_prime_bits</link>            (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter>unsigned <link linkend="int"><type>int</type></link> bits</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="gnutls-dh-get-secret-bits">gnutls_dh_get_secret_bits</link>           (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="gnutls-dh-get-peers-public-bits">gnutls_dh_get_peers_public_bits</link>     (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="gnutls-dh-get-prime-bits">gnutls_dh_get_prime_bits</link>            (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="gnutls-dh-get-group">gnutls_dh_get_group</link>                 (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter><link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> *raw_gen</parameter>,
                                                         <parameter><link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> *raw_prime</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="gnutls-dh-get-pubkey">gnutls_dh_get_pubkey</link>                (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter><link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> *raw_key</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="gnutls-rsa-export-get-pubkey">gnutls_rsa_export_get_pubkey</link>        (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter><link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> *exponent</parameter>,
                                                         <parameter><link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> *modulus</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="gnutls-rsa-export-get-modulus-bits">gnutls_rsa_export_get_modulus_bits</link>  (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 (<link linkend="gnutls-sign-func">*gnutls_sign_func</link>)                 (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter><link linkend="void"><type>void</type></link> *userdata</parameter>,
                                                         <parameter><link linkend="gnutls-certificate-type-t"><type>gnutls_certificate_type_t</type></link> cert_type</parameter>,
                                                         <parameter>const <link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> *cert</parameter>,
                                                         <parameter>const <link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> *hash</parameter>,
                                                         <parameter><link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> *signature</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="gnutls-sign-callback-set">gnutls_sign_callback_set</link>            (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter><link linkend="gnutls-sign-func"><type>gnutls_sign_func</type></link> sign_func</parameter>,
                                                         <parameter><link linkend="void"><type>void</type></link> *userdata</parameter>);
<link linkend="gnutls-sign-func"><returnvalue>gnutls_sign_func</returnvalue></link>    <link linkend="gnutls-sign-callback-get">gnutls_sign_callback_get</link>            (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter><link linkend="void"><type>void</type></link> **userdata</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="gnutls-certificate-client-set-retrieve-function">gnutls_certificate_client_set_retrieve_function</link>
                                                        (<parameter><link linkend="gnutls-certificate-credentials-t"><type>gnutls_certificate_credentials_t</type></link> cred</parameter>,
                                                         <parameter><link linkend="gnutls-certificate-client-retrieve-function"><type>gnutls_certificate_client_retrieve_function</type></link> *func</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="gnutls-certificate-server-set-retrieve-function">gnutls_certificate_server_set_retrieve_function</link>
                                                        (<parameter><link linkend="gnutls-certificate-credentials-t"><type>gnutls_certificate_credentials_t</type></link> cred</parameter>,
                                                         <parameter><link linkend="gnutls-certificate-server-retrieve-function"><type>gnutls_certificate_server_retrieve_function</type></link> *func</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="gnutls-certificate-server-set-request">gnutls_certificate_server_set_request</link>
                                                        (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter><link linkend="gnutls-certificate-request-t"><type>gnutls_certificate_request_t</type></link> req</parameter>);
const <link linkend="gnutls-datum-t"><returnvalue>gnutls_datum_t</returnvalue></link> * <link linkend="gnutls-certificate-get-peers">gnutls_certificate_get_peers</link>     (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter>unsigned <link linkend="int"><type>int</type></link> *list_size</parameter>);
const <link linkend="gnutls-datum-t"><returnvalue>gnutls_datum_t</returnvalue></link> * <link linkend="gnutls-certificate-get-ours">gnutls_certificate_get_ours</link>      (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>);
<link linkend="time-t"><returnvalue>time_t</returnvalue></link>              <link linkend="gnutls-certificate-activation-time-peers">gnutls_certificate_activation_time_peers</link>
                                                        (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>);
<link linkend="time-t"><returnvalue>time_t</returnvalue></link>              <link linkend="gnutls-certificate-expiration-time-peers">gnutls_certificate_expiration_time_peers</link>
                                                        (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="gnutls-certificate-client-get-request-status">gnutls_certificate_client_get_request_status</link>
                                                        (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="gnutls-certificate-verify-peers2">gnutls_certificate_verify_peers2</link>    (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter>unsigned <link linkend="int"><type>int</type></link> *status</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="gnutls-certificate-verify-peers">gnutls_certificate_verify_peers</link>     (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="gnutls-pem-base64-encode">gnutls_pem_base64_encode</link>            (<parameter>const <link linkend="char"><type>char</type></link> *msg</parameter>,
                                                         <parameter>const <link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> *data</parameter>,
                                                         <parameter><link linkend="char"><type>char</type></link> *result</parameter>,
                                                         <parameter><link linkend="size-t"><type>size_t</type></link> *result_size</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="gnutls-pem-base64-decode">gnutls_pem_base64_decode</link>            (<parameter>const <link linkend="char"><type>char</type></link> *header</parameter>,
                                                         <parameter>const <link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> *b64_data</parameter>,
                                                         <parameter>unsigned <link linkend="char"><type>char</type></link> *result</parameter>,
                                                         <parameter><link linkend="size-t"><type>size_t</type></link> *result_size</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="gnutls-pem-base64-encode-alloc">gnutls_pem_base64_encode_alloc</link>      (<parameter>const <link linkend="char"><type>char</type></link> *msg</parameter>,
                                                         <parameter>const <link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> *data</parameter>,
                                                         <parameter><link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> *result</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="gnutls-pem-base64-decode-alloc">gnutls_pem_base64_decode_alloc</link>      (<parameter>const <link linkend="char"><type>char</type></link> *header</parameter>,
                                                         <parameter>const <link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> *b64_data</parameter>,
                                                         <parameter><link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> *result</parameter>);
#define             <link linkend="GNUTLS-KEY-DIGITAL-SIGNATURE:CAPS">GNUTLS_KEY_DIGITAL_SIGNATURE</link>
#define             <link linkend="GNUTLS-KEY-NON-REPUDIATION:CAPS">GNUTLS_KEY_NON_REPUDIATION</link>
#define             <link linkend="GNUTLS-KEY-KEY-ENCIPHERMENT:CAPS">GNUTLS_KEY_KEY_ENCIPHERMENT</link>
#define             <link linkend="GNUTLS-KEY-DATA-ENCIPHERMENT:CAPS">GNUTLS_KEY_DATA_ENCIPHERMENT</link>
#define             <link linkend="GNUTLS-KEY-KEY-AGREEMENT:CAPS">GNUTLS_KEY_KEY_AGREEMENT</link>
#define             <link linkend="GNUTLS-KEY-KEY-CERT-SIGN:CAPS">GNUTLS_KEY_KEY_CERT_SIGN</link>
#define             <link linkend="GNUTLS-KEY-CRL-SIGN:CAPS">GNUTLS_KEY_CRL_SIGN</link>
#define             <link linkend="GNUTLS-KEY-ENCIPHER-ONLY:CAPS">GNUTLS_KEY_ENCIPHER_ONLY</link>
#define             <link linkend="GNUTLS-KEY-DECIPHER-ONLY:CAPS">GNUTLS_KEY_DECIPHER_ONLY</link>
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="gnutls-certificate-set-params-function">gnutls_certificate_set_params_function</link>
                                                        (<parameter><link linkend="gnutls-certificate-credentials-t"><type>gnutls_certificate_credentials_t</type></link> res</parameter>,
                                                         <parameter><link linkend="gnutls-params-function"><type>gnutls_params_function</type></link> *func</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="gnutls-anon-set-params-function">gnutls_anon_set_params_function</link>     (<parameter><link linkend="gnutls-anon-server-credentials-t"><type>gnutls_anon_server_credentials_t</type></link> res</parameter>,
                                                         <parameter><link linkend="gnutls-params-function"><type>gnutls_params_function</type></link> *func</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="gnutls-psk-set-params-function">gnutls_psk_set_params_function</link>      (<parameter><link linkend="gnutls-psk-server-credentials-t"><type>gnutls_psk_server_credentials_t</type></link> res</parameter>,
                                                         <parameter><link linkend="gnutls-params-function"><type>gnutls_params_function</type></link> *func</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="gnutls-hex2bin">gnutls_hex2bin</link>                      (<parameter>const <link linkend="char"><type>char</type></link> *hex_data</parameter>,
                                                         <parameter><link linkend="size-t"><type>size_t</type></link> hex_size</parameter>,
                                                         <parameter><link linkend="char"><type>char</type></link> *bin_data</parameter>,
                                                         <parameter><link linkend="size-t"><type>size_t</type></link> *bin_size</parameter>);
#define             <link linkend="GNUTLS-E-SUCCESS:CAPS">GNUTLS_E_SUCCESS</link>
#define             <link linkend="GNUTLS-E-UNKNOWN-COMPRESSION-ALGORITHM:CAPS">GNUTLS_E_UNKNOWN_COMPRESSION_ALGORITHM</link>
#define             <link linkend="GNUTLS-E-UNKNOWN-CIPHER-TYPE:CAPS">GNUTLS_E_UNKNOWN_CIPHER_TYPE</link>
#define             <link linkend="GNUTLS-E-LARGE-PACKET:CAPS">GNUTLS_E_LARGE_PACKET</link>
#define             <link linkend="GNUTLS-E-UNSUPPORTED-VERSION-PACKET:CAPS">GNUTLS_E_UNSUPPORTED_VERSION_PACKET</link>
#define             <link linkend="GNUTLS-E-UNEXPECTED-PACKET-LENGTH:CAPS">GNUTLS_E_UNEXPECTED_PACKET_LENGTH</link>
#define             <link linkend="GNUTLS-E-INVALID-SESSION:CAPS">GNUTLS_E_INVALID_SESSION</link>
#define             <link linkend="GNUTLS-E-FATAL-ALERT-RECEIVED:CAPS">GNUTLS_E_FATAL_ALERT_RECEIVED</link>
#define             <link linkend="GNUTLS-E-UNEXPECTED-PACKET:CAPS">GNUTLS_E_UNEXPECTED_PACKET</link>
#define             <link linkend="GNUTLS-E-WARNING-ALERT-RECEIVED:CAPS">GNUTLS_E_WARNING_ALERT_RECEIVED</link>
#define             <link linkend="GNUTLS-E-ERROR-IN-FINISHED-PACKET:CAPS">GNUTLS_E_ERROR_IN_FINISHED_PACKET</link>
#define             <link linkend="GNUTLS-E-UNEXPECTED-HANDSHAKE-PACKET:CAPS">GNUTLS_E_UNEXPECTED_HANDSHAKE_PACKET</link>
#define             <link linkend="GNUTLS-E-UNKNOWN-CIPHER-SUITE:CAPS">GNUTLS_E_UNKNOWN_CIPHER_SUITE</link>
#define             <link linkend="GNUTLS-E-UNWANTED-ALGORITHM:CAPS">GNUTLS_E_UNWANTED_ALGORITHM</link>
#define             <link linkend="GNUTLS-E-MPI-SCAN-FAILED:CAPS">GNUTLS_E_MPI_SCAN_FAILED</link>
#define             <link linkend="GNUTLS-E-DECRYPTION-FAILED:CAPS">GNUTLS_E_DECRYPTION_FAILED</link>
#define             <link linkend="GNUTLS-E-MEMORY-ERROR:CAPS">GNUTLS_E_MEMORY_ERROR</link>
#define             <link linkend="GNUTLS-E-DECOMPRESSION-FAILED:CAPS">GNUTLS_E_DECOMPRESSION_FAILED</link>
#define             <link linkend="GNUTLS-E-COMPRESSION-FAILED:CAPS">GNUTLS_E_COMPRESSION_FAILED</link>
#define             <link linkend="GNUTLS-E-AGAIN:CAPS">GNUTLS_E_AGAIN</link>
#define             <link linkend="GNUTLS-E-EXPIRED:CAPS">GNUTLS_E_EXPIRED</link>
#define             <link linkend="GNUTLS-E-DB-ERROR:CAPS">GNUTLS_E_DB_ERROR</link>
#define             <link linkend="GNUTLS-E-SRP-PWD-ERROR:CAPS">GNUTLS_E_SRP_PWD_ERROR</link>
#define             <link linkend="GNUTLS-E-INSUFFICIENT-CREDENTIALS:CAPS">GNUTLS_E_INSUFFICIENT_CREDENTIALS</link>
#define             <link linkend="GNUTLS-E-INSUFICIENT-CREDENTIALS:CAPS">GNUTLS_E_INSUFICIENT_CREDENTIALS</link>
#define             <link linkend="GNUTLS-E-INSUFFICIENT-CRED:CAPS">GNUTLS_E_INSUFFICIENT_CRED</link>
#define             <link linkend="GNUTLS-E-INSUFICIENT-CRED:CAPS">GNUTLS_E_INSUFICIENT_CRED</link>
#define             <link linkend="GNUTLS-E-HASH-FAILED:CAPS">GNUTLS_E_HASH_FAILED</link>
#define             <link linkend="GNUTLS-E-BASE64-DECODING-ERROR:CAPS">GNUTLS_E_BASE64_DECODING_ERROR</link>
#define             <link linkend="GNUTLS-E-MPI-PRINT-FAILED:CAPS">GNUTLS_E_MPI_PRINT_FAILED</link>
#define             <link linkend="GNUTLS-E-REHANDSHAKE:CAPS">GNUTLS_E_REHANDSHAKE</link>
#define             <link linkend="GNUTLS-E-GOT-APPLICATION-DATA:CAPS">GNUTLS_E_GOT_APPLICATION_DATA</link>
#define             <link linkend="GNUTLS-E-RECORD-LIMIT-REACHED:CAPS">GNUTLS_E_RECORD_LIMIT_REACHED</link>
#define             <link linkend="GNUTLS-E-ENCRYPTION-FAILED:CAPS">GNUTLS_E_ENCRYPTION_FAILED</link>
#define             <link linkend="GNUTLS-E-PK-ENCRYPTION-FAILED:CAPS">GNUTLS_E_PK_ENCRYPTION_FAILED</link>
#define             <link linkend="GNUTLS-E-PK-DECRYPTION-FAILED:CAPS">GNUTLS_E_PK_DECRYPTION_FAILED</link>
#define             <link linkend="GNUTLS-E-PK-SIGN-FAILED:CAPS">GNUTLS_E_PK_SIGN_FAILED</link>
#define             <link linkend="GNUTLS-E-X509-UNSUPPORTED-CRITICAL-EXTENSION:CAPS">GNUTLS_E_X509_UNSUPPORTED_CRITICAL_EXTENSION</link>
#define             <link linkend="GNUTLS-E-KEY-USAGE-VIOLATION:CAPS">GNUTLS_E_KEY_USAGE_VIOLATION</link>
#define             <link linkend="GNUTLS-E-NO-CERTIFICATE-FOUND:CAPS">GNUTLS_E_NO_CERTIFICATE_FOUND</link>
#define             <link linkend="GNUTLS-E-INVALID-REQUEST:CAPS">GNUTLS_E_INVALID_REQUEST</link>
#define             <link linkend="GNUTLS-E-SHORT-MEMORY-BUFFER:CAPS">GNUTLS_E_SHORT_MEMORY_BUFFER</link>
#define             <link linkend="GNUTLS-E-INTERRUPTED:CAPS">GNUTLS_E_INTERRUPTED</link>
#define             <link linkend="GNUTLS-E-PUSH-ERROR:CAPS">GNUTLS_E_PUSH_ERROR</link>
#define             <link linkend="GNUTLS-E-PULL-ERROR:CAPS">GNUTLS_E_PULL_ERROR</link>
#define             <link linkend="GNUTLS-E-RECEIVED-ILLEGAL-PARAMETER:CAPS">GNUTLS_E_RECEIVED_ILLEGAL_PARAMETER</link>
#define             <link linkend="GNUTLS-E-REQUESTED-DATA-NOT-AVAILABLE:CAPS">GNUTLS_E_REQUESTED_DATA_NOT_AVAILABLE</link>
#define             <link linkend="GNUTLS-E-PKCS1-WRONG-PAD:CAPS">GNUTLS_E_PKCS1_WRONG_PAD</link>
#define             <link linkend="GNUTLS-E-RECEIVED-ILLEGAL-EXTENSION:CAPS">GNUTLS_E_RECEIVED_ILLEGAL_EXTENSION</link>
#define             <link linkend="GNUTLS-E-INTERNAL-ERROR:CAPS">GNUTLS_E_INTERNAL_ERROR</link>
#define             <link linkend="GNUTLS-E-DH-PRIME-UNACCEPTABLE:CAPS">GNUTLS_E_DH_PRIME_UNACCEPTABLE</link>
#define             <link linkend="GNUTLS-E-FILE-ERROR:CAPS">GNUTLS_E_FILE_ERROR</link>
#define             <link linkend="GNUTLS-E-TOO-MANY-EMPTY-PACKETS:CAPS">GNUTLS_E_TOO_MANY_EMPTY_PACKETS</link>
#define             <link linkend="GNUTLS-E-UNKNOWN-PK-ALGORITHM:CAPS">GNUTLS_E_UNKNOWN_PK_ALGORITHM</link>
#define             <link linkend="GNUTLS-E-INIT-LIBEXTRA:CAPS">GNUTLS_E_INIT_LIBEXTRA</link>
#define             <link linkend="GNUTLS-E-LIBRARY-VERSION-MISMATCH:CAPS">GNUTLS_E_LIBRARY_VERSION_MISMATCH</link>
#define             <link linkend="GNUTLS-E-NO-TEMPORARY-RSA-PARAMS:CAPS">GNUTLS_E_NO_TEMPORARY_RSA_PARAMS</link>
#define             <link linkend="GNUTLS-E-LZO-INIT-FAILED:CAPS">GNUTLS_E_LZO_INIT_FAILED</link>
#define             <link linkend="GNUTLS-E-NO-COMPRESSION-ALGORITHMS:CAPS">GNUTLS_E_NO_COMPRESSION_ALGORITHMS</link>
#define             <link linkend="GNUTLS-E-NO-CIPHER-SUITES:CAPS">GNUTLS_E_NO_CIPHER_SUITES</link>
#define             <link linkend="GNUTLS-E-OPENPGP-GETKEY-FAILED:CAPS">GNUTLS_E_OPENPGP_GETKEY_FAILED</link>
#define             <link linkend="GNUTLS-E-PK-SIG-VERIFY-FAILED:CAPS">GNUTLS_E_PK_SIG_VERIFY_FAILED</link>
#define             <link linkend="GNUTLS-E-ILLEGAL-SRP-USERNAME:CAPS">GNUTLS_E_ILLEGAL_SRP_USERNAME</link>
#define             <link linkend="GNUTLS-E-SRP-PWD-PARSING-ERROR:CAPS">GNUTLS_E_SRP_PWD_PARSING_ERROR</link>
#define             <link linkend="GNUTLS-E-NO-TEMPORARY-DH-PARAMS:CAPS">GNUTLS_E_NO_TEMPORARY_DH_PARAMS</link>
#define             <link linkend="GNUTLS-E-ASN1-ELEMENT-NOT-FOUND:CAPS">GNUTLS_E_ASN1_ELEMENT_NOT_FOUND</link>
#define             <link linkend="GNUTLS-E-ASN1-IDENTIFIER-NOT-FOUND:CAPS">GNUTLS_E_ASN1_IDENTIFIER_NOT_FOUND</link>
#define             <link linkend="GNUTLS-E-ASN1-DER-ERROR:CAPS">GNUTLS_E_ASN1_DER_ERROR</link>
#define             <link linkend="GNUTLS-E-ASN1-VALUE-NOT-FOUND:CAPS">GNUTLS_E_ASN1_VALUE_NOT_FOUND</link>
#define             <link linkend="GNUTLS-E-ASN1-GENERIC-ERROR:CAPS">GNUTLS_E_ASN1_GENERIC_ERROR</link>
#define             <link linkend="GNUTLS-E-ASN1-VALUE-NOT-VALID:CAPS">GNUTLS_E_ASN1_VALUE_NOT_VALID</link>
#define             <link linkend="GNUTLS-E-ASN1-TAG-ERROR:CAPS">GNUTLS_E_ASN1_TAG_ERROR</link>
#define             <link linkend="GNUTLS-E-ASN1-TAG-IMPLICIT:CAPS">GNUTLS_E_ASN1_TAG_IMPLICIT</link>
#define             <link linkend="GNUTLS-E-ASN1-TYPE-ANY-ERROR:CAPS">GNUTLS_E_ASN1_TYPE_ANY_ERROR</link>
#define             <link linkend="GNUTLS-E-ASN1-SYNTAX-ERROR:CAPS">GNUTLS_E_ASN1_SYNTAX_ERROR</link>
#define             <link linkend="GNUTLS-E-ASN1-DER-OVERFLOW:CAPS">GNUTLS_E_ASN1_DER_OVERFLOW</link>
#define             <link linkend="GNUTLS-E-OPENPGP-UID-REVOKED:CAPS">GNUTLS_E_OPENPGP_UID_REVOKED</link>
#define             <link linkend="GNUTLS-E-CERTIFICATE-ERROR:CAPS">GNUTLS_E_CERTIFICATE_ERROR</link>
#define             <link linkend="GNUTLS-E-X509-CERTIFICATE-ERROR:CAPS">GNUTLS_E_X509_CERTIFICATE_ERROR</link>
#define             <link linkend="GNUTLS-E-CERTIFICATE-KEY-MISMATCH:CAPS">GNUTLS_E_CERTIFICATE_KEY_MISMATCH</link>
#define             <link linkend="GNUTLS-E-UNSUPPORTED-CERTIFICATE-TYPE:CAPS">GNUTLS_E_UNSUPPORTED_CERTIFICATE_TYPE</link>
#define             <link linkend="GNUTLS-E-X509-UNKNOWN-SAN:CAPS">GNUTLS_E_X509_UNKNOWN_SAN</link>
#define             <link linkend="GNUTLS-E-OPENPGP-FINGERPRINT-UNSUPPORTED:CAPS">GNUTLS_E_OPENPGP_FINGERPRINT_UNSUPPORTED</link>
#define             <link linkend="GNUTLS-E-X509-UNSUPPORTED-ATTRIBUTE:CAPS">GNUTLS_E_X509_UNSUPPORTED_ATTRIBUTE</link>
#define             <link linkend="GNUTLS-E-UNKNOWN-HASH-ALGORITHM:CAPS">GNUTLS_E_UNKNOWN_HASH_ALGORITHM</link>
#define             <link linkend="GNUTLS-E-UNKNOWN-PKCS-CONTENT-TYPE:CAPS">GNUTLS_E_UNKNOWN_PKCS_CONTENT_TYPE</link>
#define             <link linkend="GNUTLS-E-UNKNOWN-PKCS-BAG-TYPE:CAPS">GNUTLS_E_UNKNOWN_PKCS_BAG_TYPE</link>
#define             <link linkend="GNUTLS-E-INVALID-PASSWORD:CAPS">GNUTLS_E_INVALID_PASSWORD</link>
#define             <link linkend="GNUTLS-E-MAC-VERIFY-FAILED:CAPS">GNUTLS_E_MAC_VERIFY_FAILED</link>
#define             <link linkend="GNUTLS-E-CONSTRAINT-ERROR:CAPS">GNUTLS_E_CONSTRAINT_ERROR</link>
#define             <link linkend="GNUTLS-E-WARNING-IA-IPHF-RECEIVED:CAPS">GNUTLS_E_WARNING_IA_IPHF_RECEIVED</link>
#define             <link linkend="GNUTLS-E-WARNING-IA-FPHF-RECEIVED:CAPS">GNUTLS_E_WARNING_IA_FPHF_RECEIVED</link>
#define             <link linkend="GNUTLS-E-IA-VERIFY-FAILED:CAPS">GNUTLS_E_IA_VERIFY_FAILED</link>
#define             <link linkend="GNUTLS-E-UNKNOWN-ALGORITHM:CAPS">GNUTLS_E_UNKNOWN_ALGORITHM</link>
#define             <link linkend="GNUTLS-E-BASE64-ENCODING-ERROR:CAPS">GNUTLS_E_BASE64_ENCODING_ERROR</link>
#define             <link linkend="GNUTLS-E-INCOMPATIBLE-GCRYPT-LIBRARY:CAPS">GNUTLS_E_INCOMPATIBLE_GCRYPT_LIBRARY</link>
#define             <link linkend="GNUTLS-E-INCOMPATIBLE-CRYPTO-LIBRARY:CAPS">GNUTLS_E_INCOMPATIBLE_CRYPTO_LIBRARY</link>
#define             <link linkend="GNUTLS-E-INCOMPATIBLE-LIBTASN1-LIBRARY:CAPS">GNUTLS_E_INCOMPATIBLE_LIBTASN1_LIBRARY</link>
#define             <link linkend="GNUTLS-E-OPENPGP-KEYRING-ERROR:CAPS">GNUTLS_E_OPENPGP_KEYRING_ERROR</link>
#define             <link linkend="GNUTLS-E-X509-UNSUPPORTED-OID:CAPS">GNUTLS_E_X509_UNSUPPORTED_OID</link>
#define             <link linkend="GNUTLS-E-RANDOM-FAILED:CAPS">GNUTLS_E_RANDOM_FAILED</link>
#define             <link linkend="GNUTLS-E-BASE64-UNEXPECTED-HEADER-ERROR:CAPS">GNUTLS_E_BASE64_UNEXPECTED_HEADER_ERROR</link>
#define             <link linkend="GNUTLS-E-OPENPGP-SUBKEY-ERROR:CAPS">GNUTLS_E_OPENPGP_SUBKEY_ERROR</link>
#define             <link linkend="GNUTLS-E-CRYPTO-ALREADY-REGISTERED:CAPS">GNUTLS_E_CRYPTO_ALREADY_REGISTERED</link>
#define             <link linkend="GNUTLS-E-HANDSHAKE-TOO-LARGE:CAPS">GNUTLS_E_HANDSHAKE_TOO_LARGE</link>
#define             <link linkend="GNUTLS-E-UNIMPLEMENTED-FEATURE:CAPS">GNUTLS_E_UNIMPLEMENTED_FEATURE</link>
#define             <link linkend="GNUTLS-E-APPLICATION-ERROR-MAX:CAPS">GNUTLS_E_APPLICATION_ERROR_MAX</link>
#define             <link linkend="GNUTLS-E-APPLICATION-ERROR-MIN:CAPS">GNUTLS_E_APPLICATION_ERROR_MIN</link>
</synopsis>
</refsynopsisdiv>

<refsect1 id="gnutls-gnutls.description" role="desc">
<title role="desc.title">Description</title>
<para>
</para>
</refsect1>
<refsect1 id="gnutls-gnutls.details" role="details">
<title role="details.title">Details</title>
<refsect2 id="HAVE-SSIZE-T:CAPS" role="macro">
<title>HAVE_SSIZE_T</title>
<indexterm zone="HAVE-SSIZE-T:CAPS"><primary>HAVE_SSIZE_T</primary></indexterm>
<programlisting># define HAVE_SSIZE_T
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNUTLS-VERSION:CAPS" role="macro">
<title>GNUTLS_VERSION</title>
<indexterm zone="GNUTLS-VERSION:CAPS"><primary>GNUTLS_VERSION</primary></indexterm>
<programlisting>#define GNUTLS_VERSION "2.8.6"
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNUTLS-VERSION-MAJOR:CAPS" role="macro">
<title>GNUTLS_VERSION_MAJOR</title>
<indexterm zone="GNUTLS-VERSION-MAJOR:CAPS"><primary>GNUTLS_VERSION_MAJOR</primary></indexterm>
<programlisting>#define GNUTLS_VERSION_MAJOR 2
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNUTLS-VERSION-MINOR:CAPS" role="macro">
<title>GNUTLS_VERSION_MINOR</title>
<indexterm zone="GNUTLS-VERSION-MINOR:CAPS"><primary>GNUTLS_VERSION_MINOR</primary></indexterm>
<programlisting>#define GNUTLS_VERSION_MINOR 8
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNUTLS-VERSION-PATCH:CAPS" role="macro">
<title>GNUTLS_VERSION_PATCH</title>
<indexterm zone="GNUTLS-VERSION-PATCH:CAPS"><primary>GNUTLS_VERSION_PATCH</primary></indexterm>
<programlisting>#define GNUTLS_VERSION_PATCH 6
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNUTLS-VERSION-NUMBER:CAPS" role="macro">
<title>GNUTLS_VERSION_NUMBER</title>
<indexterm zone="GNUTLS-VERSION-NUMBER:CAPS"><primary>GNUTLS_VERSION_NUMBER</primary></indexterm>
<programlisting>#define GNUTLS_VERSION_NUMBER 0x020806
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNUTLS-CIPHER-RIJNDAEL-128-CBC:CAPS" role="macro">
<title>GNUTLS_CIPHER_RIJNDAEL_128_CBC</title>
<indexterm zone="GNUTLS-CIPHER-RIJNDAEL-128-CBC:CAPS"><primary>GNUTLS_CIPHER_RIJNDAEL_128_CBC</primary></indexterm>
<programlisting>#define GNUTLS_CIPHER_RIJNDAEL_128_CBC GNUTLS_CIPHER_AES_128_CBC
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNUTLS-CIPHER-RIJNDAEL-256-CBC:CAPS" role="macro">
<title>GNUTLS_CIPHER_RIJNDAEL_256_CBC</title>
<indexterm zone="GNUTLS-CIPHER-RIJNDAEL-256-CBC:CAPS"><primary>GNUTLS_CIPHER_RIJNDAEL_256_CBC</primary></indexterm>
<programlisting>#define GNUTLS_CIPHER_RIJNDAEL_256_CBC GNUTLS_CIPHER_AES_256_CBC
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNUTLS-CIPHER-RIJNDAEL-CBC:CAPS" role="macro">
<title>GNUTLS_CIPHER_RIJNDAEL_CBC</title>
<indexterm zone="GNUTLS-CIPHER-RIJNDAEL-CBC:CAPS"><primary>GNUTLS_CIPHER_RIJNDAEL_CBC</primary></indexterm>
<programlisting>#define GNUTLS_CIPHER_RIJNDAEL_CBC GNUTLS_CIPHER_AES_128_CBC
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNUTLS-CIPHER-ARCFOUR:CAPS" role="macro">
<title>GNUTLS_CIPHER_ARCFOUR</title>
<indexterm zone="GNUTLS-CIPHER-ARCFOUR:CAPS"><primary>GNUTLS_CIPHER_ARCFOUR</primary></indexterm>
<programlisting>#define GNUTLS_CIPHER_ARCFOUR GNUTLS_CIPHER_ARCFOUR_128
</programlisting>
<para>
</para></refsect2>
<refsect2 id="gnutls-cipher-algorithm-t" role="enum">
<title>enum gnutls_cipher_algorithm_t</title>
<indexterm zone="gnutls-cipher-algorithm-t"><primary>gnutls_cipher_algorithm_t</primary></indexterm>
<programlisting>  typedef enum gnutls_cipher_algorithm
  {
    GNUTLS_CIPHER_UNKNOWN = 0,
    GNUTLS_CIPHER_NULL = 1,
    GNUTLS_CIPHER_ARCFOUR_128,
    GNUTLS_CIPHER_3DES_CBC,
    GNUTLS_CIPHER_AES_128_CBC,
    GNUTLS_CIPHER_AES_256_CBC,
    GNUTLS_CIPHER_ARCFOUR_40,
    GNUTLS_CIPHER_CAMELLIA_128_CBC,
    GNUTLS_CIPHER_CAMELLIA_256_CBC,
    GNUTLS_CIPHER_RC2_40_CBC = 90,
    GNUTLS_CIPHER_DES_CBC,

    /* used only for PGP internals. Ignored in TLS/SSL 
     */
    GNUTLS_CIPHER_IDEA_PGP_CFB = 200,
    GNUTLS_CIPHER_3DES_PGP_CFB,
    GNUTLS_CIPHER_CAST5_PGP_CFB,
    GNUTLS_CIPHER_BLOWFISH_PGP_CFB,
    GNUTLS_CIPHER_SAFER_SK128_PGP_CFB,
    GNUTLS_CIPHER_AES128_PGP_CFB,
    GNUTLS_CIPHER_AES192_PGP_CFB,
    GNUTLS_CIPHER_AES256_PGP_CFB,
    GNUTLS_CIPHER_TWOFISH_PGP_CFB
  } gnutls_cipher_algorithm_t;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="gnutls-kx-algorithm-t" role="enum">
<title>enum gnutls_kx_algorithm_t</title>
<indexterm zone="gnutls-kx-algorithm-t"><primary>gnutls_kx_algorithm_t</primary></indexterm>
<programlisting>  typedef enum
  {
    GNUTLS_KX_UNKNOWN = 0,
    GNUTLS_KX_RSA = 1,
    GNUTLS_KX_DHE_DSS,
    GNUTLS_KX_DHE_RSA,
    GNUTLS_KX_ANON_DH,
    GNUTLS_KX_SRP,
    GNUTLS_KX_RSA_EXPORT,
    GNUTLS_KX_SRP_RSA,
    GNUTLS_KX_SRP_DSS,
    GNUTLS_KX_PSK,
    GNUTLS_KX_DHE_PSK
  } gnutls_kx_algorithm_t;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="gnutls-params-type-t" role="enum">
<title>enum gnutls_params_type_t</title>
<indexterm zone="gnutls-params-type-t"><primary>gnutls_params_type_t</primary></indexterm>
<programlisting>  typedef enum
  {
    GNUTLS_PARAMS_RSA_EXPORT = 1,
    GNUTLS_PARAMS_DH
  } gnutls_params_type_t;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="gnutls-credentials-type-t" role="enum">
<title>enum gnutls_credentials_type_t</title>
<indexterm zone="gnutls-credentials-type-t"><primary>gnutls_credentials_type_t</primary></indexterm>
<programlisting>  typedef enum
  {
    GNUTLS_CRD_CERTIFICATE = 1,
    GNUTLS_CRD_ANON,
    GNUTLS_CRD_SRP,
    GNUTLS_CRD_PSK,
    GNUTLS_CRD_IA
  } gnutls_credentials_type_t;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNUTLS-MAC-SHA:CAPS" role="macro">
<title>GNUTLS_MAC_SHA</title>
<indexterm zone="GNUTLS-MAC-SHA:CAPS"><primary>GNUTLS_MAC_SHA</primary></indexterm>
<programlisting>#define GNUTLS_MAC_SHA GNUTLS_MAC_SHA1
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNUTLS-DIG-SHA:CAPS" role="macro">
<title>GNUTLS_DIG_SHA</title>
<indexterm zone="GNUTLS-DIG-SHA:CAPS"><primary>GNUTLS_DIG_SHA</primary></indexterm>
<programlisting>#define GNUTLS_DIG_SHA GNUTLS_DIG_SHA1
</programlisting>
<para>
</para></refsect2>
<refsect2 id="gnutls-mac-algorithm-t" role="enum">
<title>enum gnutls_mac_algorithm_t</title>
<indexterm zone="gnutls-mac-algorithm-t"><primary>gnutls_mac_algorithm_t</primary></indexterm>
<programlisting>  typedef enum
  {
    GNUTLS_MAC_UNKNOWN = 0,
    GNUTLS_MAC_NULL = 1,
    GNUTLS_MAC_MD5,
    GNUTLS_MAC_SHA1,
    GNUTLS_MAC_RMD160,
    GNUTLS_MAC_MD2,
    GNUTLS_MAC_SHA256,
    GNUTLS_MAC_SHA384,
    GNUTLS_MAC_SHA512
    /* If you add anything here, make sure you align with
       gnutls_digest_algorithm_t, in particular SHA-224. */
  } gnutls_mac_algorithm_t;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="gnutls-digest-algorithm-t" role="enum">
<title>enum gnutls_digest_algorithm_t</title>
<indexterm zone="gnutls-digest-algorithm-t"><primary>gnutls_digest_algorithm_t</primary></indexterm>
<programlisting>  typedef enum
  {
    GNUTLS_DIG_NULL = GNUTLS_MAC_NULL,
    GNUTLS_DIG_MD5 = GNUTLS_MAC_MD5,
    GNUTLS_DIG_SHA1 = GNUTLS_MAC_SHA1,
    GNUTLS_DIG_RMD160 = GNUTLS_MAC_RMD160,
    GNUTLS_DIG_MD2 = GNUTLS_MAC_MD2,
    GNUTLS_DIG_SHA256 = GNUTLS_MAC_SHA256,
    GNUTLS_DIG_SHA384 = GNUTLS_MAC_SHA384,
    GNUTLS_DIG_SHA512 = GNUTLS_MAC_SHA512,
    GNUTLS_DIG_SHA224
  } gnutls_digest_algorithm_t;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNUTLS-MAX-ALGORITHM-NUM:CAPS" role="macro">
<title>GNUTLS_MAX_ALGORITHM_NUM</title>
<indexterm zone="GNUTLS-MAX-ALGORITHM-NUM:CAPS"><primary>GNUTLS_MAX_ALGORITHM_NUM</primary></indexterm>
<programlisting>#define GNUTLS_MAX_ALGORITHM_NUM 16
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNUTLS-COMP-ZLIB:CAPS" role="macro">
<title>GNUTLS_COMP_ZLIB</title>
<indexterm zone="GNUTLS-COMP-ZLIB:CAPS"><primary>GNUTLS_COMP_ZLIB</primary></indexterm>
<programlisting>#define GNUTLS_COMP_ZLIB GNUTLS_COMP_DEFLATE
</programlisting>
<para>
</para></refsect2>
<refsect2 id="gnutls-compression-method-t" role="enum">
<title>enum gnutls_compression_method_t</title>
<indexterm zone="gnutls-compression-method-t"><primary>gnutls_compression_method_t</primary></indexterm>
<programlisting>  typedef enum
  {
    GNUTLS_COMP_UNKNOWN = 0,
    GNUTLS_COMP_NULL = 1,
    GNUTLS_COMP_DEFLATE,
    GNUTLS_COMP_LZO		/* only available if gnutls-extra has
				   been initialized
				 */
  } gnutls_compression_method_t;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="gnutls-connection-end-t" role="enum">
<title>enum gnutls_connection_end_t</title>
<indexterm zone="gnutls-connection-end-t"><primary>gnutls_connection_end_t</primary></indexterm>
<programlisting>  typedef enum
  {
    GNUTLS_SERVER = 1,
    GNUTLS_CLIENT
  } gnutls_connection_end_t;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="gnutls-alert-level-t" role="enum">
<title>enum gnutls_alert_level_t</title>
<indexterm zone="gnutls-alert-level-t"><primary>gnutls_alert_level_t</primary></indexterm>
<programlisting>  typedef enum
  {
    GNUTLS_AL_WARNING = 1,
    GNUTLS_AL_FATAL
  } gnutls_alert_level_t;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="gnutls-alert-description-t" role="enum">
<title>enum gnutls_alert_description_t</title>
<indexterm zone="gnutls-alert-description-t"><primary>gnutls_alert_description_t</primary></indexterm>
<programlisting>  typedef enum
  {
    GNUTLS_A_CLOSE_NOTIFY,
    GNUTLS_A_UNEXPECTED_MESSAGE = 10,
    GNUTLS_A_BAD_RECORD_MAC = 20,
    GNUTLS_A_DECRYPTION_FAILED,
    GNUTLS_A_RECORD_OVERFLOW,
    GNUTLS_A_DECOMPRESSION_FAILURE = 30,
    GNUTLS_A_HANDSHAKE_FAILURE = 40,
    GNUTLS_A_SSL3_NO_CERTIFICATE = 41,
    GNUTLS_A_BAD_CERTIFICATE = 42,
    GNUTLS_A_UNSUPPORTED_CERTIFICATE,
    GNUTLS_A_CERTIFICATE_REVOKED,
    GNUTLS_A_CERTIFICATE_EXPIRED,
    GNUTLS_A_CERTIFICATE_UNKNOWN,
    GNUTLS_A_ILLEGAL_PARAMETER,
    GNUTLS_A_UNKNOWN_CA,
    GNUTLS_A_ACCESS_DENIED,
    GNUTLS_A_DECODE_ERROR = 50,
    GNUTLS_A_DECRYPT_ERROR,
    GNUTLS_A_EXPORT_RESTRICTION = 60,
    GNUTLS_A_PROTOCOL_VERSION = 70,
    GNUTLS_A_INSUFFICIENT_SECURITY,
    GNUTLS_A_INTERNAL_ERROR = 80,
    GNUTLS_A_USER_CANCELED = 90,
    GNUTLS_A_NO_RENEGOTIATION = 100,
    GNUTLS_A_UNSUPPORTED_EXTENSION = 110,
    GNUTLS_A_CERTIFICATE_UNOBTAINABLE = 111,
    GNUTLS_A_UNRECOGNIZED_NAME = 112,
    GNUTLS_A_UNKNOWN_PSK_IDENTITY = 115,
    GNUTLS_A_INNER_APPLICATION_FAILURE = 208,
    GNUTLS_A_INNER_APPLICATION_VERIFICATION = 209
  } gnutls_alert_description_t;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="gnutls-handshake-description-t" role="enum">
<title>enum gnutls_handshake_description_t</title>
<indexterm zone="gnutls-handshake-description-t"><primary>gnutls_handshake_description_t</primary></indexterm>
<programlisting>  typedef enum
  { GNUTLS_HANDSHAKE_HELLO_REQUEST = 0,
    GNUTLS_HANDSHAKE_CLIENT_HELLO = 1,
    GNUTLS_HANDSHAKE_SERVER_HELLO = 2,
    GNUTLS_HANDSHAKE_CERTIFICATE_PKT = 11,
    GNUTLS_HANDSHAKE_SERVER_KEY_EXCHANGE = 12,
    GNUTLS_HANDSHAKE_CERTIFICATE_REQUEST = 13,
    GNUTLS_HANDSHAKE_SERVER_HELLO_DONE = 14,
    GNUTLS_HANDSHAKE_CERTIFICATE_VERIFY = 15,
    GNUTLS_HANDSHAKE_CLIENT_KEY_EXCHANGE = 16,
    GNUTLS_HANDSHAKE_FINISHED = 20,
    GNUTLS_HANDSHAKE_SUPPLEMENTAL = 23
  } gnutls_handshake_description_t;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="gnutls-certificate-status-t" role="enum">
<title>enum gnutls_certificate_status_t</title>
<indexterm zone="gnutls-certificate-status-t"><primary>gnutls_certificate_status_t</primary></indexterm>
<programlisting>  typedef enum
  {
    GNUTLS_CERT_INVALID = 2,&#160;/* will be set if the certificate
				 * was not verified.
				 */
    GNUTLS_CERT_REVOKED = 32,&#160;/* in X.509 this will be set only if CRLs are checked
				 */

    /* Those are extra information about the verification
     * process. Will be set only if the certificate was 
     * not verified.
     */
    GNUTLS_CERT_SIGNER_NOT_FOUND = 64,
    GNUTLS_CERT_SIGNER_NOT_CA = 128,
    GNUTLS_CERT_INSECURE_ALGORITHM = 256,

    /* Time verification.
     */
    GNUTLS_CERT_NOT_ACTIVATED = 512,
    GNUTLS_CERT_EXPIRED = 1024

  } gnutls_certificate_status_t;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="gnutls-certificate-request-t" role="enum">
<title>enum gnutls_certificate_request_t</title>
<indexterm zone="gnutls-certificate-request-t"><primary>gnutls_certificate_request_t</primary></indexterm>
<programlisting>  typedef enum
  {
    GNUTLS_CERT_IGNORE,
    GNUTLS_CERT_REQUEST = 1,
    GNUTLS_CERT_REQUIRE
  } gnutls_certificate_request_t;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="gnutls-openpgp-crt-status-t" role="enum">
<title>enum gnutls_openpgp_crt_status_t</title>
<indexterm zone="gnutls-openpgp-crt-status-t"><primary>gnutls_openpgp_crt_status_t</primary></indexterm>
<programlisting>  typedef enum
  { GNUTLS_OPENPGP_CERT,
    GNUTLS_OPENPGP_CERT_FINGERPRINT
  } gnutls_openpgp_crt_status_t;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="gnutls-close-request-t" role="enum">
<title>enum gnutls_close_request_t</title>
<indexterm zone="gnutls-close-request-t"><primary>gnutls_close_request_t</primary></indexterm>
<programlisting>  typedef enum
  {
    GNUTLS_SHUT_RDWR = 0,
    GNUTLS_SHUT_WR = 1
  } gnutls_close_request_t;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNUTLS-TLS1:CAPS" role="macro">
<title>GNUTLS_TLS1</title>
<indexterm zone="GNUTLS-TLS1:CAPS"><primary>GNUTLS_TLS1</primary></indexterm>
<programlisting>#define GNUTLS_TLS1 GNUTLS_TLS1_0
</programlisting>
<para>
</para></refsect2>
<refsect2 id="gnutls-protocol-t" role="enum">
<title>enum gnutls_protocol_t</title>
<indexterm zone="gnutls-protocol-t"><primary>gnutls_protocol_t</primary></indexterm>
<programlisting>  typedef enum
  {
    GNUTLS_SSL3 = 1,
    GNUTLS_TLS1_0,
    GNUTLS_TLS1_1,
    GNUTLS_TLS1_2,
    GNUTLS_VERSION_UNKNOWN = 0xff
  } gnutls_protocol_t;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="gnutls-certificate-type-t" role="enum">
<title>enum gnutls_certificate_type_t</title>
<indexterm zone="gnutls-certificate-type-t"><primary>gnutls_certificate_type_t</primary></indexterm>
<programlisting>  typedef enum
  {
    GNUTLS_CRT_UNKNOWN = 0,
    GNUTLS_CRT_X509 = 1,
    GNUTLS_CRT_OPENPGP
  } gnutls_certificate_type_t;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="gnutls-x509-crt-fmt-t" role="enum">
<title>enum gnutls_x509_crt_fmt_t</title>
<indexterm zone="gnutls-x509-crt-fmt-t"><primary>gnutls_x509_crt_fmt_t</primary></indexterm>
<programlisting>  typedef enum
  {
    GNUTLS_X509_FMT_DER,
    GNUTLS_X509_FMT_PEM
  } gnutls_x509_crt_fmt_t;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="gnutls-certificate-print-formats-t" role="enum">
<title>enum gnutls_certificate_print_formats_t</title>
<indexterm zone="gnutls-certificate-print-formats-t"><primary>gnutls_certificate_print_formats_t</primary></indexterm>
<programlisting>  typedef enum gnutls_certificate_print_formats
    {
      GNUTLS_CRT_PRINT_FULL,
      GNUTLS_CRT_PRINT_ONELINE,
      GNUTLS_CRT_PRINT_UNSIGNED_FULL
    } gnutls_certificate_print_formats_t;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="gnutls-pk-algorithm-t" role="enum">
<title>enum gnutls_pk_algorithm_t</title>
<indexterm zone="gnutls-pk-algorithm-t"><primary>gnutls_pk_algorithm_t</primary></indexterm>
<programlisting>  typedef enum
  {
    GNUTLS_PK_UNKNOWN = 0,
    GNUTLS_PK_RSA = 1,
    GNUTLS_PK_DSA
  } gnutls_pk_algorithm_t;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="gnutls-pk-algorithm-get-name" role="function">
<title>gnutls_pk_algorithm_get_name ()</title>
<indexterm zone="gnutls-pk-algorithm-get-name"><primary>gnutls_pk_algorithm_get_name</primary></indexterm>
<programlisting>const <link linkend="char"><returnvalue>char</returnvalue></link> *        gnutls_pk_algorithm_get_name        (<parameter><link linkend="gnutls-pk-algorithm-t"><type>gnutls_pk_algorithm_t</type></link> algorithm</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>algorithm</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="GNUTLS-SIGN-RSA-SHA:CAPS" role="macro">
<title>GNUTLS_SIGN_RSA_SHA</title>
<indexterm zone="GNUTLS-SIGN-RSA-SHA:CAPS"><primary>GNUTLS_SIGN_RSA_SHA</primary></indexterm>
<programlisting>#define GNUTLS_SIGN_RSA_SHA GNUTLS_SIGN_RSA_SHA1
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNUTLS-SIGN-DSA-SHA:CAPS" role="macro">
<title>GNUTLS_SIGN_DSA_SHA</title>
<indexterm zone="GNUTLS-SIGN-DSA-SHA:CAPS"><primary>GNUTLS_SIGN_DSA_SHA</primary></indexterm>
<programlisting>#define GNUTLS_SIGN_DSA_SHA GNUTLS_SIGN_DSA_SHA1
</programlisting>
<para>
</para></refsect2>
<refsect2 id="gnutls-sign-algorithm-t" role="enum">
<title>enum gnutls_sign_algorithm_t</title>
<indexterm zone="gnutls-sign-algorithm-t"><primary>gnutls_sign_algorithm_t</primary></indexterm>
<programlisting>  typedef enum
  {
    GNUTLS_SIGN_UNKNOWN = 0,
    GNUTLS_SIGN_RSA_SHA1 = 1,
    GNUTLS_SIGN_DSA_SHA1,
    GNUTLS_SIGN_RSA_MD5,
    GNUTLS_SIGN_RSA_MD2,
    GNUTLS_SIGN_RSA_RMD160,
    GNUTLS_SIGN_RSA_SHA256,
    GNUTLS_SIGN_RSA_SHA384,
    GNUTLS_SIGN_RSA_SHA512,
    GNUTLS_SIGN_RSA_SHA224
  } gnutls_sign_algorithm_t;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="gnutls-sign-algorithm-get-name" role="function">
<title>gnutls_sign_algorithm_get_name ()</title>
<indexterm zone="gnutls-sign-algorithm-get-name"><primary>gnutls_sign_algorithm_get_name</primary></indexterm>
<programlisting>const <link linkend="char"><returnvalue>char</returnvalue></link> *        gnutls_sign_algorithm_get_name      (<parameter><link linkend="gnutls-sign-algorithm-t"><type>gnutls_sign_algorithm_t</type></link> sign</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>sign</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-transport-ptr-t" role="typedef">
<title>gnutls_transport_ptr_t</title>
<indexterm zone="gnutls-transport-ptr-t"><primary>gnutls_transport_ptr_t</primary></indexterm>
<programlisting>  typedef void *gnutls_transport_ptr_t;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="gnutls-session-int" role="struct">
<title>struct gnutls_session_int</title>
<indexterm zone="gnutls-session-int"><primary>gnutls_session_int</primary></indexterm>
<programlisting>struct gnutls_session_int;</programlisting>
<para>
</para></refsect2>
<refsect2 id="gnutls-session-t" role="typedef">
<title>gnutls_session_t</title>
<indexterm zone="gnutls-session-t"><primary>gnutls_session_t</primary></indexterm>
<programlisting>  typedef struct gnutls_session_int *gnutls_session_t;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="gnutls-dh-params-int" role="struct">
<title>struct gnutls_dh_params_int</title>
<indexterm zone="gnutls-dh-params-int"><primary>gnutls_dh_params_int</primary></indexterm>
<programlisting>struct gnutls_dh_params_int;</programlisting>
<para>
</para></refsect2>
<refsect2 id="gnutls-dh-params-t" role="typedef">
<title>gnutls_dh_params_t</title>
<indexterm zone="gnutls-dh-params-t"><primary>gnutls_dh_params_t</primary></indexterm>
<programlisting>  typedef struct gnutls_dh_params_int *gnutls_dh_params_t;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="gnutls-x509-privkey-int" role="struct">
<title>struct gnutls_x509_privkey_int</title>
<indexterm zone="gnutls-x509-privkey-int"><primary>gnutls_x509_privkey_int</primary></indexterm>
<programlisting>struct gnutls_x509_privkey_int;</programlisting>
<para>
</para></refsect2>
<refsect2 id="gnutls-rsa-params-t" role="typedef">
<title>gnutls_rsa_params_t</title>
<indexterm zone="gnutls-rsa-params-t"><primary>gnutls_rsa_params_t</primary></indexterm>
<programlisting>  typedef struct gnutls_x509_privkey_int *gnutls_rsa_params_t;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="gnutls-priority-st" role="struct">
<title>struct gnutls_priority_st</title>
<indexterm zone="gnutls-priority-st"><primary>gnutls_priority_st</primary></indexterm>
<programlisting>struct gnutls_priority_st;</programlisting>
<para>
</para></refsect2>
<refsect2 id="gnutls-priority-t" role="typedef">
<title>gnutls_priority_t</title>
<indexterm zone="gnutls-priority-t"><primary>gnutls_priority_t</primary></indexterm>
<programlisting>  typedef struct gnutls_priority_st *gnutls_priority_t;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="gnutls-init" role="function">
<title>gnutls_init ()</title>
<indexterm zone="gnutls-init"><primary>gnutls_init</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 gnutls_init                         (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> *session</parameter>,
                                                         <parameter><link linkend="gnutls-connection-end-t"><type>gnutls_connection_end_t</type></link> con_end</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>session</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>con_end</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-deinit" role="function">
<title>gnutls_deinit ()</title>
<indexterm zone="gnutls-deinit"><primary>gnutls_deinit</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                gnutls_deinit                       (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>session</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-bye" role="function">
<title>gnutls_bye ()</title>
<indexterm zone="gnutls-bye"><primary>gnutls_bye</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 gnutls_bye                          (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter><link linkend="gnutls-close-request-t"><type>gnutls_close_request_t</type></link> how</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>session</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>how</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-handshake" role="function">
<title>gnutls_handshake ()</title>
<indexterm zone="gnutls-handshake"><primary>gnutls_handshake</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 gnutls_handshake                    (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>session</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-rehandshake" role="function">
<title>gnutls_rehandshake ()</title>
<indexterm zone="gnutls-rehandshake"><primary>gnutls_rehandshake</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 gnutls_rehandshake                  (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>session</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-alert-get" role="function">
<title>gnutls_alert_get ()</title>
<indexterm zone="gnutls-alert-get"><primary>gnutls_alert_get</primary></indexterm>
<programlisting><link linkend="gnutls-alert-description-t"><returnvalue>gnutls_alert_description_t</returnvalue></link>  gnutls_alert_get            (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>session</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-alert-send" role="function">
<title>gnutls_alert_send ()</title>
<indexterm zone="gnutls-alert-send"><primary>gnutls_alert_send</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 gnutls_alert_send                   (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter><link linkend="gnutls-alert-level-t"><type>gnutls_alert_level_t</type></link> level</parameter>,
                                                         <parameter><link linkend="gnutls-alert-description-t"><type>gnutls_alert_description_t</type></link> desc</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>session</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>level</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>desc</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-alert-send-appropriate" role="function">
<title>gnutls_alert_send_appropriate ()</title>
<indexterm zone="gnutls-alert-send-appropriate"><primary>gnutls_alert_send_appropriate</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 gnutls_alert_send_appropriate       (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter><link linkend="int"><type>int</type></link> err</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>session</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>err</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-alert-get-name" role="function">
<title>gnutls_alert_get_name ()</title>
<indexterm zone="gnutls-alert-get-name"><primary>gnutls_alert_get_name</primary></indexterm>
<programlisting>const <link linkend="char"><returnvalue>char</returnvalue></link> *        gnutls_alert_get_name               (<parameter><link linkend="gnutls-alert-description-t"><type>gnutls_alert_description_t</type></link> alert</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>alert</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-cipher-get" role="function">
<title>gnutls_cipher_get ()</title>
<indexterm zone="gnutls-cipher-get"><primary>gnutls_cipher_get</primary></indexterm>
<programlisting><link linkend="gnutls-cipher-algorithm-t"><returnvalue>gnutls_cipher_algorithm_t</returnvalue></link>  gnutls_cipher_get            (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>session</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-kx-get" role="function">
<title>gnutls_kx_get ()</title>
<indexterm zone="gnutls-kx-get"><primary>gnutls_kx_get</primary></indexterm>
<programlisting><link linkend="gnutls-kx-algorithm-t"><returnvalue>gnutls_kx_algorithm_t</returnvalue></link>  gnutls_kx_get                    (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>session</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-mac-get" role="function">
<title>gnutls_mac_get ()</title>
<indexterm zone="gnutls-mac-get"><primary>gnutls_mac_get</primary></indexterm>
<programlisting><link linkend="gnutls-mac-algorithm-t"><returnvalue>gnutls_mac_algorithm_t</returnvalue></link>  gnutls_mac_get                  (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>session</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-compression-get" role="function">
<title>gnutls_compression_get ()</title>
<indexterm zone="gnutls-compression-get"><primary>gnutls_compression_get</primary></indexterm>
<programlisting><link linkend="gnutls-compression-method-t"><returnvalue>gnutls_compression_method_t</returnvalue></link>  gnutls_compression_get     (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>session</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-certificate-type-get" role="function">
<title>gnutls_certificate_type_get ()</title>
<indexterm zone="gnutls-certificate-type-get"><primary>gnutls_certificate_type_get</primary></indexterm>
<programlisting><link linkend="gnutls-certificate-type-t"><returnvalue>gnutls_certificate_type_t</returnvalue></link>  gnutls_certificate_type_get  (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>session</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-cipher-get-key-size" role="function">
<title>gnutls_cipher_get_key_size ()</title>
<indexterm zone="gnutls-cipher-get-key-size"><primary>gnutls_cipher_get_key_size</primary></indexterm>
<programlisting><link linkend="size-t"><returnvalue>size_t</returnvalue></link>              gnutls_cipher_get_key_size          (<parameter><link linkend="gnutls-cipher-algorithm-t"><type>gnutls_cipher_algorithm_t</type></link> algorithm</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>algorithm</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-mac-get-key-size" role="function">
<title>gnutls_mac_get_key_size ()</title>
<indexterm zone="gnutls-mac-get-key-size"><primary>gnutls_mac_get_key_size</primary></indexterm>
<programlisting><link linkend="size-t"><returnvalue>size_t</returnvalue></link>              gnutls_mac_get_key_size             (<parameter><link linkend="gnutls-mac-algorithm-t"><type>gnutls_mac_algorithm_t</type></link> algorithm</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>algorithm</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-cipher-get-name" role="function">
<title>gnutls_cipher_get_name ()</title>
<indexterm zone="gnutls-cipher-get-name"><primary>gnutls_cipher_get_name</primary></indexterm>
<programlisting>const <link linkend="char"><returnvalue>char</returnvalue></link> *        gnutls_cipher_get_name              (<parameter><link linkend="gnutls-cipher-algorithm-t"><type>gnutls_cipher_algorithm_t</type></link> algorithm</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>algorithm</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-mac-get-name" role="function">
<title>gnutls_mac_get_name ()</title>
<indexterm zone="gnutls-mac-get-name"><primary>gnutls_mac_get_name</primary></indexterm>
<programlisting>const <link linkend="char"><returnvalue>char</returnvalue></link> *        gnutls_mac_get_name                 (<parameter><link linkend="gnutls-mac-algorithm-t"><type>gnutls_mac_algorithm_t</type></link> algorithm</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>algorithm</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-compression-get-name" role="function">
<title>gnutls_compression_get_name ()</title>
<indexterm zone="gnutls-compression-get-name"><primary>gnutls_compression_get_name</primary></indexterm>
<programlisting>const <link linkend="char"><returnvalue>char</returnvalue></link> *        gnutls_compression_get_name         (<parameter><link linkend="gnutls-compression-method-t"><type>gnutls_compression_method_t</type></link> algorithm</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>algorithm</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-kx-get-name" role="function">
<title>gnutls_kx_get_name ()</title>
<indexterm zone="gnutls-kx-get-name"><primary>gnutls_kx_get_name</primary></indexterm>
<programlisting>const <link linkend="char"><returnvalue>char</returnvalue></link> *        gnutls_kx_get_name                  (<parameter><link linkend="gnutls-kx-algorithm-t"><type>gnutls_kx_algorithm_t</type></link> algorithm</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>algorithm</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-certificate-type-get-name" role="function">
<title>gnutls_certificate_type_get_name ()</title>
<indexterm zone="gnutls-certificate-type-get-name"><primary>gnutls_certificate_type_get_name</primary></indexterm>
<programlisting>const <link linkend="char"><returnvalue>char</returnvalue></link> *        gnutls_certificate_type_get_name    (<parameter><link linkend="gnutls-certificate-type-t"><type>gnutls_certificate_type_t</type></link> type</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>type</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-pk-get-name" role="function">
<title>gnutls_pk_get_name ()</title>
<indexterm zone="gnutls-pk-get-name"><primary>gnutls_pk_get_name</primary></indexterm>
<programlisting>const <link linkend="char"><returnvalue>char</returnvalue></link> *        gnutls_pk_get_name                  (<parameter><link linkend="gnutls-pk-algorithm-t"><type>gnutls_pk_algorithm_t</type></link> algorithm</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>algorithm</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-sign-get-name" role="function">
<title>gnutls_sign_get_name ()</title>
<indexterm zone="gnutls-sign-get-name"><primary>gnutls_sign_get_name</primary></indexterm>
<programlisting>const <link linkend="char"><returnvalue>char</returnvalue></link> *        gnutls_sign_get_name                (<parameter><link linkend="gnutls-sign-algorithm-t"><type>gnutls_sign_algorithm_t</type></link> algorithm</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>algorithm</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-mac-get-id" role="function">
<title>gnutls_mac_get_id ()</title>
<indexterm zone="gnutls-mac-get-id"><primary>gnutls_mac_get_id</primary></indexterm>
<programlisting><link linkend="gnutls-mac-algorithm-t"><returnvalue>gnutls_mac_algorithm_t</returnvalue></link>  gnutls_mac_get_id               (<parameter>const <link linkend="char"><type>char</type></link> *name</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>name</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-compression-get-id" role="function">
<title>gnutls_compression_get_id ()</title>
<indexterm zone="gnutls-compression-get-id"><primary>gnutls_compression_get_id</primary></indexterm>
<programlisting><link linkend="gnutls-compression-method-t"><returnvalue>gnutls_compression_method_t</returnvalue></link>  gnutls_compression_get_id  (<parameter>const <link linkend="char"><type>char</type></link> *name</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>name</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-cipher-get-id" role="function">
<title>gnutls_cipher_get_id ()</title>
<indexterm zone="gnutls-cipher-get-id"><primary>gnutls_cipher_get_id</primary></indexterm>
<programlisting><link linkend="gnutls-cipher-algorithm-t"><returnvalue>gnutls_cipher_algorithm_t</returnvalue></link>  gnutls_cipher_get_id         (<parameter>const <link linkend="char"><type>char</type></link> *name</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>name</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-kx-get-id" role="function">
<title>gnutls_kx_get_id ()</title>
<indexterm zone="gnutls-kx-get-id"><primary>gnutls_kx_get_id</primary></indexterm>
<programlisting><link linkend="gnutls-kx-algorithm-t"><returnvalue>gnutls_kx_algorithm_t</returnvalue></link>  gnutls_kx_get_id                 (<parameter>const <link linkend="char"><type>char</type></link> *name</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>name</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-protocol-get-id" role="function">
<title>gnutls_protocol_get_id ()</title>
<indexterm zone="gnutls-protocol-get-id"><primary>gnutls_protocol_get_id</primary></indexterm>
<programlisting><link linkend="gnutls-protocol-t"><returnvalue>gnutls_protocol_t</returnvalue></link>   gnutls_protocol_get_id              (<parameter>const <link linkend="char"><type>char</type></link> *name</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>name</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-certificate-type-get-id" role="function">
<title>gnutls_certificate_type_get_id ()</title>
<indexterm zone="gnutls-certificate-type-get-id"><primary>gnutls_certificate_type_get_id</primary></indexterm>
<programlisting><link linkend="gnutls-certificate-type-t"><returnvalue>gnutls_certificate_type_t</returnvalue></link>  gnutls_certificate_type_get_id
                                                        (<parameter>const <link linkend="char"><type>char</type></link> *name</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>name</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-pk-get-id" role="function">
<title>gnutls_pk_get_id ()</title>
<indexterm zone="gnutls-pk-get-id"><primary>gnutls_pk_get_id</primary></indexterm>
<programlisting><link linkend="gnutls-pk-algorithm-t"><returnvalue>gnutls_pk_algorithm_t</returnvalue></link>  gnutls_pk_get_id                 (<parameter>const <link linkend="char"><type>char</type></link> *name</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>name</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-sign-get-id" role="function">
<title>gnutls_sign_get_id ()</title>
<indexterm zone="gnutls-sign-get-id"><primary>gnutls_sign_get_id</primary></indexterm>
<programlisting><link linkend="gnutls-sign-algorithm-t"><returnvalue>gnutls_sign_algorithm_t</returnvalue></link>  gnutls_sign_get_id             (<parameter>const <link linkend="char"><type>char</type></link> *name</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>name</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-cipher-list" role="function">
<title>gnutls_cipher_list ()</title>
<indexterm zone="gnutls-cipher-list"><primary>gnutls_cipher_list</primary></indexterm>
<programlisting>const <link linkend="gnutls-cipher-algorithm-t"><returnvalue>gnutls_cipher_algorithm_t</returnvalue></link> * gnutls_cipher_list    (<parameter><type>void</type></parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-mac-list" role="function">
<title>gnutls_mac_list ()</title>
<indexterm zone="gnutls-mac-list"><primary>gnutls_mac_list</primary></indexterm>
<programlisting>const <link linkend="gnutls-mac-algorithm-t"><returnvalue>gnutls_mac_algorithm_t</returnvalue></link> * gnutls_mac_list          (<parameter><type>void</type></parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-compression-list" role="function">
<title>gnutls_compression_list ()</title>
<indexterm zone="gnutls-compression-list"><primary>gnutls_compression_list</primary></indexterm>
<programlisting>const <link linkend="gnutls-compression-method-t"><returnvalue>gnutls_compression_method_t</returnvalue></link> * gnutls_compression_list
                                                        (<parameter><type>void</type></parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-protocol-list" role="function">
<title>gnutls_protocol_list ()</title>
<indexterm zone="gnutls-protocol-list"><primary>gnutls_protocol_list</primary></indexterm>
<programlisting>const <link linkend="gnutls-protocol-t"><returnvalue>gnutls_protocol_t</returnvalue></link> * gnutls_protocol_list          (<parameter><type>void</type></parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-certificate-type-list" role="function">
<title>gnutls_certificate_type_list ()</title>
<indexterm zone="gnutls-certificate-type-list"><primary>gnutls_certificate_type_list</primary></indexterm>
<programlisting>const <link linkend="gnutls-certificate-type-t"><returnvalue>gnutls_certificate_type_t</returnvalue></link> * gnutls_certificate_type_list
                                                        (<parameter><type>void</type></parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-kx-list" role="function">
<title>gnutls_kx_list ()</title>
<indexterm zone="gnutls-kx-list"><primary>gnutls_kx_list</primary></indexterm>
<programlisting>const <link linkend="gnutls-kx-algorithm-t"><returnvalue>gnutls_kx_algorithm_t</returnvalue></link> * gnutls_kx_list            (<parameter><type>void</type></parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-pk-list" role="function">
<title>gnutls_pk_list ()</title>
<indexterm zone="gnutls-pk-list"><primary>gnutls_pk_list</primary></indexterm>
<programlisting>const <link linkend="gnutls-pk-algorithm-t"><returnvalue>gnutls_pk_algorithm_t</returnvalue></link> * gnutls_pk_list            (<parameter><type>void</type></parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-sign-list" role="function">
<title>gnutls_sign_list ()</title>
<indexterm zone="gnutls-sign-list"><primary>gnutls_sign_list</primary></indexterm>
<programlisting>const <link linkend="gnutls-sign-algorithm-t"><returnvalue>gnutls_sign_algorithm_t</returnvalue></link> * gnutls_sign_list        (<parameter><type>void</type></parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-cipher-suite-info" role="function">
<title>gnutls_cipher_suite_info ()</title>
<indexterm zone="gnutls-cipher-suite-info"><primary>gnutls_cipher_suite_info</primary></indexterm>
<programlisting>const <link linkend="char"><returnvalue>char</returnvalue></link> *        gnutls_cipher_suite_info            (<parameter><link linkend="size-t"><type>size_t</type></link> idx</parameter>,
                                                         <parameter><link linkend="char"><type>char</type></link> *cs_id</parameter>,
                                                         <parameter><link linkend="gnutls-kx-algorithm-t"><type>gnutls_kx_algorithm_t</type></link> *kx</parameter>,
                                                         <parameter><link linkend="gnutls-cipher-algorithm-t"><type>gnutls_cipher_algorithm_t</type></link> *cipher</parameter>,
                                                         <parameter><link linkend="gnutls-mac-algorithm-t"><type>gnutls_mac_algorithm_t</type></link> *mac</parameter>,
                                                         <parameter><link linkend="gnutls-protocol-t"><type>gnutls_protocol_t</type></link> *version</parameter>);</programlisting>
<para>
Get information about supported cipher suites.  Use the function
iteratively to get information about all supported cipher suites.
Call with idx=0 to get information about first cipher suite, then
idx=1 and so on until the function returns NULL.</para>
<variablelist role="params">
<varlistentry><term><parameter>idx</parameter>&#160;:</term>
<listitem><simpara>index of cipher suite to get information about, starts on 0.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>cs_id</parameter>&#160;:</term>
<listitem><simpara>output buffer with room for 2 bytes, indicating cipher suite value
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>kx</parameter>&#160;:</term>
<listitem><simpara>output variable indicating key exchange algorithm, or <link linkend="NULL:CAPS"><literal>NULL</literal></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>cipher</parameter>&#160;:</term>
<listitem><simpara>output variable indicating cipher, or <link linkend="NULL:CAPS"><literal>NULL</literal></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>mac</parameter>&#160;:</term>
<listitem><simpara>output variable indicating MAC algorithm, or <link linkend="NULL:CAPS"><literal>NULL</literal></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>version</parameter>&#160;:</term>
<listitem><simpara>output variable indicating TLS protocol version, or <link linkend="NULL:CAPS"><literal>NULL</literal></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> the name of <parameter>idx</parameter> cipher suite, and set the information
about the cipher suite in the output variables.  If <parameter>idx</parameter> is out of
bounds, <link linkend="NULL:CAPS"><literal>NULL</literal></link> is returned.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-error-is-fatal" role="function">
<title>gnutls_error_is_fatal ()</title>
<indexterm zone="gnutls-error-is-fatal"><primary>gnutls_error_is_fatal</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 gnutls_error_is_fatal               (<parameter><link linkend="int"><type>int</type></link> error</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>error</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-error-to-alert" role="function">
<title>gnutls_error_to_alert ()</title>
<indexterm zone="gnutls-error-to-alert"><primary>gnutls_error_to_alert</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 gnutls_error_to_alert               (<parameter><link linkend="int"><type>int</type></link> err</parameter>,
                                                         <parameter><link linkend="int"><type>int</type></link> *level</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>err</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>level</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-perror" role="function">
<title>gnutls_perror ()</title>
<indexterm zone="gnutls-perror"><primary>gnutls_perror</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                gnutls_perror                       (<parameter><link linkend="int"><type>int</type></link> error</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>error</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-strerror" role="function">
<title>gnutls_strerror ()</title>
<indexterm zone="gnutls-strerror"><primary>gnutls_strerror</primary></indexterm>
<programlisting>const <link linkend="char"><returnvalue>char</returnvalue></link> *        gnutls_strerror                     (<parameter><link linkend="int"><type>int</type></link> error</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>error</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-strerror-name" role="function" condition="since:2.6.0">
<title>gnutls_strerror_name ()</title>
<indexterm zone="gnutls-strerror-name" role="2.6.0"><primary>gnutls_strerror_name</primary></indexterm>
<programlisting>const <link linkend="char"><returnvalue>char</returnvalue></link> *        gnutls_strerror_name                (<parameter><link linkend="int"><type>int</type></link> error</parameter>);</programlisting>
<para>
Return the GnuTLS error code define as a string.  For example,
gnutls_strerror_name (GNUTLS_E_DH_PRIME_UNACCEPTABLE) will return
the string "GNUTLS_E_DH_PRIME_UNACCEPTABLE".</para>
<variablelist role="params">
<varlistentry><term><parameter>error</parameter>&#160;:</term>
<listitem><simpara>is an error returned by a gnutls function.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> A string corresponding to the symbol name of the error
code.

</simpara></listitem></varlistentry>
</variablelist><para role="since">Since 2.6.0</para></refsect2>
<refsect2 id="gnutls-handshake-set-private-extensions" role="function">
<title>gnutls_handshake_set_private_extensions ()</title>
<indexterm zone="gnutls-handshake-set-private-extensions"><primary>gnutls_handshake_set_private_extensions</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                gnutls_handshake_set_private_extensions
                                                        (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter><link linkend="int"><type>int</type></link> allow</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>session</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>allow</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-handshake-get-last-out" role="function">
<title>gnutls_handshake_get_last_out ()</title>
<indexterm zone="gnutls-handshake-get-last-out"><primary>gnutls_handshake_get_last_out</primary></indexterm>
<programlisting><link linkend="gnutls-handshake-description-t"><returnvalue>gnutls_handshake_description_t</returnvalue></link>  gnutls_handshake_get_last_out
                                                        (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>session</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-handshake-get-last-in" role="function">
<title>gnutls_handshake_get_last_in ()</title>
<indexterm zone="gnutls-handshake-get-last-in"><primary>gnutls_handshake_get_last_in</primary></indexterm>
<programlisting><link linkend="gnutls-handshake-description-t"><returnvalue>gnutls_handshake_description_t</returnvalue></link>  gnutls_handshake_get_last_in
                                                        (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>session</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-record-send" role="function">
<title>gnutls_record_send ()</title>
<indexterm zone="gnutls-record-send"><primary>gnutls_record_send</primary></indexterm>
<programlisting><link linkend="ssize-t"><returnvalue>ssize_t</returnvalue></link>             gnutls_record_send                  (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter>const <link linkend="void"><type>void</type></link> *data</parameter>,
                                                         <parameter><link linkend="size-t"><type>size_t</type></link> sizeofdata</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>session</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>data</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>sizeofdata</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-record-recv" role="function">
<title>gnutls_record_recv ()</title>
<indexterm zone="gnutls-record-recv"><primary>gnutls_record_recv</primary></indexterm>
<programlisting><link linkend="ssize-t"><returnvalue>ssize_t</returnvalue></link>             gnutls_record_recv                  (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter><link linkend="void"><type>void</type></link> *data</parameter>,
                                                         <parameter><link linkend="size-t"><type>size_t</type></link> sizeofdata</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>session</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>data</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>sizeofdata</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-read" role="macro">
<title>gnutls_read</title>
<indexterm zone="gnutls-read"><primary>gnutls_read</primary></indexterm>
<programlisting>#define gnutls_read gnutls_record_recv
</programlisting>
<para>
</para></refsect2>
<refsect2 id="gnutls-write" role="macro">
<title>gnutls_write</title>
<indexterm zone="gnutls-write"><primary>gnutls_write</primary></indexterm>
<programlisting>#define gnutls_write gnutls_record_send
</programlisting>
<para>
</para></refsect2>
<refsect2 id="gnutls-session-enable-compatibility-mode" role="function">
<title>gnutls_session_enable_compatibility_mode ()</title>
<indexterm zone="gnutls-session-enable-compatibility-mode"><primary>gnutls_session_enable_compatibility_mode</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                gnutls_session_enable_compatibility_mode
                                                        (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>session</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-record-disable-padding" role="function">
<title>gnutls_record_disable_padding ()</title>
<indexterm zone="gnutls-record-disable-padding"><primary>gnutls_record_disable_padding</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                gnutls_record_disable_padding       (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>session</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-record-get-direction" role="function">
<title>gnutls_record_get_direction ()</title>
<indexterm zone="gnutls-record-get-direction"><primary>gnutls_record_get_direction</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 gnutls_record_get_direction         (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>session</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-record-get-max-size" role="function">
<title>gnutls_record_get_max_size ()</title>
<indexterm zone="gnutls-record-get-max-size"><primary>gnutls_record_get_max_size</primary></indexterm>
<programlisting><link linkend="size-t"><returnvalue>size_t</returnvalue></link>              gnutls_record_get_max_size          (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>session</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-record-set-max-size" role="function">
<title>gnutls_record_set_max_size ()</title>
<indexterm zone="gnutls-record-set-max-size"><primary>gnutls_record_set_max_size</primary></indexterm>
<programlisting><link linkend="ssize-t"><returnvalue>ssize_t</returnvalue></link>             gnutls_record_set_max_size          (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter><link linkend="size-t"><type>size_t</type></link> size</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>session</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>size</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-record-check-pending" role="function">
<title>gnutls_record_check_pending ()</title>
<indexterm zone="gnutls-record-check-pending"><primary>gnutls_record_check_pending</primary></indexterm>
<programlisting><link linkend="size-t"><returnvalue>size_t</returnvalue></link>              gnutls_record_check_pending         (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>session</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-prf" role="function">
<title>gnutls_prf ()</title>
<indexterm zone="gnutls-prf"><primary>gnutls_prf</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 gnutls_prf                          (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter><link linkend="size-t"><type>size_t</type></link> label_size</parameter>,
                                                         <parameter>const <link linkend="char"><type>char</type></link> *label</parameter>,
                                                         <parameter><link linkend="int"><type>int</type></link> server_random_first</parameter>,
                                                         <parameter><link linkend="size-t"><type>size_t</type></link> extra_size</parameter>,
                                                         <parameter>const <link linkend="char"><type>char</type></link> *extra</parameter>,
                                                         <parameter><link linkend="size-t"><type>size_t</type></link> outsize</parameter>,
                                                         <parameter><link linkend="char"><type>char</type></link> *out</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>session</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>label_size</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>label</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>server_random_first</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>extra_size</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>extra</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>outsize</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>out</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-prf-raw" role="function">
<title>gnutls_prf_raw ()</title>
<indexterm zone="gnutls-prf-raw"><primary>gnutls_prf_raw</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 gnutls_prf_raw                      (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter><link linkend="size-t"><type>size_t</type></link> label_size</parameter>,
                                                         <parameter>const <link linkend="char"><type>char</type></link> *label</parameter>,
                                                         <parameter><link linkend="size-t"><type>size_t</type></link> seed_size</parameter>,
                                                         <parameter>const <link linkend="char"><type>char</type></link> *seed</parameter>,
                                                         <parameter><link linkend="size-t"><type>size_t</type></link> outsize</parameter>,
                                                         <parameter><link linkend="char"><type>char</type></link> *out</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>session</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>label_size</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>label</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>seed_size</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>seed</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>outsize</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>out</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-ext-recv-func" role="function">
<title>gnutls_ext_recv_func ()</title>
<indexterm zone="gnutls-ext-recv-func"><primary>gnutls_ext_recv_func</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 (*gnutls_ext_recv_func)             (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter>unsigned <link linkend="char"><type>char</type></link> *data</parameter>,
                                                         <parameter><link linkend="size-t"><type>size_t</type></link> len</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>session</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>data</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>len</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-ext-send-func" role="function">
<title>gnutls_ext_send_func ()</title>
<indexterm zone="gnutls-ext-send-func"><primary>gnutls_ext_send_func</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 (*gnutls_ext_send_func)             (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter>unsigned <link linkend="char"><type>char</type></link> *data</parameter>,
                                                         <parameter><link linkend="size-t"><type>size_t</type></link> len</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>session</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>data</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>len</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-ext-parse-type-t" role="enum">
<title>enum gnutls_ext_parse_type_t</title>
<indexterm zone="gnutls-ext-parse-type-t"><primary>gnutls_ext_parse_type_t</primary></indexterm>
<programlisting>  typedef enum
    {
      GNUTLS_EXT_ANY,
      GNUTLS_EXT_APPLICATION,
      GNUTLS_EXT_TLS
    } gnutls_ext_parse_type_t;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="gnutls-ext-register" role="function">
<title>gnutls_ext_register ()</title>
<indexterm zone="gnutls-ext-register"><primary>gnutls_ext_register</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 gnutls_ext_register                 (<parameter><link linkend="int"><type>int</type></link> type</parameter>,
                                                         <parameter>const <link linkend="char"><type>char</type></link> *name</parameter>,
                                                         <parameter><link linkend="gnutls-ext-parse-type-t"><type>gnutls_ext_parse_type_t</type></link> parse_type</parameter>,
                                                         <parameter><link linkend="gnutls-ext-recv-func"><type>gnutls_ext_recv_func</type></link> recv_func</parameter>,
                                                         <parameter><link linkend="gnutls-ext-send-func"><type>gnutls_ext_send_func</type></link> send_func</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>type</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>name</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>parse_type</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>recv_func</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>send_func</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-server-name-type-t" role="enum">
<title>enum gnutls_server_name_type_t</title>
<indexterm zone="gnutls-server-name-type-t"><primary>gnutls_server_name_type_t</primary></indexterm>
<programlisting>  typedef enum
  {
    GNUTLS_NAME_DNS = 1
  } gnutls_server_name_type_t;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="gnutls-server-name-set" role="function">
<title>gnutls_server_name_set ()</title>
<indexterm zone="gnutls-server-name-set"><primary>gnutls_server_name_set</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 gnutls_server_name_set              (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter><link linkend="gnutls-server-name-type-t"><type>gnutls_server_name_type_t</type></link> type</parameter>,
                                                         <parameter>const <link linkend="void"><type>void</type></link> *name</parameter>,
                                                         <parameter><link linkend="size-t"><type>size_t</type></link> name_length</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>session</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>type</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>name</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>name_length</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-server-name-get" role="function">
<title>gnutls_server_name_get ()</title>
<indexterm zone="gnutls-server-name-get"><primary>gnutls_server_name_get</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 gnutls_server_name_get              (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter><link linkend="void"><type>void</type></link> *data</parameter>,
                                                         <parameter><link linkend="size-t"><type>size_t</type></link> *data_length</parameter>,
                                                         <parameter>unsigned <link linkend="int"><type>int</type></link> *type</parameter>,
                                                         <parameter>unsigned <link linkend="int"><type>int</type></link> indx</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>session</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>data</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>data_length</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>type</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>indx</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-oprfi-enable-client" role="function">
<title>gnutls_oprfi_enable_client ()</title>
<indexterm zone="gnutls-oprfi-enable-client"><primary>gnutls_oprfi_enable_client</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                gnutls_oprfi_enable_client          (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter><link linkend="size-t"><type>size_t</type></link> len</parameter>,
                                                         <parameter>unsigned <link linkend="char"><type>char</type></link> *data</parameter>);</programlisting>
<para>
Request that the client should attempt to negotiate the Opaque PRF
Input TLS extension, using the given data as the client's Opaque
PRF input.
</para>
<para>
The data is copied into the session context after this call, so you
may de-allocate it immediately after calling this function.</para>
<variablelist role="params">
<varlistentry><term><parameter>session</parameter>&#160;:</term>
<listitem><simpara>is a <link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> structure.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>len</parameter>&#160;:</term>
<listitem><simpara>length of Opaque PRF data to use in client.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>data</parameter>&#160;:</term>
<listitem><simpara>Opaque PRF data to use in client.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-oprfi-callback-func" role="function">
<title>gnutls_oprfi_callback_func ()</title>
<indexterm zone="gnutls-oprfi-callback-func"><primary>gnutls_oprfi_callback_func</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 (*gnutls_oprfi_callback_func)       (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter><link linkend="void"><type>void</type></link> *userdata</parameter>,
                                                         <parameter><link linkend="size-t"><type>size_t</type></link> oprfi_len</parameter>,
                                                         <parameter>unsigned <link linkend="char"><type>char</type></link> *in_oprfi</parameter>,
                                                         <parameter>unsigned <link linkend="char"><type>char</type></link> *out_oprfi</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>session</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>userdata</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>oprfi_len</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in_oprfi</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>out_oprfi</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-oprfi-enable-server" role="function">
<title>gnutls_oprfi_enable_server ()</title>
<indexterm zone="gnutls-oprfi-enable-server"><primary>gnutls_oprfi_enable_server</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                gnutls_oprfi_enable_server          (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter><link linkend="gnutls-oprfi-callback-func"><type>gnutls_oprfi_callback_func</type></link> cb</parameter>,
                                                         <parameter><link linkend="void"><type>void</type></link> *userdata</parameter>);</programlisting>
<para>
Request that the server should attempt to accept the Opaque PRF
Input TLS extension.  If the client requests the extension, the
provided callback <parameter>cb</parameter> will be invoked.  The callback must have the
following prototype:
</para>
<para>
int callback (gnutls_session_t session, void *userdata,
              size_t oprfi_len, const unsigned char *in_oprfi,
              unsigned char *out_oprfi);
</para>
<para>
The callback can inspect the client-provided data in the input
parameters, and specify its own opaque prf input data in the output
variable.  The function must return 0 on success, otherwise the
handshake will be aborted.</para>
<variablelist role="params">
<varlistentry><term><parameter>session</parameter>&#160;:</term>
<listitem><simpara>is a <link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> structure.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>cb</parameter>&#160;:</term>
<listitem><simpara>function pointer to Opaque PRF extension server callback.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>userdata</parameter>&#160;:</term>
<listitem><simpara>hook passed to callback function for passing application state.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-supplemental-data-format-type-t" role="enum">
<title>enum gnutls_supplemental_data_format_type_t</title>
<indexterm zone="gnutls-supplemental-data-format-type-t"><primary>gnutls_supplemental_data_format_type_t</primary></indexterm>
<programlisting>  typedef enum
    {
      GNUTLS_SUPPLEMENTAL_USER_MAPPING_DATA = 0
    } gnutls_supplemental_data_format_type_t;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="gnutls-supplemental-get-name" role="function">
<title>gnutls_supplemental_get_name ()</title>
<indexterm zone="gnutls-supplemental-get-name"><primary>gnutls_supplemental_get_name</primary></indexterm>
<programlisting>const <link linkend="char"><returnvalue>char</returnvalue></link> *        gnutls_supplemental_get_name        (<parameter><link linkend="gnutls-supplemental-data-format-type-t"><type>gnutls_supplemental_data_format_type_t</type></link> type</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>type</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-cipher-set-priority" role="function">
<title>gnutls_cipher_set_priority ()</title>
<indexterm zone="gnutls-cipher-set-priority"><primary>gnutls_cipher_set_priority</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 gnutls_cipher_set_priority          (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter>const <link linkend="int"><type>int</type></link> *list</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>session</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>list</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-mac-set-priority" role="function">
<title>gnutls_mac_set_priority ()</title>
<indexterm zone="gnutls-mac-set-priority"><primary>gnutls_mac_set_priority</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 gnutls_mac_set_priority             (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter>const <link linkend="int"><type>int</type></link> *list</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>session</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>list</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-compression-set-priority" role="function">
<title>gnutls_compression_set_priority ()</title>
<indexterm zone="gnutls-compression-set-priority"><primary>gnutls_compression_set_priority</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 gnutls_compression_set_priority     (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter>const <link linkend="int"><type>int</type></link> *list</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>session</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>list</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-kx-set-priority" role="function">
<title>gnutls_kx_set_priority ()</title>
<indexterm zone="gnutls-kx-set-priority"><primary>gnutls_kx_set_priority</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 gnutls_kx_set_priority              (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter>const <link linkend="int"><type>int</type></link> *list</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>session</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>list</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-protocol-set-priority" role="function">
<title>gnutls_protocol_set_priority ()</title>
<indexterm zone="gnutls-protocol-set-priority"><primary>gnutls_protocol_set_priority</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 gnutls_protocol_set_priority        (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter>const <link linkend="int"><type>int</type></link> *list</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>session</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>list</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-certificate-type-set-priority" role="function">
<title>gnutls_certificate_type_set_priority ()</title>
<indexterm zone="gnutls-certificate-type-set-priority"><primary>gnutls_certificate_type_set_priority</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 gnutls_certificate_type_set_priority
                                                        (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter>const <link linkend="int"><type>int</type></link> *list</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>session</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>list</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-priority-init" role="function">
<title>gnutls_priority_init ()</title>
<indexterm zone="gnutls-priority-init"><primary>gnutls_priority_init</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 gnutls_priority_init                (<parameter><link linkend="gnutls-priority-t"><type>gnutls_priority_t</type></link> *priority_cache</parameter>,
                                                         <parameter>const <link linkend="char"><type>char</type></link> *priorities</parameter>,
                                                         <parameter>const <link linkend="char"><type>char</type></link> **err_pos</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>priority_cache</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>priorities</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>err_pos</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-priority-deinit" role="function">
<title>gnutls_priority_deinit ()</title>
<indexterm zone="gnutls-priority-deinit"><primary>gnutls_priority_deinit</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                gnutls_priority_deinit              (<parameter><link linkend="gnutls-priority-t"><type>gnutls_priority_t</type></link> priority_cache</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>priority_cache</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-priority-set" role="function">
<title>gnutls_priority_set ()</title>
<indexterm zone="gnutls-priority-set"><primary>gnutls_priority_set</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 gnutls_priority_set                 (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter><link linkend="gnutls-priority-t"><type>gnutls_priority_t</type></link> priority</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>session</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>priority</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-priority-set-direct" role="function">
<title>gnutls_priority_set_direct ()</title>
<indexterm zone="gnutls-priority-set-direct"><primary>gnutls_priority_set_direct</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 gnutls_priority_set_direct          (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter>const <link linkend="char"><type>char</type></link> *priorities</parameter>,
                                                         <parameter>const <link linkend="char"><type>char</type></link> **err_pos</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>session</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>priorities</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>err_pos</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-set-default-priority" role="function">
<title>gnutls_set_default_priority ()</title>
<indexterm zone="gnutls-set-default-priority"><primary>gnutls_set_default_priority</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 gnutls_set_default_priority         (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>session</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-set-default-export-priority" role="function">
<title>gnutls_set_default_export_priority ()</title>
<indexterm zone="gnutls-set-default-export-priority"><primary>gnutls_set_default_export_priority</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 gnutls_set_default_export_priority  (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>session</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-cipher-suite-get-name" role="function">
<title>gnutls_cipher_suite_get_name ()</title>
<indexterm zone="gnutls-cipher-suite-get-name"><primary>gnutls_cipher_suite_get_name</primary></indexterm>
<programlisting>const <link linkend="char"><returnvalue>char</returnvalue></link> *        gnutls_cipher_suite_get_name        (<parameter><link linkend="gnutls-kx-algorithm-t"><type>gnutls_kx_algorithm_t</type></link> kx_algorithm</parameter>,
                                                         <parameter><link linkend="gnutls-cipher-algorithm-t"><type>gnutls_cipher_algorithm_t</type></link> cipher_algorithm</parameter>,
                                                         <parameter><link linkend="gnutls-mac-algorithm-t"><type>gnutls_mac_algorithm_t</type></link> mac_algorithm</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>kx_algorithm</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>cipher_algorithm</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>mac_algorithm</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-protocol-get-version" role="function">
<title>gnutls_protocol_get_version ()</title>
<indexterm zone="gnutls-protocol-get-version"><primary>gnutls_protocol_get_version</primary></indexterm>
<programlisting><link linkend="gnutls-protocol-t"><returnvalue>gnutls_protocol_t</returnvalue></link>   gnutls_protocol_get_version         (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>session</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-protocol-get-name" role="function">
<title>gnutls_protocol_get_name ()</title>
<indexterm zone="gnutls-protocol-get-name"><primary>gnutls_protocol_get_name</primary></indexterm>
<programlisting>const <link linkend="char"><returnvalue>char</returnvalue></link> *        gnutls_protocol_get_name            (<parameter><link linkend="gnutls-protocol-t"><type>gnutls_protocol_t</type></link> version</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>version</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-session-set-data" role="function">
<title>gnutls_session_set_data ()</title>
<indexterm zone="gnutls-session-set-data"><primary>gnutls_session_set_data</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 gnutls_session_set_data             (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter>const <link linkend="void"><type>void</type></link> *session_data</parameter>,
                                                         <parameter><link linkend="size-t"><type>size_t</type></link> session_data_size</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>session</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>session_data</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>session_data_size</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-session-get-data" role="function">
<title>gnutls_session_get_data ()</title>
<indexterm zone="gnutls-session-get-data"><primary>gnutls_session_get_data</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 gnutls_session_get_data             (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter><link linkend="void"><type>void</type></link> *session_data</parameter>,
                                                         <parameter><link linkend="size-t"><type>size_t</type></link> *session_data_size</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>session</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>session_data</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>session_data_size</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-session-get-data2" role="function">
<title>gnutls_session_get_data2 ()</title>
<indexterm zone="gnutls-session-get-data2"><primary>gnutls_session_get_data2</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 gnutls_session_get_data2            (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter><link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> *data</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>session</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>data</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="GNUTLS-MAX-SESSION-ID:CAPS" role="macro">
<title>GNUTLS_MAX_SESSION_ID</title>
<indexterm zone="GNUTLS-MAX-SESSION-ID:CAPS"><primary>GNUTLS_MAX_SESSION_ID</primary></indexterm>
<programlisting>#define GNUTLS_MAX_SESSION_ID 32
</programlisting>
<para>
</para></refsect2>
<refsect2 id="gnutls-session-get-id" role="function">
<title>gnutls_session_get_id ()</title>
<indexterm zone="gnutls-session-get-id"><primary>gnutls_session_get_id</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 gnutls_session_get_id               (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter><link linkend="void"><type>void</type></link> *session_id</parameter>,
                                                         <parameter><link linkend="size-t"><type>size_t</type></link> *session_id_size</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>session</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>session_id</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>session_id_size</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="GNUTLS-MASTER-SIZE:CAPS" role="macro">
<title>GNUTLS_MASTER_SIZE</title>
<indexterm zone="GNUTLS-MASTER-SIZE:CAPS"><primary>GNUTLS_MASTER_SIZE</primary></indexterm>
<programlisting>#define GNUTLS_MASTER_SIZE 48
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNUTLS-RANDOM-SIZE:CAPS" role="macro">
<title>GNUTLS_RANDOM_SIZE</title>
<indexterm zone="GNUTLS-RANDOM-SIZE:CAPS"><primary>GNUTLS_RANDOM_SIZE</primary></indexterm>
<programlisting>#define GNUTLS_RANDOM_SIZE 32
</programlisting>
<para>
</para></refsect2>
<refsect2 id="gnutls-session-get-server-random" role="function">
<title>gnutls_session_get_server_random ()</title>
<indexterm zone="gnutls-session-get-server-random"><primary>gnutls_session_get_server_random</primary></indexterm>
<programlisting>const <link linkend="void"><returnvalue>void</returnvalue></link> *        gnutls_session_get_server_random    (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>session</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-session-get-client-random" role="function">
<title>gnutls_session_get_client_random ()</title>
<indexterm zone="gnutls-session-get-client-random"><primary>gnutls_session_get_client_random</primary></indexterm>
<programlisting>const <link linkend="void"><returnvalue>void</returnvalue></link> *        gnutls_session_get_client_random    (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>session</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-session-get-master-secret" role="function">
<title>gnutls_session_get_master_secret ()</title>
<indexterm zone="gnutls-session-get-master-secret"><primary>gnutls_session_get_master_secret</primary></indexterm>
<programlisting>const <link linkend="void"><returnvalue>void</returnvalue></link> *        gnutls_session_get_master_secret    (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>session</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-finished-callback-func" role="function">
<title>gnutls_finished_callback_func ()</title>
<indexterm zone="gnutls-finished-callback-func"><primary>gnutls_finished_callback_func</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                (*gnutls_finished_callback_func)    (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter>const <link linkend="void"><type>void</type></link> *finished</parameter>,
                                                         <parameter><link linkend="size-t"><type>size_t</type></link> len</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>session</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>finished</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>len</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-session-set-finished-function" role="function" condition="since:2.6.0">
<title>gnutls_session_set_finished_function ()</title>
<indexterm zone="gnutls-session-set-finished-function" role="2.6.0"><primary>gnutls_session_set_finished_function</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                gnutls_session_set_finished_function
                                                        (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter><link linkend="gnutls-finished-callback-func"><type>gnutls_finished_callback_func</type></link> func</parameter>);</programlisting>
<para>
Register a callback function for the session that will be called
when a TLS Finished message has been generated.  The function is
typically used to copy away the TLS finished message for later use
as a channel binding or similar purpose.
</para>
<para>
The callback should follow this prototype:
</para>
<para>
void callback (gnutls_session_t <parameter>session</parameter>, const void *<parameter>finished</parameter>, size_t <parameter>len</parameter>);
</para>
<para>
The <parameter>finished</parameter> parameter will contain the binary TLS finished
message, and <parameter>len</parameter> will contains its length.  For SSLv3 connections,
the <parameter>len</parameter> parameter will be 36 and for TLS connections it will be
12.
</para>
<para>
It is recommended that the function returns quickly in order to not
delay the handshake.  Use the function to store a copy of the TLS
finished message for later use.</para>
<variablelist role="params">
<varlistentry><term><parameter>session</parameter>&#160;:</term>
<listitem><simpara>is a <link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> structure.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>func</parameter>&#160;:</term>
<listitem><simpara>a <link linkend="gnutls-finished-callback-func"><type>gnutls_finished_callback_func</type></link> callback.
</simpara></listitem></varlistentry>
</variablelist><para role="since">Since 2.6.0</para></refsect2>
<refsect2 id="gnutls-session-is-resumed" role="function">
<title>gnutls_session_is_resumed ()</title>
<indexterm zone="gnutls-session-is-resumed"><primary>gnutls_session_is_resumed</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 gnutls_session_is_resumed           (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>session</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-db-store-func" role="function">
<title>gnutls_db_store_func ()</title>
<indexterm zone="gnutls-db-store-func"><primary>gnutls_db_store_func</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 (*gnutls_db_store_func)             (<parameter><link linkend="void"><type>void</type></link> *Param1</parameter>,
                                                         <parameter><link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> key</parameter>,
                                                         <parameter><link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> data</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>Param1</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>data</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-db-remove-func" role="function">
<title>gnutls_db_remove_func ()</title>
<indexterm zone="gnutls-db-remove-func"><primary>gnutls_db_remove_func</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 (*gnutls_db_remove_func)            (<parameter><link linkend="void"><type>void</type></link> *Param1</parameter>,
                                                         <parameter><link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> key</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>Param1</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-db-retr-func" role="function">
<title>gnutls_db_retr_func ()</title>
<indexterm zone="gnutls-db-retr-func"><primary>gnutls_db_retr_func</primary></indexterm>
<programlisting><link linkend="gnutls-datum-t"><returnvalue>gnutls_datum_t</returnvalue></link>      (*gnutls_db_retr_func)              (<parameter><link linkend="void"><type>void</type></link> *Param1</parameter>,
                                                         <parameter><link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> key</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>Param1</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-db-set-cache-expiration" role="function">
<title>gnutls_db_set_cache_expiration ()</title>
<indexterm zone="gnutls-db-set-cache-expiration"><primary>gnutls_db_set_cache_expiration</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                gnutls_db_set_cache_expiration      (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter><link linkend="int"><type>int</type></link> seconds</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>session</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>seconds</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-db-remove-session" role="function">
<title>gnutls_db_remove_session ()</title>
<indexterm zone="gnutls-db-remove-session"><primary>gnutls_db_remove_session</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                gnutls_db_remove_session            (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>session</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-db-set-retrieve-function" role="function">
<title>gnutls_db_set_retrieve_function ()</title>
<indexterm zone="gnutls-db-set-retrieve-function"><primary>gnutls_db_set_retrieve_function</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                gnutls_db_set_retrieve_function     (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter><link linkend="gnutls-db-retr-func"><type>gnutls_db_retr_func</type></link> retr_func</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>session</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>retr_func</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-db-set-remove-function" role="function">
<title>gnutls_db_set_remove_function ()</title>
<indexterm zone="gnutls-db-set-remove-function"><primary>gnutls_db_set_remove_function</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                gnutls_db_set_remove_function       (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter><link linkend="gnutls-db-remove-func"><type>gnutls_db_remove_func</type></link> rem_func</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>session</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>rem_func</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-db-set-store-function" role="function">
<title>gnutls_db_set_store_function ()</title>
<indexterm zone="gnutls-db-set-store-function"><primary>gnutls_db_set_store_function</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                gnutls_db_set_store_function        (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter><link linkend="gnutls-db-store-func"><type>gnutls_db_store_func</type></link> store_func</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>session</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>store_func</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-db-set-ptr" role="function">
<title>gnutls_db_set_ptr ()</title>
<indexterm zone="gnutls-db-set-ptr"><primary>gnutls_db_set_ptr</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                gnutls_db_set_ptr                   (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter><link linkend="void"><type>void</type></link> *ptr</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>session</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ptr</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-db-get-ptr" role="function">
<title>gnutls_db_get_ptr ()</title>
<indexterm zone="gnutls-db-get-ptr"><primary>gnutls_db_get_ptr</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link> *              gnutls_db_get_ptr                   (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>session</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-db-check-entry" role="function">
<title>gnutls_db_check_entry ()</title>
<indexterm zone="gnutls-db-check-entry"><primary>gnutls_db_check_entry</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 gnutls_db_check_entry               (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter><link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> session_entry</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>session</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>session_entry</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-handshake-post-client-hello-func" role="function">
<title>gnutls_handshake_post_client_hello_func ()</title>
<indexterm zone="gnutls-handshake-post-client-hello-func"><primary>gnutls_handshake_post_client_hello_func</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 (*gnutls_handshake_post_client_hello_func)
                                                        (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> Param1</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>Param1</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-handshake-set-post-client-hello-function" role="function">
<title>gnutls_handshake_set_post_client_hello_function ()</title>
<indexterm zone="gnutls-handshake-set-post-client-hello-function"><primary>gnutls_handshake_set_post_client_hello_function</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                gnutls_handshake_set_post_client_hello_function
                                                        (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter><link linkend="gnutls-handshake-post-client-hello-func"><type>gnutls_handshake_post_client_hello_func</type></link> func</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>session</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>func</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-handshake-set-max-packet-length" role="function">
<title>gnutls_handshake_set_max_packet_length ()</title>
<indexterm zone="gnutls-handshake-set-max-packet-length"><primary>gnutls_handshake_set_max_packet_length</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                gnutls_handshake_set_max_packet_length
                                                        (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter><link linkend="size-t"><type>size_t</type></link> max</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>session</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>max</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-check-version" role="function">
<title>gnutls_check_version ()</title>
<indexterm zone="gnutls-check-version"><primary>gnutls_check_version</primary></indexterm>
<programlisting>const <link linkend="char"><returnvalue>char</returnvalue></link> *        gnutls_check_version                (<parameter>const <link linkend="char"><type>char</type></link> *req_version</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>req_version</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-credentials-clear" role="function">
<title>gnutls_credentials_clear ()</title>
<indexterm zone="gnutls-credentials-clear"><primary>gnutls_credentials_clear</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                gnutls_credentials_clear            (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>session</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-credentials-set" role="function">
<title>gnutls_credentials_set ()</title>
<indexterm zone="gnutls-credentials-set"><primary>gnutls_credentials_set</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 gnutls_credentials_set              (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter><link linkend="gnutls-credentials-type-t"><type>gnutls_credentials_type_t</type></link> type</parameter>,
                                                         <parameter><link linkend="void"><type>void</type></link> *cred</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>session</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>type</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>cred</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-cred-set" role="macro">
<title>gnutls_cred_set</title>
<indexterm zone="gnutls-cred-set"><primary>gnutls_cred_set</primary></indexterm>
<programlisting>#define gnutls_cred_set&#160;gnutls_credentials_set
</programlisting>
<para>
</para></refsect2>
<refsect2 id="gnutls-certificate-credentials-st" role="struct">
<title>struct gnutls_certificate_credentials_st</title>
<indexterm zone="gnutls-certificate-credentials-st"><primary>gnutls_certificate_credentials_st</primary></indexterm>
<programlisting>struct gnutls_certificate_credentials_st;</programlisting>
<para>
</para></refsect2>
<refsect2 id="gnutls-anon-free-server-credentials" role="function">
<title>gnutls_anon_free_server_credentials ()</title>
<indexterm zone="gnutls-anon-free-server-credentials"><primary>gnutls_anon_free_server_credentials</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                gnutls_anon_free_server_credentials (<parameter><link linkend="gnutls-anon-server-credentials-t"><type>gnutls_anon_server_credentials_t</type></link> sc</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>sc</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-anon-allocate-server-credentials" role="function">
<title>gnutls_anon_allocate_server_credentials ()</title>
<indexterm zone="gnutls-anon-allocate-server-credentials"><primary>gnutls_anon_allocate_server_credentials</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 gnutls_anon_allocate_server_credentials
                                                        (<parameter><link linkend="gnutls-anon-server-credentials-t"><type>gnutls_anon_server_credentials_t</type></link> *sc</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>sc</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-anon-set-server-dh-params" role="function">
<title>gnutls_anon_set_server_dh_params ()</title>
<indexterm zone="gnutls-anon-set-server-dh-params"><primary>gnutls_anon_set_server_dh_params</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                gnutls_anon_set_server_dh_params    (<parameter><link linkend="gnutls-anon-server-credentials-t"><type>gnutls_anon_server_credentials_t</type></link> res</parameter>,
                                                         <parameter><link linkend="gnutls-dh-params-t"><type>gnutls_dh_params_t</type></link> dh_params</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>res</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dh_params</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-anon-set-server-params-function" role="function">
<title>gnutls_anon_set_server_params_function ()</title>
<indexterm zone="gnutls-anon-set-server-params-function"><primary>gnutls_anon_set_server_params_function</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                gnutls_anon_set_server_params_function
                                                        (<parameter><link linkend="gnutls-anon-server-credentials-t"><type>gnutls_anon_server_credentials_t</type></link> res</parameter>,
                                                         <parameter><link linkend="gnutls-params-function"><type>gnutls_params_function</type></link> *func</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>res</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>func</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-anon-free-client-credentials" role="function">
<title>gnutls_anon_free_client_credentials ()</title>
<indexterm zone="gnutls-anon-free-client-credentials"><primary>gnutls_anon_free_client_credentials</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                gnutls_anon_free_client_credentials (<parameter><link linkend="gnutls-anon-client-credentials-t"><type>gnutls_anon_client_credentials_t</type></link> sc</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>sc</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-anon-allocate-client-credentials" role="function">
<title>gnutls_anon_allocate_client_credentials ()</title>
<indexterm zone="gnutls-anon-allocate-client-credentials"><primary>gnutls_anon_allocate_client_credentials</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 gnutls_anon_allocate_client_credentials
                                                        (<parameter><link linkend="gnutls-anon-client-credentials-t"><type>gnutls_anon_client_credentials_t</type></link> *sc</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>sc</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-certificate-free-credentials" role="function">
<title>gnutls_certificate_free_credentials ()</title>
<indexterm zone="gnutls-certificate-free-credentials"><primary>gnutls_certificate_free_credentials</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                gnutls_certificate_free_credentials (<parameter><link linkend="gnutls-certificate-credentials-t"><type>gnutls_certificate_credentials_t</type></link> sc</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>sc</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-certificate-allocate-credentials" role="function">
<title>gnutls_certificate_allocate_credentials ()</title>
<indexterm zone="gnutls-certificate-allocate-credentials"><primary>gnutls_certificate_allocate_credentials</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 gnutls_certificate_allocate_credentials
                                                        (<parameter><link linkend="gnutls-certificate-credentials-t"><type>gnutls_certificate_credentials_t</type></link> *res</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>res</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-certificate-free-keys" role="function">
<title>gnutls_certificate_free_keys ()</title>
<indexterm zone="gnutls-certificate-free-keys"><primary>gnutls_certificate_free_keys</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                gnutls_certificate_free_keys        (<parameter><link linkend="gnutls-certificate-credentials-t"><type>gnutls_certificate_credentials_t</type></link> sc</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>sc</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-certificate-free-cas" role="function">
<title>gnutls_certificate_free_cas ()</title>
<indexterm zone="gnutls-certificate-free-cas"><primary>gnutls_certificate_free_cas</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                gnutls_certificate_free_cas         (<parameter><link linkend="gnutls-certificate-credentials-t"><type>gnutls_certificate_credentials_t</type></link> sc</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>sc</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-certificate-free-ca-names" role="function">
<title>gnutls_certificate_free_ca_names ()</title>
<indexterm zone="gnutls-certificate-free-ca-names"><primary>gnutls_certificate_free_ca_names</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                gnutls_certificate_free_ca_names    (<parameter><link linkend="gnutls-certificate-credentials-t"><type>gnutls_certificate_credentials_t</type></link> sc</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>sc</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-certificate-free-crls" role="function">
<title>gnutls_certificate_free_crls ()</title>
<indexterm zone="gnutls-certificate-free-crls"><primary>gnutls_certificate_free_crls</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                gnutls_certificate_free_crls        (<parameter><link linkend="gnutls-certificate-credentials-t"><type>gnutls_certificate_credentials_t</type></link> sc</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>sc</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-certificate-set-dh-params" role="function">
<title>gnutls_certificate_set_dh_params ()</title>
<indexterm zone="gnutls-certificate-set-dh-params"><primary>gnutls_certificate_set_dh_params</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                gnutls_certificate_set_dh_params    (<parameter><link linkend="gnutls-certificate-credentials-t"><type>gnutls_certificate_credentials_t</type></link> res</parameter>,
                                                         <parameter><link linkend="gnutls-dh-params-t"><type>gnutls_dh_params_t</type></link> dh_params</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>res</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dh_params</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-certificate-set-rsa-export-params" role="function">
<title>gnutls_certificate_set_rsa_export_params ()</title>
<indexterm zone="gnutls-certificate-set-rsa-export-params"><primary>gnutls_certificate_set_rsa_export_params</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                gnutls_certificate_set_rsa_export_params
                                                        (<parameter><link linkend="gnutls-certificate-credentials-t"><type>gnutls_certificate_credentials_t</type></link> res</parameter>,
                                                         <parameter><link linkend="gnutls-rsa-params-t"><type>gnutls_rsa_params_t</type></link> rsa_params</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>res</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>rsa_params</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-certificate-set-verify-flags" role="function">
<title>gnutls_certificate_set_verify_flags ()</title>
<indexterm zone="gnutls-certificate-set-verify-flags"><primary>gnutls_certificate_set_verify_flags</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                gnutls_certificate_set_verify_flags (<parameter><link linkend="gnutls-certificate-credentials-t"><type>gnutls_certificate_credentials_t</type></link> res</parameter>,
                                                         <parameter>unsigned <link linkend="int"><type>int</type></link> flags</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>res</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>flags</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-certificate-set-verify-limits" role="function">
<title>gnutls_certificate_set_verify_limits ()</title>
<indexterm zone="gnutls-certificate-set-verify-limits"><primary>gnutls_certificate_set_verify_limits</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                gnutls_certificate_set_verify_limits
                                                        (<parameter><link linkend="gnutls-certificate-credentials-t"><type>gnutls_certificate_credentials_t</type></link> res</parameter>,
                                                         <parameter>unsigned <link linkend="int"><type>int</type></link> max_bits</parameter>,
                                                         <parameter>unsigned <link linkend="int"><type>int</type></link> max_depth</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>res</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>max_bits</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>max_depth</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-certificate-set-x509-trust-file" role="function">
<title>gnutls_certificate_set_x509_trust_file ()</title>
<indexterm zone="gnutls-certificate-set-x509-trust-file"><primary>gnutls_certificate_set_x509_trust_file</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 gnutls_certificate_set_x509_trust_file
                                                        (<parameter><link linkend="gnutls-certificate-credentials-t"><type>gnutls_certificate_credentials_t</type></link> res</parameter>,
                                                         <parameter>const <link linkend="char"><type>char</type></link> *cafile</parameter>,
                                                         <parameter><link linkend="gnutls-x509-crt-fmt-t"><type>gnutls_x509_crt_fmt_t</type></link> type</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>res</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>cafile</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>type</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-certificate-set-x509-trust-mem" role="function">
<title>gnutls_certificate_set_x509_trust_mem ()</title>
<indexterm zone="gnutls-certificate-set-x509-trust-mem"><primary>gnutls_certificate_set_x509_trust_mem</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 gnutls_certificate_set_x509_trust_mem
                                                        (<parameter><link linkend="gnutls-certificate-credentials-t"><type>gnutls_certificate_credentials_t</type></link> res</parameter>,
                                                         <parameter>const <link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> *ca</parameter>,
                                                         <parameter><link linkend="gnutls-x509-crt-fmt-t"><type>gnutls_x509_crt_fmt_t</type></link> type</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>res</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ca</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>type</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-certificate-set-x509-crl-file" role="function">
<title>gnutls_certificate_set_x509_crl_file ()</title>
<indexterm zone="gnutls-certificate-set-x509-crl-file"><primary>gnutls_certificate_set_x509_crl_file</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 gnutls_certificate_set_x509_crl_file
                                                        (<parameter><link linkend="gnutls-certificate-credentials-t"><type>gnutls_certificate_credentials_t</type></link> res</parameter>,
                                                         <parameter>const <link linkend="char"><type>char</type></link> *crlfile</parameter>,
                                                         <parameter><link linkend="gnutls-x509-crt-fmt-t"><type>gnutls_x509_crt_fmt_t</type></link> type</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>res</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>crlfile</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>type</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-certificate-set-x509-crl-mem" role="function">
<title>gnutls_certificate_set_x509_crl_mem ()</title>
<indexterm zone="gnutls-certificate-set-x509-crl-mem"><primary>gnutls_certificate_set_x509_crl_mem</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 gnutls_certificate_set_x509_crl_mem (<parameter><link linkend="gnutls-certificate-credentials-t"><type>gnutls_certificate_credentials_t</type></link> res</parameter>,
                                                         <parameter>const <link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> *CRL</parameter>,
                                                         <parameter><link linkend="gnutls-x509-crt-fmt-t"><type>gnutls_x509_crt_fmt_t</type></link> type</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>res</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>CRL</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>type</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-certificate-set-x509-key-file" role="function">
<title>gnutls_certificate_set_x509_key_file ()</title>
<indexterm zone="gnutls-certificate-set-x509-key-file"><primary>gnutls_certificate_set_x509_key_file</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 gnutls_certificate_set_x509_key_file
                                                        (<parameter><link linkend="gnutls-certificate-credentials-t"><type>gnutls_certificate_credentials_t</type></link> res</parameter>,
                                                         <parameter>const <link linkend="char"><type>char</type></link> *certfile</parameter>,
                                                         <parameter>const <link linkend="char"><type>char</type></link> *keyfile</parameter>,
                                                         <parameter><link linkend="gnutls-x509-crt-fmt-t"><type>gnutls_x509_crt_fmt_t</type></link> type</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>res</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>certfile</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>keyfile</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>type</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-certificate-set-x509-key-mem" role="function">
<title>gnutls_certificate_set_x509_key_mem ()</title>
<indexterm zone="gnutls-certificate-set-x509-key-mem"><primary>gnutls_certificate_set_x509_key_mem</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 gnutls_certificate_set_x509_key_mem (<parameter><link linkend="gnutls-certificate-credentials-t"><type>gnutls_certificate_credentials_t</type></link> res</parameter>,
                                                         <parameter>const <link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> *cert</parameter>,
                                                         <parameter>const <link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> *key</parameter>,
                                                         <parameter><link linkend="gnutls-x509-crt-fmt-t"><type>gnutls_x509_crt_fmt_t</type></link> type</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>res</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>cert</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>type</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-certificate-send-x509-rdn-sequence" role="function">
<title>gnutls_certificate_send_x509_rdn_sequence ()</title>
<indexterm zone="gnutls-certificate-send-x509-rdn-sequence"><primary>gnutls_certificate_send_x509_rdn_sequence</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                gnutls_certificate_send_x509_rdn_sequence
                                                        (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter><link linkend="int"><type>int</type></link> status</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>session</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>status</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-certificate-set-x509-simple-pkcs12-file" role="function">
<title>gnutls_certificate_set_x509_simple_pkcs12_file ()</title>
<indexterm zone="gnutls-certificate-set-x509-simple-pkcs12-file"><primary>gnutls_certificate_set_x509_simple_pkcs12_file</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 gnutls_certificate_set_x509_simple_pkcs12_file
                                                        (<parameter><link linkend="gnutls-certificate-credentials-t"><type>gnutls_certificate_credentials_t</type></link> res</parameter>,
                                                         <parameter>const <link linkend="char"><type>char</type></link> *pkcs12file</parameter>,
                                                         <parameter><link linkend="gnutls-x509-crt-fmt-t"><type>gnutls_x509_crt_fmt_t</type></link> type</parameter>,
                                                         <parameter>const <link linkend="char"><type>char</type></link> *password</parameter>);</programlisting>
<para>
This function sets a certificate/private key pair and/or a CRL in
the gnutls_certificate_credentials_t structure.  This function may
be called more than once (in case multiple keys/certificates exist
for the server).
</para>
<para>
MAC:ed PKCS<link linkend="12:CAPS"><type>12</type></link> files are supported.  Encrypted PKCS<link linkend="12:CAPS"><type>12</type></link> bags are
supported.  Encrypted PKCS#8 private keys are supported.  However,
only password based security, and the same password for all
operations, are supported.
</para>
<para>
The private keys may be RSA PKCS#1 or DSA private keys encoded in
the OpenSSL way.
</para>
<para>
PKCS<link linkend="12:CAPS"><type>12</type></link> file may contain many keys and/or certificates, and there
is no way to identify which key/certificate pair you want.  You
should make sure the PKCS<link linkend="12:CAPS"><type>12</type></link> file only contain one key/certificate
pair and/or one CRL.
</para>
<para>
It is believed that the limitations of this function is acceptable
for most usage, and that any more flexibility would introduce
complexity that would make it harder to use this functionality at
all.</para>
<variablelist role="params">
<varlistentry><term><parameter>res</parameter>&#160;:</term>
<listitem><simpara>is a <link linkend="gnutls-certificate-credentials-t"><type>gnutls_certificate_credentials_t</type></link> structure.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>pkcs12file</parameter>&#160;:</term>
<listitem><simpara>filename of file containing PKCS<link linkend="12:CAPS"><type>12</type></link> blob.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>type</parameter>&#160;:</term>
<listitem><simpara>is PEM or DER of the <parameter>pkcs12file</parameter>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>password</parameter>&#160;:</term>
<listitem><simpara>optional password used to decrypt PKCS<link linkend="12:CAPS"><type>12</type></link> file, bags and keys.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> <link linkend="GNUTLS-E-SUCCESS:CAPS"><literal>GNUTLS_E_SUCCESS</literal></link> on success, or an error code.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-certificate-set-x509-simple-pkcs12-mem" role="function" condition="since:2.8.0">
<title>gnutls_certificate_set_x509_simple_pkcs12_mem ()</title>
<indexterm zone="gnutls-certificate-set-x509-simple-pkcs12-mem" role="2.8.0"><primary>gnutls_certificate_set_x509_simple_pkcs12_mem</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 gnutls_certificate_set_x509_simple_pkcs12_mem
                                                        (<parameter><link linkend="gnutls-certificate-credentials-t"><type>gnutls_certificate_credentials_t</type></link> res</parameter>,
                                                         <parameter>const <link linkend="gnutls-datum"><type>gnutls_datum</type></link> *p12blob</parameter>,
                                                         <parameter><link linkend="gnutls-x509-crt-fmt-t"><type>gnutls_x509_crt_fmt_t</type></link> type</parameter>,
                                                         <parameter>const <link linkend="char"><type>char</type></link> *password</parameter>);</programlisting>
<para>
This function sets a certificate/private key pair and/or a CRL in
the gnutls_certificate_credentials_t structure.  This function may
be called more than once (in case multiple keys/certificates exist
for the server).
</para>
<para>
MAC:ed PKCS<link linkend="12:CAPS"><type>12</type></link> files are supported.  Encrypted PKCS<link linkend="12:CAPS"><type>12</type></link> bags are
supported.  Encrypted PKCS#8 private keys are supported.  However,
only password based security, and the same password for all
operations, are supported.
</para>
<para>
The private keys may be RSA PKCS#1 or DSA private keys encoded in
the OpenSSL way.
</para>
<para>
PKCS<link linkend="12:CAPS"><type>12</type></link> file may contain many keys and/or certificates, and there
is no way to identify which key/certificate pair you want.  You
should make sure the PKCS<link linkend="12:CAPS"><type>12</type></link> file only contain one key/certificate
pair and/or one CRL.
</para>
<para>
It is believed that the limitations of this function is acceptable
for most usage, and that any more flexibility would introduce
complexity that would make it harder to use this functionality at
all.</para>
<variablelist role="params">
<varlistentry><term><parameter>res</parameter>&#160;:</term>
<listitem><simpara>is a <link linkend="gnutls-certificate-credentials-t"><type>gnutls_certificate_credentials_t</type></link> structure.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>p12blob</parameter>&#160;:</term>
<listitem><simpara>the PKCS<link linkend="12:CAPS"><type>12</type></link> blob.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>type</parameter>&#160;:</term>
<listitem><simpara>is PEM or DER of the <parameter>pkcs12file</parameter>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>password</parameter>&#160;:</term>
<listitem><simpara>optional password used to decrypt PKCS<link linkend="12:CAPS"><type>12</type></link> file, bags and keys.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> <link linkend="GNUTLS-E-SUCCESS:CAPS"><literal>GNUTLS_E_SUCCESS</literal></link> on success, or an error code.

</simpara></listitem></varlistentry>
</variablelist><para role="since">Since 2.8.0</para></refsect2>
<refsect2 id="gnutls-x509-privkey-t" role="typedef">
<title>gnutls_x509_privkey_t</title>
<indexterm zone="gnutls-x509-privkey-t"><primary>gnutls_x509_privkey_t</primary></indexterm>
<programlisting>  typedef struct gnutls_x509_privkey_int *gnutls_x509_privkey_t;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="gnutls-x509-crl-int" role="struct">
<title>struct gnutls_x509_crl_int</title>
<indexterm zone="gnutls-x509-crl-int"><primary>gnutls_x509_crl_int</primary></indexterm>
<programlisting>struct gnutls_x509_crl_int;</programlisting>
<para>
</para></refsect2>
<refsect2 id="gnutls-x509-crl-t" role="typedef">
<title>gnutls_x509_crl_t</title>
<indexterm zone="gnutls-x509-crl-t"><primary>gnutls_x509_crl_t</primary></indexterm>
<programlisting>  typedef struct gnutls_x509_crl_int *gnutls_x509_crl_t;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="gnutls-x509-crt-int" role="struct">
<title>struct gnutls_x509_crt_int</title>
<indexterm zone="gnutls-x509-crt-int"><primary>gnutls_x509_crt_int</primary></indexterm>
<programlisting>struct gnutls_x509_crt_int;</programlisting>
<para>
</para></refsect2>
<refsect2 id="gnutls-x509-crt-t" role="typedef">
<title>gnutls_x509_crt_t</title>
<indexterm zone="gnutls-x509-crt-t"><primary>gnutls_x509_crt_t</primary></indexterm>
<programlisting>  typedef struct gnutls_x509_crt_int *gnutls_x509_crt_t;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="gnutls-openpgp-keyring-int" role="struct">
<title>struct gnutls_openpgp_keyring_int</title>
<indexterm zone="gnutls-openpgp-keyring-int"><primary>gnutls_openpgp_keyring_int</primary></indexterm>
<programlisting>struct gnutls_openpgp_keyring_int;</programlisting>
<para>
</para></refsect2>
<refsect2 id="gnutls-openpgp-keyring-t" role="typedef">
<title>gnutls_openpgp_keyring_t</title>
<indexterm zone="gnutls-openpgp-keyring-t"><primary>gnutls_openpgp_keyring_t</primary></indexterm>
<programlisting>  typedef struct gnutls_openpgp_keyring_int *gnutls_openpgp_keyring_t;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="gnutls-certificate-set-x509-key" role="function">
<title>gnutls_certificate_set_x509_key ()</title>
<indexterm zone="gnutls-certificate-set-x509-key"><primary>gnutls_certificate_set_x509_key</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 gnutls_certificate_set_x509_key     (<parameter><link linkend="gnutls-certificate-credentials-t"><type>gnutls_certificate_credentials_t</type></link> res</parameter>,
                                                         <parameter><link linkend="gnutls-x509-crt-t"><type>gnutls_x509_crt_t</type></link> *cert_list</parameter>,
                                                         <parameter><link linkend="int"><type>int</type></link> cert_list_size</parameter>,
                                                         <parameter><link linkend="gnutls-x509-privkey-t"><type>gnutls_x509_privkey_t</type></link> key</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>res</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>cert_list</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>cert_list_size</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-certificate-set-x509-trust" role="function">
<title>gnutls_certificate_set_x509_trust ()</title>
<indexterm zone="gnutls-certificate-set-x509-trust"><primary>gnutls_certificate_set_x509_trust</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 gnutls_certificate_set_x509_trust   (<parameter><link linkend="gnutls-certificate-credentials-t"><type>gnutls_certificate_credentials_t</type></link> res</parameter>,
                                                         <parameter><link linkend="gnutls-x509-crt-t"><type>gnutls_x509_crt_t</type></link> *ca_list</parameter>,
                                                         <parameter><link linkend="int"><type>int</type></link> ca_list_size</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>res</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ca_list</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ca_list_size</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-certificate-set-x509-crl" role="function">
<title>gnutls_certificate_set_x509_crl ()</title>
<indexterm zone="gnutls-certificate-set-x509-crl"><primary>gnutls_certificate_set_x509_crl</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 gnutls_certificate_set_x509_crl     (<parameter><link linkend="gnutls-certificate-credentials-t"><type>gnutls_certificate_credentials_t</type></link> res</parameter>,
                                                         <parameter><link linkend="gnutls-x509-crl-t"><type>gnutls_x509_crl_t</type></link> *crl_list</parameter>,
                                                         <parameter><link linkend="int"><type>int</type></link> crl_list_size</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>res</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>crl_list</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>crl_list_size</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-certificate-get-x509-cas" role="function">
<title>gnutls_certificate_get_x509_cas ()</title>
<indexterm zone="gnutls-certificate-get-x509-cas"><primary>gnutls_certificate_get_x509_cas</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                gnutls_certificate_get_x509_cas     (<parameter><link linkend="gnutls-certificate-credentials-t"><type>gnutls_certificate_credentials_t</type></link> sc</parameter>,
                                                         <parameter><link linkend="gnutls-x509-crt-t"><type>gnutls_x509_crt_t</type></link> **x509_ca_list</parameter>,
                                                         <parameter>unsigned <link linkend="int"><type>int</type></link> *ncas</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>sc</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>x509_ca_list</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ncas</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-certificate-get-x509-crls" role="function">
<title>gnutls_certificate_get_x509_crls ()</title>
<indexterm zone="gnutls-certificate-get-x509-crls"><primary>gnutls_certificate_get_x509_crls</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                gnutls_certificate_get_x509_crls    (<parameter><link linkend="gnutls-certificate-credentials-t"><type>gnutls_certificate_credentials_t</type></link> sc</parameter>,
                                                         <parameter><link linkend="gnutls-x509-crl-t"><type>gnutls_x509_crl_t</type></link> **x509_crl_list</parameter>,
                                                         <parameter>unsigned <link linkend="int"><type>int</type></link> *ncrls</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>sc</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>x509_crl_list</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ncrls</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-certificate-get-openpgp-keyring" role="function">
<title>gnutls_certificate_get_openpgp_keyring ()</title>
<indexterm zone="gnutls-certificate-get-openpgp-keyring"><primary>gnutls_certificate_get_openpgp_keyring</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                gnutls_certificate_get_openpgp_keyring
                                                        (<parameter><link linkend="gnutls-certificate-credentials-t"><type>gnutls_certificate_credentials_t</type></link> sc</parameter>,
                                                         <parameter><link linkend="gnutls-openpgp-keyring-t"><type>gnutls_openpgp_keyring_t</type></link> *keyring</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>sc</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>keyring</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-global-init" role="function">
<title>gnutls_global_init ()</title>
<indexterm zone="gnutls-global-init"><primary>gnutls_global_init</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 gnutls_global_init                  (<parameter><type>void</type></parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-global-deinit" role="function">
<title>gnutls_global_deinit ()</title>
<indexterm zone="gnutls-global-deinit"><primary>gnutls_global_deinit</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                gnutls_global_deinit                (<parameter><type>void</type></parameter>);</programlisting>
<para>
</para></refsect2>
<refsect2 id="gnutls-alloc-function" role="function">
<title>gnutls_alloc_function ()</title>
<indexterm zone="gnutls-alloc-function"><primary>gnutls_alloc_function</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link> *              (*gnutls_alloc_function)            (<parameter><link linkend="size-t"><type>size_t</type></link> Param1</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>Param1</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-calloc-function" role="function">
<title>gnutls_calloc_function ()</title>
<indexterm zone="gnutls-calloc-function"><primary>gnutls_calloc_function</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link> *              (*gnutls_calloc_function)           (<parameter><link linkend="size-t"><type>size_t</type></link> Param1</parameter>,
                                                         <parameter><link linkend="size-t"><type>size_t</type></link> Param2</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>Param1</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>Param2</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-is-secure-function" role="function">
<title>gnutls_is_secure_function ()</title>
<indexterm zone="gnutls-is-secure-function"><primary>gnutls_is_secure_function</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 (*gnutls_is_secure_function)        (<parameter>const <link linkend="void"><type>void</type></link> *Param1</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>Param1</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-free-function" role="function">
<title>gnutls_free_function ()</title>
<indexterm zone="gnutls-free-function"><primary>gnutls_free_function</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                (*gnutls_free_function)             (<parameter><link linkend="void"><type>void</type></link> *Param1</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>Param1</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-realloc-function" role="function">
<title>gnutls_realloc_function ()</title>
<indexterm zone="gnutls-realloc-function"><primary>gnutls_realloc_function</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link> *              (*gnutls_realloc_function)          (<parameter><link linkend="void"><type>void</type></link> *Param1</parameter>,
                                                         <parameter><link linkend="size-t"><type>size_t</type></link> Param2</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>Param1</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>Param2</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-global-set-mem-functions" role="function">
<title>gnutls_global_set_mem_functions ()</title>
<indexterm zone="gnutls-global-set-mem-functions"><primary>gnutls_global_set_mem_functions</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                gnutls_global_set_mem_functions     (<parameter><link linkend="gnutls-alloc-function"><type>gnutls_alloc_function</type></link> alloc_func</parameter>,
                                                         <parameter><link linkend="gnutls-alloc-function"><type>gnutls_alloc_function</type></link> secure_alloc_func</parameter>,
                                                         <parameter><link linkend="gnutls-is-secure-function"><type>gnutls_is_secure_function</type></link> is_secure_func</parameter>,
                                                         <parameter><link linkend="gnutls-realloc-function"><type>gnutls_realloc_function</type></link> realloc_func</parameter>,
                                                         <parameter><link linkend="gnutls-free-function"><type>gnutls_free_function</type></link> free_func</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>alloc_func</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>secure_alloc_func</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>is_secure_func</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>realloc_func</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>free_func</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-malloc" role="variable">
<title>gnutls_malloc</title>
<indexterm zone="gnutls-malloc"><primary>gnutls_malloc</primary></indexterm>
<programlisting>  extern gnutls_alloc_function gnutls_malloc;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="gnutls-secure-malloc" role="variable">
<title>gnutls_secure_malloc</title>
<indexterm zone="gnutls-secure-malloc"><primary>gnutls_secure_malloc</primary></indexterm>
<programlisting>  extern gnutls_alloc_function gnutls_secure_malloc;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="gnutls-realloc" role="variable">
<title>gnutls_realloc</title>
<indexterm zone="gnutls-realloc"><primary>gnutls_realloc</primary></indexterm>
<programlisting>  extern gnutls_realloc_function gnutls_realloc;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="gnutls-calloc" role="variable">
<title>gnutls_calloc</title>
<indexterm zone="gnutls-calloc"><primary>gnutls_calloc</primary></indexterm>
<programlisting>  extern gnutls_calloc_function gnutls_calloc;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="gnutls-free" role="variable">
<title>gnutls_free</title>
<indexterm zone="gnutls-free"><primary>gnutls_free</primary></indexterm>
<programlisting>  extern gnutls_free_function gnutls_free;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="gnutls-strdup" role="function">
<title>gnutls_strdup ()</title>
<indexterm zone="gnutls-strdup"><primary>gnutls_strdup</primary></indexterm>
<programlisting><link linkend="char"><returnvalue>char</returnvalue></link> *              (*gnutls_strdup)                    (<parameter>const <link linkend="char"><type>char</type></link> *Param1</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>Param1</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-log-func" role="function">
<title>gnutls_log_func ()</title>
<indexterm zone="gnutls-log-func"><primary>gnutls_log_func</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                (*gnutls_log_func)                  (<parameter>...</parameter>,
                                                         <parameter>const <link linkend="char"><type>char</type></link> *Param2</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>...</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>Param2</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-global-set-log-function" role="function">
<title>gnutls_global_set_log_function ()</title>
<indexterm zone="gnutls-global-set-log-function"><primary>gnutls_global_set_log_function</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                gnutls_global_set_log_function      (<parameter><link linkend="gnutls-log-func"><type>gnutls_log_func</type></link> log_func</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>log_func</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-global-set-log-level" role="function">
<title>gnutls_global_set_log_level ()</title>
<indexterm zone="gnutls-global-set-log-level"><primary>gnutls_global_set_log_level</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                gnutls_global_set_log_level         (<parameter><link linkend="int"><type>int</type></link> level</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>level</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-dh-params-init" role="function">
<title>gnutls_dh_params_init ()</title>
<indexterm zone="gnutls-dh-params-init"><primary>gnutls_dh_params_init</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 gnutls_dh_params_init               (<parameter><link linkend="gnutls-dh-params-t"><type>gnutls_dh_params_t</type></link> *dh_params</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>dh_params</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-dh-params-deinit" role="function">
<title>gnutls_dh_params_deinit ()</title>
<indexterm zone="gnutls-dh-params-deinit"><primary>gnutls_dh_params_deinit</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                gnutls_dh_params_deinit             (<parameter><link linkend="gnutls-dh-params-t"><type>gnutls_dh_params_t</type></link> dh_params</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>dh_params</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-dh-params-import-raw" role="function">
<title>gnutls_dh_params_import_raw ()</title>
<indexterm zone="gnutls-dh-params-import-raw"><primary>gnutls_dh_params_import_raw</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 gnutls_dh_params_import_raw         (<parameter><link linkend="gnutls-dh-params-t"><type>gnutls_dh_params_t</type></link> dh_params</parameter>,
                                                         <parameter>const <link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> *prime</parameter>,
                                                         <parameter>const <link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> *generator</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>dh_params</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>prime</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>generator</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-dh-params-import-pkcs3" role="function">
<title>gnutls_dh_params_import_pkcs3 ()</title>
<indexterm zone="gnutls-dh-params-import-pkcs3"><primary>gnutls_dh_params_import_pkcs3</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 gnutls_dh_params_import_pkcs3       (<parameter><link linkend="gnutls-dh-params-t"><type>gnutls_dh_params_t</type></link> params</parameter>,
                                                         <parameter>const <link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> *pkcs3_params</parameter>,
                                                         <parameter><link linkend="gnutls-x509-crt-fmt-t"><type>gnutls_x509_crt_fmt_t</type></link> format</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>params</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>pkcs3_params</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>format</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-dh-params-generate2" role="function">
<title>gnutls_dh_params_generate2 ()</title>
<indexterm zone="gnutls-dh-params-generate2"><primary>gnutls_dh_params_generate2</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 gnutls_dh_params_generate2          (<parameter><link linkend="gnutls-dh-params-t"><type>gnutls_dh_params_t</type></link> params</parameter>,
                                                         <parameter>unsigned <link linkend="int"><type>int</type></link> bits</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>params</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>bits</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-dh-params-export-pkcs3" role="function">
<title>gnutls_dh_params_export_pkcs3 ()</title>
<indexterm zone="gnutls-dh-params-export-pkcs3"><primary>gnutls_dh_params_export_pkcs3</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 gnutls_dh_params_export_pkcs3       (<parameter><link linkend="gnutls-dh-params-t"><type>gnutls_dh_params_t</type></link> params</parameter>,
                                                         <parameter><link linkend="gnutls-x509-crt-fmt-t"><type>gnutls_x509_crt_fmt_t</type></link> format</parameter>,
                                                         <parameter>unsigned <link linkend="char"><type>char</type></link> *params_data</parameter>,
                                                         <parameter><link linkend="size-t"><type>size_t</type></link> *params_data_size</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>params</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>format</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>params_data</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>params_data_size</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-dh-params-export-raw" role="function">
<title>gnutls_dh_params_export_raw ()</title>
<indexterm zone="gnutls-dh-params-export-raw"><primary>gnutls_dh_params_export_raw</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 gnutls_dh_params_export_raw         (<parameter><link linkend="gnutls-dh-params-t"><type>gnutls_dh_params_t</type></link> params</parameter>,
                                                         <parameter><link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> *prime</parameter>,
                                                         <parameter><link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> *generator</parameter>,
                                                         <parameter>unsigned <link linkend="int"><type>int</type></link> *bits</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>params</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>prime</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>generator</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>bits</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-dh-params-cpy" role="function">
<title>gnutls_dh_params_cpy ()</title>
<indexterm zone="gnutls-dh-params-cpy"><primary>gnutls_dh_params_cpy</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 gnutls_dh_params_cpy                (<parameter><link linkend="gnutls-dh-params-t"><type>gnutls_dh_params_t</type></link> dst</parameter>,
                                                         <parameter><link linkend="gnutls-dh-params-t"><type>gnutls_dh_params_t</type></link> src</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>dst</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>src</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-rsa-params-init" role="function">
<title>gnutls_rsa_params_init ()</title>
<indexterm zone="gnutls-rsa-params-init"><primary>gnutls_rsa_params_init</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 gnutls_rsa_params_init              (<parameter><link linkend="gnutls-rsa-params-t"><type>gnutls_rsa_params_t</type></link> *rsa_params</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>rsa_params</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-rsa-params-deinit" role="function">
<title>gnutls_rsa_params_deinit ()</title>
<indexterm zone="gnutls-rsa-params-deinit"><primary>gnutls_rsa_params_deinit</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                gnutls_rsa_params_deinit            (<parameter><link linkend="gnutls-rsa-params-t"><type>gnutls_rsa_params_t</type></link> rsa_params</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>rsa_params</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-rsa-params-cpy" role="function">
<title>gnutls_rsa_params_cpy ()</title>
<indexterm zone="gnutls-rsa-params-cpy"><primary>gnutls_rsa_params_cpy</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 gnutls_rsa_params_cpy               (<parameter><link linkend="gnutls-rsa-params-t"><type>gnutls_rsa_params_t</type></link> dst</parameter>,
                                                         <parameter><link linkend="gnutls-rsa-params-t"><type>gnutls_rsa_params_t</type></link> src</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>dst</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>src</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-rsa-params-import-raw" role="function">
<title>gnutls_rsa_params_import_raw ()</title>
<indexterm zone="gnutls-rsa-params-import-raw"><primary>gnutls_rsa_params_import_raw</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 gnutls_rsa_params_import_raw        (<parameter><link linkend="gnutls-rsa-params-t"><type>gnutls_rsa_params_t</type></link> rsa_params</parameter>,
                                                         <parameter>const <link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> *m</parameter>,
                                                         <parameter>const <link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> *e</parameter>,
                                                         <parameter>const <link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> *d</parameter>,
                                                         <parameter>const <link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> *p</parameter>,
                                                         <parameter>const <link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> *q</parameter>,
                                                         <parameter>const <link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> *u</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>rsa_params</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>m</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>e</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>d</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>p</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>q</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>u</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-rsa-params-generate2" role="function">
<title>gnutls_rsa_params_generate2 ()</title>
<indexterm zone="gnutls-rsa-params-generate2"><primary>gnutls_rsa_params_generate2</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 gnutls_rsa_params_generate2         (<parameter><link linkend="gnutls-rsa-params-t"><type>gnutls_rsa_params_t</type></link> params</parameter>,
                                                         <parameter>unsigned <link linkend="int"><type>int</type></link> bits</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>params</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>bits</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-rsa-params-export-raw" role="function">
<title>gnutls_rsa_params_export_raw ()</title>
<indexterm zone="gnutls-rsa-params-export-raw"><primary>gnutls_rsa_params_export_raw</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 gnutls_rsa_params_export_raw        (<parameter><link linkend="gnutls-rsa-params-t"><type>gnutls_rsa_params_t</type></link> params</parameter>,
                                                         <parameter><link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> *m</parameter>,
                                                         <parameter><link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> *e</parameter>,
                                                         <parameter><link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> *d</parameter>,
                                                         <parameter><link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> *p</parameter>,
                                                         <parameter><link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> *q</parameter>,
                                                         <parameter><link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> *u</parameter>,
                                                         <parameter>unsigned <link linkend="int"><type>int</type></link> *bits</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>params</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>m</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>e</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>d</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>p</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>q</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>u</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>bits</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-rsa-params-export-pkcs1" role="function">
<title>gnutls_rsa_params_export_pkcs1 ()</title>
<indexterm zone="gnutls-rsa-params-export-pkcs1"><primary>gnutls_rsa_params_export_pkcs1</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 gnutls_rsa_params_export_pkcs1      (<parameter><link linkend="gnutls-rsa-params-t"><type>gnutls_rsa_params_t</type></link> params</parameter>,
                                                         <parameter><link linkend="gnutls-x509-crt-fmt-t"><type>gnutls_x509_crt_fmt_t</type></link> format</parameter>,
                                                         <parameter>unsigned <link linkend="char"><type>char</type></link> *params_data</parameter>,
                                                         <parameter><link linkend="size-t"><type>size_t</type></link> *params_data_size</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>params</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>format</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>params_data</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>params_data_size</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-rsa-params-import-pkcs1" role="function">
<title>gnutls_rsa_params_import_pkcs1 ()</title>
<indexterm zone="gnutls-rsa-params-import-pkcs1"><primary>gnutls_rsa_params_import_pkcs1</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 gnutls_rsa_params_import_pkcs1      (<parameter><link linkend="gnutls-rsa-params-t"><type>gnutls_rsa_params_t</type></link> params</parameter>,
                                                         <parameter>const <link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> *pkcs1_params</parameter>,
                                                         <parameter><link linkend="gnutls-x509-crt-fmt-t"><type>gnutls_x509_crt_fmt_t</type></link> format</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>params</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>pkcs1_params</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>format</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-pull-func" role="function">
<title>gnutls_pull_func ()</title>
<indexterm zone="gnutls-pull-func"><primary>gnutls_pull_func</primary></indexterm>
<programlisting><link linkend="ssize-t"><returnvalue>ssize_t</returnvalue></link>             (*gnutls_pull_func)                 (<parameter><link linkend="gnutls-transport-ptr-t"><type>gnutls_transport_ptr_t</type></link> Param1</parameter>,
                                                         <parameter><link linkend="void"><type>void</type></link> *Param2</parameter>,
                                                         <parameter><link linkend="size-t"><type>size_t</type></link> Param3</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>Param1</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>Param2</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>Param3</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-push-func" role="function">
<title>gnutls_push_func ()</title>
<indexterm zone="gnutls-push-func"><primary>gnutls_push_func</primary></indexterm>
<programlisting><link linkend="ssize-t"><returnvalue>ssize_t</returnvalue></link>             (*gnutls_push_func)                 (<parameter><link linkend="gnutls-transport-ptr-t"><type>gnutls_transport_ptr_t</type></link> Param1</parameter>,
                                                         <parameter>const <link linkend="void"><type>void</type></link> *Param2</parameter>,
                                                         <parameter><link linkend="size-t"><type>size_t</type></link> Param3</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>Param1</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>Param2</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>Param3</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-transport-set-ptr" role="function">
<title>gnutls_transport_set_ptr ()</title>
<indexterm zone="gnutls-transport-set-ptr"><primary>gnutls_transport_set_ptr</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                gnutls_transport_set_ptr            (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter><link linkend="gnutls-transport-ptr-t"><type>gnutls_transport_ptr_t</type></link> ptr</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>session</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ptr</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-transport-set-ptr2" role="function">
<title>gnutls_transport_set_ptr2 ()</title>
<indexterm zone="gnutls-transport-set-ptr2"><primary>gnutls_transport_set_ptr2</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                gnutls_transport_set_ptr2           (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter><link linkend="gnutls-transport-ptr-t"><type>gnutls_transport_ptr_t</type></link> recv_ptr</parameter>,
                                                         <parameter><link linkend="gnutls-transport-ptr-t"><type>gnutls_transport_ptr_t</type></link> send_ptr</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>session</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>recv_ptr</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>send_ptr</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-transport-get-ptr" role="function">
<title>gnutls_transport_get_ptr ()</title>
<indexterm zone="gnutls-transport-get-ptr"><primary>gnutls_transport_get_ptr</primary></indexterm>
<programlisting><link linkend="gnutls-transport-ptr-t"><returnvalue>gnutls_transport_ptr_t</returnvalue></link>  gnutls_transport_get_ptr        (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>session</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-transport-get-ptr2" role="function">
<title>gnutls_transport_get_ptr2 ()</title>
<indexterm zone="gnutls-transport-get-ptr2"><primary>gnutls_transport_get_ptr2</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                gnutls_transport_get_ptr2           (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter><link linkend="gnutls-transport-ptr-t"><type>gnutls_transport_ptr_t</type></link> *recv_ptr</parameter>,
                                                         <parameter><link linkend="gnutls-transport-ptr-t"><type>gnutls_transport_ptr_t</type></link> *send_ptr</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>session</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>recv_ptr</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>send_ptr</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-transport-set-lowat" role="function">
<title>gnutls_transport_set_lowat ()</title>
<indexterm zone="gnutls-transport-set-lowat"><primary>gnutls_transport_set_lowat</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                gnutls_transport_set_lowat          (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter><link linkend="int"><type>int</type></link> num</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>session</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>num</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-transport-set-push-function" role="function">
<title>gnutls_transport_set_push_function ()</title>
<indexterm zone="gnutls-transport-set-push-function"><primary>gnutls_transport_set_push_function</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                gnutls_transport_set_push_function  (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter><link linkend="gnutls-push-func"><type>gnutls_push_func</type></link> push_func</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>session</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>push_func</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-transport-set-pull-function" role="function">
<title>gnutls_transport_set_pull_function ()</title>
<indexterm zone="gnutls-transport-set-pull-function"><primary>gnutls_transport_set_pull_function</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                gnutls_transport_set_pull_function  (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter><link linkend="gnutls-pull-func"><type>gnutls_pull_func</type></link> pull_func</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>session</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>pull_func</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-transport-set-errno" role="function">
<title>gnutls_transport_set_errno ()</title>
<indexterm zone="gnutls-transport-set-errno"><primary>gnutls_transport_set_errno</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                gnutls_transport_set_errno          (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter><link linkend="int"><type>int</type></link> err</parameter>);</programlisting>
<para>
Store <parameter>err</parameter> in the session-specific errno variable.  Useful values
for <parameter>err</parameter> is EAGAIN and EINTR, other values are treated will be
treated as real errors in the push/pull function.
</para>
<para>
This function is useful in replacement push/pull functions set by
gnutls_transport_set_push_function and
gnutls_transport_set_pullpush_function under Windows, where the
replacement push/pull may not have access to the same <parameter>errno</parameter>
variable that is used by GnuTLS (e.g., the application is linked to
msvcr71.dll and gnutls is linked to msvcrt.dll).
</para>
<para>
If you don't have the <parameter>session</parameter> variable easily accessible from the
push/pull function, and don't worry about thread conflicts, you can
also use <link linkend="gnutls-transport-set-global-errno"><function>gnutls_transport_set_global_errno()</function></link>.</para>
<variablelist role="params">
<varlistentry><term><parameter>session</parameter>&#160;:</term>
<listitem><simpara>is a <link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> structure.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>err</parameter>&#160;:</term>
<listitem><simpara>error value to store in session-specific errno variable.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-transport-set-global-errno" role="function">
<title>gnutls_transport_set_global_errno ()</title>
<indexterm zone="gnutls-transport-set-global-errno"><primary>gnutls_transport_set_global_errno</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                gnutls_transport_set_global_errno   (<parameter><link linkend="int"><type>int</type></link> err</parameter>);</programlisting>
<para>
Store <parameter>err</parameter> in the global errno variable.  Useful values for <parameter>err</parameter> is
EAGAIN and EINTR, other values are treated will be treated as real
errors in the push/pull function.
</para>
<para>
This function is useful in replacement push/pull functions set by
gnutls_transport_set_push_function and
gnutls_transport_set_pullpush_function under Windows, where the
replacement push/pull may not have access to the same <parameter>errno</parameter>
variable that is used by GnuTLS (e.g., the application is linked to
msvcr71.dll and gnutls is linked to msvcrt.dll).
</para>
<para>
Whether this function is thread safe or not depends on whether the
global variable errno is thread safe, some system libraries make it
a thread-local variable.  When feasible, using the guaranteed
thread-safe <link linkend="gnutls-transport-set-errno"><function>gnutls_transport_set_errno()</function></link> may be better.</para>
<variablelist role="params">
<varlistentry><term><parameter>err</parameter>&#160;:</term>
<listitem><simpara>error value to store in global errno variable.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-session-set-ptr" role="function">
<title>gnutls_session_set_ptr ()</title>
<indexterm zone="gnutls-session-set-ptr"><primary>gnutls_session_set_ptr</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                gnutls_session_set_ptr              (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter><link linkend="void"><type>void</type></link> *ptr</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>session</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ptr</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-session-get-ptr" role="function">
<title>gnutls_session_get_ptr ()</title>
<indexterm zone="gnutls-session-get-ptr"><primary>gnutls_session_get_ptr</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link> *              gnutls_session_get_ptr              (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>session</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-openpgp-send-cert" role="function">
<title>gnutls_openpgp_send_cert ()</title>
<indexterm zone="gnutls-openpgp-send-cert"><primary>gnutls_openpgp_send_cert</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                gnutls_openpgp_send_cert            (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter><link linkend="gnutls-openpgp-crt-status-t"><type>gnutls_openpgp_crt_status_t</type></link> status</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>session</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>status</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-fingerprint" role="function">
<title>gnutls_fingerprint ()</title>
<indexterm zone="gnutls-fingerprint"><primary>gnutls_fingerprint</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 gnutls_fingerprint                  (<parameter><link linkend="gnutls-digest-algorithm-t"><type>gnutls_digest_algorithm_t</type></link> algo</parameter>,
                                                         <parameter>const <link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> *data</parameter>,
                                                         <parameter><link linkend="void"><type>void</type></link> *result</parameter>,
                                                         <parameter><link linkend="size-t"><type>size_t</type></link> *result_size</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>algo</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>data</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>result</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>result_size</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-srp-free-client-credentials" role="function">
<title>gnutls_srp_free_client_credentials ()</title>
<indexterm zone="gnutls-srp-free-client-credentials"><primary>gnutls_srp_free_client_credentials</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                gnutls_srp_free_client_credentials  (<parameter><link linkend="gnutls-srp-client-credentials-t"><type>gnutls_srp_client_credentials_t</type></link> sc</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>sc</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-srp-allocate-client-credentials" role="function">
<title>gnutls_srp_allocate_client_credentials ()</title>
<indexterm zone="gnutls-srp-allocate-client-credentials"><primary>gnutls_srp_allocate_client_credentials</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 gnutls_srp_allocate_client_credentials
                                                        (<parameter><link linkend="gnutls-srp-client-credentials-t"><type>gnutls_srp_client_credentials_t</type></link> *sc</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>sc</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-srp-set-client-credentials" role="function">
<title>gnutls_srp_set_client_credentials ()</title>
<indexterm zone="gnutls-srp-set-client-credentials"><primary>gnutls_srp_set_client_credentials</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 gnutls_srp_set_client_credentials   (<parameter><link linkend="gnutls-srp-client-credentials-t"><type>gnutls_srp_client_credentials_t</type></link> res</parameter>,
                                                         <parameter>const <link linkend="char"><type>char</type></link> *username</parameter>,
                                                         <parameter>const <link linkend="char"><type>char</type></link> *password</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>res</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>username</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>password</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-srp-free-server-credentials" role="function">
<title>gnutls_srp_free_server_credentials ()</title>
<indexterm zone="gnutls-srp-free-server-credentials"><primary>gnutls_srp_free_server_credentials</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                gnutls_srp_free_server_credentials  (<parameter><link linkend="gnutls-srp-server-credentials-t"><type>gnutls_srp_server_credentials_t</type></link> sc</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>sc</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-srp-allocate-server-credentials" role="function">
<title>gnutls_srp_allocate_server_credentials ()</title>
<indexterm zone="gnutls-srp-allocate-server-credentials"><primary>gnutls_srp_allocate_server_credentials</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 gnutls_srp_allocate_server_credentials
                                                        (<parameter><link linkend="gnutls-srp-server-credentials-t"><type>gnutls_srp_server_credentials_t</type></link> *sc</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>sc</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-srp-set-server-credentials-file" role="function">
<title>gnutls_srp_set_server_credentials_file ()</title>
<indexterm zone="gnutls-srp-set-server-credentials-file"><primary>gnutls_srp_set_server_credentials_file</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 gnutls_srp_set_server_credentials_file
                                                        (<parameter><link linkend="gnutls-srp-server-credentials-t"><type>gnutls_srp_server_credentials_t</type></link> res</parameter>,
                                                         <parameter>const <link linkend="char"><type>char</type></link> *password_file</parameter>,
                                                         <parameter>const <link linkend="char"><type>char</type></link> *password_conf_file</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>res</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>password_file</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>password_conf_file</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-srp-server-get-username" role="function">
<title>gnutls_srp_server_get_username ()</title>
<indexterm zone="gnutls-srp-server-get-username"><primary>gnutls_srp_server_get_username</primary></indexterm>
<programlisting>const <link linkend="char"><returnvalue>char</returnvalue></link> *        gnutls_srp_server_get_username      (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>session</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-srp-set-prime-bits" role="function">
<title>gnutls_srp_set_prime_bits ()</title>
<indexterm zone="gnutls-srp-set-prime-bits"><primary>gnutls_srp_set_prime_bits</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                gnutls_srp_set_prime_bits           (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter>unsigned <link linkend="int"><type>int</type></link> bits</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>session</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>bits</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-srp-verifier" role="function">
<title>gnutls_srp_verifier ()</title>
<indexterm zone="gnutls-srp-verifier"><primary>gnutls_srp_verifier</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 gnutls_srp_verifier                 (<parameter>const <link linkend="char"><type>char</type></link> *username</parameter>,
                                                         <parameter>const <link linkend="char"><type>char</type></link> *password</parameter>,
                                                         <parameter>const <link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> *salt</parameter>,
                                                         <parameter>const <link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> *generator</parameter>,
                                                         <parameter>const <link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> *prime</parameter>,
                                                         <parameter><link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> *res</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>username</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>password</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>salt</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>generator</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>prime</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>res</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-srp-2048-group-prime" role="variable">
<title>gnutls_srp_2048_group_prime</title>
<indexterm zone="gnutls-srp-2048-group-prime"><primary>gnutls_srp_2048_group_prime</primary></indexterm>
<programlisting>  extern const gnutls_datum_t gnutls_srp_2048_group_prime;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="gnutls-srp-2048-group-generator" role="variable">
<title>gnutls_srp_2048_group_generator</title>
<indexterm zone="gnutls-srp-2048-group-generator"><primary>gnutls_srp_2048_group_generator</primary></indexterm>
<programlisting>  extern const gnutls_datum_t gnutls_srp_2048_group_generator;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="gnutls-srp-1536-group-prime" role="variable">
<title>gnutls_srp_1536_group_prime</title>
<indexterm zone="gnutls-srp-1536-group-prime"><primary>gnutls_srp_1536_group_prime</primary></indexterm>
<programlisting>  extern const gnutls_datum_t gnutls_srp_1536_group_prime;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="gnutls-srp-1536-group-generator" role="variable">
<title>gnutls_srp_1536_group_generator</title>
<indexterm zone="gnutls-srp-1536-group-generator"><primary>gnutls_srp_1536_group_generator</primary></indexterm>
<programlisting>  extern const gnutls_datum_t gnutls_srp_1536_group_generator;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="gnutls-srp-1024-group-prime" role="variable">
<title>gnutls_srp_1024_group_prime</title>
<indexterm zone="gnutls-srp-1024-group-prime"><primary>gnutls_srp_1024_group_prime</primary></indexterm>
<programlisting>  extern const gnutls_datum_t gnutls_srp_1024_group_prime;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="gnutls-srp-1024-group-generator" role="variable">
<title>gnutls_srp_1024_group_generator</title>
<indexterm zone="gnutls-srp-1024-group-generator"><primary>gnutls_srp_1024_group_generator</primary></indexterm>
<programlisting>  extern const gnutls_datum_t gnutls_srp_1024_group_generator;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="gnutls-srp-set-server-credentials-function" role="function">
<title>gnutls_srp_set_server_credentials_function ()</title>
<indexterm zone="gnutls-srp-set-server-credentials-function"><primary>gnutls_srp_set_server_credentials_function</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                gnutls_srp_set_server_credentials_function
                                                        (<parameter><link linkend="gnutls-srp-server-credentials-t"><type>gnutls_srp_server_credentials_t</type></link> cred</parameter>,
                                                         <parameter><link linkend="gnutls-srp-server-credentials-function"><type>gnutls_srp_server_credentials_function</type></link> *func</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>cred</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>func</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-srp-set-client-credentials-function" role="function">
<title>gnutls_srp_set_client_credentials_function ()</title>
<indexterm zone="gnutls-srp-set-client-credentials-function"><primary>gnutls_srp_set_client_credentials_function</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                gnutls_srp_set_client_credentials_function
                                                        (<parameter><link linkend="gnutls-srp-client-credentials-t"><type>gnutls_srp_client_credentials_t</type></link> cred</parameter>,
                                                         <parameter><link linkend="gnutls-srp-client-credentials-function"><type>gnutls_srp_client_credentials_function</type></link> *func</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>cred</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>func</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-srp-base64-encode" role="function">
<title>gnutls_srp_base64_encode ()</title>
<indexterm zone="gnutls-srp-base64-encode"><primary>gnutls_srp_base64_encode</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 gnutls_srp_base64_encode            (<parameter>const <link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> *data</parameter>,
                                                         <parameter><link linkend="char"><type>char</type></link> *result</parameter>,
                                                         <parameter><link linkend="size-t"><type>size_t</type></link> *result_size</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>data</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>result</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>result_size</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-srp-base64-encode-alloc" role="function">
<title>gnutls_srp_base64_encode_alloc ()</title>
<indexterm zone="gnutls-srp-base64-encode-alloc"><primary>gnutls_srp_base64_encode_alloc</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 gnutls_srp_base64_encode_alloc      (<parameter>const <link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> *data</parameter>,
                                                         <parameter><link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> *result</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>data</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>result</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-srp-base64-decode" role="function">
<title>gnutls_srp_base64_decode ()</title>
<indexterm zone="gnutls-srp-base64-decode"><primary>gnutls_srp_base64_decode</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 gnutls_srp_base64_decode            (<parameter>const <link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> *b64_data</parameter>,
                                                         <parameter><link linkend="char"><type>char</type></link> *result</parameter>,
                                                         <parameter><link linkend="size-t"><type>size_t</type></link> *result_size</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>b64_data</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>result</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>result_size</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-srp-base64-decode-alloc" role="function">
<title>gnutls_srp_base64_decode_alloc ()</title>
<indexterm zone="gnutls-srp-base64-decode-alloc"><primary>gnutls_srp_base64_decode_alloc</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 gnutls_srp_base64_decode_alloc      (<parameter>const <link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> *b64_data</parameter>,
                                                         <parameter><link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> *result</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>b64_data</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>result</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-psk-key-flags" role="enum">
<title>enum gnutls_psk_key_flags</title>
<indexterm zone="gnutls-psk-key-flags"><primary>gnutls_psk_key_flags</primary></indexterm>
<programlisting>  typedef enum gnutls_psk_key_flags
    {
      GNUTLS_PSK_KEY_RAW = 0,
      GNUTLS_PSK_KEY_HEX
    } gnutls_psk_key_flags;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="gnutls-psk-free-client-credentials" role="function">
<title>gnutls_psk_free_client_credentials ()</title>
<indexterm zone="gnutls-psk-free-client-credentials"><primary>gnutls_psk_free_client_credentials</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                gnutls_psk_free_client_credentials  (<parameter><link linkend="gnutls-psk-client-credentials-t"><type>gnutls_psk_client_credentials_t</type></link> sc</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>sc</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-psk-allocate-client-credentials" role="function">
<title>gnutls_psk_allocate_client_credentials ()</title>
<indexterm zone="gnutls-psk-allocate-client-credentials"><primary>gnutls_psk_allocate_client_credentials</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 gnutls_psk_allocate_client_credentials
                                                        (<parameter><link linkend="gnutls-psk-client-credentials-t"><type>gnutls_psk_client_credentials_t</type></link> *sc</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>sc</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-psk-set-client-credentials" role="function">
<title>gnutls_psk_set_client_credentials ()</title>
<indexterm zone="gnutls-psk-set-client-credentials"><primary>gnutls_psk_set_client_credentials</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 gnutls_psk_set_client_credentials   (<parameter><link linkend="gnutls-psk-client-credentials-t"><type>gnutls_psk_client_credentials_t</type></link> res</parameter>,
                                                         <parameter>const <link linkend="char"><type>char</type></link> *username</parameter>,
                                                         <parameter>const <link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> *key</parameter>,
                                                         <parameter><link linkend="gnutls-psk-key-flags"><type>gnutls_psk_key_flags</type></link> format</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>res</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>username</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>format</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-psk-free-server-credentials" role="function">
<title>gnutls_psk_free_server_credentials ()</title>
<indexterm zone="gnutls-psk-free-server-credentials"><primary>gnutls_psk_free_server_credentials</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                gnutls_psk_free_server_credentials  (<parameter><link linkend="gnutls-psk-server-credentials-t"><type>gnutls_psk_server_credentials_t</type></link> sc</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>sc</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-psk-allocate-server-credentials" role="function">
<title>gnutls_psk_allocate_server_credentials ()</title>
<indexterm zone="gnutls-psk-allocate-server-credentials"><primary>gnutls_psk_allocate_server_credentials</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 gnutls_psk_allocate_server_credentials
                                                        (<parameter><link linkend="gnutls-psk-server-credentials-t"><type>gnutls_psk_server_credentials_t</type></link> *sc</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>sc</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-psk-set-server-credentials-file" role="function">
<title>gnutls_psk_set_server_credentials_file ()</title>
<indexterm zone="gnutls-psk-set-server-credentials-file"><primary>gnutls_psk_set_server_credentials_file</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 gnutls_psk_set_server_credentials_file
                                                        (<parameter><link linkend="gnutls-psk-server-credentials-t"><type>gnutls_psk_server_credentials_t</type></link> res</parameter>,
                                                         <parameter>const <link linkend="char"><type>char</type></link> *password_file</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>res</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>password_file</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-psk-set-server-credentials-hint" role="function">
<title>gnutls_psk_set_server_credentials_hint ()</title>
<indexterm zone="gnutls-psk-set-server-credentials-hint"><primary>gnutls_psk_set_server_credentials_hint</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 gnutls_psk_set_server_credentials_hint
                                                        (<parameter><link linkend="gnutls-psk-server-credentials-t"><type>gnutls_psk_server_credentials_t</type></link> res</parameter>,
                                                         <parameter>const <link linkend="char"><type>char</type></link> *hint</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>res</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>hint</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-psk-server-get-username" role="function">
<title>gnutls_psk_server_get_username ()</title>
<indexterm zone="gnutls-psk-server-get-username"><primary>gnutls_psk_server_get_username</primary></indexterm>
<programlisting>const <link linkend="char"><returnvalue>char</returnvalue></link> *        gnutls_psk_server_get_username      (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>session</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-psk-client-get-hint" role="function">
<title>gnutls_psk_client_get_hint ()</title>
<indexterm zone="gnutls-psk-client-get-hint"><primary>gnutls_psk_client_get_hint</primary></indexterm>
<programlisting>const <link linkend="char"><returnvalue>char</returnvalue></link> *        gnutls_psk_client_get_hint          (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>session</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-psk-set-server-credentials-function" role="function">
<title>gnutls_psk_set_server_credentials_function ()</title>
<indexterm zone="gnutls-psk-set-server-credentials-function"><primary>gnutls_psk_set_server_credentials_function</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                gnutls_psk_set_server_credentials_function
                                                        (<parameter><link linkend="gnutls-psk-server-credentials-t"><type>gnutls_psk_server_credentials_t</type></link> cred</parameter>,
                                                         <parameter><link linkend="gnutls-psk-server-credentials-function"><type>gnutls_psk_server_credentials_function</type></link> *func</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>cred</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>func</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-psk-set-client-credentials-function" role="function">
<title>gnutls_psk_set_client_credentials_function ()</title>
<indexterm zone="gnutls-psk-set-client-credentials-function"><primary>gnutls_psk_set_client_credentials_function</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                gnutls_psk_set_client_credentials_function
                                                        (<parameter><link linkend="gnutls-psk-client-credentials-t"><type>gnutls_psk_client_credentials_t</type></link> cred</parameter>,
                                                         <parameter><link linkend="gnutls-psk-client-credentials-function"><type>gnutls_psk_client_credentials_function</type></link> *func</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>cred</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>func</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-hex-encode" role="function">
<title>gnutls_hex_encode ()</title>
<indexterm zone="gnutls-hex-encode"><primary>gnutls_hex_encode</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 gnutls_hex_encode                   (<parameter>const <link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> *data</parameter>,
                                                         <parameter><link linkend="char"><type>char</type></link> *result</parameter>,
                                                         <parameter><link linkend="size-t"><type>size_t</type></link> *result_size</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>data</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>result</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>result_size</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-hex-decode" role="function">
<title>gnutls_hex_decode ()</title>
<indexterm zone="gnutls-hex-decode"><primary>gnutls_hex_decode</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 gnutls_hex_decode                   (<parameter>const <link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> *hex_data</parameter>,
                                                         <parameter><link linkend="char"><type>char</type></link> *result</parameter>,
                                                         <parameter><link linkend="size-t"><type>size_t</type></link> *result_size</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>hex_data</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>result</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>result_size</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-psk-set-server-dh-params" role="function">
<title>gnutls_psk_set_server_dh_params ()</title>
<indexterm zone="gnutls-psk-set-server-dh-params"><primary>gnutls_psk_set_server_dh_params</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                gnutls_psk_set_server_dh_params     (<parameter><link linkend="gnutls-psk-server-credentials-t"><type>gnutls_psk_server_credentials_t</type></link> res</parameter>,
                                                         <parameter><link linkend="gnutls-dh-params-t"><type>gnutls_dh_params_t</type></link> dh_params</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>res</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dh_params</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-psk-set-server-params-function" role="function">
<title>gnutls_psk_set_server_params_function ()</title>
<indexterm zone="gnutls-psk-set-server-params-function"><primary>gnutls_psk_set_server_params_function</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                gnutls_psk_set_server_params_function
                                                        (<parameter><link linkend="gnutls-psk-server-credentials-t"><type>gnutls_psk_server_credentials_t</type></link> res</parameter>,
                                                         <parameter><link linkend="gnutls-params-function"><type>gnutls_params_function</type></link> *func</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>res</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>func</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-psk-netconf-derive-key" role="function">
<title>gnutls_psk_netconf_derive_key ()</title>
<indexterm zone="gnutls-psk-netconf-derive-key"><primary>gnutls_psk_netconf_derive_key</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 gnutls_psk_netconf_derive_key       (<parameter>const <link linkend="char"><type>char</type></link> *password</parameter>,
                                                         <parameter>const <link linkend="char"><type>char</type></link> *psk_identity</parameter>,
                                                         <parameter>const <link linkend="char"><type>char</type></link> *psk_identity_hint</parameter>,
                                                         <parameter><link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> *output_key</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>password</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>psk_identity</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>psk_identity_hint</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>output_key</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-x509-subject-alt-name-t" role="enum">
<title>enum gnutls_x509_subject_alt_name_t</title>
<indexterm zone="gnutls-x509-subject-alt-name-t"><primary>gnutls_x509_subject_alt_name_t</primary></indexterm>
<programlisting>  typedef enum gnutls_x509_subject_alt_name_t
  {
    GNUTLS_SAN_DNSNAME = 1,
    GNUTLS_SAN_RFC822NAME,
    GNUTLS_SAN_URI,
    GNUTLS_SAN_IPADDRESS,
    GNUTLS_SAN_OTHERNAME,
    GNUTLS_SAN_DN,
    /* The following are "virtual" subject alternative name types, in
       that they are represented by an otherName value and an OID.
       Used by gnutls_x509_crt_get_subject_alt_othername_oid().  */
    GNUTLS_SAN_OTHERNAME_XMPP = 1000
  } gnutls_x509_subject_alt_name_t;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="gnutls-openpgp-crt-int" role="struct">
<title>struct gnutls_openpgp_crt_int</title>
<indexterm zone="gnutls-openpgp-crt-int"><primary>gnutls_openpgp_crt_int</primary></indexterm>
<programlisting>struct gnutls_openpgp_crt_int;</programlisting>
<para>
</para></refsect2>
<refsect2 id="gnutls-openpgp-crt-t" role="typedef">
<title>gnutls_openpgp_crt_t</title>
<indexterm zone="gnutls-openpgp-crt-t"><primary>gnutls_openpgp_crt_t</primary></indexterm>
<programlisting>  typedef struct gnutls_openpgp_crt_int *gnutls_openpgp_crt_t;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="gnutls-openpgp-privkey-int" role="struct">
<title>struct gnutls_openpgp_privkey_int</title>
<indexterm zone="gnutls-openpgp-privkey-int"><primary>gnutls_openpgp_privkey_int</primary></indexterm>
<programlisting>struct gnutls_openpgp_privkey_int;</programlisting>
<para>
</para></refsect2>
<refsect2 id="gnutls-openpgp-privkey-t" role="typedef">
<title>gnutls_openpgp_privkey_t</title>
<indexterm zone="gnutls-openpgp-privkey-t"><primary>gnutls_openpgp_privkey_t</primary></indexterm>
<programlisting>  typedef struct gnutls_openpgp_privkey_int *gnutls_openpgp_privkey_t;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="gnutls-auth-get-type" role="function">
<title>gnutls_auth_get_type ()</title>
<indexterm zone="gnutls-auth-get-type"><primary>gnutls_auth_get_type</primary></indexterm>
<programlisting><link linkend="gnutls-credentials-type-t"><returnvalue>gnutls_credentials_type_t</returnvalue></link>  gnutls_auth_get_type         (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>session</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-auth-server-get-type" role="function">
<title>gnutls_auth_server_get_type ()</title>
<indexterm zone="gnutls-auth-server-get-type"><primary>gnutls_auth_server_get_type</primary></indexterm>
<programlisting><link linkend="gnutls-credentials-type-t"><returnvalue>gnutls_credentials_type_t</returnvalue></link>  gnutls_auth_server_get_type  (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>session</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-auth-client-get-type" role="function">
<title>gnutls_auth_client_get_type ()</title>
<indexterm zone="gnutls-auth-client-get-type"><primary>gnutls_auth_client_get_type</primary></indexterm>
<programlisting><link linkend="gnutls-credentials-type-t"><returnvalue>gnutls_credentials_type_t</returnvalue></link>  gnutls_auth_client_get_type  (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>session</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-dh-set-prime-bits" role="function">
<title>gnutls_dh_set_prime_bits ()</title>
<indexterm zone="gnutls-dh-set-prime-bits"><primary>gnutls_dh_set_prime_bits</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                gnutls_dh_set_prime_bits            (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter>unsigned <link linkend="int"><type>int</type></link> bits</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>session</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>bits</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-dh-get-secret-bits" role="function">
<title>gnutls_dh_get_secret_bits ()</title>
<indexterm zone="gnutls-dh-get-secret-bits"><primary>gnutls_dh_get_secret_bits</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 gnutls_dh_get_secret_bits           (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>session</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-dh-get-peers-public-bits" role="function">
<title>gnutls_dh_get_peers_public_bits ()</title>
<indexterm zone="gnutls-dh-get-peers-public-bits"><primary>gnutls_dh_get_peers_public_bits</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 gnutls_dh_get_peers_public_bits     (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>session</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-dh-get-prime-bits" role="function">
<title>gnutls_dh_get_prime_bits ()</title>
<indexterm zone="gnutls-dh-get-prime-bits"><primary>gnutls_dh_get_prime_bits</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 gnutls_dh_get_prime_bits            (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>session</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-dh-get-group" role="function">
<title>gnutls_dh_get_group ()</title>
<indexterm zone="gnutls-dh-get-group"><primary>gnutls_dh_get_group</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 gnutls_dh_get_group                 (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter><link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> *raw_gen</parameter>,
                                                         <parameter><link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> *raw_prime</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>session</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>raw_gen</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>raw_prime</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-dh-get-pubkey" role="function">
<title>gnutls_dh_get_pubkey ()</title>
<indexterm zone="gnutls-dh-get-pubkey"><primary>gnutls_dh_get_pubkey</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 gnutls_dh_get_pubkey                (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter><link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> *raw_key</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>session</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>raw_key</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-rsa-export-get-pubkey" role="function">
<title>gnutls_rsa_export_get_pubkey ()</title>
<indexterm zone="gnutls-rsa-export-get-pubkey"><primary>gnutls_rsa_export_get_pubkey</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 gnutls_rsa_export_get_pubkey        (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter><link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> *exponent</parameter>,
                                                         <parameter><link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> *modulus</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>session</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>exponent</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>modulus</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-rsa-export-get-modulus-bits" role="function">
<title>gnutls_rsa_export_get_modulus_bits ()</title>
<indexterm zone="gnutls-rsa-export-get-modulus-bits"><primary>gnutls_rsa_export_get_modulus_bits</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 gnutls_rsa_export_get_modulus_bits  (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>session</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-sign-func" role="function">
<title>gnutls_sign_func ()</title>
<indexterm zone="gnutls-sign-func"><primary>gnutls_sign_func</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 (*gnutls_sign_func)                 (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter><link linkend="void"><type>void</type></link> *userdata</parameter>,
                                                         <parameter><link linkend="gnutls-certificate-type-t"><type>gnutls_certificate_type_t</type></link> cert_type</parameter>,
                                                         <parameter>const <link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> *cert</parameter>,
                                                         <parameter>const <link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> *hash</parameter>,
                                                         <parameter><link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> *signature</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>session</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>userdata</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>cert_type</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>cert</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>hash</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>signature</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-sign-callback-set" role="function">
<title>gnutls_sign_callback_set ()</title>
<indexterm zone="gnutls-sign-callback-set"><primary>gnutls_sign_callback_set</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                gnutls_sign_callback_set            (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter><link linkend="gnutls-sign-func"><type>gnutls_sign_func</type></link> sign_func</parameter>,
                                                         <parameter><link linkend="void"><type>void</type></link> *userdata</parameter>);</programlisting>
<para>
Set the callback function.  The function must have this prototype:
</para>
<para>
typedef int (*gnutls_sign_func) (gnutls_session_t session,
                                 void *userdata,
                                 gnutls_certificate_type_t cert_type,
                                 const gnutls_datum_t * cert,
                                 const gnutls_datum_t * hash,
                                 gnutls_datum_t * signature);
</para>
<para>
The <parameter>userdata</parameter> parameter is passed to the <parameter>sign_func</parameter> verbatim, and
can be used to store application-specific data needed in the
callback function.  See also <link linkend="gnutls-sign-callback-get"><function>gnutls_sign_callback_get()</function></link>.</para>
<variablelist role="params">
<varlistentry><term><parameter>session</parameter>&#160;:</term>
<listitem><simpara>is a gnutls session
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>sign_func</parameter>&#160;:</term>
<listitem><simpara>function pointer to application's sign callback.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>userdata</parameter>&#160;:</term>
<listitem><simpara>void pointer that will be passed to sign callback.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-sign-callback-get" role="function">
<title>gnutls_sign_callback_get ()</title>
<indexterm zone="gnutls-sign-callback-get"><primary>gnutls_sign_callback_get</primary></indexterm>
<programlisting><link linkend="gnutls-sign-func"><returnvalue>gnutls_sign_func</returnvalue></link>    gnutls_sign_callback_get            (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter><link linkend="void"><type>void</type></link> **userdata</parameter>);</programlisting>
<para>
Retrieve the callback function, and its userdata pointer.</para>
<variablelist role="params">
<varlistentry><term><parameter>session</parameter>&#160;:</term>
<listitem><simpara>is a gnutls session
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>userdata</parameter>&#160;:</term>
<listitem><simpara>if non-<link linkend="NULL:CAPS"><literal>NULL</literal></link>, will be set to abstract callback pointer.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> The function pointer set by <link linkend="gnutls-sign-callback-set"><function>gnutls_sign_callback_set()</function></link>, or
  if not set, <link linkend="NULL:CAPS"><literal>NULL</literal></link>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-certificate-client-set-retrieve-function" role="function">
<title>gnutls_certificate_client_set_retrieve_function ()</title>
<indexterm zone="gnutls-certificate-client-set-retrieve-function"><primary>gnutls_certificate_client_set_retrieve_function</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                gnutls_certificate_client_set_retrieve_function
                                                        (<parameter><link linkend="gnutls-certificate-credentials-t"><type>gnutls_certificate_credentials_t</type></link> cred</parameter>,
                                                         <parameter><link linkend="gnutls-certificate-client-retrieve-function"><type>gnutls_certificate_client_retrieve_function</type></link> *func</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>cred</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>func</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-certificate-server-set-retrieve-function" role="function">
<title>gnutls_certificate_server_set_retrieve_function ()</title>
<indexterm zone="gnutls-certificate-server-set-retrieve-function"><primary>gnutls_certificate_server_set_retrieve_function</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                gnutls_certificate_server_set_retrieve_function
                                                        (<parameter><link linkend="gnutls-certificate-credentials-t"><type>gnutls_certificate_credentials_t</type></link> cred</parameter>,
                                                         <parameter><link linkend="gnutls-certificate-server-retrieve-function"><type>gnutls_certificate_server_retrieve_function</type></link> *func</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>cred</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>func</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-certificate-server-set-request" role="function">
<title>gnutls_certificate_server_set_request ()</title>
<indexterm zone="gnutls-certificate-server-set-request"><primary>gnutls_certificate_server_set_request</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                gnutls_certificate_server_set_request
                                                        (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter><link linkend="gnutls-certificate-request-t"><type>gnutls_certificate_request_t</type></link> req</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>session</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>req</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-certificate-get-peers" role="function">
<title>gnutls_certificate_get_peers ()</title>
<indexterm zone="gnutls-certificate-get-peers"><primary>gnutls_certificate_get_peers</primary></indexterm>
<programlisting>const <link linkend="gnutls-datum-t"><returnvalue>gnutls_datum_t</returnvalue></link> * gnutls_certificate_get_peers     (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter>unsigned <link linkend="int"><type>int</type></link> *list_size</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>session</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>list_size</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-certificate-get-ours" role="function">
<title>gnutls_certificate_get_ours ()</title>
<indexterm zone="gnutls-certificate-get-ours"><primary>gnutls_certificate_get_ours</primary></indexterm>
<programlisting>const <link linkend="gnutls-datum-t"><returnvalue>gnutls_datum_t</returnvalue></link> * gnutls_certificate_get_ours      (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>session</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-certificate-activation-time-peers" role="function">
<title>gnutls_certificate_activation_time_peers ()</title>
<indexterm zone="gnutls-certificate-activation-time-peers"><primary>gnutls_certificate_activation_time_peers</primary></indexterm>
<programlisting><link linkend="time-t"><returnvalue>time_t</returnvalue></link>              gnutls_certificate_activation_time_peers
                                                        (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>session</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-certificate-expiration-time-peers" role="function">
<title>gnutls_certificate_expiration_time_peers ()</title>
<indexterm zone="gnutls-certificate-expiration-time-peers"><primary>gnutls_certificate_expiration_time_peers</primary></indexterm>
<programlisting><link linkend="time-t"><returnvalue>time_t</returnvalue></link>              gnutls_certificate_expiration_time_peers
                                                        (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>session</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-certificate-client-get-request-status" role="function">
<title>gnutls_certificate_client_get_request_status ()</title>
<indexterm zone="gnutls-certificate-client-get-request-status"><primary>gnutls_certificate_client_get_request_status</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 gnutls_certificate_client_get_request_status
                                                        (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>session</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-certificate-verify-peers2" role="function">
<title>gnutls_certificate_verify_peers2 ()</title>
<indexterm zone="gnutls-certificate-verify-peers2"><primary>gnutls_certificate_verify_peers2</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 gnutls_certificate_verify_peers2    (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>,
                                                         <parameter>unsigned <link linkend="int"><type>int</type></link> *status</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>session</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>status</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-certificate-verify-peers" role="function">
<title>gnutls_certificate_verify_peers ()</title>
<indexterm zone="gnutls-certificate-verify-peers"><primary>gnutls_certificate_verify_peers</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 gnutls_certificate_verify_peers     (<parameter><link linkend="gnutls-session-t"><type>gnutls_session_t</type></link> session</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>session</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-pem-base64-encode" role="function">
<title>gnutls_pem_base64_encode ()</title>
<indexterm zone="gnutls-pem-base64-encode"><primary>gnutls_pem_base64_encode</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 gnutls_pem_base64_encode            (<parameter>const <link linkend="char"><type>char</type></link> *msg</parameter>,
                                                         <parameter>const <link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> *data</parameter>,
                                                         <parameter><link linkend="char"><type>char</type></link> *result</parameter>,
                                                         <parameter><link linkend="size-t"><type>size_t</type></link> *result_size</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>msg</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>data</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>result</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>result_size</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-pem-base64-decode" role="function">
<title>gnutls_pem_base64_decode ()</title>
<indexterm zone="gnutls-pem-base64-decode"><primary>gnutls_pem_base64_decode</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 gnutls_pem_base64_decode            (<parameter>const <link linkend="char"><type>char</type></link> *header</parameter>,
                                                         <parameter>const <link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> *b64_data</parameter>,
                                                         <parameter>unsigned <link linkend="char"><type>char</type></link> *result</parameter>,
                                                         <parameter><link linkend="size-t"><type>size_t</type></link> *result_size</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>header</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>b64_data</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>result</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>result_size</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-pem-base64-encode-alloc" role="function">
<title>gnutls_pem_base64_encode_alloc ()</title>
<indexterm zone="gnutls-pem-base64-encode-alloc"><primary>gnutls_pem_base64_encode_alloc</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 gnutls_pem_base64_encode_alloc      (<parameter>const <link linkend="char"><type>char</type></link> *msg</parameter>,
                                                         <parameter>const <link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> *data</parameter>,
                                                         <parameter><link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> *result</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>msg</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>data</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>result</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-pem-base64-decode-alloc" role="function">
<title>gnutls_pem_base64_decode_alloc ()</title>
<indexterm zone="gnutls-pem-base64-decode-alloc"><primary>gnutls_pem_base64_decode_alloc</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 gnutls_pem_base64_decode_alloc      (<parameter>const <link linkend="char"><type>char</type></link> *header</parameter>,
                                                         <parameter>const <link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> *b64_data</parameter>,
                                                         <parameter><link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> *result</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>header</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>b64_data</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>result</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="GNUTLS-KEY-DIGITAL-SIGNATURE:CAPS" role="macro">
<title>GNUTLS_KEY_DIGITAL_SIGNATURE</title>
<indexterm zone="GNUTLS-KEY-DIGITAL-SIGNATURE:CAPS"><primary>GNUTLS_KEY_DIGITAL_SIGNATURE</primary></indexterm>
<programlisting>#define GNUTLS_KEY_DIGITAL_SIGNATURE&#160;128
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNUTLS-KEY-NON-REPUDIATION:CAPS" role="macro">
<title>GNUTLS_KEY_NON_REPUDIATION</title>
<indexterm zone="GNUTLS-KEY-NON-REPUDIATION:CAPS"><primary>GNUTLS_KEY_NON_REPUDIATION</primary></indexterm>
<programlisting>#define GNUTLS_KEY_NON_REPUDIATION&#160;64
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNUTLS-KEY-KEY-ENCIPHERMENT:CAPS" role="macro">
<title>GNUTLS_KEY_KEY_ENCIPHERMENT</title>
<indexterm zone="GNUTLS-KEY-KEY-ENCIPHERMENT:CAPS"><primary>GNUTLS_KEY_KEY_ENCIPHERMENT</primary></indexterm>
<programlisting>#define GNUTLS_KEY_KEY_ENCIPHERMENT&#160;32
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNUTLS-KEY-DATA-ENCIPHERMENT:CAPS" role="macro">
<title>GNUTLS_KEY_DATA_ENCIPHERMENT</title>
<indexterm zone="GNUTLS-KEY-DATA-ENCIPHERMENT:CAPS"><primary>GNUTLS_KEY_DATA_ENCIPHERMENT</primary></indexterm>
<programlisting>#define GNUTLS_KEY_DATA_ENCIPHERMENT&#160;16
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNUTLS-KEY-KEY-AGREEMENT:CAPS" role="macro">
<title>GNUTLS_KEY_KEY_AGREEMENT</title>
<indexterm zone="GNUTLS-KEY-KEY-AGREEMENT:CAPS"><primary>GNUTLS_KEY_KEY_AGREEMENT</primary></indexterm>
<programlisting>#define GNUTLS_KEY_KEY_AGREEMENT&#160;8
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNUTLS-KEY-KEY-CERT-SIGN:CAPS" role="macro">
<title>GNUTLS_KEY_KEY_CERT_SIGN</title>
<indexterm zone="GNUTLS-KEY-KEY-CERT-SIGN:CAPS"><primary>GNUTLS_KEY_KEY_CERT_SIGN</primary></indexterm>
<programlisting>#define GNUTLS_KEY_KEY_CERT_SIGN&#160;4
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNUTLS-KEY-CRL-SIGN:CAPS" role="macro">
<title>GNUTLS_KEY_CRL_SIGN</title>
<indexterm zone="GNUTLS-KEY-CRL-SIGN:CAPS"><primary>GNUTLS_KEY_CRL_SIGN</primary></indexterm>
<programlisting>#define GNUTLS_KEY_CRL_SIGN		2
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNUTLS-KEY-ENCIPHER-ONLY:CAPS" role="macro">
<title>GNUTLS_KEY_ENCIPHER_ONLY</title>
<indexterm zone="GNUTLS-KEY-ENCIPHER-ONLY:CAPS"><primary>GNUTLS_KEY_ENCIPHER_ONLY</primary></indexterm>
<programlisting>#define GNUTLS_KEY_ENCIPHER_ONLY&#160;1
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNUTLS-KEY-DECIPHER-ONLY:CAPS" role="macro">
<title>GNUTLS_KEY_DECIPHER_ONLY</title>
<indexterm zone="GNUTLS-KEY-DECIPHER-ONLY:CAPS"><primary>GNUTLS_KEY_DECIPHER_ONLY</primary></indexterm>
<programlisting>#define GNUTLS_KEY_DECIPHER_ONLY&#160;32768
</programlisting>
<para>
</para></refsect2>
<refsect2 id="gnutls-certificate-set-params-function" role="function">
<title>gnutls_certificate_set_params_function ()</title>
<indexterm zone="gnutls-certificate-set-params-function"><primary>gnutls_certificate_set_params_function</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                gnutls_certificate_set_params_function
                                                        (<parameter><link linkend="gnutls-certificate-credentials-t"><type>gnutls_certificate_credentials_t</type></link> res</parameter>,
                                                         <parameter><link linkend="gnutls-params-function"><type>gnutls_params_function</type></link> *func</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>res</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>func</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-anon-set-params-function" role="function">
<title>gnutls_anon_set_params_function ()</title>
<indexterm zone="gnutls-anon-set-params-function"><primary>gnutls_anon_set_params_function</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                gnutls_anon_set_params_function     (<parameter><link linkend="gnutls-anon-server-credentials-t"><type>gnutls_anon_server_credentials_t</type></link> res</parameter>,
                                                         <parameter><link linkend="gnutls-params-function"><type>gnutls_params_function</type></link> *func</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>res</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>func</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-psk-set-params-function" role="function">
<title>gnutls_psk_set_params_function ()</title>
<indexterm zone="gnutls-psk-set-params-function"><primary>gnutls_psk_set_params_function</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                gnutls_psk_set_params_function      (<parameter><link linkend="gnutls-psk-server-credentials-t"><type>gnutls_psk_server_credentials_t</type></link> res</parameter>,
                                                         <parameter><link linkend="gnutls-params-function"><type>gnutls_params_function</type></link> *func</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>res</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>func</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnutls-hex2bin" role="function">
<title>gnutls_hex2bin ()</title>
<indexterm zone="gnutls-hex2bin"><primary>gnutls_hex2bin</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 gnutls_hex2bin                      (<parameter>const <link linkend="char"><type>char</type></link> *hex_data</parameter>,
                                                         <parameter><link linkend="size-t"><type>size_t</type></link> hex_size</parameter>,
                                                         <parameter><link linkend="char"><type>char</type></link> *bin_data</parameter>,
                                                         <parameter><link linkend="size-t"><type>size_t</type></link> *bin_size</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>hex_data</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>hex_size</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>bin_data</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>bin_size</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="GNUTLS-E-SUCCESS:CAPS" role="macro">
<title>GNUTLS_E_SUCCESS</title>
<indexterm zone="GNUTLS-E-SUCCESS:CAPS"><primary>GNUTLS_E_SUCCESS</primary></indexterm>
<programlisting>#define GNUTLS_E_SUCCESS 0
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNUTLS-E-UNKNOWN-COMPRESSION-ALGORITHM:CAPS" role="macro">
<title>GNUTLS_E_UNKNOWN_COMPRESSION_ALGORITHM</title>
<indexterm zone="GNUTLS-E-UNKNOWN-COMPRESSION-ALGORITHM:CAPS"><primary>GNUTLS_E_UNKNOWN_COMPRESSION_ALGORITHM</primary></indexterm>
<programlisting>#define&#160;GNUTLS_E_UNKNOWN_COMPRESSION_ALGORITHM -3
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNUTLS-E-UNKNOWN-CIPHER-TYPE:CAPS" role="macro">
<title>GNUTLS_E_UNKNOWN_CIPHER_TYPE</title>
<indexterm zone="GNUTLS-E-UNKNOWN-CIPHER-TYPE:CAPS"><primary>GNUTLS_E_UNKNOWN_CIPHER_TYPE</primary></indexterm>
<programlisting>#define&#160;GNUTLS_E_UNKNOWN_CIPHER_TYPE -6
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNUTLS-E-LARGE-PACKET:CAPS" role="macro">
<title>GNUTLS_E_LARGE_PACKET</title>
<indexterm zone="GNUTLS-E-LARGE-PACKET:CAPS"><primary>GNUTLS_E_LARGE_PACKET</primary></indexterm>
<programlisting>#define&#160;GNUTLS_E_LARGE_PACKET -7
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNUTLS-E-UNSUPPORTED-VERSION-PACKET:CAPS" role="macro">
<title>GNUTLS_E_UNSUPPORTED_VERSION_PACKET</title>
<indexterm zone="GNUTLS-E-UNSUPPORTED-VERSION-PACKET:CAPS"><primary>GNUTLS_E_UNSUPPORTED_VERSION_PACKET</primary></indexterm>
<programlisting>#define GNUTLS_E_UNSUPPORTED_VERSION_PACKET -8&#160;/* GNUTLS_A_PROTOCOL_VERSION */
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNUTLS-E-UNEXPECTED-PACKET-LENGTH:CAPS" role="macro">
<title>GNUTLS_E_UNEXPECTED_PACKET_LENGTH</title>
<indexterm zone="GNUTLS-E-UNEXPECTED-PACKET-LENGTH:CAPS"><primary>GNUTLS_E_UNEXPECTED_PACKET_LENGTH</primary></indexterm>
<programlisting>#define GNUTLS_E_UNEXPECTED_PACKET_LENGTH -9&#160;/* GNUTLS_A_RECORD_OVERFLOW */
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNUTLS-E-INVALID-SESSION:CAPS" role="macro">
<title>GNUTLS_E_INVALID_SESSION</title>
<indexterm zone="GNUTLS-E-INVALID-SESSION:CAPS"><primary>GNUTLS_E_INVALID_SESSION</primary></indexterm>
<programlisting>#define GNUTLS_E_INVALID_SESSION -10
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNUTLS-E-FATAL-ALERT-RECEIVED:CAPS" role="macro">
<title>GNUTLS_E_FATAL_ALERT_RECEIVED</title>
<indexterm zone="GNUTLS-E-FATAL-ALERT-RECEIVED:CAPS"><primary>GNUTLS_E_FATAL_ALERT_RECEIVED</primary></indexterm>
<programlisting>#define GNUTLS_E_FATAL_ALERT_RECEIVED -12
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNUTLS-E-UNEXPECTED-PACKET:CAPS" role="macro">
<title>GNUTLS_E_UNEXPECTED_PACKET</title>
<indexterm zone="GNUTLS-E-UNEXPECTED-PACKET:CAPS"><primary>GNUTLS_E_UNEXPECTED_PACKET</primary></indexterm>
<programlisting>#define GNUTLS_E_UNEXPECTED_PACKET -15&#160;/* GNUTLS_A_UNEXPECTED_MESSAGE */
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNUTLS-E-WARNING-ALERT-RECEIVED:CAPS" role="macro">
<title>GNUTLS_E_WARNING_ALERT_RECEIVED</title>
<indexterm zone="GNUTLS-E-WARNING-ALERT-RECEIVED:CAPS"><primary>GNUTLS_E_WARNING_ALERT_RECEIVED</primary></indexterm>
<programlisting>#define GNUTLS_E_WARNING_ALERT_RECEIVED -16
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNUTLS-E-ERROR-IN-FINISHED-PACKET:CAPS" role="macro">
<title>GNUTLS_E_ERROR_IN_FINISHED_PACKET</title>
<indexterm zone="GNUTLS-E-ERROR-IN-FINISHED-PACKET:CAPS"><primary>GNUTLS_E_ERROR_IN_FINISHED_PACKET</primary></indexterm>
<programlisting>#define GNUTLS_E_ERROR_IN_FINISHED_PACKET -18
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNUTLS-E-UNEXPECTED-HANDSHAKE-PACKET:CAPS" role="macro">
<title>GNUTLS_E_UNEXPECTED_HANDSHAKE_PACKET</title>
<indexterm zone="GNUTLS-E-UNEXPECTED-HANDSHAKE-PACKET:CAPS"><primary>GNUTLS_E_UNEXPECTED_HANDSHAKE_PACKET</primary></indexterm>
<programlisting>#define GNUTLS_E_UNEXPECTED_HANDSHAKE_PACKET -19
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNUTLS-E-UNKNOWN-CIPHER-SUITE:CAPS" role="macro">
<title>GNUTLS_E_UNKNOWN_CIPHER_SUITE</title>
<indexterm zone="GNUTLS-E-UNKNOWN-CIPHER-SUITE:CAPS"><primary>GNUTLS_E_UNKNOWN_CIPHER_SUITE</primary></indexterm>
<programlisting>#define&#160;GNUTLS_E_UNKNOWN_CIPHER_SUITE -21&#160;/* GNUTLS_A_HANDSHAKE_FAILURE */
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNUTLS-E-UNWANTED-ALGORITHM:CAPS" role="macro">
<title>GNUTLS_E_UNWANTED_ALGORITHM</title>
<indexterm zone="GNUTLS-E-UNWANTED-ALGORITHM:CAPS"><primary>GNUTLS_E_UNWANTED_ALGORITHM</primary></indexterm>
<programlisting>#define&#160;GNUTLS_E_UNWANTED_ALGORITHM -22
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNUTLS-E-MPI-SCAN-FAILED:CAPS" role="macro">
<title>GNUTLS_E_MPI_SCAN_FAILED</title>
<indexterm zone="GNUTLS-E-MPI-SCAN-FAILED:CAPS"><primary>GNUTLS_E_MPI_SCAN_FAILED</primary></indexterm>
<programlisting>#define&#160;GNUTLS_E_MPI_SCAN_FAILED -23
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNUTLS-E-DECRYPTION-FAILED:CAPS" role="macro">
<title>GNUTLS_E_DECRYPTION_FAILED</title>
<indexterm zone="GNUTLS-E-DECRYPTION-FAILED:CAPS"><primary>GNUTLS_E_DECRYPTION_FAILED</primary></indexterm>
<programlisting>#define GNUTLS_E_DECRYPTION_FAILED -24&#160;/* GNUTLS_A_DECRYPTION_FAILED, GNUTLS_A_BAD_RECORD_MAC */
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNUTLS-E-MEMORY-ERROR:CAPS" role="macro">
<title>GNUTLS_E_MEMORY_ERROR</title>
<indexterm zone="GNUTLS-E-MEMORY-ERROR:CAPS"><primary>GNUTLS_E_MEMORY_ERROR</primary></indexterm>
<programlisting>#define GNUTLS_E_MEMORY_ERROR -25
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNUTLS-E-DECOMPRESSION-FAILED:CAPS" role="macro">
<title>GNUTLS_E_DECOMPRESSION_FAILED</title>
<indexterm zone="GNUTLS-E-DECOMPRESSION-FAILED:CAPS"><primary>GNUTLS_E_DECOMPRESSION_FAILED</primary></indexterm>
<programlisting>#define GNUTLS_E_DECOMPRESSION_FAILED -26&#160;/* GNUTLS_A_DECOMPRESSION_FAILURE */
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNUTLS-E-COMPRESSION-FAILED:CAPS" role="macro">
<title>GNUTLS_E_COMPRESSION_FAILED</title>
<indexterm zone="GNUTLS-E-COMPRESSION-FAILED:CAPS"><primary>GNUTLS_E_COMPRESSION_FAILED</primary></indexterm>
<programlisting>#define GNUTLS_E_COMPRESSION_FAILED -27
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNUTLS-E-AGAIN:CAPS" role="macro">
<title>GNUTLS_E_AGAIN</title>
<indexterm zone="GNUTLS-E-AGAIN:CAPS"><primary>GNUTLS_E_AGAIN</primary></indexterm>
<programlisting>#define GNUTLS_E_AGAIN -28
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNUTLS-E-EXPIRED:CAPS" role="macro">
<title>GNUTLS_E_EXPIRED</title>
<indexterm zone="GNUTLS-E-EXPIRED:CAPS"><primary>GNUTLS_E_EXPIRED</primary></indexterm>
<programlisting>#define GNUTLS_E_EXPIRED -29
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNUTLS-E-DB-ERROR:CAPS" role="macro">
<title>GNUTLS_E_DB_ERROR</title>
<indexterm zone="GNUTLS-E-DB-ERROR:CAPS"><primary>GNUTLS_E_DB_ERROR</primary></indexterm>
<programlisting>#define GNUTLS_E_DB_ERROR -30
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNUTLS-E-SRP-PWD-ERROR:CAPS" role="macro">
<title>GNUTLS_E_SRP_PWD_ERROR</title>
<indexterm zone="GNUTLS-E-SRP-PWD-ERROR:CAPS"><primary>GNUTLS_E_SRP_PWD_ERROR</primary></indexterm>
<programlisting>#define GNUTLS_E_SRP_PWD_ERROR -31
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNUTLS-E-INSUFFICIENT-CREDENTIALS:CAPS" role="macro">
<title>GNUTLS_E_INSUFFICIENT_CREDENTIALS</title>
<indexterm zone="GNUTLS-E-INSUFFICIENT-CREDENTIALS:CAPS"><primary>GNUTLS_E_INSUFFICIENT_CREDENTIALS</primary></indexterm>
<programlisting>#define GNUTLS_E_INSUFFICIENT_CREDENTIALS -32
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNUTLS-E-INSUFICIENT-CREDENTIALS:CAPS" role="macro">
<title>GNUTLS_E_INSUFICIENT_CREDENTIALS</title>
<indexterm zone="GNUTLS-E-INSUFICIENT-CREDENTIALS:CAPS"><primary>GNUTLS_E_INSUFICIENT_CREDENTIALS</primary></indexterm>
<programlisting>#define GNUTLS_E_INSUFICIENT_CREDENTIALS GNUTLS_E_INSUFFICIENT_CREDENTIALS&#160;/* for backwards compatibility only */
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNUTLS-E-INSUFFICIENT-CRED:CAPS" role="macro">
<title>GNUTLS_E_INSUFFICIENT_CRED</title>
<indexterm zone="GNUTLS-E-INSUFFICIENT-CRED:CAPS"><primary>GNUTLS_E_INSUFFICIENT_CRED</primary></indexterm>
<programlisting>#define GNUTLS_E_INSUFFICIENT_CRED GNUTLS_E_INSUFFICIENT_CREDENTIALS
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNUTLS-E-INSUFICIENT-CRED:CAPS" role="macro">
<title>GNUTLS_E_INSUFICIENT_CRED</title>
<indexterm zone="GNUTLS-E-INSUFICIENT-CRED:CAPS"><primary>GNUTLS_E_INSUFICIENT_CRED</primary></indexterm>
<programlisting>#define GNUTLS_E_INSUFICIENT_CRED GNUTLS_E_INSUFFICIENT_CREDENTIALS&#160;/* for backwards compatibility only */
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNUTLS-E-HASH-FAILED:CAPS" role="macro">
<title>GNUTLS_E_HASH_FAILED</title>
<indexterm zone="GNUTLS-E-HASH-FAILED:CAPS"><primary>GNUTLS_E_HASH_FAILED</primary></indexterm>
<programlisting>#define GNUTLS_E_HASH_FAILED -33
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNUTLS-E-BASE64-DECODING-ERROR:CAPS" role="macro">
<title>GNUTLS_E_BASE64_DECODING_ERROR</title>
<indexterm zone="GNUTLS-E-BASE64-DECODING-ERROR:CAPS"><primary>GNUTLS_E_BASE64_DECODING_ERROR</primary></indexterm>
<programlisting>#define GNUTLS_E_BASE64_DECODING_ERROR -34
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNUTLS-E-MPI-PRINT-FAILED:CAPS" role="macro">
<title>GNUTLS_E_MPI_PRINT_FAILED</title>
<indexterm zone="GNUTLS-E-MPI-PRINT-FAILED:CAPS"><primary>GNUTLS_E_MPI_PRINT_FAILED</primary></indexterm>
<programlisting>#define&#160;GNUTLS_E_MPI_PRINT_FAILED -35
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNUTLS-E-REHANDSHAKE:CAPS" role="macro">
<title>GNUTLS_E_REHANDSHAKE</title>
<indexterm zone="GNUTLS-E-REHANDSHAKE:CAPS"><primary>GNUTLS_E_REHANDSHAKE</primary></indexterm>
<programlisting>#define GNUTLS_E_REHANDSHAKE -37&#160;/* GNUTLS_A_NO_RENEGOTIATION */
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNUTLS-E-GOT-APPLICATION-DATA:CAPS" role="macro">
<title>GNUTLS_E_GOT_APPLICATION_DATA</title>
<indexterm zone="GNUTLS-E-GOT-APPLICATION-DATA:CAPS"><primary>GNUTLS_E_GOT_APPLICATION_DATA</primary></indexterm>
<programlisting>#define GNUTLS_E_GOT_APPLICATION_DATA -38
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNUTLS-E-RECORD-LIMIT-REACHED:CAPS" role="macro">
<title>GNUTLS_E_RECORD_LIMIT_REACHED</title>
<indexterm zone="GNUTLS-E-RECORD-LIMIT-REACHED:CAPS"><primary>GNUTLS_E_RECORD_LIMIT_REACHED</primary></indexterm>
<programlisting>#define GNUTLS_E_RECORD_LIMIT_REACHED -39
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNUTLS-E-ENCRYPTION-FAILED:CAPS" role="macro">
<title>GNUTLS_E_ENCRYPTION_FAILED</title>
<indexterm zone="GNUTLS-E-ENCRYPTION-FAILED:CAPS"><primary>GNUTLS_E_ENCRYPTION_FAILED</primary></indexterm>
<programlisting>#define GNUTLS_E_ENCRYPTION_FAILED -40
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNUTLS-E-PK-ENCRYPTION-FAILED:CAPS" role="macro">
<title>GNUTLS_E_PK_ENCRYPTION_FAILED</title>
<indexterm zone="GNUTLS-E-PK-ENCRYPTION-FAILED:CAPS"><primary>GNUTLS_E_PK_ENCRYPTION_FAILED</primary></indexterm>
<programlisting>#define GNUTLS_E_PK_ENCRYPTION_FAILED -44
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNUTLS-E-PK-DECRYPTION-FAILED:CAPS" role="macro">
<title>GNUTLS_E_PK_DECRYPTION_FAILED</title>
<indexterm zone="GNUTLS-E-PK-DECRYPTION-FAILED:CAPS"><primary>GNUTLS_E_PK_DECRYPTION_FAILED</primary></indexterm>
<programlisting>#define GNUTLS_E_PK_DECRYPTION_FAILED -45
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNUTLS-E-PK-SIGN-FAILED:CAPS" role="macro">
<title>GNUTLS_E_PK_SIGN_FAILED</title>
<indexterm zone="GNUTLS-E-PK-SIGN-FAILED:CAPS"><primary>GNUTLS_E_PK_SIGN_FAILED</primary></indexterm>
<programlisting>#define GNUTLS_E_PK_SIGN_FAILED -46
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNUTLS-E-X509-UNSUPPORTED-CRITICAL-EXTENSION:CAPS" role="macro">
<title>GNUTLS_E_X509_UNSUPPORTED_CRITICAL_EXTENSION</title>
<indexterm zone="GNUTLS-E-X509-UNSUPPORTED-CRITICAL-EXTENSION:CAPS"><primary>GNUTLS_E_X509_UNSUPPORTED_CRITICAL_EXTENSION</primary></indexterm>
<programlisting>#define GNUTLS_E_X509_UNSUPPORTED_CRITICAL_EXTENSION -47
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNUTLS-E-KEY-USAGE-VIOLATION:CAPS" role="macro">
<title>GNUTLS_E_KEY_USAGE_VIOLATION</title>
<indexterm zone="GNUTLS-E-KEY-USAGE-VIOLATION:CAPS"><primary>GNUTLS_E_KEY_USAGE_VIOLATION</primary></indexterm>
<programlisting>#define GNUTLS_E_KEY_USAGE_VIOLATION -48
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNUTLS-E-NO-CERTIFICATE-FOUND:CAPS" role="macro">
<title>GNUTLS_E_NO_CERTIFICATE_FOUND</title>
<indexterm zone="GNUTLS-E-NO-CERTIFICATE-FOUND:CAPS"><primary>GNUTLS_E_NO_CERTIFICATE_FOUND</primary></indexterm>
<programlisting>#define GNUTLS_E_NO_CERTIFICATE_FOUND -49&#160;/* GNUTLS_A_BAD_CERTIFICATE */
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNUTLS-E-INVALID-REQUEST:CAPS" role="macro">
<title>GNUTLS_E_INVALID_REQUEST</title>
<indexterm zone="GNUTLS-E-INVALID-REQUEST:CAPS"><primary>GNUTLS_E_INVALID_REQUEST</primary></indexterm>
<programlisting>#define GNUTLS_E_INVALID_REQUEST -50
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNUTLS-E-SHORT-MEMORY-BUFFER:CAPS" role="macro">
<title>GNUTLS_E_SHORT_MEMORY_BUFFER</title>
<indexterm zone="GNUTLS-E-SHORT-MEMORY-BUFFER:CAPS"><primary>GNUTLS_E_SHORT_MEMORY_BUFFER</primary></indexterm>
<programlisting>#define GNUTLS_E_SHORT_MEMORY_BUFFER -51
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNUTLS-E-INTERRUPTED:CAPS" role="macro">
<title>GNUTLS_E_INTERRUPTED</title>
<indexterm zone="GNUTLS-E-INTERRUPTED:CAPS"><primary>GNUTLS_E_INTERRUPTED</primary></indexterm>
<programlisting>#define GNUTLS_E_INTERRUPTED -52
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNUTLS-E-PUSH-ERROR:CAPS" role="macro">
<title>GNUTLS_E_PUSH_ERROR</title>
<indexterm zone="GNUTLS-E-PUSH-ERROR:CAPS"><primary>GNUTLS_E_PUSH_ERROR</primary></indexterm>
<programlisting>#define GNUTLS_E_PUSH_ERROR -53
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNUTLS-E-PULL-ERROR:CAPS" role="macro">
<title>GNUTLS_E_PULL_ERROR</title>
<indexterm zone="GNUTLS-E-PULL-ERROR:CAPS"><primary>GNUTLS_E_PULL_ERROR</primary></indexterm>
<programlisting>#define GNUTLS_E_PULL_ERROR -54
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNUTLS-E-RECEIVED-ILLEGAL-PARAMETER:CAPS" role="macro">
<title>GNUTLS_E_RECEIVED_ILLEGAL_PARAMETER</title>
<indexterm zone="GNUTLS-E-RECEIVED-ILLEGAL-PARAMETER:CAPS"><primary>GNUTLS_E_RECEIVED_ILLEGAL_PARAMETER</primary></indexterm>
<programlisting>#define GNUTLS_E_RECEIVED_ILLEGAL_PARAMETER -55&#160;/* GNUTLS_A_ILLEGAL_PARAMETER */
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNUTLS-E-REQUESTED-DATA-NOT-AVAILABLE:CAPS" role="macro">
<title>GNUTLS_E_REQUESTED_DATA_NOT_AVAILABLE</title>
<indexterm zone="GNUTLS-E-REQUESTED-DATA-NOT-AVAILABLE:CAPS"><primary>GNUTLS_E_REQUESTED_DATA_NOT_AVAILABLE</primary></indexterm>
<programlisting>#define GNUTLS_E_REQUESTED_DATA_NOT_AVAILABLE -56
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNUTLS-E-PKCS1-WRONG-PAD:CAPS" role="macro">
<title>GNUTLS_E_PKCS1_WRONG_PAD</title>
<indexterm zone="GNUTLS-E-PKCS1-WRONG-PAD:CAPS"><primary>GNUTLS_E_PKCS1_WRONG_PAD</primary></indexterm>
<programlisting>#define GNUTLS_E_PKCS1_WRONG_PAD -57
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNUTLS-E-RECEIVED-ILLEGAL-EXTENSION:CAPS" role="macro">
<title>GNUTLS_E_RECEIVED_ILLEGAL_EXTENSION</title>
<indexterm zone="GNUTLS-E-RECEIVED-ILLEGAL-EXTENSION:CAPS"><primary>GNUTLS_E_RECEIVED_ILLEGAL_EXTENSION</primary></indexterm>
<programlisting>#define GNUTLS_E_RECEIVED_ILLEGAL_EXTENSION -58
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNUTLS-E-INTERNAL-ERROR:CAPS" role="macro">
<title>GNUTLS_E_INTERNAL_ERROR</title>
<indexterm zone="GNUTLS-E-INTERNAL-ERROR:CAPS"><primary>GNUTLS_E_INTERNAL_ERROR</primary></indexterm>
<programlisting>#define GNUTLS_E_INTERNAL_ERROR -59
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNUTLS-E-DH-PRIME-UNACCEPTABLE:CAPS" role="macro">
<title>GNUTLS_E_DH_PRIME_UNACCEPTABLE</title>
<indexterm zone="GNUTLS-E-DH-PRIME-UNACCEPTABLE:CAPS"><primary>GNUTLS_E_DH_PRIME_UNACCEPTABLE</primary></indexterm>
<programlisting>#define GNUTLS_E_DH_PRIME_UNACCEPTABLE -63
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNUTLS-E-FILE-ERROR:CAPS" role="macro">
<title>GNUTLS_E_FILE_ERROR</title>
<indexterm zone="GNUTLS-E-FILE-ERROR:CAPS"><primary>GNUTLS_E_FILE_ERROR</primary></indexterm>
<programlisting>#define GNUTLS_E_FILE_ERROR -64
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNUTLS-E-TOO-MANY-EMPTY-PACKETS:CAPS" role="macro">
<title>GNUTLS_E_TOO_MANY_EMPTY_PACKETS</title>
<indexterm zone="GNUTLS-E-TOO-MANY-EMPTY-PACKETS:CAPS"><primary>GNUTLS_E_TOO_MANY_EMPTY_PACKETS</primary></indexterm>
<programlisting>#define GNUTLS_E_TOO_MANY_EMPTY_PACKETS -78
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNUTLS-E-UNKNOWN-PK-ALGORITHM:CAPS" role="macro">
<title>GNUTLS_E_UNKNOWN_PK_ALGORITHM</title>
<indexterm zone="GNUTLS-E-UNKNOWN-PK-ALGORITHM:CAPS"><primary>GNUTLS_E_UNKNOWN_PK_ALGORITHM</primary></indexterm>
<programlisting>#define GNUTLS_E_UNKNOWN_PK_ALGORITHM -80
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNUTLS-E-INIT-LIBEXTRA:CAPS" role="macro">
<title>GNUTLS_E_INIT_LIBEXTRA</title>
<indexterm zone="GNUTLS-E-INIT-LIBEXTRA:CAPS"><primary>GNUTLS_E_INIT_LIBEXTRA</primary></indexterm>
<programlisting>#define GNUTLS_E_INIT_LIBEXTRA -82
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNUTLS-E-LIBRARY-VERSION-MISMATCH:CAPS" role="macro">
<title>GNUTLS_E_LIBRARY_VERSION_MISMATCH</title>
<indexterm zone="GNUTLS-E-LIBRARY-VERSION-MISMATCH:CAPS"><primary>GNUTLS_E_LIBRARY_VERSION_MISMATCH</primary></indexterm>
<programlisting>#define GNUTLS_E_LIBRARY_VERSION_MISMATCH -83
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNUTLS-E-NO-TEMPORARY-RSA-PARAMS:CAPS" role="macro">
<title>GNUTLS_E_NO_TEMPORARY_RSA_PARAMS</title>
<indexterm zone="GNUTLS-E-NO-TEMPORARY-RSA-PARAMS:CAPS"><primary>GNUTLS_E_NO_TEMPORARY_RSA_PARAMS</primary></indexterm>
<programlisting>#define GNUTLS_E_NO_TEMPORARY_RSA_PARAMS -84
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNUTLS-E-LZO-INIT-FAILED:CAPS" role="macro">
<title>GNUTLS_E_LZO_INIT_FAILED</title>
<indexterm zone="GNUTLS-E-LZO-INIT-FAILED:CAPS"><primary>GNUTLS_E_LZO_INIT_FAILED</primary></indexterm>
<programlisting>#define GNUTLS_E_LZO_INIT_FAILED -85
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNUTLS-E-NO-COMPRESSION-ALGORITHMS:CAPS" role="macro">
<title>GNUTLS_E_NO_COMPRESSION_ALGORITHMS</title>
<indexterm zone="GNUTLS-E-NO-COMPRESSION-ALGORITHMS:CAPS"><primary>GNUTLS_E_NO_COMPRESSION_ALGORITHMS</primary></indexterm>
<programlisting>#define GNUTLS_E_NO_COMPRESSION_ALGORITHMS -86
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNUTLS-E-NO-CIPHER-SUITES:CAPS" role="macro">
<title>GNUTLS_E_NO_CIPHER_SUITES</title>
<indexterm zone="GNUTLS-E-NO-CIPHER-SUITES:CAPS"><primary>GNUTLS_E_NO_CIPHER_SUITES</primary></indexterm>
<programlisting>#define GNUTLS_E_NO_CIPHER_SUITES -87
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNUTLS-E-OPENPGP-GETKEY-FAILED:CAPS" role="macro">
<title>GNUTLS_E_OPENPGP_GETKEY_FAILED</title>
<indexterm zone="GNUTLS-E-OPENPGP-GETKEY-FAILED:CAPS"><primary>GNUTLS_E_OPENPGP_GETKEY_FAILED</primary></indexterm>
<programlisting>#define GNUTLS_E_OPENPGP_GETKEY_FAILED -88
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNUTLS-E-PK-SIG-VERIFY-FAILED:CAPS" role="macro">
<title>GNUTLS_E_PK_SIG_VERIFY_FAILED</title>
<indexterm zone="GNUTLS-E-PK-SIG-VERIFY-FAILED:CAPS"><primary>GNUTLS_E_PK_SIG_VERIFY_FAILED</primary></indexterm>
<programlisting>#define GNUTLS_E_PK_SIG_VERIFY_FAILED -89
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNUTLS-E-ILLEGAL-SRP-USERNAME:CAPS" role="macro">
<title>GNUTLS_E_ILLEGAL_SRP_USERNAME</title>
<indexterm zone="GNUTLS-E-ILLEGAL-SRP-USERNAME:CAPS"><primary>GNUTLS_E_ILLEGAL_SRP_USERNAME</primary></indexterm>
<programlisting>#define GNUTLS_E_ILLEGAL_SRP_USERNAME -90
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNUTLS-E-SRP-PWD-PARSING-ERROR:CAPS" role="macro">
<title>GNUTLS_E_SRP_PWD_PARSING_ERROR</title>
<indexterm zone="GNUTLS-E-SRP-PWD-PARSING-ERROR:CAPS"><primary>GNUTLS_E_SRP_PWD_PARSING_ERROR</primary></indexterm>
<programlisting>#define GNUTLS_E_SRP_PWD_PARSING_ERROR -91
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNUTLS-E-NO-TEMPORARY-DH-PARAMS:CAPS" role="macro">
<title>GNUTLS_E_NO_TEMPORARY_DH_PARAMS</title>
<indexterm zone="GNUTLS-E-NO-TEMPORARY-DH-PARAMS:CAPS"><primary>GNUTLS_E_NO_TEMPORARY_DH_PARAMS</primary></indexterm>
<programlisting>#define GNUTLS_E_NO_TEMPORARY_DH_PARAMS -93
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNUTLS-E-ASN1-ELEMENT-NOT-FOUND:CAPS" role="macro">
<title>GNUTLS_E_ASN1_ELEMENT_NOT_FOUND</title>
<indexterm zone="GNUTLS-E-ASN1-ELEMENT-NOT-FOUND:CAPS"><primary>GNUTLS_E_ASN1_ELEMENT_NOT_FOUND</primary></indexterm>
<programlisting>#define GNUTLS_E_ASN1_ELEMENT_NOT_FOUND -67
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNUTLS-E-ASN1-IDENTIFIER-NOT-FOUND:CAPS" role="macro">
<title>GNUTLS_E_ASN1_IDENTIFIER_NOT_FOUND</title>
<indexterm zone="GNUTLS-E-ASN1-IDENTIFIER-NOT-FOUND:CAPS"><primary>GNUTLS_E_ASN1_IDENTIFIER_NOT_FOUND</primary></indexterm>
<programlisting>#define GNUTLS_E_ASN1_IDENTIFIER_NOT_FOUND -68
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNUTLS-E-ASN1-DER-ERROR:CAPS" role="macro">
<title>GNUTLS_E_ASN1_DER_ERROR</title>
<indexterm zone="GNUTLS-E-ASN1-DER-ERROR:CAPS"><primary>GNUTLS_E_ASN1_DER_ERROR</primary></indexterm>
<programlisting>#define GNUTLS_E_ASN1_DER_ERROR -69
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNUTLS-E-ASN1-VALUE-NOT-FOUND:CAPS" role="macro">
<title>GNUTLS_E_ASN1_VALUE_NOT_FOUND</title>
<indexterm zone="GNUTLS-E-ASN1-VALUE-NOT-FOUND:CAPS"><primary>GNUTLS_E_ASN1_VALUE_NOT_FOUND</primary></indexterm>
<programlisting>#define GNUTLS_E_ASN1_VALUE_NOT_FOUND -70
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNUTLS-E-ASN1-GENERIC-ERROR:CAPS" role="macro">
<title>GNUTLS_E_ASN1_GENERIC_ERROR</title>
<indexterm zone="GNUTLS-E-ASN1-GENERIC-ERROR:CAPS"><primary>GNUTLS_E_ASN1_GENERIC_ERROR</primary></indexterm>
<programlisting>#define GNUTLS_E_ASN1_GENERIC_ERROR -71
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNUTLS-E-ASN1-VALUE-NOT-VALID:CAPS" role="macro">
<title>GNUTLS_E_ASN1_VALUE_NOT_VALID</title>
<indexterm zone="GNUTLS-E-ASN1-VALUE-NOT-VALID:CAPS"><primary>GNUTLS_E_ASN1_VALUE_NOT_VALID</primary></indexterm>
<programlisting>#define GNUTLS_E_ASN1_VALUE_NOT_VALID -72
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNUTLS-E-ASN1-TAG-ERROR:CAPS" role="macro">
<title>GNUTLS_E_ASN1_TAG_ERROR</title>
<indexterm zone="GNUTLS-E-ASN1-TAG-ERROR:CAPS"><primary>GNUTLS_E_ASN1_TAG_ERROR</primary></indexterm>
<programlisting>#define GNUTLS_E_ASN1_TAG_ERROR -73
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNUTLS-E-ASN1-TAG-IMPLICIT:CAPS" role="macro">
<title>GNUTLS_E_ASN1_TAG_IMPLICIT</title>
<indexterm zone="GNUTLS-E-ASN1-TAG-IMPLICIT:CAPS"><primary>GNUTLS_E_ASN1_TAG_IMPLICIT</primary></indexterm>
<programlisting>#define GNUTLS_E_ASN1_TAG_IMPLICIT -74
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNUTLS-E-ASN1-TYPE-ANY-ERROR:CAPS" role="macro">
<title>GNUTLS_E_ASN1_TYPE_ANY_ERROR</title>
<indexterm zone="GNUTLS-E-ASN1-TYPE-ANY-ERROR:CAPS"><primary>GNUTLS_E_ASN1_TYPE_ANY_ERROR</primary></indexterm>
<programlisting>#define GNUTLS_E_ASN1_TYPE_ANY_ERROR -75
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNUTLS-E-ASN1-SYNTAX-ERROR:CAPS" role="macro">
<title>GNUTLS_E_ASN1_SYNTAX_ERROR</title>
<indexterm zone="GNUTLS-E-ASN1-SYNTAX-ERROR:CAPS"><primary>GNUTLS_E_ASN1_SYNTAX_ERROR</primary></indexterm>
<programlisting>#define GNUTLS_E_ASN1_SYNTAX_ERROR -76
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNUTLS-E-ASN1-DER-OVERFLOW:CAPS" role="macro">
<title>GNUTLS_E_ASN1_DER_OVERFLOW</title>
<indexterm zone="GNUTLS-E-ASN1-DER-OVERFLOW:CAPS"><primary>GNUTLS_E_ASN1_DER_OVERFLOW</primary></indexterm>
<programlisting>#define GNUTLS_E_ASN1_DER_OVERFLOW -77
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNUTLS-E-OPENPGP-UID-REVOKED:CAPS" role="macro">
<title>GNUTLS_E_OPENPGP_UID_REVOKED</title>
<indexterm zone="GNUTLS-E-OPENPGP-UID-REVOKED:CAPS"><primary>GNUTLS_E_OPENPGP_UID_REVOKED</primary></indexterm>
<programlisting>#define GNUTLS_E_OPENPGP_UID_REVOKED -79
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNUTLS-E-CERTIFICATE-ERROR:CAPS" role="macro">
<title>GNUTLS_E_CERTIFICATE_ERROR</title>
<indexterm zone="GNUTLS-E-CERTIFICATE-ERROR:CAPS"><primary>GNUTLS_E_CERTIFICATE_ERROR</primary></indexterm>
<programlisting>#define GNUTLS_E_CERTIFICATE_ERROR -43
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNUTLS-E-X509-CERTIFICATE-ERROR:CAPS" role="macro">
<title>GNUTLS_E_X509_CERTIFICATE_ERROR</title>
<indexterm zone="GNUTLS-E-X509-CERTIFICATE-ERROR:CAPS"><primary>GNUTLS_E_X509_CERTIFICATE_ERROR</primary></indexterm>
<programlisting>#define GNUTLS_E_X509_CERTIFICATE_ERROR GNUTLS_E_CERTIFICATE_ERROR
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNUTLS-E-CERTIFICATE-KEY-MISMATCH:CAPS" role="macro">
<title>GNUTLS_E_CERTIFICATE_KEY_MISMATCH</title>
<indexterm zone="GNUTLS-E-CERTIFICATE-KEY-MISMATCH:CAPS"><primary>GNUTLS_E_CERTIFICATE_KEY_MISMATCH</primary></indexterm>
<programlisting>#define GNUTLS_E_CERTIFICATE_KEY_MISMATCH -60
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNUTLS-E-UNSUPPORTED-CERTIFICATE-TYPE:CAPS" role="macro">
<title>GNUTLS_E_UNSUPPORTED_CERTIFICATE_TYPE</title>
<indexterm zone="GNUTLS-E-UNSUPPORTED-CERTIFICATE-TYPE:CAPS"><primary>GNUTLS_E_UNSUPPORTED_CERTIFICATE_TYPE</primary></indexterm>
<programlisting>#define GNUTLS_E_UNSUPPORTED_CERTIFICATE_TYPE -61&#160;/* GNUTLS_A_UNSUPPORTED_CERTIFICATE */
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNUTLS-E-X509-UNKNOWN-SAN:CAPS" role="macro">
<title>GNUTLS_E_X509_UNKNOWN_SAN</title>
<indexterm zone="GNUTLS-E-X509-UNKNOWN-SAN:CAPS"><primary>GNUTLS_E_X509_UNKNOWN_SAN</primary></indexterm>
<programlisting>#define GNUTLS_E_X509_UNKNOWN_SAN -62
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNUTLS-E-OPENPGP-FINGERPRINT-UNSUPPORTED:CAPS" role="macro">
<title>GNUTLS_E_OPENPGP_FINGERPRINT_UNSUPPORTED</title>
<indexterm zone="GNUTLS-E-OPENPGP-FINGERPRINT-UNSUPPORTED:CAPS"><primary>GNUTLS_E_OPENPGP_FINGERPRINT_UNSUPPORTED</primary></indexterm>
<programlisting>#define GNUTLS_E_OPENPGP_FINGERPRINT_UNSUPPORTED -94
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNUTLS-E-X509-UNSUPPORTED-ATTRIBUTE:CAPS" role="macro">
<title>GNUTLS_E_X509_UNSUPPORTED_ATTRIBUTE</title>
<indexterm zone="GNUTLS-E-X509-UNSUPPORTED-ATTRIBUTE:CAPS"><primary>GNUTLS_E_X509_UNSUPPORTED_ATTRIBUTE</primary></indexterm>
<programlisting>#define GNUTLS_E_X509_UNSUPPORTED_ATTRIBUTE -95
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNUTLS-E-UNKNOWN-HASH-ALGORITHM:CAPS" role="macro">
<title>GNUTLS_E_UNKNOWN_HASH_ALGORITHM</title>
<indexterm zone="GNUTLS-E-UNKNOWN-HASH-ALGORITHM:CAPS"><primary>GNUTLS_E_UNKNOWN_HASH_ALGORITHM</primary></indexterm>
<programlisting>#define GNUTLS_E_UNKNOWN_HASH_ALGORITHM -96
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNUTLS-E-UNKNOWN-PKCS-CONTENT-TYPE:CAPS" role="macro">
<title>GNUTLS_E_UNKNOWN_PKCS_CONTENT_TYPE</title>
<indexterm zone="GNUTLS-E-UNKNOWN-PKCS-CONTENT-TYPE:CAPS"><primary>GNUTLS_E_UNKNOWN_PKCS_CONTENT_TYPE</primary></indexterm>
<programlisting>#define GNUTLS_E_UNKNOWN_PKCS_CONTENT_TYPE -97
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNUTLS-E-UNKNOWN-PKCS-BAG-TYPE:CAPS" role="macro">
<title>GNUTLS_E_UNKNOWN_PKCS_BAG_TYPE</title>
<indexterm zone="GNUTLS-E-UNKNOWN-PKCS-BAG-TYPE:CAPS"><primary>GNUTLS_E_UNKNOWN_PKCS_BAG_TYPE</primary></indexterm>
<programlisting>#define GNUTLS_E_UNKNOWN_PKCS_BAG_TYPE -98
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNUTLS-E-INVALID-PASSWORD:CAPS" role="macro">
<title>GNUTLS_E_INVALID_PASSWORD</title>
<indexterm zone="GNUTLS-E-INVALID-PASSWORD:CAPS"><primary>GNUTLS_E_INVALID_PASSWORD</primary></indexterm>
<programlisting>#define GNUTLS_E_INVALID_PASSWORD -99
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNUTLS-E-MAC-VERIFY-FAILED:CAPS" role="macro">
<title>GNUTLS_E_MAC_VERIFY_FAILED</title>
<indexterm zone="GNUTLS-E-MAC-VERIFY-FAILED:CAPS"><primary>GNUTLS_E_MAC_VERIFY_FAILED</primary></indexterm>
<programlisting>#define GNUTLS_E_MAC_VERIFY_FAILED -100&#160;/* for PKCS #12 MAC */
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNUTLS-E-CONSTRAINT-ERROR:CAPS" role="macro">
<title>GNUTLS_E_CONSTRAINT_ERROR</title>
<indexterm zone="GNUTLS-E-CONSTRAINT-ERROR:CAPS"><primary>GNUTLS_E_CONSTRAINT_ERROR</primary></indexterm>
<programlisting>#define GNUTLS_E_CONSTRAINT_ERROR -101
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNUTLS-E-WARNING-IA-IPHF-RECEIVED:CAPS" role="macro">
<title>GNUTLS_E_WARNING_IA_IPHF_RECEIVED</title>
<indexterm zone="GNUTLS-E-WARNING-IA-IPHF-RECEIVED:CAPS"><primary>GNUTLS_E_WARNING_IA_IPHF_RECEIVED</primary></indexterm>
<programlisting>#define GNUTLS_E_WARNING_IA_IPHF_RECEIVED -102
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNUTLS-E-WARNING-IA-FPHF-RECEIVED:CAPS" role="macro">
<title>GNUTLS_E_WARNING_IA_FPHF_RECEIVED</title>
<indexterm zone="GNUTLS-E-WARNING-IA-FPHF-RECEIVED:CAPS"><primary>GNUTLS_E_WARNING_IA_FPHF_RECEIVED</primary></indexterm>
<programlisting>#define GNUTLS_E_WARNING_IA_FPHF_RECEIVED -103
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNUTLS-E-IA-VERIFY-FAILED:CAPS" role="macro">
<title>GNUTLS_E_IA_VERIFY_FAILED</title>
<indexterm zone="GNUTLS-E-IA-VERIFY-FAILED:CAPS"><primary>GNUTLS_E_IA_VERIFY_FAILED</primary></indexterm>
<programlisting>#define GNUTLS_E_IA_VERIFY_FAILED -104
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNUTLS-E-UNKNOWN-ALGORITHM:CAPS" role="macro">
<title>GNUTLS_E_UNKNOWN_ALGORITHM</title>
<indexterm zone="GNUTLS-E-UNKNOWN-ALGORITHM:CAPS"><primary>GNUTLS_E_UNKNOWN_ALGORITHM</primary></indexterm>
<programlisting>#define GNUTLS_E_UNKNOWN_ALGORITHM -105
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNUTLS-E-BASE64-ENCODING-ERROR:CAPS" role="macro">
<title>GNUTLS_E_BASE64_ENCODING_ERROR</title>
<indexterm zone="GNUTLS-E-BASE64-ENCODING-ERROR:CAPS"><primary>GNUTLS_E_BASE64_ENCODING_ERROR</primary></indexterm>
<programlisting>#define GNUTLS_E_BASE64_ENCODING_ERROR -201
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNUTLS-E-INCOMPATIBLE-GCRYPT-LIBRARY:CAPS" role="macro">
<title>GNUTLS_E_INCOMPATIBLE_GCRYPT_LIBRARY</title>
<indexterm zone="GNUTLS-E-INCOMPATIBLE-GCRYPT-LIBRARY:CAPS"><primary>GNUTLS_E_INCOMPATIBLE_GCRYPT_LIBRARY</primary></indexterm>
<programlisting>#define GNUTLS_E_INCOMPATIBLE_GCRYPT_LIBRARY -202&#160;/* obsolete */
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNUTLS-E-INCOMPATIBLE-CRYPTO-LIBRARY:CAPS" role="macro">
<title>GNUTLS_E_INCOMPATIBLE_CRYPTO_LIBRARY</title>
<indexterm zone="GNUTLS-E-INCOMPATIBLE-CRYPTO-LIBRARY:CAPS"><primary>GNUTLS_E_INCOMPATIBLE_CRYPTO_LIBRARY</primary></indexterm>
<programlisting>#define GNUTLS_E_INCOMPATIBLE_CRYPTO_LIBRARY -202
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNUTLS-E-INCOMPATIBLE-LIBTASN1-LIBRARY:CAPS" role="macro">
<title>GNUTLS_E_INCOMPATIBLE_LIBTASN1_LIBRARY</title>
<indexterm zone="GNUTLS-E-INCOMPATIBLE-LIBTASN1-LIBRARY:CAPS"><primary>GNUTLS_E_INCOMPATIBLE_LIBTASN1_LIBRARY</primary></indexterm>
<programlisting>#define GNUTLS_E_INCOMPATIBLE_LIBTASN1_LIBRARY -203
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNUTLS-E-OPENPGP-KEYRING-ERROR:CAPS" role="macro">
<title>GNUTLS_E_OPENPGP_KEYRING_ERROR</title>
<indexterm zone="GNUTLS-E-OPENPGP-KEYRING-ERROR:CAPS"><primary>GNUTLS_E_OPENPGP_KEYRING_ERROR</primary></indexterm>
<programlisting>#define GNUTLS_E_OPENPGP_KEYRING_ERROR -204
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNUTLS-E-X509-UNSUPPORTED-OID:CAPS" role="macro">
<title>GNUTLS_E_X509_UNSUPPORTED_OID</title>
<indexterm zone="GNUTLS-E-X509-UNSUPPORTED-OID:CAPS"><primary>GNUTLS_E_X509_UNSUPPORTED_OID</primary></indexterm>
<programlisting>#define GNUTLS_E_X509_UNSUPPORTED_OID -205
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNUTLS-E-RANDOM-FAILED:CAPS" role="macro">
<title>GNUTLS_E_RANDOM_FAILED</title>
<indexterm zone="GNUTLS-E-RANDOM-FAILED:CAPS"><primary>GNUTLS_E_RANDOM_FAILED</primary></indexterm>
<programlisting>#define GNUTLS_E_RANDOM_FAILED -206
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNUTLS-E-BASE64-UNEXPECTED-HEADER-ERROR:CAPS" role="macro">
<title>GNUTLS_E_BASE64_UNEXPECTED_HEADER_ERROR</title>
<indexterm zone="GNUTLS-E-BASE64-UNEXPECTED-HEADER-ERROR:CAPS"><primary>GNUTLS_E_BASE64_UNEXPECTED_HEADER_ERROR</primary></indexterm>
<programlisting>#define GNUTLS_E_BASE64_UNEXPECTED_HEADER_ERROR -207
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNUTLS-E-OPENPGP-SUBKEY-ERROR:CAPS" role="macro">
<title>GNUTLS_E_OPENPGP_SUBKEY_ERROR</title>
<indexterm zone="GNUTLS-E-OPENPGP-SUBKEY-ERROR:CAPS"><primary>GNUTLS_E_OPENPGP_SUBKEY_ERROR</primary></indexterm>
<programlisting>#define GNUTLS_E_OPENPGP_SUBKEY_ERROR -208
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNUTLS-E-CRYPTO-ALREADY-REGISTERED:CAPS" role="macro">
<title>GNUTLS_E_CRYPTO_ALREADY_REGISTERED</title>
<indexterm zone="GNUTLS-E-CRYPTO-ALREADY-REGISTERED:CAPS"><primary>GNUTLS_E_CRYPTO_ALREADY_REGISTERED</primary></indexterm>
<programlisting>#define GNUTLS_E_CRYPTO_ALREADY_REGISTERED -209
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNUTLS-E-HANDSHAKE-TOO-LARGE:CAPS" role="macro">
<title>GNUTLS_E_HANDSHAKE_TOO_LARGE</title>
<indexterm zone="GNUTLS-E-HANDSHAKE-TOO-LARGE:CAPS"><primary>GNUTLS_E_HANDSHAKE_TOO_LARGE</primary></indexterm>
<programlisting>#define GNUTLS_E_HANDSHAKE_TOO_LARGE -210
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNUTLS-E-UNIMPLEMENTED-FEATURE:CAPS" role="macro">
<title>GNUTLS_E_UNIMPLEMENTED_FEATURE</title>
<indexterm zone="GNUTLS-E-UNIMPLEMENTED-FEATURE:CAPS"><primary>GNUTLS_E_UNIMPLEMENTED_FEATURE</primary></indexterm>
<programlisting>#define GNUTLS_E_UNIMPLEMENTED_FEATURE -1250
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNUTLS-E-APPLICATION-ERROR-MAX:CAPS" role="macro">
<title>GNUTLS_E_APPLICATION_ERROR_MAX</title>
<indexterm zone="GNUTLS-E-APPLICATION-ERROR-MAX:CAPS"><primary>GNUTLS_E_APPLICATION_ERROR_MAX</primary></indexterm>
<programlisting>#define GNUTLS_E_APPLICATION_ERROR_MAX -65000
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GNUTLS-E-APPLICATION-ERROR-MIN:CAPS" role="macro">
<title>GNUTLS_E_APPLICATION_ERROR_MIN</title>
<indexterm zone="GNUTLS-E-APPLICATION-ERROR-MIN:CAPS"><primary>GNUTLS_E_APPLICATION_ERROR_MIN</primary></indexterm>
<programlisting>#define GNUTLS_E_APPLICATION_ERROR_MIN -65500
</programlisting>
<para>
</para></refsect2>

</refsect1>

</refentry>
