diff --git a/modules/pam_tally2/pam_tally2.c b/modules/pam_tally2/pam_tally2.c
index 1d2350e..ddc2fb8 100644
--- a/modules/pam_tally2/pam_tally2.c
+++ b/modules/pam_tally2/pam_tally2.c
@@ -536,34 +536,21 @@ tally_check (tally_t oldcnt, time_t oldtime, pam_handle_t *pamh, uid_t uid,
                                    rhost, NULL, tty, 1);
         }
 #endif
-        if (uid) {
-            /* Unlock time check */
-            if (opts->unlock_time && oldtime) {
-                if (opts->unlock_time + oldtime <= time(NULL)) {
-                    /* ignore deny check after unlock_time elapsed */
+        // If uid is 0, it is "Root unlock time check", otherwise "Unlock time check"
+        long unlock_time = uid ? opts->unlock_time : opts->root_unlock_time;
+        if (unlock_time && oldtime) {
+          if (unlock_time + oldtime <= time(NULL)) {
+            /* ignore deny check after unlock_time elapsed */
 #ifdef HAVE_LIBAUDIT
-                    snprintf(buf, sizeof(buf), "pam_tally2 uid=%u ", uid);
-                    audit_log_user_message(audit_fd, AUDIT_RESP_ACCT_UNLOCK_TIMED, buf,
-                                   rhost, NULL, tty, 1);
-#endif
-	            rv = PAM_SUCCESS;
-		    goto cleanup;
-	        }
-            }
-        } else {
-            /* Root unlock time check */
-            if (opts->root_unlock_time && oldtime) {
-                if (opts->root_unlock_time + oldtime <= time(NULL)) {
-	            /* ignore deny check after unlock_time elapsed */
-#ifdef HAVE_LIBAUDIT
-                    snprintf(buf, sizeof(buf), "pam_tally2 uid=%u ", uid);
-                    audit_log_user_message(audit_fd, AUDIT_RESP_ACCT_UNLOCK_TIMED, buf,
-                                   rhost, NULL, tty, 1);
+            snprintf(buf, sizeof(buf), "pam_tally2 uid=%u ", uid);
+            audit_log_user_message(audit_fd, AUDIT_RESP_ACCT_UNLOCK_TIMED, buf,
+                                    rhost, NULL, tty, 1);
 #endif
-	            rv = PAM_SUCCESS;
-	            goto cleanup;
-	        }
-            }
+            tally->fail_cnt = 1; // Reset counter to 1 after unlock_time elapsed
+            tally->fail_time = time(NULL);
+            rv = PAM_SUCCESS;
+            goto cleanup;
+          }
         }
 
 #ifdef HAVE_LIBAUDIT
