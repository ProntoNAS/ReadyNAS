@subheading idn2_lookup_u8
@anchor{idn2_lookup_u8}
@deftypefun {int} {idn2_lookup_u8} (const uint8_t * @var{src}, uint8_t ** @var{lookupname}, int @var{flags})
@var{src}: input zero-terminated UTF-8 string in Unicode NFC normalized form.

@var{lookupname}: newly allocated output variable with name to lookup in DNS.

@var{flags}: optional @code{idn2_flags} to modify behaviour.

Perform IDNA2008 lookup string conversion on domain name @code{src}, as
described in section 5 of RFC 5891.  Note that the input string
must be encoded in UTF-8 and be in Unicode NFC form.

Pass @code{IDN2_NFC_INPUT} in @code{flags} to convert input to NFC form before
further processing.  Pass @code{IDN2_ALABEL_ROUNDTRIP} in @code{flags} to
convert any input A-labels to U-labels and perform additional
testing.  Multiple flags may be specified by binary or:ing them
together, for example @code{IDN2_NFC_INPUT} | @code{IDN2_ALABEL_ROUNDTRIP}.

@strong{Returns:} On successful conversion @code{IDN2_OK} is returned, if the
output domain or any label would have been too long
@code{IDN2_TOO_BIG_DOMAIN} or @code{IDN2_TOO_BIG_LABEL} is returned, or
another error code is returned.
@end deftypefun

