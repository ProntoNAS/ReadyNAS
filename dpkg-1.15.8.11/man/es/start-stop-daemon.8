.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH start\-stop\-daemon 8 "26 de Febrero de 2009" "Proyecto Debian" "Herramientas de dpkg"
.SH NOMBRE
start\-stop\-daemon \- Detiene y arranca demonios del sistema
.
.SH SINOPSIS
\fBstart\-stop\-daemon\fP [\fIopciones\fP] \fIorden\fP
.
.SH DESCRIPCIÓN
\fBstart\-stop\-daemon\fP sirve para controlar la creación y finalización de los
procesos del sistema. Usando una de las opciones de búsqueda, puede
configurar \fBstart\-stop\-daemon\fP para encontrar las instancias de un proceso
en ejecución.
.PP
Nota :Tenga en cuenta que a menos que se especifique \fB\-\-pidfile\fP,
\fBstart\-stop\-daemon\fP se comporta de forma similar a
\fBkillall(1)\fP. \fBstart\-stop\-daemon\fP buscará en la tabla de procesos
cualquier proceso que concuerde en nombre, uid y/o gid (si se
especifica). Cualquier proceso que concuerde con los parámetros prevendrá a
\fB\-\-start\fP de iniciar el demonio. Se mandará a todos los procesos la señal
TERM (o la señal especificada mediante \fB\-\-signal\fP o \fB\-\-retry\fP) si se
especifica \fB\-\-stop\fP. Debe especificar un fichero pid para los demonios que
tengan hijos de larga duración que necesiten sobrevivir a un \fB\-\-stop\fP.
.
.SH ÓRDENES
.TP 
\fB\-S\fP, \fB\-\-start\fP [\fB\-\-\fP] \fIargumentos\fP
Comprueba la existencia del proceso especificado. Si este proceso ya existe,
\fBstart\-stop\-daemon\fP no hace nada y finaliza con un estado de error 1 (0 si
se especifica \fB\-\-oknodo\fP ). Si el proceso no existe, comienza uno nuevo
usando el ejecutable especificado por \fB\-\-exec\fP, (o, si se especifica, por
\fB\-\-startas\fP ). Cualquier argumento dado en la línea de órdenes después de
\fB\-\-\fP se introduce sin modificación alguna al programa que se va a ejecutar.
.TP 
\fB\-K\fP, \fB\-\-stop\fP
Comprueba la existencia del proceso especificado. Si este proceso existe,
\fBstart\-stop\-daemon\fP envía la señal especificada por \fB\-\-signal\fP, y finaliza
con un estado de error 0. Si este proceso no existe, \fBstart\-stop\-daemon\fP
termina con un estado de error 1 (0 si se ha especificado la opción
\fB\-\-oknodo\fP ). Si se especifica la opción \fB\-\-retry\fP, \fBstart\-stop\-daemon\fP
comprobará que el proceso o los procesos han terminado.
.TP 
\fB\-H\fP, \fB\-\-help\fP
Muestra la información de uso y termina.
.TP 
\fB\-V\fP, \fB\-\-version\fP
Muestra la versión y termina.
.
.SH "OPCIONES DE BÚSQUEDA"
.TP 
\fB\-p\fP, \fB\-\-pidfile\fP \fIfichero\-pid\fP
Comprueba si un proceso ha creado el fichero \fIfichero\-pid\fP.
.TP 
\fB\-x\fP, \fB\-\-exec\fP \fIejecutable\fP
Busca procesos que sean instancias de este ejecutable (según
\fB/proc/\fP\fIpid\fP\fB/exe\fP).
.TP 
\fB\-n\fP, \fB\-\-name\fP \fInombre\-proceso\fP
Comprueba los procesos con el nombre \fInombre\-proceso\fP (según
\fB/proc/\fP\fIpid\fP\fB/stat\fP).
.TP 
\fB\-u\fP, \fB\-\-user\fP \fInombre\-usuario\fP|\fIuid\fP
Comprueba si existen los procesos del usuario especificado por
\fInombre\-usuario\fP o \fIuid\fP.
.
.SH OPCIONES
.TP 
\fB\-g\fP, \fB\-\-group\fP \fIgrupo\fP|\fIgid\fP
Pasa a \fIgrupo\fP o \fIgid\fP cuando comienza el proceso.
.TP 
\fB\-s\fP, \fB\-\-signal\fP \fIseñal\fP
Junto con \fB\-\-stop\fP, define la señal enviada al proceso que se desea parar
(TERM por omisión).
.TP 
\fB\-R\fP, \fB\-\-retry\fP \fItiempo\-de\-espera\fP|\fIacción\-programada\fP
Junto con \fB\-\-stop\fP, especifica que \fBstart\-stop\-daemon\fP compruebe que el
proceso o los procesos han terminado. Lo comprobará repetidas veces hasta
que no haya ningún proceso que coincida. Si el proceso no termina tomará una
decisión determinada por \fIacción\-programada\fP.

Si se especifica \fItiempo\-de\-espera\fP en vez de \fIacción\-programada\fP, se usa
la secuencia \fIseñal\fP\fB/\fP\fItiempo\-de\-espera\fP\fB/KILL/\fP\fItiempo\-de\-espera\fP,
donde \fIseñal\fP es la señal definida con \fB\-\-signal\fP.

\fIacción\-programada\fP es una lista de al menos dos elementos separados por
barras (\fB/\fP); cada elemento puede ser un \fB\-\fP\fInúmero\fP\fBde\fP\fIseñal\fP o
[\fB\-\fP]\fInombre\-de\-señal\fP, que significa que se debe mandar esa señal, o
\fItiempo\-de\-espera\fP, que significa que se debe esperar tantos segundos para
que el programa termine, o \fBforever\fP, que significa que se repita el resto
de la acción programada indefinidamente si es necesario.

Si se alcanza el final de la acción programada y no se ha especificado
\fBforever\fP, \fBstart\-stop\-daemon\fP termina con un estado de error 2. Si se
especifica una acción programada cualquier señal especificada con
\fB\-\-signal\fP no se tendrá en cuenta.
.TP 
\fB\-a\fP, \fB\-\-startas\fP \fInombre\-ruta\fP
Con \fB\-\-start\fP, comienza el proceso definido con \fInombre\-ruta\fP. Si no se
define, se usarán los argumentos dados con \fB\-\-exec\fP.
.TP 
\fB\-t\fP, \fB\-\-test\fP
Muestra las acciones que se realizarían y devuelve el valor apropiado, pero
no hace nada.
.TP 
\fB\-o\fP, \fB\-\-oknodo\fP
Devuelve un estado 0 en vez de 1 si no se realiza (o se vayan a realizar)
ninguna acción.
.TP 
\fB\-q\fP, \fB\-\-quiet\fP
No muestra mensajes informativos, sólo muestra mensajes de error.
.TP 
\fB\-c\fP, \fB\-\-chuid\fP \fInombre\-usuario\fP|\fIuid\fP
Cambia a este usuario/uid antes de empezar el proceso. También puede definir
un grupo añadiendo \fB:\fP seguido del grupo o el gid, del mismo modo que haría
con la orden «chown» (\fIusuario\fP\fB:\fP\fIgrupo\fP). Tenga en cuenta que cuando se
usa esta opción el grupo primario y complementario también cambian, incluso
si no se especifica \fB\-\-group\fP. La opción \fB\-\-group\fP es sólo para grupos de
los que el usuario no es miembro (como el grupo \fBnobody\fP).
.TP 
\fB\-r\fP, \fB\-\-chroot\fP \fIdirectorio\-raíz\fP
Ejecuta «chdir» y «chroot» sobre el \fIdirectorio\-raíz\fP antes de empezar el
proceso. Tenga en cuenta que el fichero pid también se escribe después del
chroot.
.TP 
\fB\-d\fP, \fB\-\-chdir\fP \fIruta\fP
Ejecuta un «chdir» a \fIruta\fP antes de empezar el proceso. Esto se hace tras
«chroot», si se define la opción \fB\-r\fP|\fB\-\-chroot\fP. Si no se define,
start\-stop\-daemon ejecutará un «chdir» al directorio raíz antes de empezar
el proceso.
.TP 
\fB\-b\fP, \fB\-\-background\fP
Usado habitualmente con programas que no se separan por sí mismos. Esta
opción forzará \fBstart\-stop\-daemon\fP a hacer un fork antes de empezar el
proceso, para luego dejarlo en segundo plano. \fBATENCIÓN: start\-stop\-daemon\fP
no puede comprobar el estado de salida si el proceso no puede ejecutarse por
\fBcualquier\fP razón. Esto se hace como último recurso, y sólo tiene sentido
usarla en programas donde no tiene sentido que hagan fork por sí mismos, o
no si es posible añadir el código para que lo hagan por sí mismos.
.TP 
\fB\-N\fP, \fB\-\-nicelevel\fP \fIentero\fP
Altera la prioridad del proceso antes de iniciarlo.
.TP 
\fB\-P\fP, \fB\-\-procsched\fP \fIdirectriz\fP\fB:\fP\fIprioridad\fP
Altera la directriz de la acción programada del proceso y la prioridad de la
acción programada antes de iniciarlo. Puede especificar la prioridad
opcionalmente añadiendo \fB:\fP, seguido del valor. La \fIprioridad\fP por omisión
es 0. Las directrices compatibles son \fBother\fP, \fBfifo\fP y \fBrr\fP.
.TP 
\fB\-I\fP, \fB\-\-iosched\fP \fIclase\fP\fB:\fP\fIprioridad\fP
Esto altera la clase la planificación de E/S y la prioridad del proceso
antes de iniciarlo. Opcionalmente, puede definir la prioridad añadiendo \fB:\fP
al final, seguido del valor. La \fIprioridad\fP predefinida es 4, a menos que
la \fIclase\fP sea \fBidle\fP. En tal caso, la prioridad será siempre 7. Los
valores posibles para la \fIclase\fP son \fBidle\fP, \fBbest\-effort\fP y
\fBreal\-time\fP.
.TP 
\fB\-k\fP, \fB\-\-umask\fP \fImask\fP
Define el umask del proceso antes de iniciarlo.
.TP 
\fB\-m\fP, \fB\-\-make\-pidfile\fP
Se usa cuando se quiere comenzar un programa que no crea su propio fichero
pid. Esta opción hace que \fBstart\-stop\-daemon\fP cree el fichero referido con
\fB\-\-pidfile\fP y coloque el pid dentro de él justo antes de ejecutar el
proceso. Tenga en cuenta que no se borrará cuando termine el
programa. \fBNOTA:\fP Esta característica no funciona en todos los casos. Más
notablemente cuando el programa que se ejecuta hace un fork de su proceso
principal. Por esto es útil sólo cuando se combina con la opción
\fB\-\-background\fP.
.TP 
\fB\-v\fP, \fB\-\-verbose\fP
Muestra mensajes informativos detallados.
.
.SH "ESTADOS DE SALIDA"
\fBstart\-stop\-daemon\fP devuelve 0 si la acción requerida tuvo éxito, o si se
define \fB\-\-oknodo\fP y si se definió o bien \fB\-\-start\fP, existiendo un proceso
cuyo nombre coincide, o \fB\-\-stop\fP y si no existe un proceso que
coincida. Devuelve 1 si se especificó \fB\-\-oknodo\fP pero nada
ocurrió. Devuelve 2 si se especificaron \fB\-\-stop\fP y \fB\-\-retry\fP, y la acción
programada se ejecutó y los procesos aún se estaban ejecutando. Devuelve 3
para los demás errores.
.
.SH EJEMPLO
Arranca el demonio \fBfood\fP, a menos que se esté ejecutando uno (un proceso
llamado «food», ejecutándose como usuario «food», y con pid en «food.pid»):
.IP
.nf
start\-stop\-daemon \-\-start \-\-oknodo \-\-user food \-\-name food \-\-pidfile /var/run/food.pid \-\-startas /usr/sbin/food \-\-chuid food \-\- \-\-daemon
.fi
.PP
Envía \fBSIGTERM\fP a \fBfood\fP y espera 5 segundos para su finalización:
.IP
.nf
start\-stop\-daemon \-\-stop \-\-oknodo \-\-user food \-\-name food \-\-pidfile /var/run/food.pid \-\-retry 5
.fi
.PP
Un ejemplo de una acción programada personalizada para detener \fBfood\fP:
.IP
.nf
start\-stop\-daemon \-\-stop \-\-oknodo \-\-user food \-\-name food \-\-pidfile /var/run/food.pid \-\-retry=TERM/30/KILL/5
.fi
.PP
.
.SH AUTORES
Marek Michalkiewicz <marekm@i17linuxb.ists.pwr.wroc.pl> basada en
una versión previa de Ian Jackson <ian@chiark.greenend.org.uk>.

Página de manual de Klee Dienes <klee@mit.edu>, reformateada
parcialmente por Ian Jackson.
.SH "TRADUCTOR"
Rudy Godoy <rudy@kernel\-panik.org>,
Rubén Porras <nahoo@inicia.es>,
Bruno Barrera C. <bruno.barrera@igloo.cl>,
Carlos Izquierdo <gheesh@ertis.net>,
Esteban Manchado y
NOK.
Debian L10n Spanish <debian\-l10n\-spanish@lists.debian.org>.
.br
Revisiones por Santiago Vila <sanvila@unex.es>,
Javier Fernández\-Sanguino, Rubén Porras,
Luis Uribe y Omar Campagne.
