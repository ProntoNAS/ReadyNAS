From 606fdfcaece19d3e05434bde57c289102a369069 Mon Sep 17 00:00:00 2001
From: Miroslav Lichvar <mlichvar@redhat.com>
Date: Mon, 3 Jun 2013 13:09:05 +0200
Subject: [PATCH 3/3] metaflac : Fix local_strcat() to terminate string
 correctly.

The NUL char is written at incorrect place when the destination string
is longer than 0, which causes memory corruption. It was broken by
commit 2d6354ff2a618a79d40edbd4f208b4b07c5422f1.

Signed-off-by: Erik de Castro Lopo <erikd@mega-nerd.com>
---
 src/metaflac/utils.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

--- a/src/metaflac/utils.c
+++ b/src/metaflac/utils.c
@@ -75,7 +75,7 @@ void local_strcat(char **dest, const cha
 	*dest = safe_realloc_add_3op_(*dest, ndest, /*+*/nsource, /*+*/1);
 	if(0 == *dest)
 		die("out of memory growing string");
-	safe_strncpy((*dest)+ndest, source, ndest + nsource + 1);
+	safe_strncpy((*dest)+ndest, source, nsource + 1);
 }
 
 static inline int local_isprint(int c)
