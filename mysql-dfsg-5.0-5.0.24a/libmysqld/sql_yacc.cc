/* A Bison parser, made by GNU Bison 2.0.  */

/* Skeleton parser for Yacc-like parsing with Bison,
   Copyright (C) 1984, 1989, 1990, 2000, 2001, 2002, 2003, 2004 Free Software Foundation, Inc.

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2, or (at your option)
   any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 59 Temple Place - Suite 330,
   Boston, MA 02111-1307, USA.  */

/* As a special exception, when this file is copied by Bison into a
   Bison output file, you may use that output file without restriction.
   This special exception was added by the Free Software Foundation
   in version 1.24 of Bison.  */

/* Written by Richard Stallman by simplifying the original so called
   ``semantic'' parser.  */

/* All symbols defined below should begin with yy or YY, to avoid
   infringing on user name space.  This should be done even for local
   variables, as they might otherwise be expanded by user macros.
   There are some unavoidable exceptions within include files to
   define necessary library symbols; they are noted "INFRINGES ON
   USER NAME SPACE" below.  */

/* Identify Bison output.  */
#define YYBISON 1

/* Skeleton name.  */
#define YYSKELETON_NAME "yacc.c"

/* Pure parsers.  */
#define YYPURE 1

/* Using locations.  */
#define YYLSP_NEEDED 0

/* Substitute the variable and function names.  */
#define yyparse MYSQLparse
#define yylex   MYSQLlex
#define yyerror MYSQLerror
#define yylval  MYSQLlval
#define yychar  MYSQLchar
#define yydebug MYSQLdebug
#define yynerrs MYSQLnerrs


/* Tokens.  */
#ifndef YYTOKENTYPE
# define YYTOKENTYPE
   /* Put the tokens into the symbol table, so that GDB and other debuggers
      know about them.  */
   enum yytokentype {
     END_OF_INPUT = 258,
     ABORT_SYM = 259,
     ACTION = 260,
     ADD = 261,
     ADDDATE_SYM = 262,
     AFTER_SYM = 263,
     AGAINST = 264,
     AGGREGATE_SYM = 265,
     ALGORITHM_SYM = 266,
     ALL = 267,
     ALTER = 268,
     ANALYZE_SYM = 269,
     AND_AND_SYM = 270,
     AND_SYM = 271,
     ANY_SYM = 272,
     AS = 273,
     ASC = 274,
     ASCII_SYM = 275,
     ASENSITIVE_SYM = 276,
     ATAN = 277,
     AUTO_INC = 278,
     AVG_ROW_LENGTH = 279,
     AVG_SYM = 280,
     BACKUP_SYM = 281,
     BEFORE_SYM = 282,
     BEGIN_SYM = 283,
     BENCHMARK_SYM = 284,
     BERKELEY_DB_SYM = 285,
     BIGINT = 286,
     BINARY = 287,
     BINLOG_SYM = 288,
     BIN_NUM = 289,
     BIT_AND = 290,
     BIT_OR = 291,
     BIT_SYM = 292,
     BIT_XOR = 293,
     BLOB_SYM = 294,
     BOOLEAN_SYM = 295,
     BOOL_SYM = 296,
     BOTH = 297,
     BTREE_SYM = 298,
     BY = 299,
     BYTE_SYM = 300,
     CACHE_SYM = 301,
     CALL_SYM = 302,
     CASCADE = 303,
     CASCADED = 304,
     CAST_SYM = 305,
     CHAIN_SYM = 306,
     CHANGE = 307,
     CHANGED = 308,
     CHARSET = 309,
     CHAR_SYM = 310,
     CHECKSUM_SYM = 311,
     CHECK_SYM = 312,
     CIPHER_SYM = 313,
     CLIENT_SYM = 314,
     CLOSE_SYM = 315,
     COALESCE = 316,
     CODE_SYM = 317,
     COLLATE_SYM = 318,
     COLLATION_SYM = 319,
     COLUMNS = 320,
     COLUMN_SYM = 321,
     COMMENT_SYM = 322,
     COMMITTED_SYM = 323,
     COMMIT_SYM = 324,
     COMPACT_SYM = 325,
     COMPRESSED_SYM = 326,
     CONCAT = 327,
     CONCAT_WS = 328,
     CONCURRENT = 329,
     CONDITION_SYM = 330,
     CONNECTION_SYM = 331,
     CONSISTENT_SYM = 332,
     CONSTRAINT = 333,
     CONTAINS_SYM = 334,
     CONTINUE_SYM = 335,
     CONVERT_SYM = 336,
     CONVERT_TZ_SYM = 337,
     COUNT_SYM = 338,
     CREATE = 339,
     CROSS = 340,
     CUBE_SYM = 341,
     CURDATE = 342,
     CURRENT_USER = 343,
     CURSOR_SYM = 344,
     CURTIME = 345,
     DATABASE = 346,
     DATABASES = 347,
     DATA_SYM = 348,
     DATETIME = 349,
     DATE_ADD_INTERVAL = 350,
     DATE_SUB_INTERVAL = 351,
     DATE_SYM = 352,
     DAY_HOUR_SYM = 353,
     DAY_MICROSECOND_SYM = 354,
     DAY_MINUTE_SYM = 355,
     DAY_SECOND_SYM = 356,
     DAY_SYM = 357,
     DEALLOCATE_SYM = 358,
     DECIMAL_NUM = 359,
     DECIMAL_SYM = 360,
     DECLARE_SYM = 361,
     DECODE_SYM = 362,
     DEFAULT = 363,
     DEFINER_SYM = 364,
     DELAYED_SYM = 365,
     DELAY_KEY_WRITE_SYM = 366,
     DELETE_SYM = 367,
     DESC = 368,
     DESCRIBE = 369,
     DES_DECRYPT_SYM = 370,
     DES_ENCRYPT_SYM = 371,
     DES_KEY_FILE = 372,
     DETERMINISTIC_SYM = 373,
     DIRECTORY_SYM = 374,
     DISABLE_SYM = 375,
     DISCARD = 376,
     DISTINCT = 377,
     DIV_SYM = 378,
     DOUBLE_SYM = 379,
     DO_SYM = 380,
     DROP = 381,
     DUAL_SYM = 382,
     DUMPFILE = 383,
     DUPLICATE_SYM = 384,
     DYNAMIC_SYM = 385,
     EACH_SYM = 386,
     ELSEIF_SYM = 387,
     ELT_FUNC = 388,
     ENABLE_SYM = 389,
     ENCLOSED = 390,
     ENCODE_SYM = 391,
     ENCRYPT = 392,
     END = 393,
     ENGINES_SYM = 394,
     ENGINE_SYM = 395,
     ENUM = 396,
     EQ = 397,
     EQUAL_SYM = 398,
     ERRORS = 399,
     ESCAPED = 400,
     ESCAPE_SYM = 401,
     EVENTS_SYM = 402,
     EXECUTE_SYM = 403,
     EXISTS = 404,
     EXIT_SYM = 405,
     EXPANSION_SYM = 406,
     EXPORT_SET = 407,
     EXTENDED_SYM = 408,
     EXTRACT_SYM = 409,
     FALSE_SYM = 410,
     FAST_SYM = 411,
     FETCH_SYM = 412,
     FIELD_FUNC = 413,
     FILE_SYM = 414,
     FIRST_SYM = 415,
     FIXED_SYM = 416,
     FLOAT_NUM = 417,
     FLOAT_SYM = 418,
     FLUSH_SYM = 419,
     FORCE_SYM = 420,
     FOREIGN = 421,
     FORMAT_SYM = 422,
     FOR_SYM = 423,
     FOUND_SYM = 424,
     FRAC_SECOND_SYM = 425,
     FROM = 426,
     FROM_UNIXTIME = 427,
     FULL = 428,
     FULLTEXT_SYM = 429,
     FUNCTION_SYM = 430,
     FUNC_ARG0 = 431,
     FUNC_ARG1 = 432,
     FUNC_ARG2 = 433,
     FUNC_ARG3 = 434,
     GE = 435,
     GEOMCOLLFROMTEXT = 436,
     GEOMETRYCOLLECTION = 437,
     GEOMETRY_SYM = 438,
     GEOMFROMTEXT = 439,
     GEOMFROMWKB = 440,
     GET_FORMAT = 441,
     GLOBAL_SYM = 442,
     GRANT = 443,
     GRANTS = 444,
     GREATEST_SYM = 445,
     GROUP = 446,
     GROUP_CONCAT_SYM = 447,
     GROUP_UNIQUE_USERS = 448,
     GT_SYM = 449,
     HANDLER_SYM = 450,
     HASH_SYM = 451,
     HAVING = 452,
     HELP_SYM = 453,
     HEX_NUM = 454,
     HIGH_PRIORITY = 455,
     HOSTS_SYM = 456,
     HOUR_MICROSECOND_SYM = 457,
     HOUR_MINUTE_SYM = 458,
     HOUR_SECOND_SYM = 459,
     HOUR_SYM = 460,
     IDENT = 461,
     IDENTIFIED_SYM = 462,
     IDENT_QUOTED = 463,
     IF = 464,
     IGNORE_SYM = 465,
     IMPORT = 466,
     INDEXES = 467,
     INDEX_SYM = 468,
     INFILE = 469,
     INNER_SYM = 470,
     INNOBASE_SYM = 471,
     INOUT_SYM = 472,
     INSENSITIVE_SYM = 473,
     INSERT = 474,
     INSERT_METHOD = 475,
     INTERVAL_SYM = 476,
     INTO = 477,
     INT_SYM = 478,
     INVOKER_SYM = 479,
     IN_SYM = 480,
     IS = 481,
     ISOLATION = 482,
     ISSUER_SYM = 483,
     ITERATE_SYM = 484,
     JOIN_SYM = 485,
     KEYS = 486,
     KEY_SYM = 487,
     KILL_SYM = 488,
     LABEL_SYM = 489,
     LANGUAGE_SYM = 490,
     LAST_INSERT_ID = 491,
     LAST_SYM = 492,
     LE = 493,
     LEADING = 494,
     LEAST_SYM = 495,
     LEAVES = 496,
     LEAVE_SYM = 497,
     LEFT = 498,
     LEVEL_SYM = 499,
     LEX_HOSTNAME = 500,
     LIKE = 501,
     LIMIT = 502,
     LINEFROMTEXT = 503,
     LINES = 504,
     LINESTRING = 505,
     LOAD = 506,
     LOCAL_SYM = 507,
     LOCATE = 508,
     LOCATOR_SYM = 509,
     LOCKS_SYM = 510,
     LOCK_SYM = 511,
     LOGS_SYM = 512,
     LOG_SYM = 513,
     LONGBLOB = 514,
     LONGTEXT = 515,
     LONG_NUM = 516,
     LONG_SYM = 517,
     LOOP_SYM = 518,
     LOW_PRIORITY = 519,
     LT = 520,
     MAKE_SET_SYM = 521,
     MASTER_CONNECT_RETRY_SYM = 522,
     MASTER_HOST_SYM = 523,
     MASTER_LOG_FILE_SYM = 524,
     MASTER_LOG_POS_SYM = 525,
     MASTER_PASSWORD_SYM = 526,
     MASTER_PORT_SYM = 527,
     MASTER_POS_WAIT = 528,
     MASTER_SERVER_ID_SYM = 529,
     MASTER_SSL_CAPATH_SYM = 530,
     MASTER_SSL_CA_SYM = 531,
     MASTER_SSL_CERT_SYM = 532,
     MASTER_SSL_CIPHER_SYM = 533,
     MASTER_SSL_KEY_SYM = 534,
     MASTER_SSL_SYM = 535,
     MASTER_SYM = 536,
     MASTER_USER_SYM = 537,
     MATCH = 538,
     MAX_CONNECTIONS_PER_HOUR = 539,
     MAX_QUERIES_PER_HOUR = 540,
     MAX_ROWS = 541,
     MAX_SYM = 542,
     MAX_UPDATES_PER_HOUR = 543,
     MAX_USER_CONNECTIONS_SYM = 544,
     MEDIUMBLOB = 545,
     MEDIUMINT = 546,
     MEDIUMTEXT = 547,
     MEDIUM_SYM = 548,
     MERGE_SYM = 549,
     MICROSECOND_SYM = 550,
     MIGRATE_SYM = 551,
     MINUTE_MICROSECOND_SYM = 552,
     MINUTE_SECOND_SYM = 553,
     MINUTE_SYM = 554,
     MIN_ROWS = 555,
     MIN_SYM = 556,
     MLINEFROMTEXT = 557,
     MODE_SYM = 558,
     MODIFIES_SYM = 559,
     MODIFY_SYM = 560,
     MOD_SYM = 561,
     MONTH_SYM = 562,
     MPOINTFROMTEXT = 563,
     MPOLYFROMTEXT = 564,
     MULTILINESTRING = 565,
     MULTIPOINT = 566,
     MULTIPOLYGON = 567,
     MUTEX_SYM = 568,
     NAMES_SYM = 569,
     NAME_SYM = 570,
     NATIONAL_SYM = 571,
     NATURAL = 572,
     NCHAR_STRING = 573,
     NCHAR_SYM = 574,
     NDBCLUSTER_SYM = 575,
     NE = 576,
     NEW_SYM = 577,
     NEXT_SYM = 578,
     NONE_SYM = 579,
     NOT2_SYM = 580,
     NOT_SYM = 581,
     NOW_SYM = 582,
     NO_SYM = 583,
     NO_WRITE_TO_BINLOG = 584,
     NULL_SYM = 585,
     NUM = 586,
     NUMERIC_SYM = 587,
     NVARCHAR_SYM = 588,
     OFFSET_SYM = 589,
     OJ_SYM = 590,
     OLD_PASSWORD = 591,
     ON = 592,
     ONE_SHOT_SYM = 593,
     ONE_SYM = 594,
     OPEN_SYM = 595,
     OPTIMIZE = 596,
     OPTION = 597,
     OPTIONALLY = 598,
     OR2_SYM = 599,
     ORDER_SYM = 600,
     OR_OR_SYM = 601,
     OR_SYM = 602,
     OUTER = 603,
     OUTFILE = 604,
     OUT_SYM = 605,
     PACK_KEYS_SYM = 606,
     PARTIAL = 607,
     PASSWORD = 608,
     PARAM_MARKER = 609,
     PHASE_SYM = 610,
     POINTFROMTEXT = 611,
     POINT_SYM = 612,
     POLYFROMTEXT = 613,
     POLYGON = 614,
     POSITION_SYM = 615,
     PRECISION = 616,
     PREPARE_SYM = 617,
     PREV_SYM = 618,
     PRIMARY_SYM = 619,
     PRIVILEGES = 620,
     PROCEDURE = 621,
     PROCESS = 622,
     PROCESSLIST_SYM = 623,
     PURGE = 624,
     QUARTER_SYM = 625,
     QUERY_SYM = 626,
     QUICK = 627,
     RAID_0_SYM = 628,
     RAID_CHUNKS = 629,
     RAID_CHUNKSIZE = 630,
     RAID_STRIPED_SYM = 631,
     RAID_TYPE = 632,
     RAND = 633,
     READS_SYM = 634,
     READ_SYM = 635,
     REAL = 636,
     RECOVER_SYM = 637,
     REDUNDANT_SYM = 638,
     REFERENCES = 639,
     REGEXP = 640,
     RELAY_LOG_FILE_SYM = 641,
     RELAY_LOG_POS_SYM = 642,
     RELAY_THREAD = 643,
     RELEASE_SYM = 644,
     RELOAD = 645,
     RENAME = 646,
     REPAIR = 647,
     REPEATABLE_SYM = 648,
     REPEAT_SYM = 649,
     REPLACE = 650,
     REPLICATION = 651,
     REQUIRE_SYM = 652,
     RESET_SYM = 653,
     RESOURCES = 654,
     RESTORE_SYM = 655,
     RESTRICT = 656,
     RESUME_SYM = 657,
     RETURNS_SYM = 658,
     RETURN_SYM = 659,
     REVOKE = 660,
     RIGHT = 661,
     ROLLBACK_SYM = 662,
     ROLLUP_SYM = 663,
     ROUND = 664,
     ROUTINE_SYM = 665,
     ROWS_SYM = 666,
     ROW_COUNT_SYM = 667,
     ROW_FORMAT_SYM = 668,
     ROW_SYM = 669,
     RTREE_SYM = 670,
     SAVEPOINT_SYM = 671,
     SECOND_MICROSECOND_SYM = 672,
     SECOND_SYM = 673,
     SECURITY_SYM = 674,
     SELECT_SYM = 675,
     SENSITIVE_SYM = 676,
     SEPARATOR_SYM = 677,
     SERIALIZABLE_SYM = 678,
     SERIAL_SYM = 679,
     SESSION_SYM = 680,
     SET = 681,
     SET_VAR = 682,
     SHARE_SYM = 683,
     SHIFT_LEFT = 684,
     SHIFT_RIGHT = 685,
     SHOW = 686,
     SHUTDOWN = 687,
     SIGNED_SYM = 688,
     SIMPLE_SYM = 689,
     SLAVE = 690,
     SMALLINT = 691,
     SNAPSHOT_SYM = 692,
     SOUNDS_SYM = 693,
     SPATIAL_SYM = 694,
     SPECIFIC_SYM = 695,
     SQLEXCEPTION_SYM = 696,
     SQLSTATE_SYM = 697,
     SQLWARNING_SYM = 698,
     SQL_BIG_RESULT = 699,
     SQL_BUFFER_RESULT = 700,
     SQL_CACHE_SYM = 701,
     SQL_CALC_FOUND_ROWS = 702,
     SQL_NO_CACHE_SYM = 703,
     SQL_SMALL_RESULT = 704,
     SQL_SYM = 705,
     SQL_THREAD = 706,
     SSL_SYM = 707,
     STARTING = 708,
     START_SYM = 709,
     STATUS_SYM = 710,
     STD_SYM = 711,
     STDDEV_SAMP_SYM = 712,
     STOP_SYM = 713,
     STORAGE_SYM = 714,
     STRAIGHT_JOIN = 715,
     STRING_SYM = 716,
     SUBDATE_SYM = 717,
     SUBJECT_SYM = 718,
     SUBSTRING = 719,
     SUBSTRING_INDEX = 720,
     SUM_SYM = 721,
     SUPER_SYM = 722,
     SUSPEND_SYM = 723,
     SYSDATE = 724,
     TABLES = 725,
     TABLESPACE = 726,
     TABLE_SYM = 727,
     TEMPORARY = 728,
     TEMPTABLE_SYM = 729,
     TERMINATED = 730,
     TEXT_STRING = 731,
     TEXT_SYM = 732,
     TIMESTAMP = 733,
     TIMESTAMP_ADD = 734,
     TIMESTAMP_DIFF = 735,
     TIME_SYM = 736,
     TINYBLOB = 737,
     TINYINT = 738,
     TINYTEXT = 739,
     TO_SYM = 740,
     TRAILING = 741,
     TRANSACTION_SYM = 742,
     TRIGGER_SYM = 743,
     TRIGGERS_SYM = 744,
     TRIM = 745,
     TRUE_SYM = 746,
     TRUNCATE_SYM = 747,
     TYPES_SYM = 748,
     TYPE_SYM = 749,
     UDF_RETURNS_SYM = 750,
     UDF_SONAME_SYM = 751,
     ULONGLONG_NUM = 752,
     UNCOMMITTED_SYM = 753,
     UNDEFINED_SYM = 754,
     UNDERSCORE_CHARSET = 755,
     UNDO_SYM = 756,
     UNICODE_SYM = 757,
     UNION_SYM = 758,
     UNIQUE_SYM = 759,
     UNIQUE_USERS = 760,
     UNIX_TIMESTAMP = 761,
     UNKNOWN_SYM = 762,
     UNLOCK_SYM = 763,
     UNSIGNED = 764,
     UNTIL_SYM = 765,
     UPDATE_SYM = 766,
     UPGRADE_SYM = 767,
     USAGE = 768,
     USER = 769,
     USE_FRM = 770,
     USE_SYM = 771,
     USING = 772,
     UTC_DATE_SYM = 773,
     UTC_TIMESTAMP_SYM = 774,
     UTC_TIME_SYM = 775,
     VAR_SAMP_SYM = 776,
     VALUES = 777,
     VALUE_SYM = 778,
     VARBINARY = 779,
     VARCHAR = 780,
     VARIABLES = 781,
     VARIANCE_SYM = 782,
     VARYING = 783,
     VIEW_SYM = 784,
     WARNINGS = 785,
     WEEK_SYM = 786,
     WHEN_SYM = 787,
     WHERE = 788,
     WHILE_SYM = 789,
     WITH = 790,
     WORK_SYM = 791,
     WRITE_SYM = 792,
     X509_SYM = 793,
     XA_SYM = 794,
     XOR = 795,
     YEARWEEK = 796,
     YEAR_MONTH_SYM = 797,
     YEAR_SYM = 798,
     ZEROFILL = 799,
     TABLE_REF_PRIORITY = 800,
     ELSE = 801,
     THEN_SYM = 802,
     CASE_SYM = 803,
     BETWEEN_SYM = 804,
     NEG = 805
   };
#endif
#define END_OF_INPUT 258
#define ABORT_SYM 259
#define ACTION 260
#define ADD 261
#define ADDDATE_SYM 262
#define AFTER_SYM 263
#define AGAINST 264
#define AGGREGATE_SYM 265
#define ALGORITHM_SYM 266
#define ALL 267
#define ALTER 268
#define ANALYZE_SYM 269
#define AND_AND_SYM 270
#define AND_SYM 271
#define ANY_SYM 272
#define AS 273
#define ASC 274
#define ASCII_SYM 275
#define ASENSITIVE_SYM 276
#define ATAN 277
#define AUTO_INC 278
#define AVG_ROW_LENGTH 279
#define AVG_SYM 280
#define BACKUP_SYM 281
#define BEFORE_SYM 282
#define BEGIN_SYM 283
#define BENCHMARK_SYM 284
#define BERKELEY_DB_SYM 285
#define BIGINT 286
#define BINARY 287
#define BINLOG_SYM 288
#define BIN_NUM 289
#define BIT_AND 290
#define BIT_OR 291
#define BIT_SYM 292
#define BIT_XOR 293
#define BLOB_SYM 294
#define BOOLEAN_SYM 295
#define BOOL_SYM 296
#define BOTH 297
#define BTREE_SYM 298
#define BY 299
#define BYTE_SYM 300
#define CACHE_SYM 301
#define CALL_SYM 302
#define CASCADE 303
#define CASCADED 304
#define CAST_SYM 305
#define CHAIN_SYM 306
#define CHANGE 307
#define CHANGED 308
#define CHARSET 309
#define CHAR_SYM 310
#define CHECKSUM_SYM 311
#define CHECK_SYM 312
#define CIPHER_SYM 313
#define CLIENT_SYM 314
#define CLOSE_SYM 315
#define COALESCE 316
#define CODE_SYM 317
#define COLLATE_SYM 318
#define COLLATION_SYM 319
#define COLUMNS 320
#define COLUMN_SYM 321
#define COMMENT_SYM 322
#define COMMITTED_SYM 323
#define COMMIT_SYM 324
#define COMPACT_SYM 325
#define COMPRESSED_SYM 326
#define CONCAT 327
#define CONCAT_WS 328
#define CONCURRENT 329
#define CONDITION_SYM 330
#define CONNECTION_SYM 331
#define CONSISTENT_SYM 332
#define CONSTRAINT 333
#define CONTAINS_SYM 334
#define CONTINUE_SYM 335
#define CONVERT_SYM 336
#define CONVERT_TZ_SYM 337
#define COUNT_SYM 338
#define CREATE 339
#define CROSS 340
#define CUBE_SYM 341
#define CURDATE 342
#define CURRENT_USER 343
#define CURSOR_SYM 344
#define CURTIME 345
#define DATABASE 346
#define DATABASES 347
#define DATA_SYM 348
#define DATETIME 349
#define DATE_ADD_INTERVAL 350
#define DATE_SUB_INTERVAL 351
#define DATE_SYM 352
#define DAY_HOUR_SYM 353
#define DAY_MICROSECOND_SYM 354
#define DAY_MINUTE_SYM 355
#define DAY_SECOND_SYM 356
#define DAY_SYM 357
#define DEALLOCATE_SYM 358
#define DECIMAL_NUM 359
#define DECIMAL_SYM 360
#define DECLARE_SYM 361
#define DECODE_SYM 362
#define DEFAULT 363
#define DEFINER_SYM 364
#define DELAYED_SYM 365
#define DELAY_KEY_WRITE_SYM 366
#define DELETE_SYM 367
#define DESC 368
#define DESCRIBE 369
#define DES_DECRYPT_SYM 370
#define DES_ENCRYPT_SYM 371
#define DES_KEY_FILE 372
#define DETERMINISTIC_SYM 373
#define DIRECTORY_SYM 374
#define DISABLE_SYM 375
#define DISCARD 376
#define DISTINCT 377
#define DIV_SYM 378
#define DOUBLE_SYM 379
#define DO_SYM 380
#define DROP 381
#define DUAL_SYM 382
#define DUMPFILE 383
#define DUPLICATE_SYM 384
#define DYNAMIC_SYM 385
#define EACH_SYM 386
#define ELSEIF_SYM 387
#define ELT_FUNC 388
#define ENABLE_SYM 389
#define ENCLOSED 390
#define ENCODE_SYM 391
#define ENCRYPT 392
#define END 393
#define ENGINES_SYM 394
#define ENGINE_SYM 395
#define ENUM 396
#define EQ 397
#define EQUAL_SYM 398
#define ERRORS 399
#define ESCAPED 400
#define ESCAPE_SYM 401
#define EVENTS_SYM 402
#define EXECUTE_SYM 403
#define EXISTS 404
#define EXIT_SYM 405
#define EXPANSION_SYM 406
#define EXPORT_SET 407
#define EXTENDED_SYM 408
#define EXTRACT_SYM 409
#define FALSE_SYM 410
#define FAST_SYM 411
#define FETCH_SYM 412
#define FIELD_FUNC 413
#define FILE_SYM 414
#define FIRST_SYM 415
#define FIXED_SYM 416
#define FLOAT_NUM 417
#define FLOAT_SYM 418
#define FLUSH_SYM 419
#define FORCE_SYM 420
#define FOREIGN 421
#define FORMAT_SYM 422
#define FOR_SYM 423
#define FOUND_SYM 424
#define FRAC_SECOND_SYM 425
#define FROM 426
#define FROM_UNIXTIME 427
#define FULL 428
#define FULLTEXT_SYM 429
#define FUNCTION_SYM 430
#define FUNC_ARG0 431
#define FUNC_ARG1 432
#define FUNC_ARG2 433
#define FUNC_ARG3 434
#define GE 435
#define GEOMCOLLFROMTEXT 436
#define GEOMETRYCOLLECTION 437
#define GEOMETRY_SYM 438
#define GEOMFROMTEXT 439
#define GEOMFROMWKB 440
#define GET_FORMAT 441
#define GLOBAL_SYM 442
#define GRANT 443
#define GRANTS 444
#define GREATEST_SYM 445
#define GROUP 446
#define GROUP_CONCAT_SYM 447
#define GROUP_UNIQUE_USERS 448
#define GT_SYM 449
#define HANDLER_SYM 450
#define HASH_SYM 451
#define HAVING 452
#define HELP_SYM 453
#define HEX_NUM 454
#define HIGH_PRIORITY 455
#define HOSTS_SYM 456
#define HOUR_MICROSECOND_SYM 457
#define HOUR_MINUTE_SYM 458
#define HOUR_SECOND_SYM 459
#define HOUR_SYM 460
#define IDENT 461
#define IDENTIFIED_SYM 462
#define IDENT_QUOTED 463
#define IF 464
#define IGNORE_SYM 465
#define IMPORT 466
#define INDEXES 467
#define INDEX_SYM 468
#define INFILE 469
#define INNER_SYM 470
#define INNOBASE_SYM 471
#define INOUT_SYM 472
#define INSENSITIVE_SYM 473
#define INSERT 474
#define INSERT_METHOD 475
#define INTERVAL_SYM 476
#define INTO 477
#define INT_SYM 478
#define INVOKER_SYM 479
#define IN_SYM 480
#define IS 481
#define ISOLATION 482
#define ISSUER_SYM 483
#define ITERATE_SYM 484
#define JOIN_SYM 485
#define KEYS 486
#define KEY_SYM 487
#define KILL_SYM 488
#define LABEL_SYM 489
#define LANGUAGE_SYM 490
#define LAST_INSERT_ID 491
#define LAST_SYM 492
#define LE 493
#define LEADING 494
#define LEAST_SYM 495
#define LEAVES 496
#define LEAVE_SYM 497
#define LEFT 498
#define LEVEL_SYM 499
#define LEX_HOSTNAME 500
#define LIKE 501
#define LIMIT 502
#define LINEFROMTEXT 503
#define LINES 504
#define LINESTRING 505
#define LOAD 506
#define LOCAL_SYM 507
#define LOCATE 508
#define LOCATOR_SYM 509
#define LOCKS_SYM 510
#define LOCK_SYM 511
#define LOGS_SYM 512
#define LOG_SYM 513
#define LONGBLOB 514
#define LONGTEXT 515
#define LONG_NUM 516
#define LONG_SYM 517
#define LOOP_SYM 518
#define LOW_PRIORITY 519
#define LT 520
#define MAKE_SET_SYM 521
#define MASTER_CONNECT_RETRY_SYM 522
#define MASTER_HOST_SYM 523
#define MASTER_LOG_FILE_SYM 524
#define MASTER_LOG_POS_SYM 525
#define MASTER_PASSWORD_SYM 526
#define MASTER_PORT_SYM 527
#define MASTER_POS_WAIT 528
#define MASTER_SERVER_ID_SYM 529
#define MASTER_SSL_CAPATH_SYM 530
#define MASTER_SSL_CA_SYM 531
#define MASTER_SSL_CERT_SYM 532
#define MASTER_SSL_CIPHER_SYM 533
#define MASTER_SSL_KEY_SYM 534
#define MASTER_SSL_SYM 535
#define MASTER_SYM 536
#define MASTER_USER_SYM 537
#define MATCH 538
#define MAX_CONNECTIONS_PER_HOUR 539
#define MAX_QUERIES_PER_HOUR 540
#define MAX_ROWS 541
#define MAX_SYM 542
#define MAX_UPDATES_PER_HOUR 543
#define MAX_USER_CONNECTIONS_SYM 544
#define MEDIUMBLOB 545
#define MEDIUMINT 546
#define MEDIUMTEXT 547
#define MEDIUM_SYM 548
#define MERGE_SYM 549
#define MICROSECOND_SYM 550
#define MIGRATE_SYM 551
#define MINUTE_MICROSECOND_SYM 552
#define MINUTE_SECOND_SYM 553
#define MINUTE_SYM 554
#define MIN_ROWS 555
#define MIN_SYM 556
#define MLINEFROMTEXT 557
#define MODE_SYM 558
#define MODIFIES_SYM 559
#define MODIFY_SYM 560
#define MOD_SYM 561
#define MONTH_SYM 562
#define MPOINTFROMTEXT 563
#define MPOLYFROMTEXT 564
#define MULTILINESTRING 565
#define MULTIPOINT 566
#define MULTIPOLYGON 567
#define MUTEX_SYM 568
#define NAMES_SYM 569
#define NAME_SYM 570
#define NATIONAL_SYM 571
#define NATURAL 572
#define NCHAR_STRING 573
#define NCHAR_SYM 574
#define NDBCLUSTER_SYM 575
#define NE 576
#define NEW_SYM 577
#define NEXT_SYM 578
#define NONE_SYM 579
#define NOT2_SYM 580
#define NOT_SYM 581
#define NOW_SYM 582
#define NO_SYM 583
#define NO_WRITE_TO_BINLOG 584
#define NULL_SYM 585
#define NUM 586
#define NUMERIC_SYM 587
#define NVARCHAR_SYM 588
#define OFFSET_SYM 589
#define OJ_SYM 590
#define OLD_PASSWORD 591
#define ON 592
#define ONE_SHOT_SYM 593
#define ONE_SYM 594
#define OPEN_SYM 595
#define OPTIMIZE 596
#define OPTION 597
#define OPTIONALLY 598
#define OR2_SYM 599
#define ORDER_SYM 600
#define OR_OR_SYM 601
#define OR_SYM 602
#define OUTER 603
#define OUTFILE 604
#define OUT_SYM 605
#define PACK_KEYS_SYM 606
#define PARTIAL 607
#define PASSWORD 608
#define PARAM_MARKER 609
#define PHASE_SYM 610
#define POINTFROMTEXT 611
#define POINT_SYM 612
#define POLYFROMTEXT 613
#define POLYGON 614
#define POSITION_SYM 615
#define PRECISION 616
#define PREPARE_SYM 617
#define PREV_SYM 618
#define PRIMARY_SYM 619
#define PRIVILEGES 620
#define PROCEDURE 621
#define PROCESS 622
#define PROCESSLIST_SYM 623
#define PURGE 624
#define QUARTER_SYM 625
#define QUERY_SYM 626
#define QUICK 627
#define RAID_0_SYM 628
#define RAID_CHUNKS 629
#define RAID_CHUNKSIZE 630
#define RAID_STRIPED_SYM 631
#define RAID_TYPE 632
#define RAND 633
#define READS_SYM 634
#define READ_SYM 635
#define REAL 636
#define RECOVER_SYM 637
#define REDUNDANT_SYM 638
#define REFERENCES 639
#define REGEXP 640
#define RELAY_LOG_FILE_SYM 641
#define RELAY_LOG_POS_SYM 642
#define RELAY_THREAD 643
#define RELEASE_SYM 644
#define RELOAD 645
#define RENAME 646
#define REPAIR 647
#define REPEATABLE_SYM 648
#define REPEAT_SYM 649
#define REPLACE 650
#define REPLICATION 651
#define REQUIRE_SYM 652
#define RESET_SYM 653
#define RESOURCES 654
#define RESTORE_SYM 655
#define RESTRICT 656
#define RESUME_SYM 657
#define RETURNS_SYM 658
#define RETURN_SYM 659
#define REVOKE 660
#define RIGHT 661
#define ROLLBACK_SYM 662
#define ROLLUP_SYM 663
#define ROUND 664
#define ROUTINE_SYM 665
#define ROWS_SYM 666
#define ROW_COUNT_SYM 667
#define ROW_FORMAT_SYM 668
#define ROW_SYM 669
#define RTREE_SYM 670
#define SAVEPOINT_SYM 671
#define SECOND_MICROSECOND_SYM 672
#define SECOND_SYM 673
#define SECURITY_SYM 674
#define SELECT_SYM 675
#define SENSITIVE_SYM 676
#define SEPARATOR_SYM 677
#define SERIALIZABLE_SYM 678
#define SERIAL_SYM 679
#define SESSION_SYM 680
#define SET 681
#define SET_VAR 682
#define SHARE_SYM 683
#define SHIFT_LEFT 684
#define SHIFT_RIGHT 685
#define SHOW 686
#define SHUTDOWN 687
#define SIGNED_SYM 688
#define SIMPLE_SYM 689
#define SLAVE 690
#define SMALLINT 691
#define SNAPSHOT_SYM 692
#define SOUNDS_SYM 693
#define SPATIAL_SYM 694
#define SPECIFIC_SYM 695
#define SQLEXCEPTION_SYM 696
#define SQLSTATE_SYM 697
#define SQLWARNING_SYM 698
#define SQL_BIG_RESULT 699
#define SQL_BUFFER_RESULT 700
#define SQL_CACHE_SYM 701
#define SQL_CALC_FOUND_ROWS 702
#define SQL_NO_CACHE_SYM 703
#define SQL_SMALL_RESULT 704
#define SQL_SYM 705
#define SQL_THREAD 706
#define SSL_SYM 707
#define STARTING 708
#define START_SYM 709
#define STATUS_SYM 710
#define STD_SYM 711
#define STDDEV_SAMP_SYM 712
#define STOP_SYM 713
#define STORAGE_SYM 714
#define STRAIGHT_JOIN 715
#define STRING_SYM 716
#define SUBDATE_SYM 717
#define SUBJECT_SYM 718
#define SUBSTRING 719
#define SUBSTRING_INDEX 720
#define SUM_SYM 721
#define SUPER_SYM 722
#define SUSPEND_SYM 723
#define SYSDATE 724
#define TABLES 725
#define TABLESPACE 726
#define TABLE_SYM 727
#define TEMPORARY 728
#define TEMPTABLE_SYM 729
#define TERMINATED 730
#define TEXT_STRING 731
#define TEXT_SYM 732
#define TIMESTAMP 733
#define TIMESTAMP_ADD 734
#define TIMESTAMP_DIFF 735
#define TIME_SYM 736
#define TINYBLOB 737
#define TINYINT 738
#define TINYTEXT 739
#define TO_SYM 740
#define TRAILING 741
#define TRANSACTION_SYM 742
#define TRIGGER_SYM 743
#define TRIGGERS_SYM 744
#define TRIM 745
#define TRUE_SYM 746
#define TRUNCATE_SYM 747
#define TYPES_SYM 748
#define TYPE_SYM 749
#define UDF_RETURNS_SYM 750
#define UDF_SONAME_SYM 751
#define ULONGLONG_NUM 752
#define UNCOMMITTED_SYM 753
#define UNDEFINED_SYM 754
#define UNDERSCORE_CHARSET 755
#define UNDO_SYM 756
#define UNICODE_SYM 757
#define UNION_SYM 758
#define UNIQUE_SYM 759
#define UNIQUE_USERS 760
#define UNIX_TIMESTAMP 761
#define UNKNOWN_SYM 762
#define UNLOCK_SYM 763
#define UNSIGNED 764
#define UNTIL_SYM 765
#define UPDATE_SYM 766
#define UPGRADE_SYM 767
#define USAGE 768
#define USER 769
#define USE_FRM 770
#define USE_SYM 771
#define USING 772
#define UTC_DATE_SYM 773
#define UTC_TIMESTAMP_SYM 774
#define UTC_TIME_SYM 775
#define VAR_SAMP_SYM 776
#define VALUES 777
#define VALUE_SYM 778
#define VARBINARY 779
#define VARCHAR 780
#define VARIABLES 781
#define VARIANCE_SYM 782
#define VARYING 783
#define VIEW_SYM 784
#define WARNINGS 785
#define WEEK_SYM 786
#define WHEN_SYM 787
#define WHERE 788
#define WHILE_SYM 789
#define WITH 790
#define WORK_SYM 791
#define WRITE_SYM 792
#define X509_SYM 793
#define XA_SYM 794
#define XOR 795
#define YEARWEEK 796
#define YEAR_MONTH_SYM 797
#define YEAR_SYM 798
#define ZEROFILL 799
#define TABLE_REF_PRIORITY 800
#define ELSE 801
#define THEN_SYM 802
#define CASE_SYM 803
#define BETWEEN_SYM 804
#define NEG 805




/* Copy the first part of user declarations.  */
#line 19 "sql_yacc.yy"

/* thd is passed as an arg to yyparse(), and subsequently to yylex().
** The type will be void*, so it must be  cast to (THD*) when used.
** Use the YYTHD macro for this.
*/
#define YYPARSE_PARAM yythd
#define YYLEX_PARAM yythd
#define YYTHD ((THD *)yythd)

#define MYSQL_YACC
#define YYINITDEPTH 100
#define YYMAXDEPTH 3200				/* Because of 64K stack */
#define Lex (YYTHD->lex)
#define Select Lex->current_select
#include "mysql_priv.h"
#include "slave.h"
#include "lex_symbol.h"
#include "item_create.h"
#include "sp_head.h"
#include "sp_pcontext.h"
#include "sp_rcontext.h"
#include "sp.h"
#include <myisam.h>
#include <myisammrg.h>

int yylex(void *yylval, void *yythd);

const LEX_STRING null_lex_str={0,0};

#define yyoverflow(A,B,C,D,E,F) {ulong val= *(F); if (my_yyoverflow((B), (D), &val)) { yyerror((char*) (A)); return 2; } else { *(F)= (YYSIZE_T)val; }}

#define WARN_DEPRECATED(A,B)                                        \
  push_warning_printf(((THD *)yythd), MYSQL_ERROR::WARN_LEVEL_WARN, \
		      ER_WARN_DEPRECATED_SYNTAX,                    \
		      ER(ER_WARN_DEPRECATED_SYNTAX), (A), (B));

#define YYERROR_UNLESS(A)                  \
  if (!(A))                             \
  {					\
    yyerror(ER(ER_SYNTAX_ERROR));	\
    YYABORT;				\
  }

/* Helper for parsing "IS [NOT] truth_value" */
inline Item *is_truth_value(Item *A, bool v1, bool v2)
{
  return new Item_func_if(create_func_ifnull(A,
	new Item_int((char *) (v2 ? "TRUE" : "FALSE"), v2, 1)),
	new Item_int((char *) (v1 ? "TRUE" : "FALSE"), v1, 1),
	new Item_int((char *) (v1 ? "FALSE" : "TRUE"),!v1, 1));
}



/* Enabling traces.  */
#ifndef YYDEBUG
# define YYDEBUG 0
#endif

/* Enabling verbose error messages.  */
#ifdef YYERROR_VERBOSE
# undef YYERROR_VERBOSE
# define YYERROR_VERBOSE 1
#else
# define YYERROR_VERBOSE 0
#endif

#if ! defined (YYSTYPE) && ! defined (YYSTYPE_IS_DECLARED)
#line 72 "sql_yacc.yy"
typedef union YYSTYPE {
  int  num;
  ulong ulong_num;
  ulonglong ulonglong_number;
  LEX_STRING lex_str;
  LEX_STRING *lex_str_ptr;
  LEX_SYMBOL symbol;
  Table_ident *table;
  char *simple_string;
  Item *item;
  Item_num *item_num;
  List<Item> *item_list;
  List<String> *string_list;
  String *string;
  key_part_spec *key_part;
  TABLE_LIST *table_list;
  udf_func *udf;
  LEX_USER *lex_user;
  struct sys_var_with_base variable;
  enum enum_var_type var_type;
  Key::Keytype key_type;
  enum ha_key_alg key_alg;
  enum db_type db_type;
  enum row_type row_type;
  enum ha_rkey_function ha_rkey_mode;
  enum enum_tx_isolation tx_isolation;
  enum Cast_target cast_type;
  enum Item_udftype udf_type;
  CHARSET_INFO *charset;
  thr_lock_type lock_type;
  interval_type interval, interval_time_st;
  timestamp_type date_time_type;
  st_select_lex *select_lex;
  chooser_compare_func_creator boolfunc2creator;
  struct sp_cond_type *spcondtype;
  struct { int vars, conds, hndlrs, curs; } spblock;
  sp_name *spname;
  struct st_lex *lex;
} YYSTYPE;
/* Line 190 of yacc.c.  */
#line 1278 "sql_yacc.cc"
# define yystype YYSTYPE /* obsolescent; will be withdrawn */
# define YYSTYPE_IS_DECLARED 1
# define YYSTYPE_IS_TRIVIAL 1
#endif



/* Copy the second part of user declarations.  */
#line 112 "sql_yacc.yy"

bool my_yyoverflow(short **a, YYSTYPE **b, ulong *yystacksize);


/* Line 213 of yacc.c.  */
#line 1293 "sql_yacc.cc"

#if ! defined (yyoverflow) || YYERROR_VERBOSE

# ifndef YYFREE
#  define YYFREE free
# endif
# ifndef YYMALLOC
#  define YYMALLOC malloc
# endif

/* The parser invokes alloca or malloc; define the necessary symbols.  */

# ifdef YYSTACK_USE_ALLOCA
#  if YYSTACK_USE_ALLOCA
#   ifdef __GNUC__
#    define YYSTACK_ALLOC __builtin_alloca
#   else
#    define YYSTACK_ALLOC alloca
#   endif
#  endif
# endif

# ifdef YYSTACK_ALLOC
   /* Pacify GCC's `empty if-body' warning. */
#  define YYSTACK_FREE(Ptr) do { /* empty */; } while (0)
# else
#  if defined (__STDC__) || defined (__cplusplus)
#   include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#   define YYSIZE_T size_t
#  endif
#  define YYSTACK_ALLOC YYMALLOC
#  define YYSTACK_FREE YYFREE
# endif
#endif /* ! defined (yyoverflow) || YYERROR_VERBOSE */


#if (! defined (yyoverflow) \
     && (! defined (__cplusplus) \
	 || (defined (YYSTYPE_IS_TRIVIAL) && YYSTYPE_IS_TRIVIAL)))

/* A type that is properly aligned for any stack member.  */
union yyalloc
{
  short int yyss;
  YYSTYPE yyvs;
  };

/* The size of the maximum gap between one aligned stack and the next.  */
# define YYSTACK_GAP_MAXIMUM (sizeof (union yyalloc) - 1)

/* The size of an array large to enough to hold all stacks, each with
   N elements.  */
# define YYSTACK_BYTES(N) \
     ((N) * (sizeof (short int) + sizeof (YYSTYPE))			\
      + YYSTACK_GAP_MAXIMUM)

/* Copy COUNT objects from FROM to TO.  The source and destination do
   not overlap.  */
# ifndef YYCOPY
#  if defined (__GNUC__) && 1 < __GNUC__
#   define YYCOPY(To, From, Count) \
      __builtin_memcpy (To, From, (Count) * sizeof (*(From)))
#  else
#   define YYCOPY(To, From, Count)		\
      do					\
	{					\
	  register YYSIZE_T yyi;		\
	  for (yyi = 0; yyi < (Count); yyi++)	\
	    (To)[yyi] = (From)[yyi];		\
	}					\
      while (0)
#  endif
# endif

/* Relocate STACK from its old location to the new one.  The
   local variables YYSIZE and YYSTACKSIZE give the old and new number of
   elements in the stack, and YYPTR gives the new location of the
   stack.  Advance YYPTR to a properly aligned location for the next
   stack.  */
# define YYSTACK_RELOCATE(Stack)					\
    do									\
      {									\
	YYSIZE_T yynewbytes;						\
	YYCOPY (&yyptr->Stack, Stack, yysize);				\
	Stack = &yyptr->Stack;						\
	yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
	yyptr += yynewbytes / sizeof (*yyptr);				\
      }									\
    while (0)

#endif

#if defined (__STDC__) || defined (__cplusplus)
   typedef signed char yysigned_char;
#else
   typedef short int yysigned_char;
#endif

/* YYFINAL -- State number of the termination state. */
#define YYFINAL  457
/* YYLAST -- Last index in YYTABLE.  */
#define YYLAST   41841

/* YYNTOKENS -- Number of terminals. */
#define YYNTOKENS  570
/* YYNNTS -- Number of nonterminals. */
#define YYNNTS  657
/* YYNRULES -- Number of rules. */
#define YYNRULES  1998
/* YYNRULES -- Number of states. */
#define YYNSTATES  3626

/* YYTRANSLATE(YYLEX) -- Bison symbol number corresponding to YYLEX.  */
#define YYUNDEFTOK  2
#define YYMAXUTOK   805

#define YYTRANSLATE(YYX) 						\
  ((unsigned int) (YYX) <= YYMAXUTOK ? yytranslate[YYX] : YYUNDEFTOK)

/* YYTRANSLATE[YYLEX] -- Bison symbol number corresponding to YYLEX.  */
static const unsigned short int yytranslate[] =
{
       0,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,   563,     2,     2,     2,   556,   551,     2,
     560,   561,   554,   553,   562,   552,   567,   555,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,   569,   568,
       2,     2,     2,     2,   566,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,   557,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,   564,   550,   565,   558,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     1,     2,     3,     4,
       5,     6,     7,     8,     9,    10,    11,    12,    13,    14,
      15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
      35,    36,    37,    38,    39,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   559
};

#if YYDEBUG
/* YYPRHS[YYN] -- Index of the first RHS symbol of rule number YYN in
   YYRHS.  */
static const unsigned short int yyprhs[] =
{
       0,     0,     3,     5,     8,    10,    12,    14,    16,    18,
      20,    22,    24,    26,    28,    30,    32,    34,    36,    38,
      40,    42,    44,    46,    48,    50,    52,    54,    56,    58,
      60,    62,    64,    66,    68,    70,    72,    74,    76,    78,
      80,    82,    84,    86,    88,    90,    92,    94,    96,    98,
     100,   102,   104,   106,   110,   112,   114,   119,   121,   124,
     125,   130,   131,   134,   138,   140,   143,   144,   148,   149,
     155,   157,   161,   165,   169,   173,   177,   181,   185,   189,
     193,   197,   201,   205,   207,   211,   215,   219,   223,   224,
     232,   233,   245,   246,   253,   254,   258,   263,   264,   268,
     270,   275,   276,   277,   278,   279,   280,   293,   294,   297,
     298,   301,   304,   307,   310,   313,   317,   321,   323,   325,
     327,   330,   334,   338,   339,   346,   347,   349,   353,   355,
     356,   358,   362,   364,   365,   369,   370,   372,   376,   378,
     383,   384,   386,   388,   390,   391,   395,   398,   402,   403,
     407,   408,   414,   420,   421,   429,   435,   436,   439,   441,
     443,   445,   449,   451,   455,   456,   458,   460,   462,   464,
     467,   469,   471,   475,   476,   479,   480,   483,   484,   488,
     489,   495,   496,   503,   504,   505,   514,   516,   517,   520,
     523,   526,   529,   530,   537,   540,   541,   544,   546,   548,
     552,   553,   554,   555,   563,   564,   567,   570,   571,   572,
     573,   581,   582,   585,   588,   589,   595,   596,   598,   599,
     605,   610,   611,   612,   621,   622,   630,   632,   634,   636,
     638,   640,   643,   646,   649,   654,   659,   660,   665,   666,
     667,   673,   674,   682,   683,   684,   691,   692,   694,   695,
     697,   699,   702,   704,   706,   707,   709,   711,   714,   716,
     717,   721,   722,   724,   726,   729,   731,   734,   738,   742,
     746,   750,   754,   758,   762,   766,   770,   774,   778,   782,
     786,   790,   794,   798,   802,   808,   810,   812,   816,   821,
     826,   830,   835,   840,   842,   844,   846,   848,   850,   852,
     854,   856,   858,   860,   862,   864,   866,   868,   871,   872,
     874,   876,   878,   880,   882,   884,   888,   890,   892,   895,
     898,   905,   913,   922,   925,   928,   929,   931,   934,   935,
     937,   940,   941,   946,   950,   954,   958,   960,   965,   967,
     969,   975,   978,   984,   987,   992,   994,  1000,  1006,  1011,
    1015,  1017,  1019,  1022,  1024,  1026,  1029,  1031,  1033,  1035,
    1038,  1042,  1045,  1049,  1052,  1055,  1059,  1063,  1067,  1068,
    1075,  1076,  1083,  1086,  1088,  1090,  1092,  1094,  1096,  1098,
    1100,  1102,  1104,  1106,  1108,  1111,  1114,  1116,  1119,  1121,
    1124,  1128,  1131,  1133,  1135,  1137,  1139,  1141,  1143,  1145,
    1148,  1149,  1153,  1155,  1161,  1162,  1164,  1167,  1169,  1171,
    1173,  1175,  1176,  1180,  1181,  1183,  1184,  1186,  1189,  1191,
    1193,  1196,  1199,  1204,  1206,  1210,  1213,  1215,  1218,  1221,
    1224,  1227,  1229,  1232,  1234,  1236,  1238,  1240,  1242,  1244,
    1246,  1248,  1250,  1252,  1253,  1256,  1258,  1260,  1261,  1263,
    1264,  1267,  1269,  1272,  1276,  1279,  1280,  1282,  1283,  1285,
    1287,  1290,  1291,  1293,  1294,  1299,  1301,  1306,  1310,  1312,
    1313,  1315,  1318,  1320,  1324,  1328,  1331,  1334,  1337,  1339,
    1341,  1344,  1347,  1350,  1352,  1355,  1358,  1361,  1364,  1366,
    1368,  1369,  1371,  1373,  1375,  1377,  1378,  1380,  1382,  1384,
    1385,  1388,  1391,  1393,  1395,  1397,  1402,  1405,  1407,  1412,
    1413,  1415,  1416,  1419,  1421,  1425,  1426,  1433,  1434,  1440,
    1441,  1447,  1448,  1454,  1455,  1467,  1468,  1470,  1471,  1474,
    1477,  1479,  1483,  1486,  1490,  1493,  1498,  1499,  1506,  1507,
    1508,  1517,  1522,  1527,  1531,  1535,  1538,  1541,  1548,  1554,
    1558,  1564,  1566,  1568,  1570,  1571,  1573,  1574,  1576,  1577,
    1579,  1581,  1582,  1585,  1587,  1588,  1590,  1592,  1594,  1595,
    1601,  1605,  1606,  1612,  1616,  1620,  1621,  1625,  1626,  1629,
    1631,  1635,  1636,  1638,  1640,  1641,  1644,  1646,  1650,  1651,
    1658,  1659,  1666,  1667,  1673,  1674,  1676,  1678,  1679,  1686,
    1687,  1689,  1691,  1694,  1696,  1698,  1700,  1701,  1708,  1709,
    1715,  1716,  1718,  1720,  1723,  1725,  1727,  1729,  1731,  1733,
    1736,  1737,  1744,  1745,  1747,  1749,  1750,  1755,  1760,  1764,
    1770,  1772,  1776,  1780,  1786,  1788,  1792,  1795,  1797,  1799,
    1800,  1807,  1809,  1813,  1817,  1818,  1821,  1822,  1827,  1828,
    1831,  1833,  1836,  1841,  1844,  1848,  1849,  1853,  1854,  1855,
    1862,  1865,  1867,  1869,  1872,  1875,  1884,  1889,  1890,  1892,
    1895,  1897,  1899,  1901,  1903,  1905,  1907,  1909,  1911,  1913,
    1915,  1917,  1918,  1921,  1926,  1930,  1932,  1934,  1939,  1940,
    1941,  1943,  1945,  1946,  1949,  1952,  1954,  1956,  1957,  1960,
    1961,  1965,  1966,  1970,  1974,  1975,  1979,  1980,  1984,  1987,
    1989,  1993,  1998,  2002,  2007,  2011,  2016,  2018,  2022,  2027,
    2031,  2035,  2040,  2042,  2048,  2055,  2059,  2064,  2070,  2077,
    2082,  2087,  2093,  2097,  2102,  2104,  2108,  2110,  2114,  2116,
    2120,  2124,  2126,  2130,  2134,  2139,  2144,  2146,  2150,  2154,
    2158,  2162,  2166,  2168,  2172,  2174,  2176,  2178,  2180,  2182,
    2184,  2186,  2188,  2190,  2192,  2194,  2196,  2198,  2200,  2202,
    2204,  2206,  2209,  2211,  2215,  2217,  2219,  2224,  2227,  2233,
    2235,  2239,  2242,  2245,  2248,  2251,  2255,  2261,  2268,  2271,
    2273,  2278,  2286,  2291,  2294,  2301,  2308,  2315,  2322,  2327,
    2332,  2336,  2341,  2348,  2357,  2364,  2373,  2380,  2385,  2392,
    2397,  2404,  2409,  2414,  2419,  2424,  2431,  2440,  2443,  2446,
    2451,  2454,  2462,  2470,  2474,  2479,  2484,  2491,  2498,  2503,
    2510,  2517,  2524,  2529,  2536,  2541,  2548,  2557,  2568,  2581,
    2588,  2593,  2600,  2607,  2609,  2616,  2621,  2630,  2641,  2646,
    2648,  2652,  2657,  2664,  2671,  2680,  2687,  2694,  2699,  2706,
    2713,  2722,  2727,  2732,  2739,  2744,  2747,  2752,  2757,  2762,
    2769,  2774,  2779,  2783,  2792,  2799,  2804,  2811,  2815,  2822,
    2831,  2836,  2845,  2852,  2861,  2868,  2877,  2880,  2885,  2890,
    2895,  2902,  2911,  2920,  2925,  2933,  2941,  2949,  2956,  2963,
    2970,  2977,  2984,  2991,  2992,  2998,  3009,  3013,  3018,  3022,
    3025,  3028,  3031,  3036,  3043,  3048,  3053,  3060,  3067,  3074,
    3081,  3086,  3093,  3098,  3105,  3110,  3115,  3120,  3125,  3132,
    3137,  3144,  3149,  3156,  3161,  3166,  3173,  3178,  3185,  3190,
    3197,  3202,  3207,  3214,  3219,  3226,  3227,  3231,  3235,  3236,
    3238,  3239,  3242,  3244,  3248,  3253,  3258,  3264,  3269,  3274,
    3279,  3285,  3290,  3291,  3292,  3300,  3311,  3316,  3322,  3327,
    3333,  3338,  3343,  3348,  3353,  3358,  3364,  3365,  3374,  3375,
    3377,  3378,  3381,  3382,  3384,  3385,  3389,  3392,  3396,  3399,
    3401,  3404,  3406,  3409,  3411,  3413,  3415,  3418,  3419,  3422,
    3424,  3428,  3430,  3434,  3435,  3438,  3440,  3444,  3445,  3447,
    3448,  3451,  3452,  3455,  3459,  3465,  3467,  3468,  3471,  3473,
    3475,  3479,  3483,  3487,  3488,  3495,  3496,  3503,  3504,  3513,
    3518,  3519,  3528,  3529,  3540,  3547,  3548,  3557,  3558,  3569,
    3576,  3578,  3581,  3584,  3585,  3590,  3591,  3603,  3607,  3614,
    3615,  3619,  3620,  3621,  3627,  3628,  3630,  3631,  3633,  3634,
    3637,  3640,  3643,  3644,  3650,  3651,  3653,  3657,  3659,  3661,
    3663,  3667,  3669,  3671,  3673,  3675,  3677,  3679,  3681,  3683,
    3685,  3687,  3689,  3691,  3693,  3695,  3697,  3699,  3701,  3703,
    3705,  3707,  3709,  3711,  3713,  3715,  3717,  3719,  3720,  3722,
    3724,  3725,  3728,  3729,  3731,  3732,  3733,  3737,  3738,  3739,
    3743,  3746,  3747,  3748,  3753,  3758,  3761,  3762,  3765,  3768,
    3769,  3771,  3772,  3777,  3782,  3785,  3786,  3788,  3790,  3791,
    3793,  3794,  3796,  3799,  3801,  3805,  3809,  3811,  3813,  3815,
    3817,  3818,  3821,  3823,  3825,  3827,  3829,  3831,  3833,  3835,
    3837,  3839,  3841,  3843,  3844,  3845,  3852,  3853,  3855,  3859,
    3861,  3864,  3865,  3868,  3872,  3874,  3877,  3879,  3880,  3887,
    3891,  3894,  3895,  3899,  3906,  3907,  3914,  3919,  3924,  3929,
    3934,  3940,  3944,  3946,  3950,  3952,  3953,  3956,  3957,  3959,
    3960,  3961,  3970,  3971,  3972,  3979,  3980,  3982,  3984,  3986,
    3988,  3990,  3993,  3995,  3997,  3999,  4003,  4008,  4009,  4013,
    4017,  4019,  4022,  4025,  4026,  4030,  4031,  4037,  4041,  4043,
    4047,  4049,  4053,  4055,  4057,  4058,  4060,  4061,  4066,  4067,
    4069,  4073,  4075,  4077,  4079,  4080,  4081,  4088,  4089,  4090,
    4102,  4106,  4108,  4112,  4116,  4118,  4122,  4123,  4125,  4126,
    4131,  4132,  4139,  4140,  4146,  4147,  4154,  4156,  4160,  4164,
    4170,  4171,  4174,  4175,  4178,  4180,  4182,  4184,  4188,  4189,
    4191,  4192,  4196,  4199,  4204,  4209,  4214,  4219,  4220,  4225,
    4232,  4249,  4252,  4255,  4256,  4263,  4269,  4272,  4275,  4278,
    4280,  4286,  4292,  4295,  4298,  4302,  4305,  4308,  4311,  4315,
    4318,  4321,  4324,  4326,  4328,  4332,  4337,  4341,  4345,  4348,
    4351,  4355,  4359,  4363,  4367,  4371,  4375,  4377,  4379,  4381,
    4383,  4384,  4386,  4387,  4390,  4391,  4393,  4395,  4397,  4398,
    4401,  4402,  4405,  4406,  4409,  4412,  4413,  4418,  4419,  4424,
    4426,  4428,  4429,  4431,  4432,  4434,  4436,  4437,  4442,  4446,
    4448,  4449,  4453,  4458,  4461,  4463,  4465,  4467,  4469,  4471,
    4473,  4475,  4477,  4478,  4480,  4481,  4485,  4489,  4491,  4493,
    4495,  4498,  4499,  4503,  4507,  4510,  4513,  4514,  4519,  4520,
    4522,  4524,  4527,  4528,  4533,  4539,  4540,  4541,  4542,  4559,
    4562,  4563,  4565,  4566,  4568,  4570,  4571,  4573,  4575,  4576,
    4579,  4582,  4584,  4588,  4593,  4597,  4601,  4602,  4605,  4608,
    4610,  4614,  4618,  4619,  4623,  4624,  4628,  4631,  4635,  4637,
    4639,  4642,  4643,  4646,  4648,  4650,  4653,  4656,  4658,  4660,
    4662,  4664,  4666,  4669,  4672,  4674,  4676,  4678,  4680,  4682,
    4684,  4686,  4689,  4692,  4695,  4698,  4701,  4703,  4705,  4707,
    4709,  4711,  4713,  4715,  4719,  4725,  4727,  4729,  4731,  4733,
    4735,  4739,  4744,  4750,  4752,  4758,  4762,  4765,  4767,  4771,
    4774,  4776,  4778,  4780,  4782,  4784,  4786,  4788,  4790,  4792,
    4794,  4796,  4798,  4800,  4802,  4806,  4809,  4811,  4813,  4815,
    4817,  4819,  4821,  4823,  4825,  4827,  4829,  4831,  4833,  4835,
    4837,  4839,  4841,  4843,  4845,  4847,  4849,  4851,  4853,  4855,
    4857,  4859,  4861,  4863,  4865,  4867,  4869,  4871,  4873,  4875,
    4877,  4879,  4881,  4883,  4885,  4887,  4889,  4891,  4893,  4895,
    4897,  4899,  4901,  4903,  4905,  4907,  4909,  4911,  4913,  4915,
    4917,  4919,  4921,  4923,  4925,  4927,  4929,  4931,  4933,  4935,
    4937,  4939,  4941,  4943,  4945,  4947,  4949,  4951,  4953,  4955,
    4957,  4959,  4961,  4963,  4965,  4967,  4969,  4971,  4973,  4975,
    4977,  4979,  4981,  4983,  4985,  4987,  4989,  4991,  4993,  4995,
    4997,  4999,  5001,  5003,  5005,  5007,  5009,  5011,  5013,  5015,
    5017,  5019,  5021,  5023,  5025,  5027,  5029,  5031,  5033,  5035,
    5037,  5039,  5041,  5043,  5045,  5047,  5049,  5051,  5053,  5055,
    5057,  5059,  5061,  5063,  5065,  5067,  5069,  5071,  5073,  5075,
    5077,  5079,  5081,  5083,  5085,  5087,  5089,  5091,  5093,  5095,
    5097,  5099,  5101,  5103,  5105,  5107,  5109,  5111,  5113,  5115,
    5117,  5119,  5121,  5123,  5125,  5127,  5129,  5131,  5133,  5135,
    5137,  5139,  5141,  5143,  5145,  5147,  5149,  5151,  5153,  5155,
    5157,  5159,  5161,  5163,  5165,  5167,  5169,  5171,  5173,  5175,
    5177,  5179,  5181,  5183,  5185,  5187,  5189,  5191,  5193,  5195,
    5197,  5199,  5201,  5203,  5205,  5207,  5209,  5211,  5213,  5215,
    5217,  5219,  5221,  5223,  5225,  5227,  5229,  5231,  5233,  5235,
    5237,  5239,  5241,  5243,  5245,  5247,  5249,  5251,  5253,  5255,
    5257,  5259,  5261,  5263,  5265,  5267,  5269,  5271,  5273,  5275,
    5277,  5279,  5281,  5283,  5285,  5287,  5289,  5291,  5293,  5295,
    5297,  5299,  5301,  5303,  5305,  5306,  5311,  5312,  5314,  5316,
    5320,  5321,  5324,  5326,  5328,  5330,  5332,  5333,  5335,  5336,
    5338,  5340,  5342,  5343,  5346,  5349,  5352,  5354,  5357,  5362,
    5368,  5373,  5380,  5383,  5387,  5391,  5395,  5401,  5403,  5407,
    5411,  5414,  5417,  5420,  5422,  5424,  5429,  5434,  5436,  5438,
    5440,  5442,  5444,  5445,  5450,  5452,  5454,  5456,  5460,  5464,
    5466,  5468,  5471,  5474,  5475,  5479,  5484,  5488,  5489,  5497,
    5499,  5502,  5504,  5506,  5508,  5510,  5512,  5514,  5515,  5521,
    5523,  5525,  5527,  5529,  5531,  5535,  5542,  5549,  5556,  5564,
    5568,  5577,  5586,  5595,  5596,  5598,  5600,  5603,  5604,  5606,
    5608,  5612,  5613,  5617,  5618,  5622,  5623,  5627,  5628,  5632,
    5634,  5636,  5638,  5640,  5642,  5644,  5646,  5648,  5650,  5652,
    5654,  5657,  5660,  5662,  5666,  5669,  5672,  5675,  5678,  5681,
    5684,  5687,  5690,  5691,  5693,  5697,  5699,  5702,  5705,  5708,
    5710,  5714,  5718,  5720,  5722,  5726,  5728,  5732,  5737,  5743,
    5745,  5746,  5750,  5754,  5756,  5758,  5759,  5762,  5765,  5768,
    5771,  5772,  5775,  5778,  5780,  5783,  5786,  5789,  5792,  5795,
    5796,  5800,  5801,  5803,  5804,  5808,  5811,  5812,  5814,  5817,
    5818,  5820,  5825,  5830,  5836,  5839,  5843,  5844,  5846,  5847,
    5852,  5853,  5855,  5857,  5858,  5861,  5864,  5866,  5867,  5869,
    5871,  5875,  5877,  5881,  5883,  5887,  5889,  5892,  5894,  5897,
    5901,  5903,  5905,  5907,  5908,  5912,  5914,  5917,  5919,  5922,
    5926,  5930,  5934,  5935,  5937,  5938,  5942,  5946,  5947,  5956,
    5957,  5961,  5963,  5967,  5971,  5977,  5978,  5982,  5987,  5992,
    5993,  6008,  6009,  6016,  6017,  6018,  6019,  6020,  6033,  6038,
    6043,  6047,  6052,  6056,  6059,  6061,  6065,  6071,  6073,  6075,
    6076,  6078,  6080,  6081,  6084,  6085,  6086,  6090,  6091
};

/* YYRHS -- A `-1'-separated list of the rules' RHS. */
static const short int yyrhs[] =
{
     571,     0,    -1,     3,    -1,   572,     3,    -1,   573,    -1,
    1171,    -1,   761,    -1,   802,    -1,   792,    -1,   608,    -1,
     585,    -1,   804,    -1,   794,    -1,  1177,    -1,   590,    -1,
     574,    -1,  1016,    -1,  1043,    -1,   972,    -1,   974,    -1,
     578,    -1,  1049,    -1,  1146,    -1,  1137,    -1,   583,    -1,
     980,    -1,  1063,    -1,  1067,    -1,  1129,    -1,   809,    -1,
     817,    -1,   821,    -1,   576,    -1,  1059,    -1,  1180,    -1,
     812,    -1,   797,    -1,   983,    -1,  1055,    -1,   790,    -1,
    1144,    -1,  1178,    -1,  1179,    -1,   829,    -1,  1112,    -1,
    1029,    -1,   779,    -1,   782,    -1,  1027,    -1,  1135,    -1,
    1008,    -1,  1066,    -1,  1219,    -1,   575,   362,  1106,    -1,
     103,    -1,   126,    -1,   362,  1106,   171,   577,    -1,  1103,
      -1,   566,  1108,    -1,    -1,   148,  1106,   579,   580,    -1,
      -1,   517,   581,    -1,   581,   562,   582,    -1,   582,    -1,
     566,  1108,    -1,    -1,   198,   584,  1108,    -1,    -1,    52,
     281,   485,   586,   587,    -1,   588,    -1,   587,   562,   588,
      -1,   268,   142,  1103,    -1,   282,   142,  1103,    -1,   271,
     142,  1103,    -1,   272,   142,   959,    -1,   267,   142,   959,
      -1,   280,   142,   959,    -1,   276,   142,  1103,    -1,   275,
     142,  1103,    -1,   277,   142,  1103,    -1,   278,   142,  1103,
      -1,   279,   142,  1103,    -1,   589,    -1,   269,   142,  1103,
      -1,   270,   142,   960,    -1,   386,   142,  1103,    -1,   387,
     142,   959,    -1,    -1,    84,   679,   472,   682,  1100,   591,
     666,    -1,    -1,    84,   753,   213,  1106,   754,   337,  1100,
     592,   560,   756,   561,    -1,    -1,    84,    91,   682,  1106,
     593,   676,    -1,    -1,    84,   594,  1197,    -1,    84,   514,
     595,  1162,    -1,    -1,  1106,   567,  1106,    -1,  1106,    -1,
     403,   695,   496,  1103,    -1,    -1,    -1,    -1,    -1,    -1,
     560,   598,   612,   561,   599,   403,   600,   706,   601,   604,
     602,   635,    -1,    -1,   603,   605,    -1,    -1,   604,   606,
      -1,    67,  1103,    -1,   235,   450,    -1,   328,   450,    -1,
      79,   450,    -1,   379,   450,    93,    -1,   304,   450,    93,
      -1,   607,    -1,   605,    -1,   118,    -1,   868,   118,    -1,
     450,   419,   109,    -1,   450,   419,   224,    -1,    -1,    47,
     596,   609,   560,   610,   561,    -1,    -1,   611,    -1,   611,
     562,   850,    -1,   850,    -1,    -1,   613,    -1,   613,   562,
     615,    -1,   615,    -1,    -1,  1106,   614,   706,    -1,    -1,
     617,    -1,   617,   562,   618,    -1,   618,    -1,   619,   614,
    1106,   706,    -1,    -1,   225,    -1,   350,    -1,   217,    -1,
      -1,   620,   635,   568,    -1,   635,   568,    -1,   621,   635,
     568,    -1,    -1,   622,   623,   568,    -1,    -1,   106,   633,
     624,   706,   634,    -1,   106,  1106,    75,   168,   630,    -1,
      -1,   106,   628,   195,   168,   625,   629,   635,    -1,   106,
    1106,    89,   168,   626,    -1,    -1,   627,   573,    -1,   150,
      -1,    80,    -1,   632,    -1,   629,   562,   632,    -1,   959,
      -1,   442,   631,  1104,    -1,    -1,   523,    -1,   630,    -1,
    1106,    -1,   443,    -1,   868,   169,    -1,   441,    -1,  1106,
      -1,   633,   562,  1106,    -1,    -1,   108,   850,    -1,    -1,
     636,   573,    -1,    -1,   404,   637,   850,    -1,    -1,   209,
     638,   646,   138,   209,    -1,    -1,   548,   532,   639,   651,
     138,   548,    -1,    -1,    -1,   548,   640,   850,   532,   641,
     651,   138,   548,    -1,   656,    -1,    -1,   642,   659,    -1,
     242,  1107,    -1,   229,  1107,    -1,   340,  1106,    -1,    -1,
     157,   644,  1106,   222,   643,   645,    -1,    60,  1106,    -1,
      -1,   323,   171,    -1,   171,    -1,  1106,    -1,   645,   562,
    1106,    -1,    -1,    -1,    -1,   647,   850,   547,   648,   621,
     649,   650,    -1,    -1,   132,   646,    -1,   546,   621,    -1,
      -1,    -1,    -1,   652,   850,   547,   653,   621,   654,   655,
      -1,    -1,   546,   621,    -1,   532,   651,    -1,    -1,  1107,
     569,   657,   659,   658,    -1,    -1,  1107,    -1,    -1,    28,
     660,   622,   620,   138,    -1,   263,   621,   138,   263,    -1,
      -1,    -1,   534,   661,   850,   125,   662,   621,   138,   534,
      -1,    -1,   394,   621,   510,   663,   850,   138,   394,    -1,
      27,    -1,     8,    -1,   219,    -1,   511,    -1,   112,    -1,
     560,   667,    -1,   683,   669,    -1,   246,  1100,    -1,   560,
     246,  1100,   561,    -1,   696,   561,   683,   669,    -1,    -1,
     672,   561,   668,  1184,    -1,    -1,    -1,  1075,   675,   672,
     670,  1181,    -1,    -1,  1075,   675,   560,   672,   561,   671,
    1184,    -1,    -1,    -1,   420,   673,   839,   843,   674,   693,
      -1,    -1,    18,    -1,    -1,   677,    -1,   678,    -1,   677,
     678,    -1,   688,    -1,   687,    -1,    -1,   680,    -1,   681,
      -1,   681,   680,    -1,   473,    -1,    -1,   209,   868,   149,
      -1,    -1,   685,    -1,   686,    -1,   686,   684,    -1,   686,
      -1,   686,   685,    -1,   686,   562,   685,    -1,   140,  1000,
     689,    -1,   494,  1000,   689,    -1,   286,  1000,   960,    -1,
     300,  1000,   960,    -1,    24,  1000,   959,    -1,   353,  1000,
    1103,    -1,    67,  1000,  1103,    -1,    23,  1000,   960,    -1,
     351,  1000,   959,    -1,   351,  1000,   108,    -1,    56,  1000,
     959,    -1,   111,  1000,   959,    -1,   413,  1000,   690,    -1,
     377,  1000,   691,    -1,   374,  1000,   959,    -1,   375,  1000,
     959,    -1,   503,  1000,   560,   976,   561,    -1,   687,    -1,
     688,    -1,   220,  1000,   692,    -1,    93,   119,  1000,  1103,
      -1,   213,   119,  1000,  1103,    -1,    76,  1000,  1103,    -1,
     735,   727,  1000,   729,    -1,   735,    63,  1000,   734,    -1,
    1108,    -1,   108,    -1,   161,    -1,   130,    -1,    71,    -1,
     383,    -1,    70,    -1,   376,    -1,   373,    -1,   959,    -1,
     328,    -1,   160,    -1,   237,    -1,   954,    -1,   838,   842,
      -1,    -1,    10,    -1,   461,    -1,   381,    -1,   105,    -1,
     223,    -1,   697,    -1,   696,   562,   697,    -1,   698,    -1,
     699,    -1,   704,   700,    -1,   704,   740,    -1,   748,   758,
     754,   560,   756,   561,    -1,   702,   749,   758,   754,   560,
     756,   561,    -1,   702,   166,   232,   758,   560,   756,   561,
     740,    -1,   703,   700,    -1,   702,   701,    -1,    -1,   701,
      -1,    57,   850,    -1,    -1,   703,    -1,    78,   758,    -1,
      -1,  1099,   705,   706,   723,    -1,   714,   721,   718,    -1,
     715,   722,   718,    -1,   163,   716,   718,    -1,    37,    -1,
      37,   560,   331,   561,    -1,    41,    -1,    40,    -1,   710,
     560,   331,   561,   736,    -1,   710,   736,    -1,   711,   560,
     331,   561,   737,    -1,   711,   737,    -1,    32,   560,   331,
     561,    -1,    32,    -1,   712,   560,   331,   561,   736,    -1,
     713,   560,   331,   561,   737,    -1,   524,   560,   331,   561,
      -1,   543,   721,   718,    -1,    97,    -1,   481,    -1,   478,
     721,    -1,    94,    -1,   482,    -1,    39,   721,    -1,   709,
      -1,   290,    -1,   259,    -1,   262,   524,    -1,   262,   712,
     736,    -1,   484,   736,    -1,   477,   721,   736,    -1,   292,
     736,    -1,   260,   736,    -1,   105,   716,   718,    -1,   332,
     716,   718,    -1,   161,   716,   718,    -1,    -1,   141,   707,
     560,   760,   561,   736,    -1,    -1,   426,   708,   560,   760,
     561,   736,    -1,   262,   736,    -1,   424,    -1,   183,    -1,
     182,    -1,   357,    -1,   311,    -1,   250,    -1,   310,    -1,
     359,    -1,   312,    -1,    55,    -1,   319,    -1,   316,    55,
      -1,   710,   528,    -1,   525,    -1,   316,   525,    -1,   333,
      -1,   319,   525,    -1,   316,    55,   528,    -1,   319,   528,
      -1,   223,    -1,   483,    -1,   436,    -1,   291,    -1,    31,
      -1,   381,    -1,   124,    -1,   124,   361,    -1,    -1,   560,
     331,   561,    -1,   717,    -1,   560,   331,   562,   331,   561,
      -1,    -1,   719,    -1,   719,   720,    -1,   720,    -1,   433,
      -1,   509,    -1,   544,    -1,    -1,   560,   331,   561,    -1,
      -1,   717,    -1,    -1,   724,    -1,   724,   725,    -1,   725,
      -1,   330,    -1,   868,   330,    -1,   108,   726,    -1,   337,
     511,   327,   849,    -1,    23,    -1,   424,   108,   523,    -1,
     739,   232,    -1,   504,    -1,   504,   232,    -1,    67,  1103,
      -1,    63,   732,    -1,   327,   849,    -1,  1090,    -1,    55,
     426,    -1,    54,    -1,  1108,    -1,    32,    -1,   728,    -1,
     108,    -1,  1108,    -1,    32,    -1,   730,    -1,   108,    -1,
    1108,    -1,    -1,    63,   734,    -1,   732,    -1,   108,    -1,
      -1,   108,    -1,    -1,    20,   737,    -1,    45,    -1,   502,
     737,    -1,   727,   728,   737,    -1,    32,   738,    -1,    -1,
      32,    -1,    -1,    20,    -1,   502,    -1,   727,   728,    -1,
      -1,   364,    -1,    -1,   384,  1100,   741,   742,    -1,   744,
      -1,   560,   743,   561,   744,    -1,   743,   562,  1106,    -1,
    1106,    -1,    -1,   745,    -1,   745,   746,    -1,   746,    -1,
     337,   112,   747,    -1,   337,   511,   747,    -1,   283,   173,
      -1,   283,   352,    -1,   283,   434,    -1,   401,    -1,    48,
      -1,   426,   330,    -1,   328,     5,    -1,   426,   108,    -1,
     750,    -1,   174,   751,    -1,   439,   751,    -1,   364,   232,
      -1,   504,   751,    -1,   232,    -1,   213,    -1,    -1,   750,
      -1,   231,    -1,   213,    -1,   212,    -1,    -1,   504,    -1,
     174,    -1,   439,    -1,    -1,   517,   755,    -1,   494,   755,
      -1,    43,    -1,   415,    -1,   196,    -1,   756,   562,   757,
     952,    -1,   757,   952,    -1,  1106,    -1,  1106,   560,   331,
     561,    -1,    -1,  1099,    -1,    -1,   567,  1106,    -1,  1088,
      -1,   760,   562,  1088,    -1,    -1,    13,   775,   472,  1100,
     762,   768,    -1,    -1,    13,    91,   767,   763,   676,    -1,
      -1,    13,   366,   596,   764,   603,    -1,    -1,    13,   175,
     596,   765,   603,    -1,    -1,    13,  1203,  1199,  1204,   529,
    1100,   766,  1207,    18,  1209,  1210,    -1,    -1,  1106,    -1,
      -1,   121,   471,    -1,   211,   471,    -1,   770,    -1,   768,
     562,   770,    -1,     6,   774,    -1,   769,   698,   777,    -1,
       6,   699,    -1,   769,   560,   696,   561,    -1,    -1,    52,
     774,  1099,   771,   704,   777,    -1,    -1,    -1,   305,   774,
    1099,   772,   706,   723,   773,   777,    -1,   126,   774,  1099,
     776,    -1,   126,   166,   232,   758,    -1,   126,   364,   232,
      -1,   126,   750,  1099,    -1,   120,   231,    -1,   134,   231,
      -1,    13,   774,  1099,   426,   108,  1090,    -1,    13,   774,
    1099,   126,   108,    -1,   391,   778,  1100,    -1,    81,   485,
     727,   729,   733,    -1,   684,    -1,   165,    -1,   949,    -1,
      -1,    66,    -1,    -1,   210,    -1,    -1,   401,    -1,    48,
      -1,    -1,     8,  1106,    -1,   160,    -1,    -1,   485,    -1,
     142,    -1,    18,    -1,    -1,   454,   435,   784,   780,   788,
      -1,   458,   435,   784,    -1,    -1,   435,   454,   784,   781,
     788,    -1,   435,   458,   784,    -1,   454,   487,   783,    -1,
      -1,   535,    77,   437,    -1,    -1,   785,   786,    -1,   787,
      -1,   786,   562,   787,    -1,    -1,   451,    -1,   388,    -1,
      -1,   510,   789,    -1,   589,    -1,   789,   562,   589,    -1,
      -1,   400,  1131,   791,   976,   171,  1103,    -1,    -1,    26,
    1131,   793,   976,   485,  1103,    -1,    -1,    56,  1131,   795,
     976,   796,    -1,    -1,   372,    -1,   153,    -1,    -1,   392,
     811,  1131,   798,   976,   799,    -1,    -1,   800,    -1,   801,
      -1,   801,   800,    -1,   372,    -1,   153,    -1,   515,    -1,
      -1,    14,   811,  1131,   803,   976,   806,    -1,    -1,    57,
    1131,   805,   976,   806,    -1,    -1,   807,    -1,   808,    -1,
     808,   807,    -1,   372,    -1,   156,    -1,   293,    -1,   153,
      -1,    53,    -1,   168,   512,    -1,    -1,   341,   811,  1131,
     810,   976,   806,    -1,    -1,   329,    -1,   252,    -1,    -1,
     391,  1131,   813,   815,    -1,   391,   514,   595,   814,    -1,
    1109,   485,  1109,    -1,   814,   562,  1109,   485,  1109,    -1,
     816,    -1,   815,   562,   816,    -1,  1100,   485,  1100,    -1,
      46,   213,   818,   225,   820,    -1,   819,    -1,   818,   562,
     819,    -1,  1100,   825,    -1,  1106,    -1,   108,    -1,    -1,
     251,   213,   222,    46,   822,   823,    -1,   824,    -1,   823,
     562,   824,    -1,  1100,   825,   828,    -1,    -1,   826,   827,
      -1,    -1,   751,   560,   932,   561,    -1,    -1,   210,   241,
      -1,   830,    -1,   420,   832,    -1,   560,   831,   561,  1184,
      -1,   420,   834,    -1,   560,   831,   561,    -1,    -1,   834,
     833,  1181,    -1,    -1,    -1,   835,   839,   843,   836,   837,
     842,    -1,   948,   954,    -1,   970,    -1,   838,    -1,   970,
     838,    -1,   838,   970,    -1,   171,   906,   940,   945,   942,
     948,   954,   961,    -1,   171,   127,   940,   954,    -1,    -1,
     840,    -1,   840,   841,    -1,   841,    -1,   460,    -1,   200,
      -1,   122,    -1,   449,    -1,   444,    -1,   445,    -1,   447,
      -1,   448,    -1,   446,    -1,    12,    -1,    -1,   168,   511,
      -1,   256,   225,   428,   303,    -1,   843,   562,   844,    -1,
     844,    -1,   554,    -1,   845,   847,   846,   848,    -1,    -1,
      -1,  1094,    -1,   850,    -1,    -1,    18,  1106,    -1,    18,
    1103,    -1,  1106,    -1,  1103,    -1,    -1,   560,   561,    -1,
      -1,   853,   851,   852,    -1,    -1,   852,   866,   853,    -1,
     853,   540,   853,    -1,    -1,   856,   854,   855,    -1,    -1,
     855,   867,   856,    -1,   326,   856,    -1,   857,    -1,   858,
     226,   491,    -1,   858,   226,   868,   491,    -1,   858,   226,
     155,    -1,   858,   226,   868,   155,    -1,   858,   226,   507,
      -1,   858,   226,   868,   507,    -1,   858,    -1,   858,   226,
     330,    -1,   858,   226,   868,   330,    -1,   858,   143,   859,
      -1,   858,   870,   859,    -1,   858,   870,   871,  1193,    -1,
     859,    -1,   860,   225,   560,   892,   561,    -1,   860,   868,
     225,   560,   892,   561,    -1,   860,   225,  1193,    -1,   860,
     868,   225,  1193,    -1,   860,   549,   860,    16,   859,    -1,
     860,   868,   549,   860,    16,   859,    -1,   860,   438,   246,
     860,    -1,   860,   246,   873,   944,    -1,   860,   868,   246,
     873,   944,    -1,   860,   385,   860,    -1,   860,   868,   385,
     860,    -1,   860,    -1,   860,   550,   861,    -1,   861,    -1,
     861,   551,   862,    -1,   862,    -1,   862,   429,   863,    -1,
     862,   430,   863,    -1,   863,    -1,   863,   553,   864,    -1,
     863,   552,   864,    -1,   863,   553,   872,   934,    -1,   863,
     552,   872,   934,    -1,   864,    -1,   864,   554,   865,    -1,
     864,   555,   865,    -1,   864,   556,   865,    -1,   864,   123,
     865,    -1,   864,   306,   865,    -1,   865,    -1,   865,   557,
     873,    -1,   873,    -1,   347,    -1,   344,    -1,    16,    -1,
      15,    -1,   326,    -1,   325,    -1,   563,    -1,   325,    -1,
     142,    -1,   180,    -1,   194,    -1,   238,    -1,   265,    -1,
     321,    -1,    12,    -1,    17,    -1,   221,   850,    -1,  1096,
      -1,   873,    63,  1108,    -1,  1091,    -1,  1089,    -1,   566,
    1108,   427,   850,    -1,   566,  1108,    -1,   566,   566,  1121,
    1108,   759,    -1,   882,    -1,   873,   346,   873,    -1,   553,
     873,    -1,   552,   873,    -1,   558,   873,    -1,   869,   873,
      -1,   560,   850,   561,    -1,   560,   850,   562,   892,   561,
      -1,   414,   560,   850,   562,   892,   561,    -1,   149,  1191,
      -1,  1189,    -1,   564,  1106,   850,   565,    -1,   283,   895,
       9,   560,   860,   876,   561,    -1,    20,   560,   850,   561,
      -1,    32,   873,    -1,    50,   560,   850,    18,   891,   561,
      -1,   548,   899,   532,   901,   900,   138,    -1,    81,   560,
     850,   562,   891,   561,    -1,    81,   560,   850,   517,   728,
     561,    -1,   108,   560,  1096,   561,    -1,   522,   560,  1097,
     561,    -1,   176,   560,   561,    -1,   177,   560,   850,   561,
      -1,   178,   560,   850,   562,   850,   561,    -1,   179,   560,
     850,   562,   850,   562,   850,   561,    -1,     7,   560,   850,
     562,   850,   561,    -1,     7,   560,   850,   562,   221,   850,
     934,   561,    -1,   394,   560,   850,   562,   850,   561,    -1,
      22,   560,   850,   561,    -1,    22,   560,   850,   562,   850,
     561,    -1,    55,   560,   892,   561,    -1,    55,   560,   892,
     517,   728,   561,    -1,    54,   560,   850,   561,    -1,    61,
     560,   892,   561,    -1,    64,   560,   850,   561,    -1,    72,
     560,   892,   561,    -1,    73,   560,   850,   562,   892,   561,
      -1,    82,   560,   850,   562,   850,   562,   850,   561,    -1,
      87,   849,    -1,    90,   849,    -1,    90,   560,   850,   561,
      -1,    88,   849,    -1,    95,   560,   850,   562,   872,   934,
     561,    -1,    96,   560,   850,   562,   872,   934,   561,    -1,
      91,   560,   561,    -1,    97,   560,   850,   561,    -1,   102,
     560,   850,   561,    -1,   133,   560,   850,   562,   892,   561,
      -1,   266,   560,   850,   562,   892,   561,    -1,   137,   560,
     850,   561,    -1,   137,   560,   850,   562,   850,   561,    -1,
     107,   560,   850,   562,  1104,   561,    -1,   136,   560,   850,
     562,  1104,   561,    -1,   115,   560,   850,   561,    -1,   115,
     560,   850,   562,   850,   561,    -1,   116,   560,   850,   561,
      -1,   116,   560,   850,   562,   850,   561,    -1,   152,   560,
     850,   562,   850,   562,   850,   561,    -1,   152,   560,   850,
     562,   850,   562,   850,   562,   850,   561,    -1,   152,   560,
     850,   562,   850,   562,   850,   562,   850,   562,   850,   561,
      -1,   167,   560,   850,   562,   331,   561,    -1,   172,   560,
     850,   561,    -1,   172,   560,   850,   562,   850,   561,    -1,
     158,   560,   850,   562,   892,   561,    -1,   875,    -1,   186,
     560,   936,   562,   850,   561,    -1,   205,   560,   850,   561,
      -1,   209,   560,   850,   562,   850,   562,   850,   561,    -1,
     219,   560,   850,   562,   850,   562,   850,   562,   850,   561,
      -1,   872,   934,   553,   850,    -1,   872,    -1,   236,   560,
     561,    -1,   236,   560,   850,   561,    -1,   243,   560,   850,
     562,   850,   561,    -1,   253,   560,   850,   562,   850,   561,
      -1,   253,   560,   850,   562,   850,   562,   850,   561,    -1,
     190,   560,   850,   562,   892,   561,    -1,   240,   560,   850,
     562,   892,   561,    -1,   258,   560,   850,   561,    -1,   258,
     560,   850,   562,   850,   561,    -1,   273,   560,   850,   562,
     850,   561,    -1,   273,   560,   850,   562,   850,   562,   850,
     561,    -1,   295,   560,   850,   561,    -1,   299,   560,   850,
     561,    -1,   306,   560,   850,   562,   850,   561,    -1,   307,
     560,   850,   561,    -1,   327,   849,    -1,   327,   560,   850,
     561,    -1,   353,   560,   850,   561,    -1,   336,   560,   850,
     561,    -1,   360,   560,   860,   225,   850,   561,    -1,   370,
     560,   850,   561,    -1,   378,   560,   850,   561,    -1,   378,
     560,   561,    -1,   395,   560,   850,   562,   850,   562,   850,
     561,    -1,   406,   560,   850,   562,   850,   561,    -1,   409,
     560,   850,   561,    -1,   409,   560,   850,   562,   850,   561,
      -1,   412,   560,   561,    -1,   462,   560,   850,   562,   850,
     561,    -1,   462,   560,   850,   562,   221,   850,   934,   561,
      -1,   418,   560,   850,   561,    -1,   464,   560,   850,   562,
     850,   562,   850,   561,    -1,   464,   560,   850,   562,   850,
     561,    -1,   464,   560,   850,   171,   850,   168,   850,   561,
      -1,   464,   560,   850,   171,   850,   561,    -1,   465,   560,
     850,   562,   850,   562,   850,   561,    -1,   469,   849,    -1,
     469,   560,   850,   561,    -1,   481,   560,   850,   561,    -1,
     478,   560,   850,   561,    -1,   478,   560,   850,   562,   850,
     561,    -1,   479,   560,   935,   562,   850,   562,   850,   561,
      -1,   480,   560,   935,   562,   850,   562,   850,   561,    -1,
     490,   560,   850,   561,    -1,   490,   560,   239,   850,   171,
     850,   561,    -1,   490,   560,   486,   850,   171,   850,   561,
      -1,   490,   560,    42,   850,   171,   850,   561,    -1,   490,
     560,   239,   171,   850,   561,    -1,   490,   560,   486,   171,
     850,   561,    -1,   490,   560,    42,   171,   850,   561,    -1,
     490,   560,   850,   171,   850,   561,    -1,   492,   560,   850,
     562,   850,   561,    -1,  1106,   567,  1106,   560,   877,   561,
      -1,    -1,  1102,   560,   874,   877,   561,    -1,   505,   560,
    1087,   562,   331,   562,   331,   562,   892,   561,    -1,   506,
     560,   561,    -1,   506,   560,   850,   561,    -1,   514,   560,
     561,    -1,   518,   849,    -1,   520,   849,    -1,   519,   849,
      -1,   531,   560,   850,   561,    -1,   531,   560,   850,   562,
     850,   561,    -1,   543,   560,   850,   561,    -1,   541,   560,
     850,   561,    -1,   541,   560,   850,   562,   850,   561,    -1,
      29,   560,   959,   562,   850,   561,    -1,   154,   560,   934,
     171,   850,   561,    -1,    79,   560,   850,   562,   850,   561,
      -1,   184,   560,   850,   561,    -1,   184,   560,   850,   562,
     850,   561,    -1,   185,   560,   850,   561,    -1,   185,   560,
     850,   562,   850,   561,    -1,   182,   560,   892,   561,    -1,
     250,   560,   892,   561,    -1,   310,   560,   892,   561,    -1,
     302,   560,   850,   561,    -1,   302,   560,   850,   562,   850,
     561,    -1,   308,   560,   850,   561,    -1,   308,   560,   850,
     562,   850,   561,    -1,   309,   560,   850,   561,    -1,   309,
     560,   850,   562,   850,   561,    -1,   311,   560,   892,   561,
      -1,   312,   560,   892,   561,    -1,   357,   560,   850,   562,
     850,   561,    -1,   356,   560,   850,   561,    -1,   356,   560,
     850,   562,   850,   561,    -1,   358,   560,   850,   561,    -1,
     358,   560,   850,   562,   850,   561,    -1,   359,   560,   892,
     561,    -1,   181,   560,   850,   561,    -1,   181,   560,   850,
     562,   850,   561,    -1,   248,   560,   850,   561,    -1,   248,
     560,   850,   562,   850,   561,    -1,    -1,   535,   371,   151,
      -1,   225,    40,   303,    -1,    -1,   878,    -1,    -1,   879,
     880,    -1,   881,    -1,   880,   562,   881,    -1,   845,   850,
     846,   848,    -1,    25,   560,   889,   561,    -1,    25,   560,
     122,   889,   561,    -1,    35,   560,   889,   561,    -1,    36,
     560,   889,   561,    -1,    38,   560,   889,   561,    -1,    83,
     560,   939,   554,   561,    -1,    83,   560,   889,   561,    -1,
      -1,    -1,    83,   560,   122,   883,   892,   884,   561,    -1,
     193,   560,  1087,   562,   331,   562,   331,   562,   889,   561,
      -1,   301,   560,   889,   561,    -1,   301,   560,   122,   889,
     561,    -1,   287,   560,   889,   561,    -1,   287,   560,   122,
     889,   561,    -1,   456,   560,   889,   561,    -1,   527,   560,
     889,   561,    -1,   457,   560,   889,   561,    -1,   521,   560,
     889,   561,    -1,   466,   560,   889,   561,    -1,   466,   560,
     122,   889,   561,    -1,    -1,   192,   560,   886,   885,   892,
     888,   887,   561,    -1,    -1,   122,    -1,    -1,   422,  1088,
      -1,    -1,   949,    -1,    -1,   939,   890,   850,    -1,    32,
     721,    -1,    55,   721,   736,    -1,   319,   721,    -1,   433,
      -1,   433,   223,    -1,   509,    -1,   509,   223,    -1,    97,
      -1,   481,    -1,    94,    -1,   105,   716,    -1,    -1,   893,
     894,    -1,   850,    -1,   894,   562,   850,    -1,   896,    -1,
     560,   896,   561,    -1,    -1,   897,   898,    -1,  1096,    -1,
     898,   562,  1096,    -1,    -1,   850,    -1,    -1,   546,   850,
      -1,    -1,   902,   903,    -1,   850,   547,   850,    -1,   903,
     532,   850,   547,   850,    -1,   917,    -1,    -1,   908,   905,
      -1,   907,    -1,   904,    -1,   907,   562,   904,    -1,   904,
     916,   904,    -1,   904,   460,   917,    -1,    -1,   904,   916,
     904,   337,   909,   850,    -1,    -1,   904,   460,   917,   337,
     910,   850,    -1,    -1,   904,   916,   904,   517,   911,   560,
     933,   561,    -1,   904,   317,   230,   917,    -1,    -1,   904,
     243,   927,   230,   904,   337,   912,   850,    -1,    -1,   904,
     243,   927,   230,   917,   913,   517,   560,   933,   561,    -1,
     904,   317,   243,   927,   230,   917,    -1,    -1,   904,   406,
     927,   230,   904,   337,   914,   850,    -1,    -1,   904,   406,
     927,   230,   917,   915,   517,   560,   933,   561,    -1,   904,
     317,   406,   927,   230,   917,    -1,   230,    -1,   215,   230,
      -1,    85,   230,    -1,    -1,   918,  1100,   938,   928,    -1,
      -1,   564,  1106,   904,   243,   348,   230,   904,   337,   919,
     850,   565,    -1,   926,   925,   922,    -1,   560,   925,   920,
    1184,   561,   938,    -1,    -1,   925,   921,   907,    -1,    -1,
      -1,   923,   839,   843,   924,   693,    -1,    -1,   420,    -1,
      -1,   348,    -1,    -1,   516,   929,    -1,   165,   929,    -1,
     210,   929,    -1,    -1,   750,   930,   560,   931,   561,    -1,
      -1,   932,    -1,   932,   562,  1106,    -1,  1106,    -1,   364,
      -1,  1106,    -1,   933,   562,  1106,    -1,   935,    -1,    98,
      -1,    99,    -1,   100,    -1,   101,    -1,   202,    -1,   203,
      -1,   204,    -1,   295,    -1,   297,    -1,   298,    -1,   417,
      -1,   542,    -1,   102,    -1,   531,    -1,   205,    -1,   170,
      -1,   299,    -1,   307,    -1,   370,    -1,   418,    -1,   543,
      -1,    97,    -1,   481,    -1,    94,    -1,   478,    -1,    -1,
      18,    -1,   142,    -1,    -1,   937,  1106,    -1,    -1,    12,
      -1,    -1,    -1,   533,   941,   850,    -1,    -1,    -1,   197,
     943,   850,    -1,   146,   873,    -1,    -1,    -1,   191,    44,
     946,   947,    -1,   946,   562,  1095,   952,    -1,  1095,   952,
      -1,    -1,   535,    86,    -1,   535,   408,    -1,    -1,   949,
      -1,    -1,   345,    44,   950,   951,    -1,   951,   562,  1095,
     952,    -1,  1095,   952,    -1,    -1,    19,    -1,   113,    -1,
      -1,   955,    -1,    -1,   955,    -1,   247,   956,    -1,   957,
      -1,   957,   562,   957,    -1,   957,   334,   957,    -1,  1089,
      -1,   497,    -1,   261,    -1,   331,    -1,    -1,   247,   957,
      -1,   331,    -1,   199,    -1,   261,    -1,   497,    -1,   104,
      -1,   162,    -1,   331,    -1,   497,    -1,   261,    -1,   104,
      -1,   162,    -1,    -1,    -1,   366,  1106,   962,   560,   963,
     561,    -1,    -1,   964,    -1,   964,   562,   965,    -1,   965,
      -1,   845,   850,    -1,    -1,   967,   968,    -1,   968,   562,
     969,    -1,   969,    -1,   566,  1108,    -1,  1108,    -1,    -1,
     222,   349,  1105,   971,  1076,  1079,    -1,   222,   128,  1105,
      -1,   222,   966,    -1,    -1,   125,   973,   892,    -1,   126,
     979,  1131,   978,   976,   776,    -1,    -1,   126,   213,  1106,
     337,  1100,   975,    -1,   126,    91,   978,  1106,    -1,   126,
     175,   978,   596,    -1,   126,   366,   978,   596,    -1,   126,
     514,   595,  1161,    -1,   126,   529,   978,   976,   776,    -1,
     126,   488,   596,    -1,   977,    -1,   976,   562,   977,    -1,
    1100,    -1,    -1,   209,   149,    -1,    -1,   473,    -1,    -1,
      -1,   219,   981,   986,   775,   988,   982,   990,  1006,    -1,
      -1,    -1,   395,   984,   987,   988,   985,   990,    -1,    -1,
     264,    -1,   110,    -1,   200,    -1,  1015,    -1,   110,    -1,
     222,   989,    -1,   989,    -1,   977,    -1,   993,    -1,   560,
     561,   993,    -1,   560,   992,   561,   993,    -1,    -1,   426,
     991,   997,    -1,   992,   562,  1093,    -1,  1093,    -1,   522,
     996,    -1,   523,   996,    -1,    -1,   672,   994,  1181,    -1,
      -1,   560,   672,   561,   995,  1184,    -1,   996,   562,  1001,
      -1,  1001,    -1,   997,   562,   998,    -1,   998,    -1,  1097,
     999,  1005,    -1,   142,    -1,   427,    -1,    -1,   999,    -1,
      -1,   560,  1002,  1003,   561,    -1,    -1,  1004,    -1,  1004,
     562,  1005,    -1,  1005,    -1,   850,    -1,   108,    -1,    -1,
      -1,   337,   129,  1007,   232,   511,  1013,    -1,    -1,    -1,
     511,  1009,  1015,   775,   906,   426,  1011,  1010,   940,   948,
     958,    -1,  1011,   562,  1012,    -1,  1012,    -1,  1097,   999,
    1005,    -1,  1013,   562,  1014,    -1,  1014,    -1,  1097,   999,
    1005,    -1,    -1,   264,    -1,    -1,   112,  1017,  1025,  1018,
      -1,    -1,   171,  1100,  1019,   940,   948,   958,    -1,    -1,
    1022,  1020,   171,   906,   940,    -1,    -1,   171,  1022,  1021,
     517,   906,   940,    -1,  1023,    -1,  1022,   562,  1023,    -1,
    1106,  1024,   938,    -1,  1106,   567,  1106,  1024,   938,    -1,
      -1,   567,   554,    -1,    -1,  1026,  1025,    -1,   372,    -1,
     264,    -1,   210,    -1,   492,  1028,   977,    -1,    -1,   472,
      -1,    -1,   431,  1030,  1031,    -1,    92,  1042,    -1,  1038,
     470,  1037,  1042,    -1,  1038,   489,  1037,  1042,    -1,   472,
     455,  1037,  1042,    -1,   340,   470,  1037,  1042,    -1,    -1,
     140,   689,  1032,  1034,    -1,  1038,    65,  1039,  1100,  1037,
    1042,    -1,   322,   281,   168,   435,   535,   269,   142,  1103,
      16,   270,   142,   960,    16,   274,   142,   959,    -1,  1035,
     257,    -1,   435,   201,    -1,    -1,    33,   147,  1040,  1041,
    1033,   953,    -1,   752,  1039,  1100,  1037,   940,    -1,    66,
     493,    -1,   472,   493,    -1,  1036,   139,    -1,   365,    -1,
      83,   560,   554,   561,   530,    -1,    83,   560,   554,   561,
     144,    -1,   530,   953,    -1,   144,   953,    -1,  1120,   455,
    1042,    -1,   216,   455,    -1,   313,   455,    -1,  1038,   368,
      -1,  1120,   526,  1042,    -1,   727,  1042,    -1,    64,  1042,
      -1,    30,   257,    -1,   257,    -1,   189,    -1,   189,   168,
    1109,    -1,    84,    91,   682,  1106,    -1,    84,   472,  1100,
      -1,    84,   529,  1100,    -1,   281,   455,    -1,   435,   455,
      -1,    84,   366,   596,    -1,    84,   175,   596,    -1,   366,
     455,  1042,    -1,   175,   455,  1042,    -1,   366,    62,   596,
      -1,   175,    62,   596,    -1,   455,    -1,   257,    -1,   281,
      -1,    32,    -1,    -1,   459,    -1,    -1,  1039,  1106,    -1,
      -1,   173,    -1,   171,    -1,   225,    -1,    -1,   225,  1103,
      -1,    -1,   171,   960,    -1,    -1,   246,  1103,    -1,   533,
     850,    -1,    -1,  1046,  1100,  1044,  1048,    -1,    -1,  1046,
    1047,  1045,   829,    -1,   113,    -1,   114,    -1,    -1,   153,
      -1,    -1,  1088,    -1,  1106,    -1,    -1,   164,   811,  1050,
    1051,    -1,  1051,   562,  1052,    -1,  1052,    -1,    -1,  1131,
    1053,  1054,    -1,   470,   535,   380,   256,    -1,   371,    46,
      -1,   201,    -1,   365,    -1,   257,    -1,   455,    -1,   435,
      -1,   281,    -1,   117,    -1,   399,    -1,    -1,   976,    -1,
      -1,   398,  1056,  1057,    -1,  1057,   562,  1058,    -1,  1058,
      -1,   435,    -1,   281,    -1,   371,    46,    -1,    -1,   369,
    1060,  1061,    -1,  1035,   257,  1062,    -1,   485,  1103,    -1,
      27,   850,    -1,    -1,   233,  1064,  1065,   850,    -1,    -1,
      76,    -1,   371,    -1,   516,  1106,    -1,    -1,   251,    93,
    1068,  1069,    -1,   251,   472,  1100,   171,   281,    -1,    -1,
      -1,    -1,  1074,  1073,   214,  1105,  1070,  1075,   222,  1071,
     472,  1100,  1072,  1076,  1079,  1082,  1083,  1086,    -1,   171,
     281,    -1,    -1,   252,    -1,    -1,    74,    -1,   264,    -1,
      -1,   395,    -1,   210,    -1,    -1,    65,  1077,    -1,  1077,
    1078,    -1,  1078,    -1,   475,    44,  1088,    -1,   343,   135,
      44,  1088,    -1,   135,    44,  1088,    -1,   145,    44,  1088,
      -1,    -1,   249,  1080,    -1,  1080,  1081,    -1,  1081,    -1,
     475,    44,  1088,    -1,   453,    44,  1088,    -1,    -1,   210,
     331,   249,    -1,    -1,   560,  1084,   561,    -1,   560,   561,
      -1,  1084,   562,  1085,    -1,  1085,    -1,  1097,    -1,   566,
    1108,    -1,    -1,   426,  1013,    -1,  1104,    -1,   318,    -1,
     500,   476,    -1,  1087,  1104,    -1,  1104,    -1,   199,    -1,
      34,    -1,   354,    -1,  1091,    -1,   553,  1092,    -1,   552,
    1092,    -1,  1087,    -1,  1092,    -1,   330,    -1,   155,    -1,
     491,    -1,   199,    -1,    34,    -1,   500,   199,    -1,   500,
      34,    -1,    97,  1087,    -1,   481,  1087,    -1,   478,  1087,
      -1,   331,    -1,   261,    -1,   497,    -1,   104,    -1,   162,
      -1,  1097,    -1,  1094,    -1,  1106,   567,   554,    -1,  1106,
     567,  1106,   567,   554,    -1,   850,    -1,  1106,    -1,  1098,
      -1,  1106,    -1,  1098,    -1,  1106,   567,  1106,    -1,   567,
    1106,   567,  1106,    -1,  1106,   567,  1106,   567,  1106,    -1,
    1106,    -1,  1106,   567,  1106,   567,  1106,    -1,  1106,   567,
    1106,    -1,   567,  1106,    -1,  1106,    -1,  1106,   567,  1106,
      -1,   567,  1106,    -1,  1106,    -1,   206,    -1,   208,    -1,
     476,    -1,   476,    -1,   476,    -1,  1102,    -1,  1110,    -1,
    1102,    -1,  1111,    -1,  1106,    -1,  1103,    -1,   245,    -1,
    1108,    -1,  1108,   566,  1108,    -1,    88,   849,    -1,  1111,
      -1,    20,    -1,    26,    -1,    28,    -1,    45,    -1,    46,
      -1,    54,    -1,    56,    -1,    60,    -1,    67,    -1,    69,
      -1,    79,    -1,   103,    -1,   125,    -1,   138,    -1,   148,
      -1,   164,    -1,   195,    -1,   198,    -1,   235,    -1,   328,
      -1,   340,    -1,   362,    -1,   392,    -1,   398,    -1,   400,
      -1,   407,    -1,   416,    -1,   419,    -1,   433,    -1,   435,
      -1,   454,    -1,   458,    -1,   492,    -1,   502,    -1,   539,
      -1,     5,    -1,     7,    -1,     8,    -1,     9,    -1,    10,
      -1,    11,    -1,    17,    -1,    23,    -1,    24,    -1,    25,
      -1,    30,    -1,    33,    -1,    37,    -1,    41,    -1,    40,
      -1,    43,    -1,    49,    -1,    51,    -1,    53,    -1,    58,
      -1,    59,    -1,    62,    -1,    64,    -1,    65,    -1,    68,
      -1,    70,    -1,    71,    -1,    74,    -1,    77,    -1,    86,
      -1,    93,    -1,    94,    -1,    97,    -1,   102,    -1,   109,
      -1,   111,    -1,   117,    -1,   119,    -1,   121,    -1,   128,
      -1,   129,    -1,   130,    -1,   141,    -1,   140,    -1,   139,
      -1,   144,    -1,   146,    -1,   147,    -1,   151,    -1,   153,
      -1,   156,    -1,   169,    -1,   120,    -1,   134,    -1,   173,
      -1,   159,    -1,   160,    -1,   161,    -1,   170,    -1,   183,
      -1,   182,    -1,   186,    -1,   189,    -1,   187,    -1,   196,
      -1,   201,    -1,   205,    -1,   207,    -1,   224,    -1,   211,
      -1,   212,    -1,   227,    -1,   228,    -1,   216,    -1,   220,
      -1,   388,    -1,   237,    -1,   241,    -1,   244,    -1,   250,
      -1,   252,    -1,   255,    -1,   257,    -1,   286,    -1,   281,
      -1,   268,    -1,   272,    -1,   269,    -1,   270,    -1,   282,
      -1,   271,    -1,   274,    -1,   267,    -1,   280,    -1,   276,
      -1,   275,    -1,   277,    -1,   278,    -1,   279,    -1,   284,
      -1,   285,    -1,   288,    -1,   289,    -1,   293,    -1,   294,
      -1,   295,    -1,   296,    -1,   299,    -1,   300,    -1,   305,
      -1,   303,    -1,   307,    -1,   310,    -1,   311,    -1,   312,
      -1,   313,    -1,   315,    -1,   314,    -1,   316,    -1,   319,
      -1,   320,    -1,   323,    -1,   322,    -1,   324,    -1,   333,
      -1,   334,    -1,   336,    -1,   338,    -1,   339,    -1,   351,
      -1,   352,    -1,   353,    -1,   355,    -1,   357,    -1,   359,
      -1,   363,    -1,   365,    -1,   367,    -1,   368,    -1,   370,
      -1,   371,    -1,   372,    -1,   373,    -1,   374,    -1,   375,
      -1,   376,    -1,   377,    -1,   382,    -1,   383,    -1,   386,
      -1,   387,    -1,   390,    -1,   393,    -1,   396,    -1,   399,
      -1,   402,    -1,   403,    -1,   408,    -1,   410,    -1,   411,
      -1,   413,    -1,   414,    -1,   415,    -1,   418,    -1,   424,
      -1,   423,    -1,   425,    -1,   434,    -1,   428,    -1,   432,
      -1,   437,    -1,   438,    -1,   446,    -1,   445,    -1,   448,
      -1,   451,    -1,   455,    -1,   459,    -1,   461,    -1,   462,
      -1,   463,    -1,   467,    -1,   468,    -1,   470,    -1,   471,
      -1,   473,    -1,   474,    -1,   477,    -1,   487,    -1,   489,
      -1,   478,    -1,   479,    -1,   480,    -1,   481,    -1,   493,
      -1,   494,    -1,   495,    -1,   175,    -1,   498,    -1,   499,
      -1,   507,    -1,   510,    -1,   514,    -1,   515,    -1,   526,
      -1,   529,    -1,   523,    -1,   530,    -1,   531,    -1,   536,
      -1,   538,    -1,   543,    -1,    -1,   426,  1114,  1113,  1115,
      -1,    -1,   342,    -1,  1116,    -1,  1115,   562,  1116,    -1,
      -1,  1117,  1122,    -1,  1119,    -1,   187,    -1,   252,    -1,
     425,    -1,    -1,   338,    -1,    -1,   187,    -1,   252,    -1,
     425,    -1,    -1,   187,   567,    -1,   252,   567,    -1,   425,
     567,    -1,  1123,    -1,  1119,  1124,    -1,  1118,  1125,   999,
    1128,    -1,  1118,   487,   227,   244,  1126,    -1,   566,  1108,
     999,   850,    -1,   566,   566,  1121,  1125,   999,  1128,    -1,
     727,   731,    -1,   314,   999,   850,    -1,   314,   729,   733,
      -1,   353,   999,  1127,    -1,   353,   168,  1109,   999,  1127,
      -1,  1106,    -1,  1106,   567,  1106,    -1,   108,   567,  1106,
      -1,   380,   498,    -1,   380,    68,    -1,   393,   380,    -1,
     423,    -1,   476,    -1,   353,   560,   476,   561,    -1,   336,
     560,   476,   561,    -1,   850,    -1,   108,    -1,   337,    -1,
      12,    -1,    32,    -1,    -1,   256,  1131,  1130,  1132,    -1,
     472,    -1,   470,    -1,  1133,    -1,  1132,   562,  1133,    -1,
    1100,   938,  1134,    -1,   380,    -1,   537,    -1,   264,   537,
      -1,   380,   252,    -1,    -1,   508,  1136,  1131,    -1,   195,
    1100,   340,   938,    -1,   195,  1101,    60,    -1,    -1,   195,
    1101,   380,  1138,  1139,   940,   954,    -1,  1140,    -1,  1106,
    1141,    -1,   160,    -1,   323,    -1,   160,    -1,   323,    -1,
     363,    -1,   237,    -1,    -1,  1143,  1142,   560,  1004,   561,
      -1,   142,    -1,   180,    -1,   238,    -1,   194,    -1,   265,
      -1,   405,   595,  1145,    -1,  1149,   337,  1148,  1160,   171,
    1162,    -1,  1149,   337,   175,  1160,   171,  1162,    -1,  1149,
     337,   366,  1160,   171,  1162,    -1,    12,  1150,   562,   188,
     342,   171,  1162,    -1,   188,   595,  1147,    -1,  1149,   337,
    1148,  1160,   485,  1162,  1167,  1168,    -1,  1149,   337,   175,
    1160,   485,  1162,  1167,  1168,    -1,  1149,   337,   366,  1160,
     485,  1162,  1167,  1168,    -1,    -1,   472,    -1,  1151,    -1,
      12,  1150,    -1,    -1,   365,    -1,  1152,    -1,  1151,   562,
    1152,    -1,    -1,   420,  1153,  1164,    -1,    -1,   219,  1154,
    1164,    -1,    -1,   511,  1155,  1164,    -1,    -1,   384,  1156,
    1164,    -1,   112,    -1,   513,    -1,   213,    -1,    13,    -1,
      84,    -1,   126,    -1,   148,    -1,   390,    -1,   432,    -1,
     367,    -1,   159,    -1,   188,   342,    -1,   431,    92,    -1,
     467,    -1,    84,   473,   470,    -1,   256,   470,    -1,   396,
     435,    -1,   396,    59,    -1,    84,   529,    -1,   431,   529,
      -1,    84,   410,    -1,    13,   410,    -1,    84,   514,    -1,
      -1,    16,    -1,  1159,  1157,  1158,    -1,  1159,    -1,   463,
     476,    -1,   228,   476,    -1,    58,   476,    -1,   554,    -1,
    1106,   567,   554,    -1,   554,   567,   554,    -1,  1100,    -1,
    1109,    -1,  1161,   562,  1109,    -1,  1163,    -1,  1162,   562,
    1163,    -1,  1109,   207,    44,   476,    -1,  1109,   207,    44,
     353,   476,    -1,  1109,    -1,    -1,   560,  1165,   561,    -1,
    1165,   562,  1166,    -1,  1166,    -1,  1106,    -1,    -1,   397,
    1158,    -1,   397,   452,    -1,   397,   538,    -1,   397,   324,
      -1,    -1,   535,  1169,    -1,  1169,  1170,    -1,  1170,    -1,
     188,   342,    -1,   285,   959,    -1,   288,   959,    -1,   284,
     959,    -1,   289,   959,    -1,    -1,    28,  1172,  1173,    -1,
      -1,   536,    -1,    -1,    16,   328,    51,    -1,    16,    51,
      -1,    -1,   389,    -1,   328,   389,    -1,    -1,   416,    -1,
      69,  1173,  1174,  1175,    -1,   407,  1173,  1174,  1175,    -1,
     407,  1173,   485,  1176,  1106,    -1,   416,  1106,    -1,   389,
     416,  1106,    -1,    -1,  1182,    -1,    -1,   503,  1188,  1183,
     830,    -1,    -1,  1182,    -1,  1185,    -1,    -1,  1186,  1187,
      -1,   949,   953,    -1,   955,    -1,    -1,   122,    -1,    12,
      -1,  1195,  1190,  1196,    -1,   832,    -1,  1195,  1192,  1196,
      -1,   832,    -1,  1195,  1194,  1196,    -1,   832,    -1,   560,
     420,    -1,   561,    -1,  1199,  1198,    -1,  1200,  1199,  1205,
      -1,  1205,    -1,  1211,    -1,  1213,    -1,    -1,   109,   142,
    1109,    -1,  1201,    -1,  1201,  1202,    -1,  1202,    -1,   347,
     395,    -1,    11,   142,   499,    -1,    11,   142,   294,    -1,
      11,   142,   474,    -1,    -1,  1202,    -1,    -1,   450,   419,
     109,    -1,   450,   419,   224,    -1,    -1,  1204,   529,  1100,
    1206,  1207,    18,  1209,  1210,    -1,    -1,   560,  1208,   561,
      -1,  1106,    -1,  1208,   562,  1106,    -1,   420,   845,   832,
      -1,   560,   845,   831,   561,  1184,    -1,    -1,   535,    57,
     342,    -1,   535,    49,    57,   342,    -1,   535,   252,    57,
     342,    -1,    -1,   488,   845,   596,   664,   665,   337,   845,
    1100,   168,   845,   131,   414,  1212,   635,    -1,    -1,   694,
     845,   175,   596,  1214,   597,    -1,    -1,    -1,    -1,    -1,
     366,   845,   596,  1215,   560,  1216,   616,   561,  1217,   604,
    1218,   635,    -1,   539,  1221,  1220,  1222,    -1,   539,   138,
    1220,  1224,    -1,   539,   362,  1220,    -1,   539,    69,  1220,
    1223,    -1,   539,   407,  1220,    -1,   539,   382,    -1,  1088,
      -1,  1088,   562,  1088,    -1,  1088,   562,  1088,   562,   959,
      -1,    28,    -1,   454,    -1,    -1,   230,    -1,   402,    -1,
      -1,   339,   355,    -1,    -1,    -1,   468,  1225,  1226,    -1,
      -1,   168,   296,    -1
};

/* YYRLINE[YYN] -- source line where rule number YYN was defined.  */
static const unsigned short int yyrline[] =
{
       0,   856,   856,   870,   873,   874,   879,   880,   881,   882,
     883,   884,   885,   886,   887,   888,   889,   890,   891,   892,
     893,   894,   895,   896,   897,   898,   899,   900,   901,   902,
     903,   904,   905,   906,   907,   908,   909,   910,   911,   912,
     913,   914,   915,   916,   917,   918,   919,   920,   921,   922,
     923,   924,   925,   929,   943,   944,   949,   963,   970,   980,
     979,   995,   997,  1001,  1002,  1005,  1018,  1017,  1036,  1035,
    1046,  1047,  1050,  1055,  1060,  1065,  1070,  1074,  1079,  1083,
    1087,  1091,  1095,  1100,  1104,  1108,  1124,  1128,  1140,  1139,
    1163,  1162,  1182,  1181,  1194,  1193,  1201,  1209,  1223,  1238,
    1256,  1265,  1301,  1307,  1315,  1327,  1264,  1356,  1357,  1361,
    1362,  1367,  1369,  1371,  1373,  1375,  1377,  1379,  1385,  1386,
    1387,  1391,  1395,  1403,  1402,  1415,  1417,  1421,  1425,  1432,
    1434,  1438,  1439,  1444,  1463,  1489,  1491,  1495,  1496,  1500,
    1526,  1527,  1528,  1529,  1533,  1534,  1538,  1539,  1544,  1547,
    1574,  1573,  1630,  1645,  1644,  1684,  1708,  1708,  1739,  1740,
    1745,  1766,  1790,  1796,  1811,  1812,  1816,  1820,  1829,  1834,
    1839,  1847,  1862,  1880,  1881,  1885,  1885,  1928,  1927,  1951,
    1950,  1955,  1954,  1961,  1966,  1960,  1991,  1993,  1993,  2004,
    2033,  2061,  2077,  2076,  2093,  2110,  2112,  2113,  2117,  2138,
    2161,  2163,  2177,  2161,  2195,  2197,  2198,  2202,  2204,  2236,
    2202,  2256,  2264,  2265,  2270,  2269,  2307,  2308,  2313,  2312,
    2339,  2350,  2352,  2349,  2376,  2375,  2393,  2395,  2400,  2402,
    2404,  2409,  2410,  2411,  2423,  2438,  2439,  2439,  2443,  2445,
    2444,  2447,  2446,  2452,  2468,  2451,  2482,  2483,  2486,  2487,
    2490,  2491,  2494,  2495,  2498,  2499,  2502,  2503,  2506,  2509,
    2510,  2512,  2514,  2517,  2518,  2521,  2522,  2523,  2526,  2527,
    2528,  2529,  2530,  2531,  2532,  2533,  2534,  2549,  2555,  2556,
    2557,  2558,  2563,  2568,  2573,  2588,  2589,  2590,  2591,  2592,
    2593,  2597,  2614,  2630,  2640,  2641,  2642,  2643,  2644,  2645,
    2648,  2649,  2650,  2653,  2654,  2655,  2658,  2659,  2662,  2663,
    2666,  2667,  2668,  2669,  2672,  2673,  2677,  2678,  2682,  2683,
    2690,  2696,  2704,  2718,  2722,  2728,  2730,  2734,  2738,  2739,
    2743,  2748,  2747,  2769,  2770,  2771,  2772,  2774,  2776,  2778,
    2780,  2782,  2784,  2787,  2790,  2793,  2796,  2798,  2801,  2804,
    2805,  2806,  2807,  2820,  2821,  2823,  2825,  2837,  2839,  2841,
    2843,  2844,  2845,  2846,  2847,  2848,  2850,  2852,  2854,  2854,
    2856,  2856,  2858,  2859,  2868,  2869,  2870,  2873,  2874,  2875,
    2876,  2877,  2881,  2885,  2886,  2890,  2891,  2895,  2896,  2897,
    2898,  2899,  2903,  2904,  2905,  2906,  2907,  2910,  2912,  2913,
    2917,  2918,  2919,  2922,  2929,  2930,  2933,  2934,  2937,  2938,
    2939,  2942,  2943,  2946,  2947,  2950,  2951,  2954,  2955,  2958,
    2959,  2960,  2961,  2963,  2964,  2970,  2976,  2982,  2988,  2989,
    3005,  3006,  3010,  3011,  3015,  3023,  3027,  3028,  3032,  3041,
    3045,  3046,  3049,  3059,  3060,  3064,  3065,  3068,  3069,  3072,
    3073,  3074,  3075,  3084,  3085,  3088,  3089,  3092,  3093,  3094,
    3103,  3105,  3107,  3112,  3111,  3123,  3124,  3127,  3128,  3132,
    3133,  3136,  3137,  3140,  3141,  3142,  3143,  3144,  3147,  3148,
    3149,  3150,  3151,  3154,  3155,  3156,  3168,  3169,  3172,  3173,
    3176,  3177,  3181,  3182,  3183,  3186,  3187,  3188,  3189,  3202,
    3203,  3204,  3207,  3208,  3212,  3215,  3216,  3219,  3220,  3231,
    3232,  3235,  3236,  3239,  3240,  3248,  3247,  3274,  3273,  3288,
    3287,  3306,  3305,  3325,  3323,  3338,  3339,  3341,  3342,  3343,
    3344,  3345,  3348,  3356,  3357,  3361,  3366,  3365,  3373,  3382,
    3372,  3394,  3401,  3405,  3412,  3419,  3425,  3431,  3437,  3444,
    3463,  3484,  3489,  3493,  3500,  3501,  3504,  3505,  3509,  3510,
    3511,  3515,  3516,  3517,  3520,  3521,  3522,  3523,  3531,  3530,
    3541,  3549,  3548,  3558,  3568,  3577,  3578,  3585,  3585,  3591,
    3592,  3596,  3597,  3598,  3602,  3603,  3620,  3621,  3626,  3625,
    3636,  3635,  3646,  3645,  3655,  3656,  3657,  3662,  3661,  3673,
    3674,  3677,  3678,  3681,  3682,  3683,  3687,  3686,  3699,  3698,
    3715,  3716,  3719,  3720,  3723,  3724,  3725,  3726,  3727,  3728,
    3732,  3731,  3743,  3744,  3745,  3750,  3749,  3755,  3762,  3767,
    3775,  3776,  3779,  3791,  3800,  3801,  3804,  3817,  3818,  3823,
    3822,  3832,  3833,  3836,  3849,  3849,  3859,  3860,  3869,  3870,
    3879,  3888,  3890,  3893,  3913,  3917,  3916,  3936,  3944,  3936,
    3950,  3951,  3952,  3953,  3954,  3957,  3959,  3966,  3968,  3979,
    3980,  3983,  3984,  3990,  3991,  3992,  3993,  3999,  4005,  4011,
    4021,  4024,  4026,  4032,  4042,  4043,  4044,  4057,  4075,  4078,
    4081,  4082,  4085,  4086,  4087,  4088,  4089,  4093,  4094,  4098,
    4098,  4115,  4117,  4122,  4123,  4123,  4140,  4142,  4147,  4148,
    4151,  4152,  4153,  4154,  4155,  4156,  4157,  4160,  4161,  4162,
    4163,  4165,  4167,  4170,  4180,  4192,  4194,  4196,  4198,  4204,
    4207,  4209,  4211,  4212,  4214,  4217,  4218,  4221,  4222,  4225,
    4227,  4229,  4232,  4233,  4234,  4236,  4238,  4241,  4242,  4243,
    4244,  4245,  4246,  4249,  4250,  4252,  4252,  4253,  4253,  4254,
    4254,  4255,  4255,  4257,  4258,  4259,  4260,  4261,  4262,  4265,
    4266,  4270,  4274,  4275,  4282,  4283,  4284,  4291,  4298,  4310,
    4311,  4313,  4314,  4315,  4316,  4317,  4318,  4323,  4328,  4329,
    4330,  4331,  4335,  4336,  4340,  4348,  4350,  4357,  4359,  4370,
    4372,  4383,  4394,  4405,  4416,  4418,  4420,  4422,  4424,  4426,
    4428,  4430,  4432,  4434,  4436,  4438,  4440,  4446,  4448,  4450,
    4455,  4457,  4459,  4461,  4466,  4468,  4470,  4472,  4474,  4479,
    4480,  4482,  4484,  4486,  4488,  4490,  4492,  4494,  4496,  4498,
    4500,  4502,  4506,  4508,  4518,  4520,  4522,  4524,  4526,  4529,
    4538,  4543,  4548,  4550,  4552,  4554,  4556,  4558,  4560,  4562,
    4567,  4572,  4574,  4576,  4578,  4580,  4582,  4584,  4590,  4592,
    4594,  4596,  4598,  4600,  4602,  4604,  4606,  4607,  4612,  4614,
    4616,  4618,  4620,  4622,  4624,  4626,  4628,  4635,  4642,  4644,
    4646,  4648,  4650,  4652,  4654,  4656,  4658,  4660,  4662,  4664,
    4666,  4668,  4670,  4684,  4683,  4801,  4805,  4810,  4812,  4814,
    4816,  4818,  4820,  4825,  4827,  4829,  4831,  4833,  4838,  4842,
    4844,  4846,  4848,  4850,  4852,  4856,  4859,  4862,  4864,  4866,
    4868,  4870,  4872,  4874,  4877,  4880,  4882,  4884,  4886,  4888,
    4890,  4893,  4895,  4897,  4899,  4904,  4905,  4906,  4910,  4911,
    4915,  4915,  4921,  4925,  4932,  4946,  4948,  4950,  4952,  4954,
    4956,  4958,  4961,  4963,  4960,  4966,  4968,  4975,  4977,  4979,
    4981,  4983,  4985,  4987,  4989,  4991,  4994,  4993,  5007,  5008,
    5011,  5012,  5017,  5020,  5032,  5031,  5047,  5048,  5049,  5050,
    5051,  5052,  5053,  5054,  5055,  5056,  5057,  5061,  5061,  5066,
    5067,  5070,  5071,  5074,  5074,  5079,  5080,  5083,  5084,  5087,
    5088,  5091,  5091,  5096,  5102,  5111,  5112,  5112,  5121,  5126,
    5127,  5147,  5149,  5153,  5151,  5166,  5164,  5180,  5178,  5186,
    5195,  5193,  5209,  5208,  5215,  5226,  5224,  5241,  5240,  5252,
    5262,  5263,  5264,  5269,  5269,  5288,  5286,  5305,  5327,  5375,
    5374,  5397,  5414,  5397,  5421,  5425,  5444,  5445,  5448,  5449,
    5455,  5462,  5470,  5470,  5476,  5477,  5481,  5485,  5489,  5495,
    5503,  5512,  5513,  5514,  5515,  5516,  5517,  5518,  5519,  5520,
    5521,  5522,  5523,  5524,  5527,  5528,  5529,  5530,  5531,  5532,
    5533,  5534,  5535,  5539,  5540,  5541,  5542,  5545,  5547,  5548,
    5551,  5552,  5555,  5557,  5561,  5563,  5562,  5576,  5579,  5578,
    5593,  5599,  5612,  5614,  5617,  5619,  5623,  5624,  5637,  5654,
    5656,  5660,  5659,  5691,  5693,  5697,  5698,  5699,  5704,  5710,
    5714,  5715,  5719,  5723,  5730,  5737,  5746,  5747,  5748,  5749,
    5754,  5758,  5766,  5767,  5768,  5769,  5770,  5771,  5775,  5776,
    5777,  5778,  5779,  5782,  5785,  5784,  5806,  5807,  5810,  5811,
    5814,  5827,  5827,  5837,  5838,  5842,  5854,  5887,  5886,  5895,
    5907,  5918,  5917,  5934,  5941,  5941,  5952,  5959,  5971,  5983,
    5987,  5993,  6002,  6003,  6006,  6014,  6015,  6019,  6020,  6028,
    6037,  6027,  6047,  6054,  6046,  6064,  6076,  6077,  6078,  6082,
    6083,  6086,  6087,  6090,  6099,  6100,  6101,  6103,  6102,  6112,
    6113,  6116,  6117,  6118,  6118,  6119,  6119,  6123,  6124,  6127,
    6129,  6132,  6140,  6141,  6145,  6146,  6151,  6150,  6163,  6164,
    6167,  6172,  6180,  6181,  6184,  6186,  6186,  6194,  6203,  6193,
    6225,  6226,  6229,  6236,  6237,  6240,  6249,  6250,  6256,  6255,
    6269,  6268,  6277,  6276,  6284,  6283,  6293,  6294,  6297,  6303,
    6314,  6315,  6319,  6320,  6323,  6324,  6325,  6328,  6338,  6340,
    6345,  6344,  6358,  6366,  6375,  6384,  6393,  6403,  6402,  6405,
    6415,  6425,  6429,  6434,  6433,  6438,  6448,  6453,  6459,  6464,
    6469,  6471,  6473,  6475,  6477,  6486,  6488,  6490,  6492,  6501,
    6509,  6517,  6519,  6521,  6545,  6552,  6558,  6566,  6574,  6578,
    6582,  6589,  6596,  6606,  6616,  6626,  6639,  6653,  6666,  6667,
    6669,  6671,  6674,  6675,  6678,  6679,  6682,  6683,  6686,  6687,
    6690,  6691,  6693,  6695,  6698,  6710,  6709,  6724,  6723,  6733,
    6734,  6737,  6738,  6742,  6743,  6744,  6752,  6751,  6772,  6773,
    6776,  6776,  6777,  6778,  6779,  6780,  6781,  6782,  6783,  6784,
    6785,  6786,  6789,  6790,  6794,  6793,  6802,  6803,  6806,  6807,
    6808,  6812,  6811,  6820,  6824,  6829,  6841,  6841,  6849,  6850,
    6851,  6856,  6866,  6865,  6878,  6893,  6904,  6909,  6892,  6922,
    6928,  6929,  6932,  6933,  6943,  6947,  6948,  6949,  6951,  6953,
    6956,  6957,  6960,  6965,  6972,  6977,  6983,  6985,  6988,  6989,
    6992,  6997,  7003,  7005,  7012,  7013,  7014,  7017,  7019,  7024,
    7025,  7030,  7031,  7037,  7042,  7044,  7046,  7051,  7053,  7064,
    7077,  7092,  7093,  7094,  7103,  7104,  7105,  7107,  7108,  7109,
    7110,  7111,  7125,  7139,  7140,  7141,  7144,  7145,  7146,  7147,
    7155,  7170,  7171,  7174,  7180,  7191,  7194,  7223,  7227,  7235,
    7239,  7307,  7322,  7346,  7347,  7363,  7373,  7376,  7377,  7378,
    7382,  7386,  7387,  7412,  7424,  7437,  7449,  7450,  7459,  7460,
    7469,  7470,  7471,  7474,  7486,  7498,  7520,  7521,  7522,  7523,
    7524,  7525,  7526,  7527,  7528,  7529,  7530,  7531,  7532,  7533,
    7534,  7535,  7536,  7537,  7538,  7539,  7540,  7541,  7542,  7543,
    7544,  7545,  7546,  7547,  7548,  7549,  7550,  7551,  7552,  7553,
    7554,  7555,  7565,  7566,  7567,  7568,  7569,  7570,  7571,  7572,
    7573,  7574,  7575,  7576,  7577,  7578,  7579,  7580,  7581,  7582,
    7583,  7584,  7585,  7586,  7587,  7588,  7589,  7590,  7591,  7592,
    7593,  7594,  7595,  7596,  7597,  7598,  7599,  7600,  7601,  7602,
    7603,  7604,  7605,  7606,  7607,  7608,  7609,  7610,  7611,  7612,
    7613,  7614,  7615,  7616,  7617,  7618,  7619,  7620,  7621,  7622,
    7623,  7624,  7625,  7626,  7627,  7628,  7629,  7630,  7631,  7632,
    7633,  7634,  7635,  7636,  7637,  7638,  7639,  7640,  7641,  7642,
    7643,  7644,  7645,  7646,  7647,  7648,  7649,  7650,  7651,  7652,
    7653,  7654,  7655,  7656,  7657,  7658,  7659,  7660,  7661,  7662,
    7663,  7664,  7665,  7666,  7667,  7668,  7669,  7670,  7671,  7672,
    7673,  7674,  7675,  7676,  7677,  7678,  7679,  7680,  7681,  7682,
    7683,  7684,  7685,  7686,  7687,  7688,  7689,  7690,  7691,  7692,
    7693,  7694,  7695,  7696,  7697,  7698,  7699,  7700,  7701,  7702,
    7703,  7704,  7705,  7706,  7707,  7708,  7709,  7710,  7711,  7712,
    7713,  7714,  7715,  7716,  7717,  7718,  7719,  7720,  7721,  7722,
    7723,  7724,  7725,  7726,  7727,  7728,  7729,  7730,  7731,  7732,
    7733,  7734,  7735,  7736,  7737,  7738,  7739,  7740,  7741,  7742,
    7743,  7744,  7745,  7746,  7747,  7748,  7749,  7750,  7751,  7752,
    7753,  7754,  7755,  7756,  7757,  7758,  7759,  7760,  7761,  7762,
    7763,  7764,  7765,  7766,  7767,  7768,  7769,  7770,  7771,  7772,
    7773,  7774,  7775,  7776,  7783,  7782,  7796,  7797,  7800,  7801,
    7804,  7804,  7871,  7872,  7873,  7874,  7878,  7879,  7883,  7884,
    7885,  7886,  7890,  7891,  7892,  7893,  7897,  7898,  7901,  7981,
    7994,  7998,  8003,  8010,  8025,  8038,  8059,  8066,  8104,  8147,
    8161,  8162,  8163,  8164,  8168,  8169,  8176,  8185,  8186,  8187,
    8188,  8189,  8197,  8196,  8212,  8213,  8216,  8217,  8220,  8228,
    8229,  8230,  8231,  8236,  8235,  8256,  8268,  8281,  8280,  8299,
    8300,  8304,  8305,  8309,  8310,  8311,  8312,  8314,  8313,  8324,
    8325,  8326,  8327,  8328,  8334,  8339,  8346,  8359,  8371,  8378,
    8383,  8391,  8404,  8418,  8420,  8423,  8424,  8431,  8433,  8437,
    8438,  8441,  8441,  8442,  8442,  8443,  8443,  8444,  8444,  8445,
    8446,  8447,  8448,  8449,  8450,  8451,  8452,  8453,  8454,  8455,
    8456,  8457,  8458,  8459,  8460,  8461,  8462,  8463,  8464,  8465,
    8466,  8467,  8472,  8473,  8477,  8478,  8482,  8492,  8502,  8515,
    8530,  8543,  8556,  8568,  8569,  8578,  8579,  8588,  8613,  8615,
    8622,  8626,  8629,  8630,  8633,  8654,  8655,  8659,  8663,  8667,
    8674,  8675,  8678,  8679,  8683,  8684,  8690,  8696,  8702,  8712,
    8711,  8721,  8722,  8726,  8727,  8728,  8732,  8733,  8734,  8738,
    8739,  8743,  8753,  8760,  8770,  8779,  8793,  8794,  8799,  8798,
    8833,  8834,  8835,  8839,  8839,  8863,  8864,  8868,  8869,  8870,
    8874,  8881,  8888,  8895,  8902,  8909,  8915,  8929,  8944,  8946,
    8951,  8953,  8955,  8967,  8977,  8990,  8992,  8994,  8999,  9004,
    9006,  9008,  9014,  9015,  9021,  9022,  9024,  9030,  9029,  9044,
    9045,  9049,  9054,  9062,  9071,  9084,  9085,  9087,  9089,  9102,
    9100,  9174,  9173,  9183,  9211,  9218,  9225,  9182,  9247,  9251,
    9255,  9259,  9263,  9267,  9273,  9280,  9287,  9296,  9297,  9301,
    9302,  9303,  9307,  9308,  9312,  9313,  9313,  9318,  9319
};
#endif

#if YYDEBUG || YYERROR_VERBOSE
/* YYTNME[SYMBOL-NUM] -- String name of the symbol SYMBOL-NUM.
   First, the terminals, then, starting at YYNTOKENS, nonterminals. */
static const char *const yytname[] =
{
  "$end", "error", "$undefined", "END_OF_INPUT", "ABORT_SYM", "ACTION",
  "ADD", "ADDDATE_SYM", "AFTER_SYM", "AGAINST", "AGGREGATE_SYM",
  "ALGORITHM_SYM", "ALL", "ALTER", "ANALYZE_SYM", "AND_AND_SYM", "AND_SYM",
  "ANY_SYM", "AS", "ASC", "ASCII_SYM", "ASENSITIVE_SYM", "ATAN",
  "AUTO_INC", "AVG_ROW_LENGTH", "AVG_SYM", "BACKUP_SYM", "BEFORE_SYM",
  "BEGIN_SYM", "BENCHMARK_SYM", "BERKELEY_DB_SYM", "BIGINT", "BINARY",
  "BINLOG_SYM", "BIN_NUM", "BIT_AND", "BIT_OR", "BIT_SYM", "BIT_XOR",
  "BLOB_SYM", "BOOLEAN_SYM", "BOOL_SYM", "BOTH", "BTREE_SYM", "BY",
  "BYTE_SYM", "CACHE_SYM", "CALL_SYM", "CASCADE", "CASCADED", "CAST_SYM",
  "CHAIN_SYM", "CHANGE", "CHANGED", "CHARSET", "CHAR_SYM", "CHECKSUM_SYM",
  "CHECK_SYM", "CIPHER_SYM", "CLIENT_SYM", "CLOSE_SYM", "COALESCE",
  "CODE_SYM", "COLLATE_SYM", "COLLATION_SYM", "COLUMNS", "COLUMN_SYM",
  "COMMENT_SYM", "COMMITTED_SYM", "COMMIT_SYM", "COMPACT_SYM",
  "COMPRESSED_SYM", "CONCAT", "CONCAT_WS", "CONCURRENT", "CONDITION_SYM",
  "CONNECTION_SYM", "CONSISTENT_SYM", "CONSTRAINT", "CONTAINS_SYM",
  "CONTINUE_SYM", "CONVERT_SYM", "CONVERT_TZ_SYM", "COUNT_SYM", "CREATE",
  "CROSS", "CUBE_SYM", "CURDATE", "CURRENT_USER", "CURSOR_SYM", "CURTIME",
  "DATABASE", "DATABASES", "DATA_SYM", "DATETIME", "DATE_ADD_INTERVAL",
  "DATE_SUB_INTERVAL", "DATE_SYM", "DAY_HOUR_SYM", "DAY_MICROSECOND_SYM",
  "DAY_MINUTE_SYM", "DAY_SECOND_SYM", "DAY_SYM", "DEALLOCATE_SYM",
  "DECIMAL_NUM", "DECIMAL_SYM", "DECLARE_SYM", "DECODE_SYM", "DEFAULT",
  "DEFINER_SYM", "DELAYED_SYM", "DELAY_KEY_WRITE_SYM", "DELETE_SYM",
  "DESC", "DESCRIBE", "DES_DECRYPT_SYM", "DES_ENCRYPT_SYM", "DES_KEY_FILE",
  "DETERMINISTIC_SYM", "DIRECTORY_SYM", "DISABLE_SYM", "DISCARD",
  "DISTINCT", "DIV_SYM", "DOUBLE_SYM", "DO_SYM", "DROP", "DUAL_SYM",
  "DUMPFILE", "DUPLICATE_SYM", "DYNAMIC_SYM", "EACH_SYM", "ELSEIF_SYM",
  "ELT_FUNC", "ENABLE_SYM", "ENCLOSED", "ENCODE_SYM", "ENCRYPT", "END",
  "ENGINES_SYM", "ENGINE_SYM", "ENUM", "EQ", "EQUAL_SYM", "ERRORS",
  "ESCAPED", "ESCAPE_SYM", "EVENTS_SYM", "EXECUTE_SYM", "EXISTS",
  "EXIT_SYM", "EXPANSION_SYM", "EXPORT_SET", "EXTENDED_SYM", "EXTRACT_SYM",
  "FALSE_SYM", "FAST_SYM", "FETCH_SYM", "FIELD_FUNC", "FILE_SYM",
  "FIRST_SYM", "FIXED_SYM", "FLOAT_NUM", "FLOAT_SYM", "FLUSH_SYM",
  "FORCE_SYM", "FOREIGN", "FORMAT_SYM", "FOR_SYM", "FOUND_SYM",
  "FRAC_SECOND_SYM", "FROM", "FROM_UNIXTIME", "FULL", "FULLTEXT_SYM",
  "FUNCTION_SYM", "FUNC_ARG0", "FUNC_ARG1", "FUNC_ARG2", "FUNC_ARG3", "GE",
  "GEOMCOLLFROMTEXT", "GEOMETRYCOLLECTION", "GEOMETRY_SYM", "GEOMFROMTEXT",
  "GEOMFROMWKB", "GET_FORMAT", "GLOBAL_SYM", "GRANT", "GRANTS",
  "GREATEST_SYM", "GROUP", "GROUP_CONCAT_SYM", "GROUP_UNIQUE_USERS",
  "GT_SYM", "HANDLER_SYM", "HASH_SYM", "HAVING", "HELP_SYM", "HEX_NUM",
  "HIGH_PRIORITY", "HOSTS_SYM", "HOUR_MICROSECOND_SYM", "HOUR_MINUTE_SYM",
  "HOUR_SECOND_SYM", "HOUR_SYM", "IDENT", "IDENTIFIED_SYM", "IDENT_QUOTED",
  "IF", "IGNORE_SYM", "IMPORT", "INDEXES", "INDEX_SYM", "INFILE",
  "INNER_SYM", "INNOBASE_SYM", "INOUT_SYM", "INSENSITIVE_SYM", "INSERT",
  "INSERT_METHOD", "INTERVAL_SYM", "INTO", "INT_SYM", "INVOKER_SYM",
  "IN_SYM", "IS", "ISOLATION", "ISSUER_SYM", "ITERATE_SYM", "JOIN_SYM",
  "KEYS", "KEY_SYM", "KILL_SYM", "LABEL_SYM", "LANGUAGE_SYM",
  "LAST_INSERT_ID", "LAST_SYM", "LE", "LEADING", "LEAST_SYM", "LEAVES",
  "LEAVE_SYM", "LEFT", "LEVEL_SYM", "LEX_HOSTNAME", "LIKE", "LIMIT",
  "LINEFROMTEXT", "LINES", "LINESTRING", "LOAD", "LOCAL_SYM", "LOCATE",
  "LOCATOR_SYM", "LOCKS_SYM", "LOCK_SYM", "LOGS_SYM", "LOG_SYM",
  "LONGBLOB", "LONGTEXT", "LONG_NUM", "LONG_SYM", "LOOP_SYM",
  "LOW_PRIORITY", "LT", "MAKE_SET_SYM", "MASTER_CONNECT_RETRY_SYM",
  "MASTER_HOST_SYM", "MASTER_LOG_FILE_SYM", "MASTER_LOG_POS_SYM",
  "MASTER_PASSWORD_SYM", "MASTER_PORT_SYM", "MASTER_POS_WAIT",
  "MASTER_SERVER_ID_SYM", "MASTER_SSL_CAPATH_SYM", "MASTER_SSL_CA_SYM",
  "MASTER_SSL_CERT_SYM", "MASTER_SSL_CIPHER_SYM", "MASTER_SSL_KEY_SYM",
  "MASTER_SSL_SYM", "MASTER_SYM", "MASTER_USER_SYM", "MATCH",
  "MAX_CONNECTIONS_PER_HOUR", "MAX_QUERIES_PER_HOUR", "MAX_ROWS",
  "MAX_SYM", "MAX_UPDATES_PER_HOUR", "MAX_USER_CONNECTIONS_SYM",
  "MEDIUMBLOB", "MEDIUMINT", "MEDIUMTEXT", "MEDIUM_SYM", "MERGE_SYM",
  "MICROSECOND_SYM", "MIGRATE_SYM", "MINUTE_MICROSECOND_SYM",
  "MINUTE_SECOND_SYM", "MINUTE_SYM", "MIN_ROWS", "MIN_SYM",
  "MLINEFROMTEXT", "MODE_SYM", "MODIFIES_SYM", "MODIFY_SYM", "MOD_SYM",
  "MONTH_SYM", "MPOINTFROMTEXT", "MPOLYFROMTEXT", "MULTILINESTRING",
  "MULTIPOINT", "MULTIPOLYGON", "MUTEX_SYM", "NAMES_SYM", "NAME_SYM",
  "NATIONAL_SYM", "NATURAL", "NCHAR_STRING", "NCHAR_SYM", "NDBCLUSTER_SYM",
  "NE", "NEW_SYM", "NEXT_SYM", "NONE_SYM", "NOT2_SYM", "NOT_SYM",
  "NOW_SYM", "NO_SYM", "NO_WRITE_TO_BINLOG", "NULL_SYM", "NUM",
  "NUMERIC_SYM", "NVARCHAR_SYM", "OFFSET_SYM", "OJ_SYM", "OLD_PASSWORD",
  "ON", "ONE_SHOT_SYM", "ONE_SYM", "OPEN_SYM", "OPTIMIZE", "OPTION",
  "OPTIONALLY", "OR2_SYM", "ORDER_SYM", "OR_OR_SYM", "OR_SYM", "OUTER",
  "OUTFILE", "OUT_SYM", "PACK_KEYS_SYM", "PARTIAL", "PASSWORD",
  "PARAM_MARKER", "PHASE_SYM", "POINTFROMTEXT", "POINT_SYM",
  "POLYFROMTEXT", "POLYGON", "POSITION_SYM", "PRECISION", "PREPARE_SYM",
  "PREV_SYM", "PRIMARY_SYM", "PRIVILEGES", "PROCEDURE", "PROCESS",
  "PROCESSLIST_SYM", "PURGE", "QUARTER_SYM", "QUERY_SYM", "QUICK",
  "RAID_0_SYM", "RAID_CHUNKS", "RAID_CHUNKSIZE", "RAID_STRIPED_SYM",
  "RAID_TYPE", "RAND", "READS_SYM", "READ_SYM", "REAL", "RECOVER_SYM",
  "REDUNDANT_SYM", "REFERENCES", "REGEXP", "RELAY_LOG_FILE_SYM",
  "RELAY_LOG_POS_SYM", "RELAY_THREAD", "RELEASE_SYM", "RELOAD", "RENAME",
  "REPAIR", "REPEATABLE_SYM", "REPEAT_SYM", "REPLACE", "REPLICATION",
  "REQUIRE_SYM", "RESET_SYM", "RESOURCES", "RESTORE_SYM", "RESTRICT",
  "RESUME_SYM", "RETURNS_SYM", "RETURN_SYM", "REVOKE", "RIGHT",
  "ROLLBACK_SYM", "ROLLUP_SYM", "ROUND", "ROUTINE_SYM", "ROWS_SYM",
  "ROW_COUNT_SYM", "ROW_FORMAT_SYM", "ROW_SYM", "RTREE_SYM",
  "SAVEPOINT_SYM", "SECOND_MICROSECOND_SYM", "SECOND_SYM", "SECURITY_SYM",
  "SELECT_SYM", "SENSITIVE_SYM", "SEPARATOR_SYM", "SERIALIZABLE_SYM",
  "SERIAL_SYM", "SESSION_SYM", "SET", "SET_VAR", "SHARE_SYM", "SHIFT_LEFT",
  "SHIFT_RIGHT", "SHOW", "SHUTDOWN", "SIGNED_SYM", "SIMPLE_SYM", "SLAVE",
  "SMALLINT", "SNAPSHOT_SYM", "SOUNDS_SYM", "SPATIAL_SYM", "SPECIFIC_SYM",
  "SQLEXCEPTION_SYM", "SQLSTATE_SYM", "SQLWARNING_SYM", "SQL_BIG_RESULT",
  "SQL_BUFFER_RESULT", "SQL_CACHE_SYM", "SQL_CALC_FOUND_ROWS",
  "SQL_NO_CACHE_SYM", "SQL_SMALL_RESULT", "SQL_SYM", "SQL_THREAD",
  "SSL_SYM", "STARTING", "START_SYM", "STATUS_SYM", "STD_SYM",
  "STDDEV_SAMP_SYM", "STOP_SYM", "STORAGE_SYM", "STRAIGHT_JOIN",
  "STRING_SYM", "SUBDATE_SYM", "SUBJECT_SYM", "SUBSTRING",
  "SUBSTRING_INDEX", "SUM_SYM", "SUPER_SYM", "SUSPEND_SYM", "SYSDATE",
  "TABLES", "TABLESPACE", "TABLE_SYM", "TEMPORARY", "TEMPTABLE_SYM",
  "TERMINATED", "TEXT_STRING", "TEXT_SYM", "TIMESTAMP", "TIMESTAMP_ADD",
  "TIMESTAMP_DIFF", "TIME_SYM", "TINYBLOB", "TINYINT", "TINYTEXT",
  "TO_SYM", "TRAILING", "TRANSACTION_SYM", "TRIGGER_SYM", "TRIGGERS_SYM",
  "TRIM", "TRUE_SYM", "TRUNCATE_SYM", "TYPES_SYM", "TYPE_SYM",
  "UDF_RETURNS_SYM", "UDF_SONAME_SYM", "ULONGLONG_NUM", "UNCOMMITTED_SYM",
  "UNDEFINED_SYM", "UNDERSCORE_CHARSET", "UNDO_SYM", "UNICODE_SYM",
  "UNION_SYM", "UNIQUE_SYM", "UNIQUE_USERS", "UNIX_TIMESTAMP",
  "UNKNOWN_SYM", "UNLOCK_SYM", "UNSIGNED", "UNTIL_SYM", "UPDATE_SYM",
  "UPGRADE_SYM", "USAGE", "USER", "USE_FRM", "USE_SYM", "USING",
  "UTC_DATE_SYM", "UTC_TIMESTAMP_SYM", "UTC_TIME_SYM", "VAR_SAMP_SYM",
  "VALUES", "VALUE_SYM", "VARBINARY", "VARCHAR", "VARIABLES",
  "VARIANCE_SYM", "VARYING", "VIEW_SYM", "WARNINGS", "WEEK_SYM",
  "WHEN_SYM", "WHERE", "WHILE_SYM", "WITH", "WORK_SYM", "WRITE_SYM",
  "X509_SYM", "XA_SYM", "XOR", "YEARWEEK", "YEAR_MONTH_SYM", "YEAR_SYM",
  "ZEROFILL", "TABLE_REF_PRIORITY", "ELSE", "THEN_SYM", "CASE_SYM",
  "BETWEEN_SYM", "'|'", "'&'", "'-'", "'+'", "'*'", "'/'", "'%'", "'^'",
  "'~'", "NEG", "'('", "')'", "','", "'!'", "'{'", "'}'", "'@'", "'.'",
  "';'", "':'", "$accept", "query", "verb_clause", "statement",
  "deallocate", "deallocate_or_drop", "prepare", "prepare_src", "execute",
  "@1", "execute_using", "execute_var_list", "execute_var_ident", "help",
  "@2", "change", "@3", "master_defs", "master_def", "master_file_def",
  "create", "@4", "@5", "@6", "@7", "clear_privileges", "sp_name",
  "create_function_tail", "@8", "@9", "@10", "@11", "@12", "sp_a_chistics",
  "sp_c_chistics", "sp_chistic", "sp_c_chistic", "sp_suid", "call", "@13",
  "sp_cparam_list", "sp_cparams", "sp_fdparam_list", "sp_fdparams",
  "sp_init_param", "sp_fdparam", "sp_pdparam_list", "sp_pdparams",
  "sp_pdparam", "sp_opt_inout", "sp_proc_stmts", "sp_proc_stmts1",
  "sp_decls", "sp_decl", "@14", "@15", "sp_cursor_stmt", "@16",
  "sp_handler_type", "sp_hcond_list", "sp_cond", "opt_value", "sp_hcond",
  "sp_decl_idents", "sp_opt_default", "sp_proc_stmt", "@17", "@18", "@19",
  "@20", "@21", "@22", "@23", "@24", "sp_opt_fetch_noise", "sp_fetch_list",
  "sp_if", "@25", "@26", "@27", "sp_elseifs", "sp_case", "@28", "@29",
  "@30", "sp_whens", "sp_labeled_control", "@31", "sp_opt_label",
  "sp_unlabeled_control", "@32", "@33", "@34", "@35", "trg_action_time",
  "trg_event", "create2", "create2a", "@36", "create3", "@37", "@38",
  "create_select", "@39", "@40", "opt_as", "opt_create_database_options",
  "create_database_options", "create_database_option", "opt_table_options",
  "table_options", "table_option", "opt_if_not_exists",
  "opt_create_table_options", "create_table_options_space_separated",
  "create_table_options", "create_table_option", "default_charset",
  "default_collation", "storage_engines", "row_types", "raid_types",
  "merge_insert_types", "opt_select_from", "udf_func_type", "udf_type",
  "field_list", "field_list_item", "column_def", "key_def",
  "opt_check_constraint", "check_constraint", "opt_constraint",
  "constraint", "field_spec", "@41", "type", "@42", "@43", "spatial_type",
  "char", "nchar", "varchar", "nvarchar", "int_type", "real_type",
  "float_options", "precision", "field_options", "field_opt_list",
  "field_option", "opt_len", "opt_precision", "opt_attribute",
  "opt_attribute_list", "attribute", "now_or_signed_literal", "charset",
  "charset_name", "charset_name_or_default", "old_or_new_charset_name",
  "old_or_new_charset_name_or_default", "collation_name", "opt_collate",
  "collation_name_or_default", "opt_default", "opt_binary", "opt_bin_mod",
  "opt_bin_charset", "opt_primary", "references", "@44", "opt_ref_list",
  "ref_list", "opt_on_delete", "opt_on_delete_list", "opt_on_delete_item",
  "delete_option", "key_type", "constraint_key_type", "key_or_index",
  "opt_key_or_index", "keys_or_index", "opt_unique_or_fulltext", "key_alg",
  "opt_btree_or_rtree", "key_list", "key_part", "opt_ident",
  "opt_component", "string_list", "alter", "@45", "@46", "@47", "@48",
  "@49", "ident_or_empty", "alter_list", "add_column", "alter_list_item",
  "@50", "@51", "@52", "opt_column", "opt_ignore", "opt_restrict",
  "opt_place", "opt_to", "slave", "@53", "@54", "start",
  "start_transaction_opts", "slave_thread_opts", "@55",
  "slave_thread_opt_list", "slave_thread_opt", "slave_until",
  "slave_until_opts", "restore", "@56", "backup", "@57", "checksum", "@58",
  "opt_checksum_type", "repair", "@59", "opt_mi_repair_type",
  "mi_repair_types", "mi_repair_type", "analyze", "@60", "check", "@61",
  "opt_mi_check_type", "mi_check_types", "mi_check_type", "optimize",
  "@62", "opt_no_write_to_binlog", "rename", "@63", "rename_list",
  "table_to_table_list", "table_to_table", "keycache", "keycache_list",
  "assign_to_keycache", "key_cache_name", "preload", "@64", "preload_list",
  "preload_keys", "cache_keys_spec", "@65", "cache_key_list_or_empty",
  "opt_ignore_leaves", "select", "select_init", "select_paren",
  "select_init2", "@66", "select_part2", "@67", "@68", "select_into",
  "select_from", "select_options", "select_option_list", "select_option",
  "select_lock_type", "select_item_list", "select_item", "remember_name",
  "remember_end", "select_item2", "select_alias", "optional_braces",
  "expr", "@69", "bool_or_expr", "bool_term", "@70", "bool_and_expr",
  "bool_factor", "bool_test", "bool_pri", "predicate", "bit_expr",
  "bit_term", "bit_factor", "value_expr", "term", "factor", "or", "and",
  "not", "not2", "comp_op", "all_or_any", "interval_expr", "simple_expr",
  "@71", "geometry_function", "fulltext_options", "udf_expr_list",
  "udf_expr_list2", "@72", "udf_expr_list3", "udf_expr", "sum_expr", "@73",
  "@74", "@75", "opt_distinct", "opt_gconcat_separator",
  "opt_gorder_clause", "in_sum_expr", "@76", "cast_type", "expr_list",
  "@77", "expr_list2", "ident_list_arg", "ident_list", "@78",
  "ident_list2", "opt_expr", "opt_else", "when_list", "@79", "when_list2",
  "table_ref", "@80", "join_table_list", "derived_table_list",
  "join_table", "@81", "@82", "@83", "@84", "@85", "@86", "@87",
  "normal_join", "table_factor", "@88", "@89", "select_derived", "@90",
  "select_derived2", "@91", "@92", "get_select_lex", "select_derived_init",
  "opt_outer", "opt_key_definition", "key_usage_list", "@93",
  "key_list_or_empty", "key_usage_list2", "using_list", "interval",
  "interval_time_st", "date_time_type", "table_alias", "opt_table_alias",
  "opt_all", "where_clause", "@94", "having_clause", "@95", "opt_escape",
  "group_clause", "group_list", "olap_opt", "opt_order_clause",
  "order_clause", "@96", "order_list", "order_dir",
  "opt_limit_clause_init", "opt_limit_clause", "limit_clause",
  "limit_options", "limit_option", "delete_limit_clause", "ulong_num",
  "ulonglong_num", "procedure_clause", "@97", "procedure_list",
  "procedure_list2", "procedure_item", "select_var_list_init", "@98",
  "select_var_list", "select_var_ident", "into", "@99", "do", "@100",
  "drop", "@101", "table_list", "table_name", "if_exists", "opt_temporary",
  "insert", "@102", "@103", "replace", "@104", "@105",
  "insert_lock_option", "replace_lock_option", "insert2", "insert_table",
  "insert_field_spec", "@106", "fields", "insert_values", "@107", "@108",
  "values_list", "ident_eq_list", "ident_eq_value", "equal", "opt_equal",
  "no_braces", "@109", "opt_values", "values", "expr_or_default",
  "opt_insert_update", "@110", "update", "@111", "@112", "update_list",
  "update_elem", "insert_update_list", "insert_update_elem",
  "opt_low_priority", "delete", "@113", "single_multi", "@114", "@115",
  "@116", "table_wild_list", "table_wild_one", "opt_wild",
  "opt_delete_options", "opt_delete_option", "truncate", "opt_table_sym",
  "show", "@117", "show_param", "@118", "@119", "show_engine_param",
  "master_or_binary", "opt_storage", "opt_db", "opt_full", "from_or_in",
  "binlog_in", "binlog_from", "wild_and_where", "describe", "@120", "@121",
  "describe_command", "opt_extended_describe", "opt_describe_column",
  "flush", "@122", "flush_options", "flush_option", "@123",
  "opt_table_list", "reset", "@124", "reset_options", "reset_option",
  "purge", "@125", "purge_options", "purge_option", "kill", "@126",
  "kill_option", "use", "load", "@127", "load_data", "@128", "@129",
  "@130", "opt_local", "load_data_lock", "opt_duplicate", "opt_field_term",
  "field_term_list", "field_term", "opt_line_term", "line_term_list",
  "line_term", "opt_ignore_lines", "opt_field_or_var_spec",
  "fields_or_vars", "field_or_var", "opt_load_data_set_spec",
  "text_literal", "text_string", "param_marker", "signed_literal",
  "literal", "NUM_literal", "insert_ident", "table_wild", "order_ident",
  "simple_ident", "simple_ident_nospvar", "simple_ident_q", "field_ident",
  "table_ident", "table_ident_nodb", "IDENT_sys", "TEXT_STRING_sys",
  "TEXT_STRING_literal", "TEXT_STRING_filesystem", "ident", "label_ident",
  "ident_or_text", "user", "keyword", "keyword_sp", "set", "@131",
  "opt_option", "option_value_list", "option_type_value", "@132",
  "option_type", "option_type2", "opt_var_type", "opt_var_ident_type",
  "ext_option_value", "sys_option_value", "option_value",
  "internal_variable_name", "isolation_types", "text_or_password",
  "set_expr_or_default", "lock", "@133", "table_or_tables",
  "table_lock_list", "table_lock", "lock_option", "unlock", "@134",
  "handler", "@135", "handler_read_or_scan", "handler_scan_function",
  "handler_rkey_function", "@136", "handler_rkey_mode", "revoke",
  "revoke_command", "grant", "grant_command", "opt_table",
  "grant_privileges", "opt_privileges", "object_privilege_list",
  "object_privilege", "@137", "@138", "@139", "@140", "opt_and",
  "require_list", "require_list_element", "grant_ident", "user_list",
  "grant_list", "grant_user", "opt_column_list", "column_list",
  "column_list_id", "require_clause", "grant_options", "grant_option_list",
  "grant_option", "begin", "@141", "opt_work", "opt_chain", "opt_release",
  "opt_savepoint", "commit", "rollback", "savepoint", "release",
  "union_clause", "union_list", "@142", "union_opt",
  "union_order_or_limit", "@143", "order_or_limit", "union_option",
  "singlerow_subselect", "singlerow_subselect_init", "exists_subselect",
  "exists_subselect_init", "in_subselect", "in_subselect_init",
  "subselect_start", "subselect_end", "view_or_trigger_or_sp",
  "view_or_trigger_or_sp_tail", "definer", "view_replace_or_algorithm",
  "view_replace", "view_algorithm", "view_algorithm_opt", "view_suid",
  "view_tail", "@144", "view_list_opt", "view_list", "view_select",
  "view_check_option", "trigger_tail", "@145", "sp_tail", "@146", "@147",
  "@148", "@149", "@150", "xa", "xid", "begin_or_start",
  "opt_join_or_resume", "opt_one_phase", "opt_suspend", "@151",
  "opt_migrate", 0
};
#endif

# ifdef YYPRINT
/* YYTOKNUM[YYLEX-NUM] -- Internal token number corresponding to
   token YYLEX-NUM.  */
static const unsigned short int yytoknum[] =
{
       0,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,   746,   747,   748,   749,   750,   751,   752,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
     785,   786,   787,   788,   789,   790,   791,   792,   793,   794,
     795,   796,   797,   798,   799,   800,   801,   802,   803,   804,
     124,    38,    45,    43,    42,    47,    37,    94,   126,   805,
      40,    41,    44,    33,   123,   125,    64,    46,    59,    58
};
# endif

/* YYR1[YYN] -- Symbol number of symbol that rule YYN derives.  */
static const unsigned short int yyr1[] =
{
       0,   570,   571,   571,   572,   572,   573,   573,   573,   573,
     573,   573,   573,   573,   573,   573,   573,   573,   573,   573,
     573,   573,   573,   573,   573,   573,   573,   573,   573,   573,
     573,   573,   573,   573,   573,   573,   573,   573,   573,   573,
     573,   573,   573,   573,   573,   573,   573,   573,   573,   573,
     573,   573,   573,   574,   575,   575,   576,   577,   577,   579,
     578,   580,   580,   581,   581,   582,   584,   583,   586,   585,
     587,   587,   588,   588,   588,   588,   588,   588,   588,   588,
     588,   588,   588,   588,   589,   589,   589,   589,   591,   590,
     592,   590,   593,   590,   594,   590,   590,   595,   596,   596,
     597,   598,   599,   600,   601,   602,   597,   603,   603,   604,
     604,   605,   605,   605,   605,   605,   605,   605,   606,   606,
     606,   607,   607,   609,   608,   610,   610,   611,   611,   612,
     612,   613,   613,   614,   615,   616,   616,   617,   617,   618,
     619,   619,   619,   619,   620,   620,   621,   621,   622,   622,
     624,   623,   623,   625,   623,   623,   627,   626,   628,   628,
     629,   629,   630,   630,   631,   631,   632,   632,   632,   632,
     632,   633,   633,   634,   634,   636,   635,   637,   635,   638,
     635,   639,   635,   640,   641,   635,   635,   642,   635,   635,
     635,   635,   643,   635,   635,   644,   644,   644,   645,   645,
     647,   648,   649,   646,   650,   650,   650,   652,   653,   654,
     651,   655,   655,   655,   657,   656,   658,   658,   660,   659,
     659,   661,   662,   659,   663,   659,   664,   664,   665,   665,
     665,   666,   666,   666,   666,   667,   668,   667,   669,   670,
     669,   671,   669,   673,   674,   672,   675,   675,   676,   676,
     677,   677,   678,   678,   679,   679,   680,   680,   681,   682,
     682,   683,   683,   684,   684,   685,   685,   685,   686,   686,
     686,   686,   686,   686,   686,   686,   686,   686,   686,   686,
     686,   686,   686,   686,   686,   686,   686,   686,   686,   686,
     686,   687,   688,   689,   690,   690,   690,   690,   690,   690,
     691,   691,   691,   692,   692,   692,   693,   693,   694,   694,
     695,   695,   695,   695,   696,   696,   697,   697,   698,   698,
     699,   699,   699,   699,   699,   700,   700,   701,   702,   702,
     703,   705,   704,   706,   706,   706,   706,   706,   706,   706,
     706,   706,   706,   706,   706,   706,   706,   706,   706,   706,
     706,   706,   706,   706,   706,   706,   706,   706,   706,   706,
     706,   706,   706,   706,   706,   706,   706,   706,   707,   706,
     708,   706,   706,   706,   709,   709,   709,   709,   709,   709,
     709,   709,   710,   711,   711,   712,   712,   713,   713,   713,
     713,   713,   714,   714,   714,   714,   714,   715,   715,   715,
     716,   716,   716,   717,   718,   718,   719,   719,   720,   720,
     720,   721,   721,   722,   722,   723,   723,   724,   724,   725,
     725,   725,   725,   725,   725,   725,   725,   725,   725,   725,
     726,   726,   727,   727,   728,   728,   729,   729,   730,   730,
     731,   731,   732,   733,   733,   734,   734,   735,   735,   736,
     736,   736,   736,   736,   736,   737,   737,   738,   738,   738,
     738,   739,   739,   741,   740,   742,   742,   743,   743,   744,
     744,   745,   745,   746,   746,   746,   746,   746,   747,   747,
     747,   747,   747,   748,   748,   748,   749,   749,   750,   750,
     751,   751,   752,   752,   752,   753,   753,   753,   753,   754,
     754,   754,   755,   755,   755,   756,   756,   757,   757,   758,
     758,   759,   759,   760,   760,   762,   761,   763,   761,   764,
     761,   765,   761,   766,   761,   767,   767,   768,   768,   768,
     768,   768,   769,   770,   770,   770,   771,   770,   772,   773,
     770,   770,   770,   770,   770,   770,   770,   770,   770,   770,
     770,   770,   770,   770,   774,   774,   775,   775,   776,   776,
     776,   777,   777,   777,   778,   778,   778,   778,   780,   779,
     779,   781,   779,   779,   782,   783,   783,   785,   784,   786,
     786,   787,   787,   787,   788,   788,   789,   789,   791,   790,
     793,   792,   795,   794,   796,   796,   796,   798,   797,   799,
     799,   800,   800,   801,   801,   801,   803,   802,   805,   804,
     806,   806,   807,   807,   808,   808,   808,   808,   808,   808,
     810,   809,   811,   811,   811,   813,   812,   812,   814,   814,
     815,   815,   816,   817,   818,   818,   819,   820,   820,   822,
     821,   823,   823,   824,   826,   825,   827,   827,   828,   828,
     829,   830,   830,   831,   831,   833,   832,   835,   836,   834,
     837,   837,   837,   837,   837,   838,   838,   839,   839,   840,
     840,   841,   841,   841,   841,   841,   841,   841,   841,   841,
     841,   842,   842,   842,   843,   843,   843,   844,   845,   846,
     847,   847,   848,   848,   848,   848,   848,   849,   849,   851,
     850,   852,   852,   853,   854,   853,   855,   855,   856,   856,
     857,   857,   857,   857,   857,   857,   857,   858,   858,   858,
     858,   858,   858,   859,   859,   859,   859,   859,   859,   859,
     859,   859,   859,   859,   859,   860,   860,   861,   861,   862,
     862,   862,   863,   863,   863,   863,   863,   864,   864,   864,
     864,   864,   864,   865,   865,   866,   866,   867,   867,   868,
     868,   869,   869,   870,   870,   870,   870,   870,   870,   871,
     871,   872,   873,   873,   873,   873,   873,   873,   873,   873,
     873,   873,   873,   873,   873,   873,   873,   873,   873,   873,
     873,   873,   873,   873,   873,   873,   873,   873,   873,   873,
     873,   873,   873,   873,   873,   873,   873,   873,   873,   873,
     873,   873,   873,   873,   873,   873,   873,   873,   873,   873,
     873,   873,   873,   873,   873,   873,   873,   873,   873,   873,
     873,   873,   873,   873,   873,   873,   873,   873,   873,   873,
     873,   873,   873,   873,   873,   873,   873,   873,   873,   873,
     873,   873,   873,   873,   873,   873,   873,   873,   873,   873,
     873,   873,   873,   873,   873,   873,   873,   873,   873,   873,
     873,   873,   873,   873,   873,   873,   873,   873,   873,   873,
     873,   873,   873,   873,   873,   873,   873,   873,   873,   873,
     873,   873,   873,   873,   873,   873,   873,   873,   873,   873,
     873,   873,   873,   874,   873,   873,   873,   873,   873,   873,
     873,   873,   873,   873,   873,   873,   873,   873,   873,   875,
     875,   875,   875,   875,   875,   875,   875,   875,   875,   875,
     875,   875,   875,   875,   875,   875,   875,   875,   875,   875,
     875,   875,   875,   875,   875,   876,   876,   876,   877,   877,
     879,   878,   880,   880,   881,   882,   882,   882,   882,   882,
     882,   882,   883,   884,   882,   882,   882,   882,   882,   882,
     882,   882,   882,   882,   882,   882,   885,   882,   886,   886,
     887,   887,   888,   888,   890,   889,   891,   891,   891,   891,
     891,   891,   891,   891,   891,   891,   891,   893,   892,   894,
     894,   895,   895,   897,   896,   898,   898,   899,   899,   900,
     900,   902,   901,   903,   903,   904,   905,   904,   906,   907,
     907,   908,   908,   909,   908,   910,   908,   911,   908,   908,
     912,   908,   913,   908,   908,   914,   908,   915,   908,   908,
     916,   916,   916,   918,   917,   919,   917,   917,   917,   921,
     920,   923,   924,   922,   925,   926,   927,   927,   928,   928,
     928,   928,   930,   929,   931,   931,   932,   932,   932,   933,
     933,   934,   934,   934,   934,   934,   934,   934,   934,   934,
     934,   934,   934,   934,   935,   935,   935,   935,   935,   935,
     935,   935,   935,   936,   936,   936,   936,   937,   937,   937,
     938,   938,   939,   939,   940,   941,   940,   942,   943,   942,
     944,   944,   945,   945,   946,   946,   947,   947,   947,   948,
     948,   950,   949,   951,   951,   952,   952,   952,   953,   953,
     954,   954,   955,   956,   956,   956,   957,   957,   957,   957,
     958,   958,   959,   959,   959,   959,   959,   959,   960,   960,
     960,   960,   960,   961,   962,   961,   963,   963,   964,   964,
     965,   967,   966,   968,   968,   969,   969,   971,   970,   970,
     970,   973,   972,   974,   975,   974,   974,   974,   974,   974,
     974,   974,   976,   976,   977,   978,   978,   979,   979,   981,
     982,   980,   984,   985,   983,   986,   986,   986,   986,   987,
     987,   988,   988,   989,   990,   990,   990,   991,   990,   992,
     992,   993,   993,   994,   993,   995,   993,   996,   996,   997,
     997,   998,   999,   999,  1000,  1000,  1002,  1001,  1003,  1003,
    1004,  1004,  1005,  1005,  1006,  1007,  1006,  1009,  1010,  1008,
    1011,  1011,  1012,  1013,  1013,  1014,  1015,  1015,  1017,  1016,
    1019,  1018,  1020,  1018,  1021,  1018,  1022,  1022,  1023,  1023,
    1024,  1024,  1025,  1025,  1026,  1026,  1026,  1027,  1028,  1028,
    1030,  1029,  1031,  1031,  1031,  1031,  1031,  1032,  1031,  1031,
    1031,  1031,  1031,  1033,  1031,  1031,  1031,  1031,  1031,  1031,
    1031,  1031,  1031,  1031,  1031,  1031,  1031,  1031,  1031,  1031,
    1031,  1031,  1031,  1031,  1031,  1031,  1031,  1031,  1031,  1031,
    1031,  1031,  1031,  1031,  1031,  1031,  1034,  1034,  1035,  1035,
    1036,  1036,  1037,  1037,  1038,  1038,  1039,  1039,  1040,  1040,
    1041,  1041,  1042,  1042,  1042,  1044,  1043,  1045,  1043,  1046,
    1046,  1047,  1047,  1048,  1048,  1048,  1050,  1049,  1051,  1051,
    1053,  1052,  1052,  1052,  1052,  1052,  1052,  1052,  1052,  1052,
    1052,  1052,  1054,  1054,  1056,  1055,  1057,  1057,  1058,  1058,
    1058,  1060,  1059,  1061,  1062,  1062,  1064,  1063,  1065,  1065,
    1065,  1066,  1068,  1067,  1067,  1070,  1071,  1072,  1069,  1069,
    1073,  1073,  1074,  1074,  1074,  1075,  1075,  1075,  1076,  1076,
    1077,  1077,  1078,  1078,  1078,  1078,  1079,  1079,  1080,  1080,
    1081,  1081,  1082,  1082,  1083,  1083,  1083,  1084,  1084,  1085,
    1085,  1086,  1086,  1087,  1087,  1087,  1087,  1088,  1088,  1088,
    1089,  1090,  1090,  1090,  1091,  1091,  1091,  1091,  1091,  1091,
    1091,  1091,  1091,  1091,  1091,  1091,  1092,  1092,  1092,  1092,
    1092,  1093,  1093,  1094,  1094,  1095,  1096,  1096,  1097,  1097,
    1098,  1098,  1098,  1099,  1099,  1099,  1099,  1100,  1100,  1100,
    1101,  1102,  1102,  1103,  1104,  1105,  1106,  1106,  1107,  1107,
    1108,  1108,  1108,  1109,  1109,  1109,  1110,  1110,  1110,  1110,
    1110,  1110,  1110,  1110,  1110,  1110,  1110,  1110,  1110,  1110,
    1110,  1110,  1110,  1110,  1110,  1110,  1110,  1110,  1110,  1110,
    1110,  1110,  1110,  1110,  1110,  1110,  1110,  1110,  1110,  1110,
    1110,  1110,  1111,  1111,  1111,  1111,  1111,  1111,  1111,  1111,
    1111,  1111,  1111,  1111,  1111,  1111,  1111,  1111,  1111,  1111,
    1111,  1111,  1111,  1111,  1111,  1111,  1111,  1111,  1111,  1111,
    1111,  1111,  1111,  1111,  1111,  1111,  1111,  1111,  1111,  1111,
    1111,  1111,  1111,  1111,  1111,  1111,  1111,  1111,  1111,  1111,
    1111,  1111,  1111,  1111,  1111,  1111,  1111,  1111,  1111,  1111,
    1111,  1111,  1111,  1111,  1111,  1111,  1111,  1111,  1111,  1111,
    1111,  1111,  1111,  1111,  1111,  1111,  1111,  1111,  1111,  1111,
    1111,  1111,  1111,  1111,  1111,  1111,  1111,  1111,  1111,  1111,
    1111,  1111,  1111,  1111,  1111,  1111,  1111,  1111,  1111,  1111,
    1111,  1111,  1111,  1111,  1111,  1111,  1111,  1111,  1111,  1111,
    1111,  1111,  1111,  1111,  1111,  1111,  1111,  1111,  1111,  1111,
    1111,  1111,  1111,  1111,  1111,  1111,  1111,  1111,  1111,  1111,
    1111,  1111,  1111,  1111,  1111,  1111,  1111,  1111,  1111,  1111,
    1111,  1111,  1111,  1111,  1111,  1111,  1111,  1111,  1111,  1111,
    1111,  1111,  1111,  1111,  1111,  1111,  1111,  1111,  1111,  1111,
    1111,  1111,  1111,  1111,  1111,  1111,  1111,  1111,  1111,  1111,
    1111,  1111,  1111,  1111,  1111,  1111,  1111,  1111,  1111,  1111,
    1111,  1111,  1111,  1111,  1111,  1111,  1111,  1111,  1111,  1111,
    1111,  1111,  1111,  1111,  1111,  1111,  1111,  1111,  1111,  1111,
    1111,  1111,  1111,  1111,  1111,  1111,  1111,  1111,  1111,  1111,
    1111,  1111,  1111,  1111,  1113,  1112,  1114,  1114,  1115,  1115,
    1117,  1116,  1118,  1118,  1118,  1118,  1119,  1119,  1120,  1120,
    1120,  1120,  1121,  1121,  1121,  1121,  1122,  1122,  1123,  1123,
    1124,  1124,  1124,  1124,  1124,  1124,  1124,  1125,  1125,  1125,
    1126,  1126,  1126,  1126,  1127,  1127,  1127,  1128,  1128,  1128,
    1128,  1128,  1130,  1129,  1131,  1131,  1132,  1132,  1133,  1134,
    1134,  1134,  1134,  1136,  1135,  1137,  1137,  1138,  1137,  1139,
    1139,  1140,  1140,  1141,  1141,  1141,  1141,  1142,  1141,  1143,
    1143,  1143,  1143,  1143,  1144,  1145,  1145,  1145,  1145,  1146,
    1147,  1147,  1147,  1148,  1148,  1149,  1149,  1150,  1150,  1151,
    1151,  1153,  1152,  1154,  1152,  1155,  1152,  1156,  1152,  1152,
    1152,  1152,  1152,  1152,  1152,  1152,  1152,  1152,  1152,  1152,
    1152,  1152,  1152,  1152,  1152,  1152,  1152,  1152,  1152,  1152,
    1152,  1152,  1157,  1157,  1158,  1158,  1159,  1159,  1159,  1160,
    1160,  1160,  1160,  1161,  1161,  1162,  1162,  1163,  1163,  1163,
    1164,  1164,  1165,  1165,  1166,  1167,  1167,  1167,  1167,  1167,
    1168,  1168,  1169,  1169,  1170,  1170,  1170,  1170,  1170,  1172,
    1171,  1173,  1173,  1174,  1174,  1174,  1175,  1175,  1175,  1176,
    1176,  1177,  1178,  1178,  1179,  1180,  1181,  1181,  1183,  1182,
    1184,  1184,  1184,  1186,  1185,  1187,  1187,  1188,  1188,  1188,
    1189,  1190,  1191,  1192,  1193,  1194,  1195,  1196,  1197,  1197,
    1198,  1198,  1198,  1199,  1199,  1200,  1200,  1200,  1201,  1202,
    1202,  1202,  1203,  1203,  1204,  1204,  1204,  1206,  1205,  1207,
    1207,  1208,  1208,  1209,  1209,  1210,  1210,  1210,  1210,  1212,
    1211,  1214,  1213,  1215,  1216,  1217,  1218,  1213,  1219,  1219,
    1219,  1219,  1219,  1219,  1220,  1220,  1220,  1221,  1221,  1222,
    1222,  1222,  1223,  1223,  1224,  1225,  1224,  1226,  1226
};

/* YYR2[YYN] -- Number of symbols composing right hand side of rule YYN.  */
static const unsigned char yyr2[] =
{
       0,     2,     1,     2,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     3,     1,     1,     4,     1,     2,     0,
       4,     0,     2,     3,     1,     2,     0,     3,     0,     5,
       1,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     1,     3,     3,     3,     3,     0,     7,
       0,    11,     0,     6,     0,     3,     4,     0,     3,     1,
       4,     0,     0,     0,     0,     0,    12,     0,     2,     0,
       2,     2,     2,     2,     2,     3,     3,     1,     1,     1,
       2,     3,     3,     0,     6,     0,     1,     3,     1,     0,
       1,     3,     1,     0,     3,     0,     1,     3,     1,     4,
       0,     1,     1,     1,     0,     3,     2,     3,     0,     3,
       0,     5,     5,     0,     7,     5,     0,     2,     1,     1,
       1,     3,     1,     3,     0,     1,     1,     1,     1,     2,
       1,     1,     3,     0,     2,     0,     2,     0,     3,     0,
       5,     0,     6,     0,     0,     8,     1,     0,     2,     2,
       2,     2,     0,     6,     2,     0,     2,     1,     1,     3,
       0,     0,     0,     7,     0,     2,     2,     0,     0,     0,
       7,     0,     2,     2,     0,     5,     0,     1,     0,     5,
       4,     0,     0,     8,     0,     7,     1,     1,     1,     1,
       1,     2,     2,     2,     4,     4,     0,     4,     0,     0,
       5,     0,     7,     0,     0,     6,     0,     1,     0,     1,
       1,     2,     1,     1,     0,     1,     1,     2,     1,     0,
       3,     0,     1,     1,     2,     1,     2,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     5,     1,     1,     3,     4,     4,
       3,     4,     4,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     2,     0,     1,
       1,     1,     1,     1,     1,     3,     1,     1,     2,     2,
       6,     7,     8,     2,     2,     0,     1,     2,     0,     1,
       2,     0,     4,     3,     3,     3,     1,     4,     1,     1,
       5,     2,     5,     2,     4,     1,     5,     5,     4,     3,
       1,     1,     2,     1,     1,     2,     1,     1,     1,     2,
       3,     2,     3,     2,     2,     3,     3,     3,     0,     6,
       0,     6,     2,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     2,     2,     1,     2,     1,     2,
       3,     2,     1,     1,     1,     1,     1,     1,     1,     2,
       0,     3,     1,     5,     0,     1,     2,     1,     1,     1,
       1,     0,     3,     0,     1,     0,     1,     2,     1,     1,
       2,     2,     4,     1,     3,     2,     1,     2,     2,     2,
       2,     1,     2,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     0,     2,     1,     1,     0,     1,     0,
       2,     1,     2,     3,     2,     0,     1,     0,     1,     1,
       2,     0,     1,     0,     4,     1,     4,     3,     1,     0,
       1,     2,     1,     3,     3,     2,     2,     2,     1,     1,
       2,     2,     2,     1,     2,     2,     2,     2,     1,     1,
       0,     1,     1,     1,     1,     0,     1,     1,     1,     0,
       2,     2,     1,     1,     1,     4,     2,     1,     4,     0,
       1,     0,     2,     1,     3,     0,     6,     0,     5,     0,
       5,     0,     5,     0,    11,     0,     1,     0,     2,     2,
       1,     3,     2,     3,     2,     4,     0,     6,     0,     0,
       8,     4,     4,     3,     3,     2,     2,     6,     5,     3,
       5,     1,     1,     1,     0,     1,     0,     1,     0,     1,
       1,     0,     2,     1,     0,     1,     1,     1,     0,     5,
       3,     0,     5,     3,     3,     0,     3,     0,     2,     1,
       3,     0,     1,     1,     0,     2,     1,     3,     0,     6,
       0,     6,     0,     5,     0,     1,     1,     0,     6,     0,
       1,     1,     2,     1,     1,     1,     0,     6,     0,     5,
       0,     1,     1,     2,     1,     1,     1,     1,     1,     2,
       0,     6,     0,     1,     1,     0,     4,     4,     3,     5,
       1,     3,     3,     5,     1,     3,     2,     1,     1,     0,
       6,     1,     3,     3,     0,     2,     0,     4,     0,     2,
       1,     2,     4,     2,     3,     0,     3,     0,     0,     6,
       2,     1,     1,     2,     2,     8,     4,     0,     1,     2,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     0,     2,     4,     3,     1,     1,     4,     0,     0,
       1,     1,     0,     2,     2,     1,     1,     0,     2,     0,
       3,     0,     3,     3,     0,     3,     0,     3,     2,     1,
       3,     4,     3,     4,     3,     4,     1,     3,     4,     3,
       3,     4,     1,     5,     6,     3,     4,     5,     6,     4,
       4,     5,     3,     4,     1,     3,     1,     3,     1,     3,
       3,     1,     3,     3,     4,     4,     1,     3,     3,     3,
       3,     3,     1,     3,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     2,     1,     3,     1,     1,     4,     2,     5,     1,
       3,     2,     2,     2,     2,     3,     5,     6,     2,     1,
       4,     7,     4,     2,     6,     6,     6,     6,     4,     4,
       3,     4,     6,     8,     6,     8,     6,     4,     6,     4,
       6,     4,     4,     4,     4,     6,     8,     2,     2,     4,
       2,     7,     7,     3,     4,     4,     6,     6,     4,     6,
       6,     6,     4,     6,     4,     6,     8,    10,    12,     6,
       4,     6,     6,     1,     6,     4,     8,    10,     4,     1,
       3,     4,     6,     6,     8,     6,     6,     4,     6,     6,
       8,     4,     4,     6,     4,     2,     4,     4,     4,     6,
       4,     4,     3,     8,     6,     4,     6,     3,     6,     8,
       4,     8,     6,     8,     6,     8,     2,     4,     4,     4,
       6,     8,     8,     4,     7,     7,     7,     6,     6,     6,
       6,     6,     6,     0,     5,    10,     3,     4,     3,     2,
       2,     2,     4,     6,     4,     4,     6,     6,     6,     6,
       4,     6,     4,     6,     4,     4,     4,     4,     6,     4,
       6,     4,     6,     4,     4,     6,     4,     6,     4,     6,
       4,     4,     6,     4,     6,     0,     3,     3,     0,     1,
       0,     2,     1,     3,     4,     4,     5,     4,     4,     4,
       5,     4,     0,     0,     7,    10,     4,     5,     4,     5,
       4,     4,     4,     4,     4,     5,     0,     8,     0,     1,
       0,     2,     0,     1,     0,     3,     2,     3,     2,     1,
       2,     1,     2,     1,     1,     1,     2,     0,     2,     1,
       3,     1,     3,     0,     2,     1,     3,     0,     1,     0,
       2,     0,     2,     3,     5,     1,     0,     2,     1,     1,
       3,     3,     3,     0,     6,     0,     6,     0,     8,     4,
       0,     8,     0,    10,     6,     0,     8,     0,    10,     6,
       1,     2,     2,     0,     4,     0,    11,     3,     6,     0,
       3,     0,     0,     5,     0,     1,     0,     1,     0,     2,
       2,     2,     0,     5,     0,     1,     3,     1,     1,     1,
       3,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     0,     1,     1,
       0,     2,     0,     1,     0,     0,     3,     0,     0,     3,
       2,     0,     0,     4,     4,     2,     0,     2,     2,     0,
       1,     0,     4,     4,     2,     0,     1,     1,     0,     1,
       0,     1,     2,     1,     3,     3,     1,     1,     1,     1,
       0,     2,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     0,     0,     6,     0,     1,     3,     1,
       2,     0,     2,     3,     1,     2,     1,     0,     6,     3,
       2,     0,     3,     6,     0,     6,     4,     4,     4,     4,
       5,     3,     1,     3,     1,     0,     2,     0,     1,     0,
       0,     8,     0,     0,     6,     0,     1,     1,     1,     1,
       1,     2,     1,     1,     1,     3,     4,     0,     3,     3,
       1,     2,     2,     0,     3,     0,     5,     3,     1,     3,
       1,     3,     1,     1,     0,     1,     0,     4,     0,     1,
       3,     1,     1,     1,     0,     0,     6,     0,     0,    11,
       3,     1,     3,     3,     1,     3,     0,     1,     0,     4,
       0,     6,     0,     5,     0,     6,     1,     3,     3,     5,
       0,     2,     0,     2,     1,     1,     1,     3,     0,     1,
       0,     3,     2,     4,     4,     4,     4,     0,     4,     6,
      16,     2,     2,     0,     6,     5,     2,     2,     2,     1,
       5,     5,     2,     2,     3,     2,     2,     2,     3,     2,
       2,     2,     1,     1,     3,     4,     3,     3,     2,     2,
       3,     3,     3,     3,     3,     3,     1,     1,     1,     1,
       0,     1,     0,     2,     0,     1,     1,     1,     0,     2,
       0,     2,     0,     2,     2,     0,     4,     0,     4,     1,
       1,     0,     1,     0,     1,     1,     0,     4,     3,     1,
       0,     3,     4,     2,     1,     1,     1,     1,     1,     1,
       1,     1,     0,     1,     0,     3,     3,     1,     1,     1,
       2,     0,     3,     3,     2,     2,     0,     4,     0,     1,
       1,     2,     0,     4,     5,     0,     0,     0,    16,     2,
       0,     1,     0,     1,     1,     0,     1,     1,     0,     2,
       2,     1,     3,     4,     3,     3,     0,     2,     2,     1,
       3,     3,     0,     3,     0,     3,     2,     3,     1,     1,
       2,     0,     2,     1,     1,     2,     2,     1,     1,     1,
       1,     1,     2,     2,     1,     1,     1,     1,     1,     1,
       1,     2,     2,     2,     2,     2,     1,     1,     1,     1,
       1,     1,     1,     3,     5,     1,     1,     1,     1,     1,
       3,     4,     5,     1,     5,     3,     2,     1,     3,     2,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     3,     2,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     0,     4,     0,     1,     1,     3,
       0,     2,     1,     1,     1,     1,     0,     1,     0,     1,
       1,     1,     0,     2,     2,     2,     1,     2,     4,     5,
       4,     6,     2,     3,     3,     3,     5,     1,     3,     3,
       2,     2,     2,     1,     1,     4,     4,     1,     1,     1,
       1,     1,     0,     4,     1,     1,     1,     3,     3,     1,
       1,     2,     2,     0,     3,     4,     3,     0,     7,     1,
       2,     1,     1,     1,     1,     1,     1,     0,     5,     1,
       1,     1,     1,     1,     3,     6,     6,     6,     7,     3,
       8,     8,     8,     0,     1,     1,     2,     0,     1,     1,
       3,     0,     3,     0,     3,     0,     3,     0,     3,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       2,     2,     1,     3,     2,     2,     2,     2,     2,     2,
       2,     2,     0,     1,     3,     1,     2,     2,     2,     1,
       3,     3,     1,     1,     3,     1,     3,     4,     5,     1,
       0,     3,     3,     1,     1,     0,     2,     2,     2,     2,
       0,     2,     2,     1,     2,     2,     2,     2,     2,     0,
       3,     0,     1,     0,     3,     2,     0,     1,     2,     0,
       1,     4,     4,     5,     2,     3,     0,     1,     0,     4,
       0,     1,     1,     0,     2,     2,     1,     0,     1,     1,
       3,     1,     3,     1,     3,     1,     2,     1,     2,     3,
       1,     1,     1,     0,     3,     1,     2,     1,     2,     3,
       3,     3,     0,     1,     0,     3,     3,     0,     8,     0,
       3,     1,     3,     3,     5,     0,     3,     4,     4,     0,
      14,     0,     6,     0,     0,     0,     0,    12,     4,     4,
       3,     4,     3,     2,     1,     3,     5,     1,     1,     0,
       1,     1,     0,     2,     0,     0,     3,     0,     2
};

/* YYDEFACT[STATE-NAME] -- Default rule to reduce with in state
   STATE-NUM when YYTABLE doesn't specify something else to do.  Zero
   means the default is an error.  */
static const unsigned short int yydefact[] =
{
       0,     2,  1952,   622,     0,  1899,     0,     0,     0,     0,
       0,  1901,    94,    54,  1248,  1339,  1340,  1171,  1187,     0,
     622,    97,     0,    66,  1189,  1376,     0,     0,   622,     0,
    1371,     0,     0,   622,  1192,  1364,     0,    97,  1901,     0,
     657,  1736,  1270,     0,     0,     0,  1268,  1793,  1237,     0,
       0,     0,     0,     0,     4,    15,     0,    32,    20,    24,
      10,    14,     9,     6,    46,    47,    39,     8,    12,    36,
       7,    11,    29,    35,    30,    31,    43,   650,    18,    19,
      25,    37,    50,    16,    48,    45,    17,  1341,    21,    38,
      33,    26,    51,    27,    44,    28,    49,    23,    40,    22,
       5,    13,    41,    42,    34,    52,     0,   525,     0,   557,
       0,     0,  1953,  1943,   624,   623,     0,  1785,  1784,   590,
    1901,     0,  1522,  1523,  1524,  1525,  1526,  1527,  1528,  1487,
    1529,  1530,  1531,  1488,  1489,  1532,  1533,  1534,  1536,  1535,
    1537,  1490,  1491,  1538,  1539,  1540,  1492,  1493,  1541,  1542,
    1494,  1543,  1544,  1545,  1495,  1546,  1496,  1547,  1548,  1549,
    1550,  1497,  1551,  1552,  1553,  1554,  1555,  1498,  1556,  1557,
    1558,  1559,  1574,  1560,  1499,  1561,  1562,  1563,  1575,  1500,
    1566,  1565,  1564,  1567,  1568,  1569,  1501,  1570,  1571,  1572,
    1577,  1578,  1579,  1502,  1573,  1580,  1576,  1719,  1582,  1581,
    1583,  1585,  1584,  1503,  1586,  1504,  1587,  1588,  1471,  1589,
    1472,  1591,  1592,  1595,  1596,  1590,  1593,  1594,  1505,  1598,
    1599,  1600,  1601,  1602,  1603,  1604,  1614,  1607,  1609,  1610,
    1612,  1608,  1613,  1617,  1616,  1618,  1619,  1620,  1615,  1606,
    1611,  1621,  1622,  1605,  1623,  1624,  1625,  1626,  1627,  1628,
    1629,  1630,  1632,  1631,  1633,  1634,  1635,  1636,  1637,  1639,
    1638,  1640,  1641,  1642,  1644,  1643,  1645,  1506,  1646,  1647,
    1648,  1649,  1650,  1507,  1651,  1652,  1653,  1654,  1655,  1656,
    1508,  1657,  1658,  1659,  1660,  1661,  1662,  1663,  1664,  1665,
    1666,  1667,  1668,  1669,  1670,  1671,  1672,  1597,  1673,  1509,
    1674,  1675,  1510,  1676,  1511,  1677,  1678,  1512,  1679,  1680,
    1681,  1682,  1683,  1684,  1513,  1685,  1514,  1687,  1686,  1688,
    1690,  1691,  1515,  1689,  1516,  1692,  1693,  1695,  1694,  1696,
    1697,  1517,  1698,  1518,  1699,  1700,  1701,  1702,  1703,  1704,
    1705,  1706,  1707,  1708,  1709,  1712,  1713,  1714,  1715,  1710,
    1711,  1519,  1716,  1717,  1718,  1720,  1721,  1520,  1722,  1723,
    1724,  1725,  1728,  1726,  1727,  1729,  1730,  1731,  1732,  1521,
    1733,   123,  1476,    99,  1477,  1486,     0,   592,   608,  1902,
    1903,   259,   497,   498,   258,   496,    97,  1943,     0,   255,
     256,     0,  1262,   997,  1185,  1185,     0,  1185,  1188,     0,
      97,  1185,     0,    59,  1346,     0,     0,     0,     0,  1470,
       0,  1195,  1378,  1382,     0,     0,  1782,     0,     0,     0,
       0,    97,   625,     0,  1246,     0,   588,     0,  1903,  1914,
     651,   655,   667,  1737,  1734,  1324,   577,   577,   577,   575,
     577,  1269,     0,     0,  1246,  1381,  1987,     0,     0,     0,
    1983,     0,  1988,     0,   657,     0,     0,     1,     3,     0,
    1571,  1337,  1335,  1467,     0,   517,   526,   521,   519,     0,
       0,  1954,   606,     0,  1900,     0,   634,   644,     0,     0,
      68,     0,     0,     0,  1906,     0,     0,     0,     0,    95,
     308,  1943,  1945,  1947,   259,   257,     0,  1266,  1265,  1264,
       0,  1262,  1172,     0,     0,     0,     0,     0,     0,  1181,
       0,     0,  1185,    61,     0,  1827,  1842,  1843,  1839,  1844,
    1845,  1849,     0,  1841,  1833,     0,  1848,  1837,  1846,     0,
    1831,     0,  1847,  1852,  1835,  1840,  1819,     0,  1825,  1829,
    1469,  1097,  1796,  1797,     0,  1482,  1473,  1481,  1480,    67,
    1197,  1198,  1196,   556,  1379,  1380,     0,  1392,     0,     0,
       0,   620,     0,  1319,  1318,     0,  1372,  1915,     0,     0,
     597,  1200,  1247,     0,  1199,  1369,     0,  1368,  1365,  1367,
       0,  1827,  1814,     0,  1909,  1906,  1916,   680,   673,   672,
     675,   676,   679,   677,   678,   674,   671,   688,   668,   670,
    1740,     0,     0,   433,     0,  1332,     0,     0,     0,  1332,
       0,  1128,  1325,     0,  1749,  1303,   494,   493,     0,   492,
    1750,  1302,  1318,     0,     0,     0,  1289,     0,  1751,     0,
    1321,     0,  1128,  1332,     0,  1271,     0,     0,     0,     0,
     571,   581,   573,   568,     0,   574,   570,  1267,  1184,  1794,
     556,  1429,  1428,  1474,  1984,  1427,  1992,  1994,  1980,  1982,
    1989,   653,     0,  1920,    53,     0,  1343,  1950,  1951,  1949,
     447,   107,   107,   515,     0,     0,     0,     0,     0,  1182,
       0,     0,   636,   646,   125,    98,     0,   594,   610,  1905,
       0,     0,  1907,  1911,   760,   759,     0,    92,   697,  1483,
    1879,    96,  1875,  1948,   309,   688,   688,   688,  1938,     0,
    1940,  1941,  1942,  1954,  1946,     0,   499,     0,  1249,  1252,
    1256,  1260,  1263,  1523,  1487,     0,  1531,     0,     0,  1440,
       0,     0,     0,     0,  1492,     0,     0,  1544,     0,     0,
    1497,     0,     0,     0,   697,   697,   697,     0,     0,     0,
    1554,  1555,  1449,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1437,     0,  1450,     0,     0,     0,     0,
       0,     0,     0,  1582,     0,     0,  1583,     0,     0,     0,
    1439,  1588,     0,     0,     0,     0,     0,     0,     0,  1601,
       0,     0,  1447,     0,     0,  1003,     0,  1627,  1629,     0,
       0,     0,  1633,     0,     0,  1634,  1635,  1636,  1424,   762,
       0,   697,  1436,  1446,  1648,  1653,  1430,     0,  1655,     0,
    1656,     0,  1661,     0,     0,     0,     0,     0,     0,  1683,
    1685,     0,     0,  1701,     0,     0,     0,   697,  1712,  1713,
    1714,  1715,     0,  1438,  1519,  1448,     0,     0,     0,  1724,
     697,   697,   697,     0,     0,     0,  1730,     0,  1733,  1007,
       0,     0,     0,     0,   761,     0,     0,     0,   999,   699,
     704,   709,   716,   722,   734,   736,   738,   741,   746,   752,
       0,   849,   754,   843,   779,   998,  1434,   775,   774,  1435,
     772,  1457,  1476,  1423,  1456,   789,   657,  1186,  1176,  1177,
       0,  1178,  1873,  1179,   558,     0,     0,    60,  1360,  1354,
    1356,  1359,  1355,     0,  1361,  1358,  1357,  1785,  1347,  1349,
    1350,  1828,  1826,  1860,  1859,     0,  1861,  1857,  1850,  1880,
    1854,  1880,  1856,  1855,  1880,  1851,  1858,  1880,  1823,     0,
    1098,  1099,     0,  1795,     0,  1468,     0,  1377,  1393,     0,
    1394,  1383,  1390,   639,     0,  1097,  1783,  1786,     0,     0,
      56,    57,     0,   627,     0,   626,   630,     0,     0,     0,
    1203,  1193,  1202,  1370,     0,     0,  1826,  1823,  1910,     0,
    1912,  1927,   656,  1917,   686,   658,   685,     0,   669,  1735,
    1738,  1746,  1301,  1328,   432,     0,     0,  1300,  1286,     0,
     259,     0,     0,     0,     0,  1272,  1277,   293,     0,  1293,
    1129,     0,  1332,     0,  1295,  1308,  1296,     0,  1322,     0,
    1332,  1282,  1309,  1322,  1287,  1292,  1299,  1326,  1327,     0,
    1281,  1288,     0,  1297,  1322,  1322,  1332,  1332,   584,   583,
     582,   578,   579,   584,     0,  1043,     0,     0,  1981,  1995,
    1979,  1990,  1991,  1978,   654,  1921,   652,  1922,     0,  1338,
    1336,  1344,  1345,   448,   518,   447,   250,   253,   252,     0,
     522,   520,   447,  1944,     0,     0,   610,     0,     0,   638,
     633,   637,   635,   489,   488,   491,     0,   645,     0,   126,
     128,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    69,    70,    83,   596,
     595,   593,   618,   617,   615,     0,   616,   614,   609,   611,
     612,  1904,  1908,   260,   447,     0,  1485,     0,     0,     0,
       0,     0,     0,     0,  1939,    88,     0,     0,     0,  1254,
    1250,  1260,     0,     0,     0,  1097,     0,     0,     0,  1102,
       0,   793,  1102,  1102,  1102,     0,     0,   997,   997,     0,
     997,     0,     0,     0,     0,  1102,   817,   820,     0,   818,
       0,     0,     0,     0,     0,  1443,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   788,   657,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   997,     0,     0,
       0,     0,   978,     0,     0,     0,     0,   771,     0,     0,
       0,     0,   997,     0,     0,     0,     0,  1003,     0,  1001,
       0,  1102,     0,     0,  1102,     0,     0,     0,     0,     0,
     997,   997,   997,   708,     0,   865,     0,     0,     0,     0,
       0,   997,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1102,  1102,     0,     0,     0,  1102,     0,   886,
       0,  1445,     0,     0,     0,  1444,     0,     0,  1442,  1441,
    1425,     0,     0,     0,   909,   911,   910,  1102,     0,  1102,
       0,     0,     0,  1008,     0,   782,   781,   783,  1936,     0,
       0,  1752,   777,     0,     0,   701,   706,   763,     0,   764,
     765,     0,   766,   767,   768,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   784,  1072,  1073,  1074,  1075,  1084,
    1087,  1076,  1077,  1078,  1086,  1079,  1080,  1081,  1088,  1089,
    1090,  1082,  1091,  1085,  1083,  1092,     0,  1071,     0,     0,
       0,  1426,   903,     0,  1931,     0,  1174,     0,   560,   559,
    1180,   558,     0,    62,    64,  1353,     0,     0,  1362,  1853,
       0,  1834,  1838,  1832,  1836,     0,     0,  1824,     0,  1830,
    1101,  1578,  1643,     0,  1104,  1799,  1190,  1389,  1391,     0,
       0,  1384,     0,     0,   610,    58,     0,     0,  1373,     0,
       0,     0,     0,   599,  1201,     0,  1366,     0,     0,     0,
       0,     0,  1913,  1929,  1928,  1918,   688,  1119,   689,   691,
     690,  1456,  1740,  1743,  1744,  1747,  1745,     0,  1742,  1741,
    1756,     0,  1330,  1333,  1334,     0,     0,  1311,  1310,  1306,
    1307,     0,  1138,  1139,  1137,  1132,  1133,  1136,  1315,  1313,
    1304,     0,  1332,     0,  1314,  1312,  1332,  1322,     0,  1332,
    1332,  1294,  1298,     0,   572,   581,   569,   576,  1055,  1054,
       0,  1019,     0,  1018,  1016,  1015,     0,  1054,  1985,  1993,
    1997,     0,  1128,  1926,  1924,   251,  1224,  1224,     0,     0,
       0,     0,     0,     0,     0,   108,   117,   554,   554,  1224,
    1224,   554,  1224,  1224,  1224,     0,     0,  1224,     0,     0,
     554,     0,  1224,   552,     0,     0,  1224,  1224,  1224,   554,
    1224,  1224,  1224,  1224,  1224,   564,  1224,  1224,  1224,   551,
     263,   285,   286,   516,     0,   530,   553,  1955,  1956,   523,
     607,   591,  1183,     0,   124,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   619,   613,    93,   698,  1484,     0,  1876,  1973,
       0,     0,  1957,   261,   502,   504,   503,   501,   500,     0,
       0,  1104,     0,  1257,  1043,  1261,  1260,  1258,     0,     0,
       0,  1103,  1102,     0,   984,  1146,  1147,  1143,  1144,  1142,
    1145,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   962,     0,   984,     0,   823,
       0,     0,     0,     0,     0,     0,  1456,     0,     0,     0,
       0,     0,  1933,     0,     0,     0,     0,     0,     0,   800,
       0,     0,     0,     0,     0,     0,     0,  1095,  1093,  1096,
    1094,     0,     0,   979,   976,     0,     0,     0,     0,   850,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1004,  1005,  1102,     0,     0,     0,  1102,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   872,     0,     0,     0,
       0,     0,   877,     0,     0,     0,     0,     0,     0,     0,
    1102,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   906,     0,   908,     0,     0,  1459,  1458,
       0,     0,     0,     0,  1011,   785,   997,     0,     0,     0,
       0,     0,     0,     0,   703,   700,   705,   719,   712,   717,
     710,   714,     0,   769,  1528,   720,     0,   997,   725,   657,
    1111,   732,     0,     0,   735,     0,     0,     0,     0,   737,
     739,   740,   743,   849,   742,   849,   750,   751,   747,   748,
     749,   753,     0,   773,   780,  1000,   950,  1460,  1937,  1930,
    1175,  1874,  1173,    65,     0,     0,  1348,  1363,  1351,  1884,
       0,  1883,  1869,  1872,  1467,     0,     0,     0,  1809,  1803,
    1810,  1812,  1806,  1811,  1813,  1804,  1805,  1800,  1807,  1105,
    1130,     0,     0,   640,   641,   644,     0,  1789,  1790,  1788,
    1787,   621,  1375,  1374,     0,   628,   631,   632,   604,   603,
     605,   598,   600,   601,   243,  1207,     0,     0,     0,  1213,
    1194,  1204,   589,     0,     0,     0,     0,     0,   684,  1043,
    1161,   681,   662,  1130,  1120,   661,   692,     0,  1739,     0,
    1710,  1767,     0,     0,     0,     0,     0,  1757,  1329,     0,
    1283,     0,  1305,  1317,  1316,  1278,     0,     0,     0,  1276,
    1323,  1275,  1104,  1322,  1273,  1274,   586,   585,   580,  1054,
    1043,     0,     0,  1040,  1056,     0,  1056,  1043,  1043,     0,
    1043,  1017,  1097,  1051,     0,     0,  1996,  1121,  1925,  1222,
    1223,  1225,     0,     0,   111,   114,   112,     0,   113,     0,
       0,   555,   509,   490,   490,   534,     0,   325,   509,   483,
     532,     0,     0,     0,     0,     0,     0,     0,     0,  1224,
       0,   545,   528,     0,     0,     0,     0,   546,     0,   529,
    1224,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     567,   566,   565,     0,     0,     0,     0,   264,   447,   328,
       0,   561,   325,   331,  1463,  1959,  1068,     0,  1067,   127,
      76,    72,    84,  1151,  1152,  1150,  1148,  1149,    85,    74,
      75,    79,    78,    80,    81,    82,    77,    73,    86,    87,
      71,     0,  1877,     0,   227,   226,     0,  1971,  1959,     0,
     328,    89,  1395,   262,   265,    90,  1043,  1119,  1260,  1104,
       0,  1097,     0,   792,   807,     0,     0,   955,     0,     0,
     957,   958,   959,     0,   811,     0,   809,   812,   813,   814,
     997,     0,     0,     0,     0,   997,   961,     0,   819,     0,
       0,   824,   825,     0,   798,     0,   832,     0,   834,     0,
     997,     0,   828,     0,  1932,     0,     0,   997,     0,   840,
       0,   801,     0,     0,   941,     0,   924,   920,     0,   922,
       0,     0,   997,   997,     0,   845,     0,     0,   851,   997,
       0,   943,     0,   925,     0,   857,     0,   997,     0,  1002,
       0,     0,     0,   968,   861,   862,     0,   966,   927,     0,
       0,   864,   929,     0,   931,     0,   926,   933,   934,   866,
     868,   867,   936,     0,     0,   938,     0,   940,     0,   870,
     871,     0,     0,     0,   875,     0,   997,   880,   970,   972,
       0,     0,     0,     0,     0,   974,   887,   889,     0,     0,
       0,   888,     0,     0,     0,     0,     0,     0,     0,   893,
       0,     0,   907,   973,   799,   971,   912,     0,   915,     0,
     914,  1009,     0,     0,   790,  1753,  1754,  1755,   511,   776,
    1461,   756,   755,     0,   758,   757,     0,   713,   718,   711,
     715,   721,     0,  1935,     0,     0,   730,   729,     0,   997,
     726,  1111,   733,     0,   745,   744,   848,     0,   949,   688,
     950,     0,    63,  1352,  1881,     0,     0,     0,     0,     0,
       0,     0,     0,  1798,  1131,  1234,  1475,  1385,     0,   648,
    1791,  1792,     0,   602,   667,     0,  1226,  1211,  1218,  1212,
       0,     0,     0,  1210,  1452,  1451,  1458,  1916,     0,     0,
       0,     0,  1919,  1104,  1104,     0,     0,  1170,     0,     0,
       0,   659,   664,   660,   663,     0,   687,   696,   695,  1453,
    1460,     0,     0,     0,     0,   435,   437,   436,   443,     0,
     434,     0,     0,  1752,     0,   439,   441,   440,  1762,   438,
    1331,  1128,  1291,  1290,  1135,  1134,     0,  1285,  1332,     0,
    1923,  1049,     0,  1042,  1041,  1057,     0,  1043,  1056,  1056,
       0,  1022,  1021,  1238,  1241,     0,  1020,  1058,  1047,   667,
    1986,  1998,     0,   446,   445,   292,   442,   291,   116,   115,
     121,   122,   330,   510,   484,   485,     0,     0,     0,   490,
     324,   509,   323,   326,   499,     0,   275,   272,   536,   278,
     274,   290,     0,     0,   279,   509,   543,   544,   558,   268,
       0,   304,   305,   303,   287,   270,   271,   538,   277,   276,
     273,   282,   283,   301,   300,   281,   302,   549,   299,   297,
     294,   296,   295,   298,   280,   269,     0,   531,     0,   314,
     316,   317,  1466,     0,   563,   533,     0,   318,   319,     0,
       0,     0,     0,   647,     0,  1878,  1974,   230,   228,   229,
       0,     0,     0,   233,     0,   231,     0,     0,  1397,  1396,
     232,   246,   447,   266,     0,  1104,  1140,  1253,  1259,     0,
       0,     0,   956,   985,     0,   411,   411,   995,   993,   400,
     411,   989,   994,   991,     0,     0,     0,     0,     0,     0,
       0,   963,   960,     0,     0,     0,  1460,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   982,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   945,  1006,   969,   967,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   975,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1012,   786,     0,   778,   702,
     707,   723,  1934,  1110,   727,     0,   731,     0,   904,     0,
     951,   952,     0,  1462,  1882,  1871,  1870,  1885,  1885,  1885,
       0,  1106,     0,  1191,  1395,   642,     0,   643,   629,   688,
    1208,  1220,     0,  1228,     0,     0,  1205,  1215,     0,     0,
       0,  1214,     0,  1816,  1817,  1815,  1130,  1112,  1169,  1167,
       0,  1162,  1164,  1166,   682,     0,   694,   693,     0,  1769,
       0,  1768,  1780,  1781,  1778,  1779,  1777,  1758,     0,  1764,
    1763,     0,     0,     0,  1774,  1765,     0,     0,  1284,     0,
    1279,   587,     0,  1043,  1056,  1043,  1029,     0,     0,  1043,
    1025,  1023,  1027,     0,  1104,     0,     0,     0,     0,  1044,
     688,  1455,  1122,  1125,   327,   509,   486,   487,   499,     0,
       0,     0,     0,   443,   288,   542,   541,   289,     0,     0,
     535,   328,   562,   463,   396,   345,   336,   411,   339,   338,
     382,   353,   350,   400,   398,   368,   400,   400,   375,   374,
     392,   378,   358,   449,   449,   357,   395,   449,   379,   377,
     381,     0,   383,   400,   388,   376,   380,   397,   373,   370,
     394,   411,   411,   351,   354,   393,   449,     0,   386,   411,
     415,   356,   449,   455,     0,     0,   411,   413,  1465,  1961,
       0,     0,  1066,   140,   688,     0,   101,  1972,     0,     0,
     236,   261,   247,     0,   267,     0,  1255,     0,  1251,   771,
     804,   808,   917,     0,   986,   449,     0,   996,   402,   988,
     990,   992,   794,   810,   815,   919,   797,   796,     0,     0,
       0,     0,   830,   833,   835,   826,   831,   829,     0,   918,
     842,   839,   841,   802,     0,   942,   921,   923,   844,   855,
     980,   983,     0,     0,     0,   856,   852,   944,   853,     0,
     858,   827,   859,     0,     0,     0,     0,   928,   863,   930,
     932,   937,   935,   939,   869,   806,     0,   874,   876,   787,
     771,   878,     0,   884,   882,     0,     0,   890,     0,     0,
     899,     0,   897,     0,   898,     0,   900,   901,     0,   913,
     916,  1010,   795,     0,     0,   512,   724,   728,   689,   688,
     902,     0,  1890,  1890,  1890,  1233,  1232,     0,  1231,  1235,
       0,   649,   244,     0,     0,     0,  1229,  1217,  1920,  1206,
    1209,  1460,  1818,   666,     0,  1107,  1398,  1165,     0,     0,
    1454,     0,     0,  1773,  1759,   444,     0,     0,     0,     0,
    1760,     0,  1097,  1050,     0,     0,  1015,  1043,  1043,     0,
    1015,     0,     0,     0,  1240,  1119,  1242,  1062,  1060,  1061,
    1059,  1052,     0,  1126,  1127,  1124,     0,     0,     0,   548,
       0,   561,   550,   415,   284,   315,   469,     0,     0,   355,
     404,   399,     0,   404,   404,   455,   457,   451,   455,     0,
     364,   382,   359,     0,   449,   372,   363,   384,   387,   389,
     391,   404,     0,   449,   352,   361,     0,   404,   423,     0,
       0,     0,   419,     0,   462,     0,   426,   332,   416,   418,
       0,     0,   385,     0,   341,   456,     0,   343,     0,     0,
     404,     0,   414,   404,     0,  1960,     0,   688,   688,  1965,
     143,   141,   142,     0,   136,   138,   133,     0,   312,   313,
     311,   310,     0,   129,  1965,   234,  1920,  1395,     0,   239,
       0,  1125,   507,  1141,     0,     0,   987,     0,     0,   964,
     821,   822,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   791,     0,     0,     0,     0,     0,     0,
       0,   896,   894,   895,     0,  1013,     0,   692,   953,     0,
       0,  1889,  1887,     0,  1888,  1886,  1862,     0,  1821,  1822,
    1820,  1808,     0,     0,  1386,  1130,  1219,  1221,  1227,  1216,
       0,  1108,  1119,     0,  1406,  1163,   683,  1771,  1770,  1772,
    1766,     0,     0,     0,     0,  1048,  1043,  1030,     0,  1034,
    1039,  1035,     0,  1026,  1024,     0,  1140,     0,  1130,  1125,
       0,     0,     0,     0,     0,     0,     0,     0,   547,  1431,
     537,   539,     0,     0,     0,   464,   465,   470,   472,     0,
       0,   408,   409,   410,   365,   405,   407,     0,   367,   335,
     450,   458,   459,     0,   454,   452,   455,   360,   390,   366,
       0,   362,     0,   349,   429,   428,   697,   421,   431,     0,
       0,   427,   417,   425,   420,     0,     0,     0,     0,   333,
       0,   334,  1464,  1962,   657,     0,     0,   524,  1975,   140,
       0,     0,     0,     0,   130,   132,   133,  1958,   237,   235,
       0,  1916,    91,     0,   506,     0,   805,   412,   401,     0,
     816,   836,     0,   803,   981,   977,  1102,   846,     0,   854,
     860,   947,   946,   873,   879,   883,   881,   885,   891,   892,
     997,     0,   954,  1868,  1867,  1866,  1863,     0,     0,     0,
       0,     0,     0,  1891,  1893,  1230,     0,     0,   245,   681,
     306,  1116,  1125,     0,  1130,     0,     0,     0,     0,  1399,
    1401,     0,  1168,  1776,  1775,  1761,     0,     0,     0,     0,
       0,     0,     0,  1069,  1239,  1064,  1053,  1123,     0,     0,
     320,  1433,  1432,   561,   475,   476,   477,     0,     0,     0,
     468,   471,   344,   337,   406,     0,   513,   460,   453,     0,
     348,   430,   697,   424,   449,   455,   449,   455,  1963,     0,
       0,     0,     0,   109,   137,     0,   688,   100,   102,     0,
       0,   241,   240,  1125,     0,     0,     0,     0,     0,     0,
    1014,  1864,  1894,  1897,  1895,  1896,  1898,  1892,     0,     0,
     307,     0,     0,  1113,  1115,  1109,  1153,     0,     0,     0,
       0,  1400,     0,     0,  1407,  1409,     0,  1045,  1031,     0,
    1036,     0,  1028,     0,     0,  1065,     0,   321,   540,   479,
       0,   478,     0,   473,   474,   469,     0,   449,     0,   449,
     422,   340,   342,   346,   347,  1920,     0,  1966,     0,  1976,
     139,     0,     0,   131,   134,  1920,   505,   508,   403,   837,
       0,   965,   847,   905,  1236,  1244,     0,  1387,  1117,  1118,
    1125,     0,   665,  1404,  1405,     0,  1402,     0,     0,  1408,
       0,     0,     0,     0,  1070,  1063,   322,   481,   482,   480,
     466,   467,   369,   514,   371,  1964,  1967,  1968,   119,   118,
     110,     0,   175,     0,   103,   242,     0,     0,     0,  1398,
    1114,  1154,  1403,  1411,  1410,     0,     0,  1033,  1038,   120,
       0,   195,   179,     0,     0,     0,   177,   183,  1977,     0,
       0,   186,  1478,     0,  1479,  1969,     0,   838,  1243,  1245,
    1406,     0,     0,  1046,   194,   197,     0,     0,   200,   190,
     189,   191,     0,   181,     0,   176,   218,   175,   175,   221,
     188,   214,   175,   104,  1412,   688,     0,   196,     0,     0,
       0,   178,   207,     0,   148,   175,     0,   175,     0,     0,
    1970,   109,     0,  1414,     0,     0,  1157,  1159,     0,   192,
       0,     0,     0,     0,   184,   144,     0,     0,   146,   224,
       0,   216,   105,     0,     0,  1421,  1160,  1155,   688,  1280,
       0,   180,   201,     0,     0,   207,     0,   175,     0,   220,
     147,     0,   222,   215,   217,   175,  1413,  1416,     0,     0,
    1418,  1419,     0,  1388,  1158,   193,   198,   175,   182,   208,
       0,   159,   158,     0,   150,   171,   219,     0,   149,     0,
     175,   106,  1420,  1415,     0,  1422,     0,   175,   175,     0,
       0,     0,     0,     0,     0,   145,     0,   175,  1417,   199,
     204,   175,   185,   153,   172,   173,     0,   156,   225,     0,
     200,   175,   203,   211,     0,     0,   151,   164,   152,   162,
     155,     0,   223,   205,   175,   207,   175,   210,   170,   168,
     175,   166,   160,     0,   167,   174,   165,     0,   157,   213,
     175,     0,   154,   169,   163,   161
};

/* YYDEFGOTO[NTERM-NUM]. */
static const short int yydefgoto[] =
{
      -1,    52,    53,    54,    55,    56,    57,   960,    58,   513,
     907,  1363,  1364,    59,   410,    60,   686,  1106,  1107,  1108,
      61,  1573,  2434,  1124,   387,   405,   371,  2727,  2993,  3362,
    3446,  3491,  3535,  1070,  3359,  1495,  3410,  1496,    62,   478,
    1088,  1089,  3163,  3164,  3160,  3165,  2983,  2984,  2985,  2986,
    3527,  3485,  3505,  3528,  3572,  3594,  3600,  3601,  3553,  3610,
    3611,  3617,  3612,  3554,  3596,  3486,  3439,  3462,  3458,  3482,
    3464,  3525,  3440,  3520,  3457,  3545,  3479,  3480,  3547,  3580,
    3592,  3502,  3503,  3568,  3593,  3607,  3441,  3489,  3533,  3470,
    3484,  3488,  3560,  3531,  2016,  2420,  2021,  2425,  2996,  2430,
    3171,  3365,  1849,  2244,  3055,  2733,  1064,  1065,  1066,   388,
     389,   390,   486,  2022,  1529,  2023,  2024,  1531,  1532,  1006,
    2394,  2385,  2374,  3218,   707,  2992,  2398,  2399,  2400,  2401,
    2352,  2353,  1936,  1937,  1982,  2409,  2710,  2922,  2942,  2711,
    2712,  2713,  2714,  2715,  2716,  2717,  2747,  2748,  3114,  3115,
    3116,  2744,  2973,  2957,  2958,  2959,  3137,  2929,  2287,  2288,
    2297,  2298,  2334,  2609,  2335,  1069,  2930,  2967,  3124,  2960,
    2408,  2916,  3105,  3259,  3106,  3107,  3108,  3343,  1938,  2351,
    1085,  1086,   634,   391,  1138,  1577,  3000,  3001,  2342,  2538,
    3265,    63,  1072,   670,   672,   671,  1985,   465,  1533,  1534,
    1535,  2652,  2658,  3253,  1940,   111,  1360,  2405,  1973,    64,
    1043,  1038,    65,   645,   640,   641,  1041,  1042,  1464,  1897,
      66,   580,    67,   473,    68,   481,  1111,    69,   968,  1841,
    1842,  1843,    70,   677,    71,   482,  1118,  1119,  1120,    72,
     958,   116,    73,   569,   963,   965,   966,    74,   475,   476,
    1080,    75,  1390,  1823,  1824,   682,   683,  1087,  2567,    76,
      77,   456,   430,   586,   431,   432,  1417,  1861,  3219,   597,
     598,   599,  2271,   985,   986,   987,  1866,  1418,  2276,  1126,
    2846,  1295,  1745,   869,  1296,  1746,   870,   871,   872,   873,
     874,   875,   876,   877,   878,   879,  2193,  2196,  2961,   880,
    1305,  1756,   881,   882,  1786,   883,  2796,  2217,  2218,  2219,
    2550,  2551,   884,  2055,  2759,  2093,  1654,  3015,  2780,  1593,
    2038,  2454,   502,   503,   885,  1218,  1219,  1220,  1671,  1284,
    2533,  2181,  2182,  2535,  1471,  1911,  1472,  1473,  1474,  2892,
    2891,  2893,  3238,  3078,  3240,  3082,  1908,  1475,  1476,  3391,
    2310,  2623,  2328,  2329,  3088,  1899,  1477,  2316,  2639,  2898,
    3087,  3334,  1987,  3242,  1346,  1347,  1651,   942,   943,  1594,
    1820,  2232,  3062,  3223,  2206,  2865,  3221,  3313,  1863,  1864,
    2332,  2642,  2905,  1009,  3220,  2234,  1445,  1446,  2738,  3599,
    1998,  3382,  3451,  3495,  3496,  3497,  2267,  2268,  2591,  2592,
    1865,  2866,    78,   393,    79,  1790,   678,   679,   505,   402,
      80,   411,  1821,    81,   424,  1405,   553,   573,   971,   972,
    1850,  2245,  2252,  1851,  2257,  2858,  2247,  2570,  2571,  1921,
    1922,  2248,  2573,  2855,  2847,  2848,  2563,  3053,    82,   444,
    2634,  2323,  2324,  3374,  3375,   574,    83,   392,   718,  1581,
    1143,  1580,   719,   720,  1145,   500,   501,    84,   442,    85,
     435,   635,  1441,  2301,  1885,   565,   637,  1452,   638,  1453,
    1432,  1880,   997,    86,   666,   665,    87,   461,  1060,    88,
     514,   918,   919,  1368,  1798,    89,   425,   578,   579,    90,
     419,   566,  1398,    91,   412,   556,    92,    93,   557,   951,
    2564,  3217,  3419,  1389,   952,  2431,  3064,  3229,  3230,  3232,
    3324,  3325,  3493,  3515,  3539,  3540,  3543,   886,   654,   887,
    3098,   888,   889,  2253,  2254,  2643,   890,  3376,   891,  1983,
     648,   408,   892,   547,   893,  2237,   894,  3443,   699,   700,
     374,   375,    94,   600,   434,   989,   990,   991,  1427,  1428,
     639,  1741,  1429,  1430,  1877,  1872,  2874,  2615,  2607,    95,
     560,   920,   956,   957,  1829,    96,   443,    97,   944,  1384,
    1385,  1817,  2231,  1818,    98,   582,    99,   536,  1378,   537,
     922,   538,   539,   934,   929,   937,   931,  3207,  3045,  3046,
    1805,   903,   701,   702,  1371,  1800,  1801,  2842,  3048,  3213,
    3214,   100,   120,   380,   484,   693,   979,   101,   102,   103,
     104,   982,  1055,  1857,  1056,  1057,  1058,  1484,  1415,   895,
    1355,  1185,  1633,  1758,  2204,   896,  1789,   489,   708,   471,
     491,   492,   112,   113,   709,   710,  2018,  2412,  2720,  2979,
    3157,   711,  3472,   712,  2421,  2013,  2723,  3283,  3412,   105,
     656,   453,  1053,  1048,  1050,  1480,  1916
};

/* YYPACT[STATE-NUM] -- Index in YYTABLE of the portion describing
   STATE-NUM.  */
#define YYPACT_NINF -3181
static const int yypact[] =
{
    4340, -3181,   177,   571,   731, -3181,   187, 40224,   125,   731,
     731,  -151,   434, -3181, -3181, -3181, -3181, -3181,   208, 40224,
     571, -3181, 19746, -3181, -3181, -3181,   231,   731,   571, 40224,
   -3181,     0,   786,   571, -3181, -3181,   731, -3181,  -151, 40224,
   -3181,   477, -3181,   728,   -53,   392,   379, -3181, -3181, 40224,
     384,   -91,   856,   997, -3181, -3181,   500, -3181, -3181, -3181,
   -3181, -3181, -3181, -3181, -3181, -3181, -3181, -3181, -3181, -3181,
   -3181, -3181, -3181, -3181, -3181, -3181, -3181, -3181, -3181, -3181,
   -3181, -3181, -3181, -3181, -3181, -3181, -3181, 20286, -3181, -3181,
   -3181, -3181, -3181, -3181, -3181, -3181, -3181, -3181, -3181, -3181,
   -3181, -3181, -3181, -3181, -3181, -3181,   815, 40224, 40224, -3181,
   40224,   548, -3181,   763, -3181, -3181,   731, -3181, -3181, -3181,
    -151, 19746, -3181, -3181, -3181, -3181, -3181, -3181, -3181, -3181,
   -3181, -3181, -3181, -3181, -3181, -3181, -3181, -3181, -3181, -3181,
   -3181, -3181, -3181, -3181, -3181, -3181, -3181, -3181, -3181, -3181,
   -3181, -3181, -3181, -3181, -3181, -3181, -3181, -3181, -3181, -3181,
   -3181, -3181, -3181, -3181, -3181, -3181, -3181, -3181, -3181, -3181,
   -3181, -3181, -3181, -3181, -3181, -3181, -3181, -3181, -3181, -3181,
   -3181, -3181, -3181, -3181, -3181, -3181, -3181, -3181, -3181, -3181,
   -3181, -3181, -3181, -3181, -3181, -3181, -3181, -3181, -3181, -3181,
   -3181, -3181, -3181, -3181, -3181, -3181, -3181, -3181, -3181, -3181,
   -3181, -3181, -3181, -3181, -3181, -3181, -3181, -3181, -3181, -3181,
   -3181, -3181, -3181, -3181, -3181, -3181, -3181, -3181, -3181, -3181,
   -3181, -3181, -3181, -3181, -3181, -3181, -3181, -3181, -3181, -3181,
   -3181, -3181, -3181, -3181, -3181, -3181, -3181, -3181, -3181, -3181,
   -3181, -3181, -3181, -3181, -3181, -3181, -3181, -3181, -3181, -3181,
   -3181, -3181, -3181, -3181, -3181, -3181, -3181, -3181, -3181, -3181,
   -3181, -3181, -3181, -3181, -3181, -3181, -3181, -3181, -3181, -3181,
   -3181, -3181, -3181, -3181, -3181, -3181, -3181, -3181, -3181, -3181,
   -3181, -3181, -3181, -3181, -3181, -3181, -3181, -3181, -3181, -3181,
   -3181, -3181, -3181, -3181, -3181, -3181, -3181, -3181, -3181, -3181,
   -3181, -3181, -3181, -3181, -3181, -3181, -3181, -3181, -3181, -3181,
   -3181, -3181, -3181, -3181, -3181, -3181, -3181, -3181, -3181, -3181,
   -3181, -3181, -3181, -3181, -3181, -3181, -3181, -3181, -3181, -3181,
   -3181, -3181, -3181, -3181, -3181, -3181, -3181, -3181, -3181, -3181,
   -3181, -3181, -3181, -3181, -3181, -3181, -3181, -3181, -3181, -3181,
   -3181, -3181, -3181, -3181, -3181, -3181, -3181, -3181, -3181, -3181,
   -3181, -3181, -3181,   481, -3181, -3181,   614, -3181, -3181, -3181,
    1040,   863, -3181, -3181, -3181, -3181, -3181,   233,   640, -3181,
     676,   946,   137, -3181,   993,   993, 40224,   993, -3181, 40224,
   -3181,   993,   731, -3181, -3181,  1121, 40224,   895,   160,   465,
   35391,   972,   326, -3181,   998, 19746, -3181,   731,  1096,   213,
   40224, -3181, -3181,   731,   305,   822, -3181,  2516,   121, -3181,
   -3181, -3181,   315, -3181, -3181,  5048, -3181, -3181, -3181,   743,
   -3181, -3181, 19746,   731,  1020, -3181, -3181,   136,   136,   136,
   -3181,   136, -3181,   136, -3181,   -91,   741, -3181, -3181, 40224,
     370, -3181, -3181,   740,   581, -3181, -3181, -3181, -3181, 19746,
    1156,   860, -3181, 19746, -3181,   -13, -3181, -3181,   762, 40224,
   -3181, 19746, 19746,   183,    22,   929, 40224, 33243,   941, -3181,
     166,   763,  1313, -3181,   863, -3181, 40224, -3181, -3181, -3181,
   37002,   137, -3181, 12033,  1198, 40224, 40224,  1021, 40224, -3181,
   33243, 19746,   993,   843,  1401,  1002,   965,   703, -3181, -3181,
   -3181, -3181,  1056, -3181, -3181,   892, -3181, -3181, -3181,   257,
   -3181,    54, -3181, -3181, -3181, -3181, -3181,  1033,   816, -3181,
   -3181,   107, -3181, -3181, 40224, -3181, -3181, -3181, -3181, -3181,
   -3181, -3181, -3181,  1172, -3181, -3181, 12033,   775,  1344,  1230,
   19746, -3181,  -107, -3181, -3181,  1153, -3181, -3181, 33243, 19746,
   -3181, -3181, -3181, 17576, -3181, -3181,  1370, -3181,   864, -3181,
   19746,  1002, -3181,  1084,  1012,    22,   921, -3181, -3181, -3181,
   -3181, -3181, -3181, -3181, -3181, -3181, -3181,   884,   315, -3181,
   -3181,  1188,  1303, -3181,  1029,     5,   975,   916,   190,     5,
   35391,  1233, -3181,   132, -3181,  1316, -3181, -3181,  1035, -3181,
   -3181, -3181,  1038,  1044,  1220,  1058, -3181,   203, -3181,    57,
   -3181,   -88,  1233,     5,   185, -3181,  1262,  1398,   210,   342,
   -3181,   -29, -3181, -3181,  1463, -3181, -3181, -3181, -3181, -3181,
    1172, -3181, -3181, -3181,   982, -3181,  1224,  1091, -3181, -3181,
      46, -3181,  1010,    -8, -3181,   374, 33780, -3181, -3181, -3181,
     116, -3181, -3181, -3181, 33243,  1154,  1072, 19746,   354, -3181,
   37539, 19746, -3181,     4, 12033, -3181,  1506,   155,   124, -3181,
    1544,  1223, -3181, -3181, -3181, -3181,  1466, -3181,  1065,  1067,
    1424,  1079, -3181, -3181, -3181, -3181, -3181, -3181, -3181,  1119,
   -3181, -3181, -3181,   860, -3181, 19746,  -121, 19746, -3181,  1100,
   -3181,  1097, -3181,  1107,  1112,  1128,  1129,  1130, 14848, -3181,
    1131,  1133,  1134,  1135,  1136,  1139,  1142,  1145,  1146,  1147,
    1148,  1149,  1155,  1157,  1065,  1065,  1158,  1159,  1162,  1163,
     638,  1166, -3181,  1173,  1177,  1179,  1180,  1181,  1182,  1183,
    1184,  1185,  1186, -3181,  1189, -3181,  1190,  1191,  1192,  1193,
    1194,  1196,  1197,  1201,  1202,  1204,  1208,  1209,  1210,  1219,
   -3181,  1227,  1229,  1232, 12033,  1234,  1235,  1236,  1238,  1242,
    1247,  1248, -3181,  1249,  1251,  1253,  1256,  1257,  1258,  1260,
    1261,  1263,  1264,  1265,  1266,  1268,  1269,  1270, -3181, -3181,
   12033,  1271, -3181, -3181,  1272,  1273, -3181,  1274,  1277,  1278,
    1279,  1280,  1282,  1283,  1285,  1287,  1289,  1290,  1292,  1293,
    1295,  1297,  1301,  1302,  1304,  1305,  1307,  1310,   692,  1312,
    1314,   719,  1315, -3181,  1317, -3181,   145,  1318,  1319,  1320,
    1065,  1065,  1065,  1321,  1322,  1323,  1325,  1327,  1329, 12033,
   14848, 14848, 14848,  7529, -3181, 40224, 21906, 40224, -3181,  1174,
   -3181, -3181,  1400, -3181,   628,  1239,   903,   416,   196,  1175,
   14848,  3625,   193, -3181, -3181,  1151,  1346, -3181, -3181, -3181,
   -3181, -3181,  1331, -3181,  1226, -3181, -3181, -3181, -3181, -3181,
   19746, -3181, -3181,  1335,    83, 19746,  1332, -3181, -3181, -3181,
   -3181, -3181, -3181,  1702, -3181, -3181, -3181,  1300,  1337, -3181,
   -3181, -3181, -3181, -3181, -3181,  1393, -3181, -3181, -3181,  1341,
   -3181,  1341, -3181, -3181,  1341, -3181, -3181,  1341,   539,  2829,
   -3181, -3181, 40224, -3181, 40761, -3181, 17576, -3181, -3181,  1524,
   -3181, -3181,  1651, -3181,  1623,   140,  1343, -3181, 19746, 35391,
   -3181, -3181,   113,  1345,  1421,  1349, -3181,  1427, 19746, 19746,
   -3181, -3181, -3181, -3181,   822,   102,  1351,   623, -3181, 40224,
   -3181,   297, -3181, -3181, -3181,  1352, -3181, 12033, -3181,  1356,
   -3181,   639, -3181,  1694, -3181,  1444, 12033, -3181, -3181,  1367,
     863, 40224, 40224, 19746, 19746, -3181, -3181, -3181,   534, -3181,
   -3181, 40224,     5, 33243, -3181, -3181, -3181,  1754,   185, 40224,
       5, -3181, -3181,   185, -3181, -3181, -3181, -3181, -3181, 19746,
   -3181, -3181,   185, -3181,   185,   185,     5,     5,  1416, -3181,
   -3181,  1365, -3181,  1416,  1491,  -110,   136,  1575, -3181, -3181,
   -3181, -3181, -3181, -3181, -3181, -3181, -3181, -3181,   554, -3181,
   -3181, -3181, -3181, -3181, -3181,   119, -3181, -3181, -3181,  1275,
     654,   654,  1590, -3181,   221, 19746,   124,  1444, 19746, -3181,
   -3181, -3181, -3181, -3181, -3181, -3181,  1372, -3181,  1375,  1371,
   -3181,  1796,  1798,  1803,  1804,  1805,  1808,  1811,  1812,  1813,
    1814,  1816,  1817,  1818,  1819,  1820,  1407, -3181, -3181, -3181,
   -3181, -3181, -3181, -3181, -3181,  1451, -3181, -3181, -3181, -3181,
    1028, -3181, -3181, -3181,   116,  1409, -3181, 35391,  1927, 33243,
   40224, 40224,  1799, 19746, -3181, -3181,   310,   310,  1638,  1100,
   -3181,   101, 40224,  1806, 24061,    76, 12033, 12033, 12033,   790,
     732,  1916,  1968,  1968,  1968, 12033, 12033, -3181, -3181, 12033,
   -3181, 12033, 12033, 12033, 12033,   851, -3181, -3181,  8092, -3181,
    1422, 12033, 12033,  1508, 12033,  1346, 12033, 12033, 20826, 12033,
   12033, 12033, 12033, 12033,  1562, -3181, -3181, 12033,  3625, 12033,
   12033, 12033,  1425, 12033, 12033, 12033, 12033, -3181, 12033, 12033,
     223, 12033,  1865,   586, 12033, 12033, 12033, -3181,  8655, 12033,
   12033, 12033, -3181, 12033, 12033, 12033, 12033, -3181,  1979, -3181,
   20826,   866, 12033, 12033,   908, 12033, 12033, 12033, 12033, 12033,
   -3181, -3181, -3181, -3181,  8092, -3181, 12033, 12033, 12033, 12033,
   12033, -3181, 14848, 12033,  9218, 12033, 12033, 12033, 12033,  1428,
   12033, 12033,  1968,  1968, 12033, 12033, 12033,  1022,  8092, -3181,
   12033,  1346,   474,   474, 12033,  1346,  6403, 12033, -3181, -3181,
   -3181,   586,  9781,  1430, -3181, -3181, -3181,  1968, 20826,  1968,
   12033, 12033, 12033, -3181,  1460,  1916,  1916,  1916, -3181,   726,
   12033,   583,  1566,  1429, 12033, -3181, -3181, -3181, 14848, -3181,
   -3181,    38, -3181, -3181, -3181, 12596,  1435, 14848, 14848,  1751,
   14848, 14848,   530, 14848, 14848, 14848, 14848, 14848, 14848, 14848,
   14848, 14848, 14848, 14848,  1916, -3181, -3181, -3181, -3181, -3181,
   -3181, -3181, -3181, -3181, -3181, -3181, -3181, -3181, -3181, -3181,
   -3181, -3181, -3181, -3181, -3181, -3181,  1447, -3181, 35391, 14848,
   12033, -3181, -3181, 40224, -3181,  1440, -3181, 33243, -3181, -3181,
   -3181,    83, 35391,  1443, -3181, -3181,  1622,  1401, 19746, -3181,
   40224, -3181, -3181, -3181, -3181, 18116, 18116, -3181, 18116, -3181,
   -3181,   108,   110,  1245,  1473, -3181, -3181, -3181, -3181,  1793,
   19746, -3181,   546, 19746,   124, -3181, 12033,  1444, -3181, 33243,
   33243, 19746, 19746,   227, -3181,   737, -3181,  1444,  1821, 18116,
   18116, 18116, -3181, -3181, -3181, -3181, -3181,   940, -3181, -3181,
   -3181,  1441, -3181, -3181, -3181, -3181, -3181, 38076,    80, -3181,
   -3181,  1444,  1839, -3181, -3181,  1450, 40224, -3181, -3181, -3181,
   -3181,    71, -3181, -3181, -3181, -3181,   -92, -3181, -3181, -3181,
   -3181,  1579,     5, 40224, -3181, -3181,     5,   185, 19746,     5,
       5, -3181, -3181,   859, -3181,   -29, -3181, -3181, -3181, -3181,
   40224,  1034,  1592,  1454, -3181, -3181, 19746, -3181,  1457, -3181,
    1852,  1977,  1233, -3181, -3181, -3181,   284,   284,  1444,  1572,
    1573,  1574,  1576,  1577,  1609, -3181, -3181,   789,  1963,   284,
     284,  1963,   284,   284,   284,  1545,  1912,   284,  1801,  1563,
     862,  1810,   284, -3181,  1564,  1917,   284,   284,   284,  1963,
     284,   284,   284,   284,   284,   106,   284,   284,   284, -3181,
    3433, -3181, -3181,  1475, 18656, -3181, -3181, -3181, -3181, -3181,
   -3181, -3181, -3181, 38613, -3181, 12033,   732,  1444,  1444,   473,
    1444,   732,  1444,  1444,  1444,  1444,  1444,   732,  1444,  1444,
     732,  1506, -3181, -3181, -3181, -3181, -3181,   -19, -3181, -3181,
     371, 40224, -3181,  2137, -3181, -3181, -3181, -3181, -3181, 19746,
    1522,  1473, 24061, -3181,  -110, -3181,  1479, -3181,  1480,  1486,
     730, -3181,  1968,  1487, -3181, -3181, -3181, -3181, -3181, -3181,
   -3181,  1489,  1488,  1492,  1495,  2034,  1499,   624,  1501,  1502,
    1503,  1504,  1505,  -176,  1507, -3181,  1509,  1511,  1510, -3181,
    1514,  1515,  1519,  1525,  1521,  1526,  1518,   787,   804,  1527,
    1528,   819, -3181,  1440,  1529,  1897,  1530,  1532,   857, -3181,
    1534,  1535,  1536,   875,  1538,   880,   886, -3181, -3181, -3181,
   -3181,  1539,  1540, -3181, -3181,   309,  1542,  1543,  1546, -3181,
    1548,  1549,  1550,   899,  1553,  1554,   905,  1556,  1557,  1559,
    1547,  1560, -3181,  1968,  1565,  1567,  1568,  1968,  1569,   909,
    1561,  1570,   913,   934,  1571,  1578,  1580,  1581,  1582,  1583,
     942,  1584,   945,  1587,    32,  1588, -3181,  1589,  1591,  1593,
    1594,   947, -3181,  1595,  1598,  1601,  1603,  1604,   126,  1605,
    1968,  1607,  1608,   952,  1610,  1611,  1613, 10344, 10907, 11470,
      61,  1614,   388, -3181,  1616, -3181,  1617,  1618, -3181,  1518,
    1619,   954,   960,  1620, -3181, -3181, -3181,  1531,  1533,  1558,
    1615, 35391, 12033, 40224, -3181,   823,  1437, -3181, -3181, -3181,
   -3181, -3181,   560, -3181,  1555, -3181,  1184,  1562, -3181, -3181,
     172,  1585, 14848,    89,  1239,  1624, 14848, 14848, 14848,   903,
     416,   416,   196,  3625,   196,  3625,  1175,  1175,  1175,  1175,
    1175,  1916, 12033, -3181,  1916, -3181,  1625,  -186, -3181, -3181,
   -3181, -3181, -3181, -3181,  1332,  1854, -3181,  1621, -3181, -3181,
     962, -3181,  1627, -3181,  1628,  1639,  1642,  1648, -3181, -3181,
   -3181, -3181, -3181, -3181, -3181, -3181, -3181, -3181, -3181, -3181,
    1233,   737,  1660,  1626, -3181, -3181,  1600,  1893, -3181, -3181,
   -3181, -3181, -3181, -3181,  1666, -3181, -3181, -3181, -3181, -3181,
   -3181, -3181, -3181,    52, -3181, -3181,  1629,  1629, 16491, -3181,
   -3181, -3181, -3181,  1823,  1983,  1999,  2000,   374, -3181,   134,
     168,   661,  1953,  1233, -3181,  2014, 35928, 24600, -3181,  1630,
    1960,  1634,   284, 31632,   599, 22443, 32169, -3181, -3181,   473,
   -3181,   163, -3181, -3181, -3181, -3181,   534,   534,  1655, -3181,
   -3181, -3181,  1473,   185, -3181, -3181, -3181,  1640, -3181, -3181,
    -110,  1966,  1973, -3181,  1857,   736,  1857,  -110,  -110, 20826,
    -110, -3181,  1482, -3181,   732,  1913, -3181, -3181, -3181, -3181,
   -3181, -3181, 34317, 32706, -3181, -3181, -3181,  2117, -3181,  2118,
     660, -3181, 21366,   951,   951, -3181,   149,   157, 21366, -3181,
   -3181, 21366,   473,   732, 21366,   732,  1444,  1444,  1471,   284,
     732, -3181, -3181,  1980,  1984, 21366, 21366, -3181, 35391, -3181,
     284,   103,   473,   473, 21366,   746,  1444,   732,   732,   714,
   -3181, -3181, -3181, 19746,  1061, 35391,  1657, -3181,  3068, 15951,
   40224,   331,   171, -3181,  1652,  1665, -3181,   985, -3181, -3181,
   -3181, -3181, -3181, -3181, -3181, -3181, -3181, -3181, -3181, -3181,
   -3181, -3181, -3181, -3181, -3181, -3181, -3181, -3181, -3181, -3181,
   -3181,  1739, -3181,  1667, -3181, -3181,    86, -3181,  1665, 19746,
   15411, -3181,   115, -3181,  1704, -3181,  -110,  1881,   104,  1473,
    1675,    76, 13159, -3181, -3181, 12033,  1671, -3181, 12033, 12033,
   -3181, -3181, -3181,   209, -3181, 34854, -3181, -3181, -3181, -3181,
   -3181, 12033, 34854,   209, 12033, -3181, -3181,  1672, -3181,  2013,
    2013, -3181, -3181,  1346, -3181, 40224, -3181, 12033, -3181, 12033,
   -3181,  1346, -3181, 12033, -3181, 12033, 12033, -3181,  1906, -3181,
   12033, -3181, 12033, 12033, -3181, 12033, -3181, -3181, 12033, -3181,
   12033, 12033, -3181, -3181,  1908, -3181, 12033, 12033, -3181, -3181,
   12033, -3181, 12033, -3181, 12033, -3181, 12033, -3181, 12033, -3181,
   14848, 20826,  1679, -3181, -3181, -3181,  1680, -3181, -3181, 12033,
   12033, -3181, -3181, 12033, -3181, 12033, -3181, -3181, -3181, -3181,
   -3181, -3181, -3181, 12033, 12033, -3181, 12033, -3181, 12033, -3181,
   -3181, 12033, 12033, 12033, -3181, 12033, -3181, -3181, -3181, -3181,
   13722, 12033, 12033, 12033,  1681, -3181, -3181, -3181, 12033, 12033,
   12033, -3181, 12033,  2072, 12033,  2073, 12033,  2075, 12033, -3181,
   12033,  1918, -3181, -3181, -3181, -3181, -3181, 12033, -3181, 12033,
   -3181,  1701, 12033,  1689, -3181, -3181, -3181, -3181,  1684, -3181,
   -3181, -3181, -3181, 12033, -3181, -3181, 12033, -3181, -3181, -3181,
   -3181, -3181,  1695, -3181,  1440, 14848, -3181,  1585, 14848,  1562,
   -3181,   172,  1585,    90, -3181, -3181, -3181,  1697, -3181, -3181,
    1625, 40224, -3181, -3181, -3181, 40224,  1708, 25139, 33243, 33243,
   33243,  1703, 12033, -3181, -3181,  1928, -3181, -3181, 19746,  2045,
   -3181, -3181, 33243, -3181,   315, 20826, -3181,  1705, -3181,  1705,
     677,  1710,   987, -3181, -3181, -3181,  1706,   921,  2093, 33243,
   33243, 33243, -3181,  1473,  1473,  1660,  1660, -3181, 22980,  1758,
    2050, -3181, -3181, -3181, -3181, 39150, -3181, -3181, -3181, -3181,
     637, 40224,  2036, 40224,  6966, -3181, -3181, -3181,  2218, 12033,
   -3181, 33243,   489,   583,   284, -3181, -3181, -3181, -3181, -3181,
   -3181,  1233, -3181, -3181, -3181, -3181,  2016, -3181,     5,   859,
     321, -3181,  1243, -3181, -3181, -3181,  2052,  -110,  1857,  1857,
    2053,  1949,   475,  1725, -3181,   284,  1034,    43, -3181,   315,
   -3181, -3181, 12033, -3181, -3181, -3181, -3181, -3181, -3181, -3181,
   -3181, -3181, -3181, -3181, -3181, -3181, 12033,  2057,  2058,   951,
   -3181, 21366, -3181, -3181,  -121,   120, -3181, -3181, -3181, -3181,
   -3181, -3181, 32706,  1444, -3181, 21366, -3181, -3181,   327, -3181,
    1444, -3181, -3181, -3181, -3181, -3181, -3181, -3181, -3181, -3181,
   -3181, -3181, -3181, -3181, -3181, -3181, -3181, -3181, -3181, -3181,
   -3181, -3181, -3181, -3181, -3181, -3181, 19746, -3181,   994, -3181,
   -3181, -3181, -3181, 40224, -3181, -3181, 19746, -3181, -3181,  2575,
   40224, 40224,  2273, -3181, 40224, -3181, -3181, -3181, -3181, -3181,
    1955,   -82,  2275, -3181, 19746, -3181,  1733,  1000, -3181, -3181,
   -3181,  2277,  3482, -3181,  1736,  1473,  2051, -3181, -3181, 12033,
    1738,  1740, -3181, -3181,  1741,  1743,  1743, -3181, -3181,  1744,
    1743,  2077, -3181,  2082,  1745,  1746,  1747,  1748,  1752,  1753,
    1750, -3181, -3181,  3625,  3625,  1755,  1757,  1760,  1761,  1764,
    1766,  1767,  1756,  1768,  1769,  1770,  1771,  1773,  1774,  1776,
    1777,  1778,  1779,  1780,  1881,  1786,  1787,  1792,  1781,  1795,
    1802,  1004,  1807,  1809,  1008,   218, -3181, -3181, -3181,  1815,
    1824,  1825,  1826,  1827,  1829,  1831,  1832,  1834,  1797,  1836,
    1837,  1841, 12033,  1844,     7,  1015,  1800, -3181,  1845,  1822,
    1838,  1848, 12033,  1849, 12033,  1855, 12033,  1858,  1859,  1851,
    1860,  1861, 12033,  2177,  1772,  1828, -3181, 40224, -3181,  1174,
   -3181, -3181, -3181,   193, -3181,  1867, -3181, 14848, -3181, 12033,
    1853, -3181,  1868, -3181, -3181, -3181, -3181,  -135,  -135,  -135,
   14285, -3181,  2206, -3181,    45, -3181,  2123, -3181, -3181,   884,
    1856, -3181,   284, 14285,  1629,  1945, -3181, -3181,   677, 20826,
   24600, -3181, 33243,  1079,  1079,  1079,  1233,  2175, -3181, -3181,
   35391,  1869, -3181, -3181, -3181,  1939, -3181, -3181, 25678, -3181,
     858, -3181, -3181, 14848,  1177, -3181, -3181, -3181, 34317, -3181,
   -3181,   284,  1870,  1872, -3181, -3181, 39687, 12033, -3181,  2229,
   -3181, -3181,  1873,  -110,  2024,  -110, -3181,  2143,  2144,  -110,
   -3181, -3181, -3181, 20826,  1473, 14285,   951,   951,   951, -3181,
     884, -3181,  1871,   317, -3181, 21366, -3181, -3181,  -121,  1875,
    2267,  2269, 21366,  2218, -3181, -3181, -3181, -3181,  2575,  1017,
   -3181, 15951, -3181, -3181, -3181,  1876,  1879,  1743, -3181, -3181,
   -3181, -3181, -3181,  1744,  2017, -3181,  1744,  1744, -3181, -3181,
   -3181, -3181, -3181,   146,   205, -3181, -3181,   146, -3181, -3181,
   -3181,    92,   748,  1744, -3181, -3181, -3181, -3181, -3181, -3181,
   -3181,  1743,  1743, -3181, -3181, -3181,   146,  1880, -3181,  1743,
     299, -3181,   129,    91,  1882,  1883,  1743,  1884,  1874, -3181,
    1025,   389, -3181,    -4, -3181,   679, -3181, -3181,   389,  1885,
   -3181,  3433, -3181,   400, -3181, 40224, -3181,   534, -3181,  3625,
   -3181, -3181, -3181,  2048, -3181,   146,  2049, -3181, -3181, -3181,
   -3181, -3181, -3181, -3181, -3181, -3181, -3181, -3181, 12033,  1886,
    1887,  1888, -3181, -3181, -3181, -3181, -3181, -3181, 12033, -3181,
   -3181, -3181, -3181, -3181, 12033, -3181, -3181, -3181, -3181, -3181,
    1959, -3181,  2119, 12033, 12033, -3181, -3181, -3181, -3181, 12033,
   -3181, -3181, -3181, 12033,  2342,  2080,  1895, -3181, -3181, -3181,
   -3181, -3181, -3181, -3181, -3181, -3181, 12033, -3181, -3181, -3181,
    3625, -3181, 12033, -3181, -3181, 12033, 12033, -3181, 12033, 12033,
   -3181,  1896, -3181,  1899, -3181,  1900, -3181, -3181,  2127, -3181,
   -3181, -3181, -3181, 12033, 12033, -3181, -3181, -3181, -3181, -3181,
   -3181,   144,  1919,  1919,  1919,  1177, -3181,  1036, -3181, -3181,
    2240, -3181,  1352, 20826, 14285,  1902,  1903, -3181,    -8, -3181,
   -3181,  1904,  1079, -3181,  2420,  2270,  2401, -3181, 22980,  2166,
   -3181,   135,  2090, -3181, -3181, -3181,   489,  1996,  1997,   284,
   -3181,  1444,  1891,  1454,  2244,   784,  1958,  -110,  -110,   931,
    1961, 12033, 12033,  1920, -3181,  1881, -3181, -3181, -3181, -3181,
   -3181,  1352, 12033, -3181, -3181, -3181,  1921,  1922, 40224, -3181,
    1054,   331, -3181,   299, -3181, -3181,   497,  2145,  2146, -3181,
     706, -3181,  1923,   706,   706,  2447,   118, -3181,  2447, 34854,
   -3181,  1029, -3181,  1957,   146, -3181, -3181,  1964, -3181, -3181,
   -3181,   706,  1926,   146, -3181, -3181,  2156,   706, -3181, 35391,
    1444,   981, -3181,  1978, -3181,  2383,  2261, -3181,   299, -3181,
    2262,  2165, -3181,  2167, -3181, -3181,  2168, -3181,  2169,  2170,
     706,  2171, -3181,   706, 40224, -3181, 40224, -3181, -3181,  1962,
   -3181, -3181, -3181,  1935,  1941, -3181, -3181, 19746, -3181, -3181,
   -3181, -3181,  2008, 40224,  1962, -3181,    -8,   115,  1945, -3181,
    1043,   317,  1946, -3181,  1944,  1947, -3181,  1049,  1948, -3181,
   -3181, -3181,  1055,  1952,   136,  1954,  1956,  1965,  1969,  1971,
    1972,  2207,  2365, -3181,  1974,  1975,  1981,  1982,  1985,  1986,
    1987, -3181, -3181, -3181,  1976, -3181,  1970, 35928, -3181,  2043,
    2044, -3181, -3181,  2046, -3181, -3181,   117,   977, -3181, -3181,
   -3181, -3181, 14285,  2289, -3181,   984, -3181, -3181, -3181, -3181,
   12033, -3181,  1881,   643,  2274, -3181, -3181, -3181, -3181, -3181,
   -3181,  1988,  1990,  6966,  2508, -3181,  -110, -3181,  2010, -3181,
   -3181, -3181,  2022, -3181, -3181, 40224,  2051,  1992,   984,   317,
   40224, 40224,  1057,   586,   586,   586,   653,   653, -3181, -3181,
   -3181, -3181,    99,    68, 40224, -3181, -3181,   869, -3181,  1993,
    1994, -3181, -3181, -3181, -3181,   706, -3181,   136, -3181, -3181,
   -3181, -3181, -3181, 34854, -3181, -3181,  2447, -3181, -3181, -3181,
     136, -3181,  1995, -3181, -3181, -3181,  1065, -3181, -3181,  2213,
    2011, -3181, -3181, -3181, -3181,  1998,  2001,  2002,  2003, -3181,
    1991, -3181, -3181, -3181, -3181,   -91,   229, -3181, -3181,   891,
   40224,  2373,  1444,  2005,  2006, -3181, -3181, -3181, -3181, -3181,
    2009,   921, -3181, 40224, -3181,  2226, -3181, -3181, -3181,  2227,
   -3181, -3181, 12033, -3181, -3181, -3181,  1968, -3181, 12033, -3181,
   -3181, -3181, -3181, -3181, -3181, -3181, -3181, -3181, -3181, -3181,
   -3181, 12033, -3181, -3181, -3181, -3181, -3181,   243,  2202,   732,
     732,   732,   732,   977, -3181, -3181,  2056,  2088, -3181,   661,
   -3181,  -165,   317, 12033,  1233,  2517,  2525,  2436,  2530,   643,
   -3181,   368, -3181, -3181, -3181, -3181,  2306,  1071, 12033,  2018,
   12033,  2019,  1059, -3181, -3181, 38613, -3181, -3181,  1066,  1068,
   -3181, -3181, -3181,   331, -3181, -3181, -3181,   381,   381,  1075,
   -3181, -3181, -3181, -3181, -3181,  1078, -3181, -3181, -3181,  1083,
   -3181, -3181,  1065, -3181,   146,  2447,   146,  2447, -3181,  2020,
    2520,  2238,  2527, -3181, -3181,  2575, -3181, -3181, -3181, 40224,
    2575, -3181, -3181,   317,  2021,  2028,  1090,  2029,  2031,  2032,
   -3181, -3181, -3181, -3181, -3181, -3181, -3181, -3181, 20826, 19746,
   -3181,   332, 12033, -3181, -3181, -3181,  2219,   136,   136,  2550,
     136, -3181,  2551,  2552,   368, -3181,  2455, -3181, -3181, 40224,
   -3181, 40224, -3181, 40224,  2037,  2040,  2215, -3181, -3181, -3181,
    2598, -3181,   204, -3181, -3181,   869, 40224,   146,   136,   146,
   -3181, -3181, -3181, -3181, -3181,    -8,  2263, -3181,  2266,  1048,
   -3181,  2473,  2208, -3181, -3181,    -8, -3181, -3181, -3181, -3181,
   12033, -3181, -3181, -3181,  2055, -3181,   284, -3181, -3181, -3181,
     317, 40224, -3181, -3181, -3181,   136, -3181,   136,   136, -3181,
     473, 12033,  1092,  1094, -3181, -3181, -3181, -3181, -3181, -3181,
   -3181, -3181, -3181, -3181, -3181, -3181, -3181, -3181, -3181, -3181,
   -3181,  2492, 30011,  2199, -3181, -3181,  2059, 20826, 14285,  2401,
   -3181, -3181, -3181, -3181, -3181,  2602,  2054, -3181, -3181, -3181,
   40224,   142, -3181, 41298, 41298, 40224, -3181,  2089, -3181,  4755,
      98, -3181, -3181,  2060, -3181, -3181,  2575, -3181, -3181, -3181,
    2274,  2062,  2349, -3181, -3181, -3181,  2453, 40224, -3181, -3181,
   -3181, -3181, 12033, -3181, 12033, -3181, -3181, 30011, 30011, -3181,
   -3181, -3181, 30011, -3181,  2415,  2066,  2490, -3181,  2411,  2496,
   12033, -3181, -3181,  2103, -3181, 27301,  2068, 30553, 12033,    98,
   -3181, -3181,  2308,  2081, 12033,  2076,  2084, -3181,   732, -3181,
    2434,  2097,  2509, 12033, -3181,  2542,  2386,  2083, -3181,  2091,
    2528, 41298,  1048,  2403, 17031,  2231, -3181, -3181, -3181, -3181,
   40224, -3181, -3181,  2111,  2114, -3181, 36465, 27843,  2094, -3181,
   -3181, 12033, -3181, -3181, -3181, 30011, -3181, -3181, 35391,  1098,
   -3181, -3181, 20826, -3181, -3181,  2101, -3181, 30011, -3181, -3181,
    2529, -3181, -3181,  2470,  2104,   302, -3181,  2100, -3181,  2532,
   30011, -3181, -3181, -3181, 19201,  2055, 40224, 26217, 30011,  2125,
    2503, 40224,  2575,  2506,  2510, -3181,  2282, 28385, -3181, -3181,
      67, 26759, -3181, -3181, -3181,  2569,   587, -3181, -3181,  2147,
   -3181, 30011, -3181,   678, 31095, 12033, -3181,  2159, -3181, -3181,
   -3181,  4755, -3181, -3181, 28927, -3181, 30011, -3181, -3181, -3181,
   23517, -3181, -3181,  2514, -3181, -3181, -3181,  1346, -3181, -3181,
   29469, 31095, -3181, -3181, -3181, -3181
};

/* YYPGOTO[NTERM-NUM].  */
static const short int yypgoto[] =
{
   -3181, -3181, -3181, -3141, -3181, -3181, -3181, -3181, -3181, -3181,
   -3181, -3181,   885, -3181, -3181, -3181, -3181, -3181,  1123, -1384,
   -3181, -3181, -3181, -3181, -3181,   358,   -21, -3181, -3181, -3181,
   -3181, -3181, -3181,  2015,  -806, -3026, -3181, -3181, -3181, -3181,
   -3181, -3181, -3181, -3181,  -478,  -599, -3181, -3181,  -468, -3181,
   -3181, -2104, -3181, -3181, -3181, -3181, -3181, -3181, -3181, -3181,
    -894, -3181,  -928, -3181, -3181, -1681, -3181, -3181, -3181, -3181,
   -3181, -3181, -3181, -3181, -3181, -3181,  -896, -3181, -3181, -3181,
   -3181, -3180, -3181, -3181, -3181, -3181, -3181, -3181, -3181,  -794,
   -3181, -3181, -3181, -3181, -3181, -3181, -3181, -3181, -3181,  -301,
   -3181, -3181, -1804, -3181, -3181, -3181,  1596, -3181,  1633, -3181,
    2311, -3181,  -373,   -25,  1178, -1772,  -995,  -515,  -505, -1587,
   -3181, -3181, -3181,  -381, -3181, -3181,   689,    50,  1187,  1215,
     733,   777, -3181, -3181,    65, -3181, -2585, -3181, -3181, -3181,
      34, -3181,    47, -3181, -3181, -3181, -1350,    10, -1628, -3181,
    -393, -1427, -3181,  -183, -3181,  -226, -3181,  -419, -1993, -1773,
   -3181, -3181,  -216,    81,   133, -3181, -2502, -2733, -3181, -3181,
    -596, -3181, -3181, -3181,  -608, -3181,  -365,  -514, -3181, -3181,
   -1449, -1744, -3181, -3181, -2132,  1606, -2038,  -426, -1846, -3181,
    -385, -3181, -3181, -3181, -3181, -3181, -3181, -3181, -3181, -3181,
     770, -3181, -3181, -3181,  -280,  -177, -1298, -2702, -3181, -3181,
   -3181, -3181, -3181, -3181,   969, -3181, -3181,  1284,  1707, -3181,
   -3181, -3181, -3181, -3181, -3181, -3181, -3181, -3181, -3181, -3181,
     910, -3181, -3181, -3181, -3181, -3181,  -853,  1631, -3181, -3181,
   -3181,  1311, -3181, -3181, -3181, -3181,  1353, -3181, -3181,  2071,
   -3181, -3181, -3181, -3181,   517,   935, -3181, -3181, -3181,  2096,
     902,  -450,  -882, -3181,  2302, -3181, -3181, -3181, -1273, -1901,
   -3181,  2164,  -455, -1480,  1350,  -699,   -73, -3181,  -270,  -735,
    2893, -3181, -3181, -1222, -3181, -3181,  -763, -3181, -3181, -1241,
   -1167,  1458,  1455,   275,   306,   263, -3181, -3181,  -484, -3181,
   -3181, -3181, -1219,  -693, -3181, -3181, -3181,   550, -3181, -3181,
   -3181,   -68, -3181, -3181, -3181, -3181, -3181, -3181, -3181, -1125,
   -3181,   721, -1001, -3181, -3181, -3181,  1586, -3181, -3181, -3181,
   -3181, -3181, -3181, -3181, -1842, -3181, -1403,   152, -3181, -3181,
   -3181, -3181, -3181, -3181, -3181, -3181, -3181, -1829, -3181, -3181,
   -3181, -3181, -3181, -3181, -3181, -1313, -3181, -1606, -3181,  -968,
   -3181, -3181,  -467, -2011, -1147,   413, -3181, -3181,  -938,  1632,
   -1532, -3181, -3181, -3181,   568, -3181, -3181, -3181, -1962, -1019,
   -3181, -3181, -2275,  -601, -1775,  -581, -3181, -1805,  -306, -1137,
   -1833, -3181, -3181, -3181, -3181,  -737, -3181, -3181, -3181,   -86,
     922, -3181, -3181, -3181, -3181, -3181,  -444,  -358,   778, -3181,
   -3181, -3181, -3181, -3181, -3181, -3181, -3181, -3181,  1842,  1830,
     966, -3181, -3181, -2031, -3181, -3181,   948, -3181,   -64, -1818,
   -1233,   219, -3181, -3181,   228, -2552, -3181, -3181, -3181, -3181,
   -3181, -3181,   159,  -746,  -623,  2358, -3181, -3181, -3181, -3181,
   -3181, -3181,  2099,  1663, -1426,  2305, -3181, -3181, -3181, -3181,
   -3181, -3181, -3181, -3181, -3181,  2372, -3181,  -949, -3181,  -448,
   -3181, -3181,  -573, -3181, -3181, -3181, -3181, -3181, -3181, -3181,
   -3181, -3181,  1446, -3181, -3181, -3181, -3181, -3181,  1843, -3181,
   -3181, -3181, -3181, -3181, -3181, -3181, -3181, -3181, -3181, -3181,
   -3181, -3181, -3181, -3181, -3181,   244,  -598, -3181,  -418,  -632,
   -3181,  -504, -3181, -3181, -3181,  -742, -3181,  -748,  -662,  -990,
    -128, -2094, -1419,   245,  1840, -2749, -1108, -1244, -1254, -1793,
      21, -3181,    -7,  -512,  -428,  -585,  2304, -2286,  -384,  -477,
   -3181,  -472, -3181, -3181, -3181, -3181,  1404, -3181, -3181, -3181,
   -3181,   535, -3181, -3181, -3181,   214, -3181,   -47,  -242, -3181,
   -3181,   322, -3181,  1439, -3181, -3181, -3181, -3181, -3181, -3181,
   -3181, -3181, -3181, -3181, -3181, -3181, -3181, -3181,  1862,  2406,
    2255, -3181,  1901, -3181, -3181, -3181, -3181, -3181,  -369, -3181,
    -106, -3181, -1319,  1712,   422, -3181,   618,  -874, -1157, -3181,
    -368, -3181, -3181,  1087,  2416,  2264, -3181, -3181, -3181, -3181,
   -3181, -2186,  -583, -3181, -2248, -3181, -3181, -3181, -3181, -3181,
   -3181, -3181, -3181,  -542, -3181,  -691, -1538, -3181, -3181,   -49,
   -3181, -3181,   435, -3181,  2376,  2138, -3181,   832, -3181,   127,
    -142, -3181, -3181, -3181, -3181, -3181, -3181, -3181, -3181, -3181,
     964, -3181, -3181, -3181, -3181, -3181, -3181
};

/* YYTABLE[YYPACT[STATE-NUM]].  What to do in state STATE-NUM.  If
   positive, shift that token.  If negative, reduce the rule which
   number is the opposite.  If zero, do what YYDEFACT says.
   If YYTABLE_NINF, syntax error.  */
#define YYTABLE_NINF -1955
static const short int yytable[] =
{
     372,   696,  1175,   983,  1061,   662,  1130,  1131,  1132,  1166,
    1167,  1169,   372,  1601,  1354,   372,   633,  1392,  1447,   655,
     655,   655,   372,   655,  1728,   655,   549,  1602,  1603,  1604,
    1010,  1025,   372,   902,  1727,  1151,  1005,   687,   688,  1482,
    1616,  1635,   372,   407,  2251,  2233,  2300,  1233,  1939,  2027,
     961,  1010,  2455,  1536,  2284,  2289,  2292,  1747,  2312,  2458,
    1026,  1955,  2622,  1792,  1755,  2436,  2322,   904,  2326,  1186,
    1625,  2581,  1744,  2913,  1456,  1694,  1235,  1530,  2321,  1896,
     372,  2304,  2305,  2896,   647,  1459,  1460,   467,  2273,   468,
    1261,   964,  2354,  1265,   940,  2074,  1674,  1773,  1775,  1678,
     372,   372,  1259,   372, -1467,  2208,  2547, -1468,   462,  2356,
   -1100, -1801,  1672, -1802,   372,  1274,  1275,  1276,  -238,  -248,
   -1865,   715,  -249,  2965,  1970,   940,  3466,  1705,  1706,  2375,
    2376,  1358,  1711,  3206,   603,   604,   975,   483,  3121,  2343,
    1396,  1761,   477,  1763,  1862,  2343,   935,  2937,  2355,  2925,
    2337,  2358,  1726,  3089,  1730,  1067,  1607,  1608,   940,  1610,
    2031,  2926,  2367,  2368,  1913,  1068,  2925,  1285,  1286,  1287,
     651,  2377,   603,   604,  2927,  2812,   704,  1112,  2926,  1268,
    3257,  2029,  2935,   603,   604,  2936,  1029,  1324,   106,  2344,
    2345,  2927,  3120,  1748,  1011,  3125,  1644,  1073,  2417,  3590,
     603,   604,  3039,  3067,  2945,  1838,  2346,  1587,  2636,  3100,
    2964,  1664,   680,  2980,  2346,   970,  2426,  1083,   941,  2576,
     542,  2981,  2649,  1540,  1063,  2925,  1007,  1063,  2346,  1684,
    1685,  1686,  2168,  1076,   689,  1348,  1084,  2926,   655, -1923,
    1693,  2445,  1886,  3006,   106,   563,  2650, -1100,  1971,   941,
    2927,   995,  2433,  2637,  1923,  2428,  1348,  2138,  1021,   603,
    2931,  2263,  2841,  2371,  2446,  1019,  1942,  1943,   107,  1945,
    1946,  1947,  3254,  1407,  1950,  1032,  1051,  1113,  3280,  1958,
    1114,  1000,   941,  1961,  1962,  1963,  3281,  1965,  1966,  1967,
    1968,  1969,  1115,  1974,  1975,  1976,  2265,  2151,  3465,   394,
    2320,  3039,  3057,  2447,  1632,  2418,  2448,  2302,  1109,  1413,
    1468,  3222,  3398,  3455,  2449,  2347,   932,  1647,  2205,  1318,
    1648,  2725,  2948,  -329,   413,  2428,   119,   587,  1883,   454,
    1537,   377,   378,  3409,  2011,   652,  2903, -1923,   490,  2403,
    2372,  2052,   470,  2569,  1269,  3550,  2982,   497, -1467,   416,
     691, -1468,   108,  1574,   422, -1801,  1027, -1802,   426,  1039,
    2307,  3467,  2949,   694,   695,  1001,  2950,  1023,  1749,   546,
    3311,  2369,  3040,  1136,  2220,  1358,   946,  3573,   509,  2014,
    1838,  2221,   438,   395,  1478,   379,  2053,   109,  2395,   372,
    1312,  3574,   372,  3268,  1873,   427,  1137,  3312,  2015,   372,
     121,   498,   554,   372, -1100,  1024,   376,  2951,   372,  1990,
    1028,   692,   446,   372,  2000,   571,   420,  1116,  3378,  1414,
    2006,   396,  1040,  2009,  1839,  3619,  1919,  1129,  2640,  3339,
    2904,  2373,  3127,  1874,   439,   372,   559,   588,   472,  1449,
    2429,  3131,   713,  2794,   414,  1538, -1467,  1455,  1052, -1468,
    1469,  3255,   372,   447,  1470,  1655,  2264,  2012,  1351,   959,
    3618,  1361,   372,  1461,  1462,  3456,   372,  2036,  3041,   455,
    1887,  3040,   372,  1045,   372,   372,  2617,  1483,  2726,   372,
     372,  3282,  1292,  1433,  1359,   899,  3409,   901,  2626,   372,
     673,  2404,  3468,   372,   564,   981,  1117,  2437,   372,   372,
    3215,   372,  1319,   372,   372,  2648,  1575,  2635,  1892,   499,
    2429,   690,  1022,  2348,  1394,   589,  2907,  2266,  1349,  2655,
   -1100,  -329,   448,  1722,  1403,   381,  1884,  1110,  2450,  1750,
    1939,  -461,   705,  3256,  3399,  1530,  1450,   372,   996,  1349,
     543,  1831,  3352,   110,  3354,  1751,  2651,  2859,  2112,   681,
    1067,  3338,  2116,   372,  1468,  2406,  1002,  -135,  2343,  2638,
    1068,   372,   372,  3380,  -490,  1541,   372,  1840,  2813,   572,
     -55,  1939,  2343,   372,   397,  1395,  1329,  1993,  1033,  3258,
     488,   955,  1311,   936,  1458,  2154,  2311,  1012,   970,  2653,
     967,  1972,  2274, -1100,  1728,  2207,  3042,  2419,  1397,  1839,
    2212,  2213,  2031,   372,  2255,  2647,   584,  3043,   382,  1067,
    3059,   970,   653,  3591,  1760,  1759,   675,  2938,   655,  1068,
    3122,  1270,  2169,  2435,   694,   695,  2214,  1436,  2215,  2952,
    1781,  2928,  3469,  3068, -1467,  1994,  2953, -1468, -1100,  1311,
    1311, -1801,  2451, -1802,  1330,  1078,  1875,  -495,  2928,  -556,
    1487,  2966, -1865,  2349,   706,  1728,  1784,  2962,  1020,   372,
    2734,  -329,  1003,  2954,  1078,  2325,  2542,   372,  1582, -1467,
     372,  2030, -1468,   372,   372, -1100, -1801, -1100, -1802,  1334,
    1034,   398,  3044,  -238,  -248, -1865,  1078,  -249,  2152,  2963,
    2452,  1595,   933,  2303,  1469, -1954,   399,   555,  1470,  1035,
    3360,  1649,   477,   415,  1650,  3364,  3043,  2928,   372,  3340,
     372,  1920,  2627,  2628,  1375,  2197,  2363,  1078,  2453,  1004,
    1542,  1488,   400,  2955,   512,  1576,  3174,  2370,  1359,  2932,
    2708,  2586,  2587,  1489,  1995,  2183,  1135,   401,  1140,   561,
    3379,  1919,  1840,  1566,   487,   570,   449,  1351,  3168,  1596,
    1320,  1321,  1322,  2795,  2854,  1765,  2202,   752,   510,   590,
     591,   592,   593,   594,   595,   649,   450,  2291,  1311,  2340,
    1738,  2251,  3351,  1338,  3353,   596,  1766,  2330,  3225,   568,
    3102,  1339,  3341,  2885,  2988,   653,  1597,  2889,  3226,  1078,
   -1342,   451,  1905,  2876,    40,  1442,  2886,  1036,  1409,  2906,
    2890,  1008,  1591,  2956,  1996, -1467,  2357,  3342,  2359,  2977,
    1826,  2863,  2631,  2364,  3247,   765,  3099,  1752,  1595,   433,
    1844,  3322,   493,   114,   981,  2612,  1423,   440,  2379,  2269,
    2381,  2382,  2386,  1351,  3103,  1739,  1595,  1351,   452,  1077,
    2463,  2464,  2613,  3323,  1340,  3402,  -328,  3404,  1598,   948,
    1595,   441,  2343,  1306,  2378,  1931,   457,  3099,   372,   372,
     372,  3473,   459,  1591,   653,  1443,  3449,  1932,  1037,  1901,
    3092,  2094,   470,   383,  1307,   667,  1596,  2203,  1591,  1889,
    1791,  1918, -1920,  1891,  2341,  1833,  1894,  1895,   816,  1490,
    2198,  1424,  1342,   372,  1596,  1852,  1447,  1447,   372,  1481,
     115,  1010,  2989,  2736,   808,  1376,  -254,   384,  1596,  2557,
    2558,  2559,  1592,  1597,   792,  1767,  1078,  2270,  1599,  1878,
    1591,  1356,  1834,  1835,  1797,  2621,  1827,   714,  1931,  2999,
   -1342,  1597,  3003,  3086,    51,   372,  3126,   372,   385,   372,
    2583,  2584,  2585,  2495,  2308,  1597,   949,  3314,   386,  2978,
    2171,   372,   372,   694,   695,  -328,   808,   464,  1491,  1536,
    2998,   372,   372,  1933,  1783,  2614,  2317,  2544,  1316,  1317,
    1997,  2539,   372,  1615,  2327,  1598,  1924,  1425,  1793,  2318,
    1437,  1438,  1492,  1530,   813,  3292,  3227,  3585,  1673,  1410,
    1448,  1728,  2632,  1598,   372,   372,   372,   372,  1454,  1902,
     458,  2572,  1083,  2496,   372,  1343,   372,  1598,  1740,  1876,
     808,  1377,   372,  1308,  1903,   729,  1901,  1345,  3366,  2745,
     469,  1084,   372,  2749,  1439,  1440,  1920,  1904,  1953,  3597,
    1677,  1444,   544,  1493,  1591,  1991,  1992,   808,  1999,   950,
    2001,  2002,  2003,  2004,  2005,  1599,  2007,  2008,   479,  2456,
    1457,  2199,  3248,  3249,  2461,   668,   483,  3104,  3079,  3080,
    2990,  3073,   653,  1599,  1426,  1759,  1309,  2200,   372,  2469,
    2656,   372,   485,  2211,  1759,  1083,  2474,  1599,  3093,  1768,
     669,  1112,   550,  1828,  1600,   752,  1173,  2383,   729,  2852,
    2384,  2483,  2484,  2438,  1084,  1377,  1539,  1844,  2488,   480,
    3224,  1905,  2895,   575,  1494,  3420,  2493,  3405,  2980,  1569,
    1570,  1859,   494,   924,   653,  1488,  2981,  3415,  3228,  1901,
     372,  3077,   372,   372,   372,   428,   372,  1489,  1093,  1094,
    3267,  2388,  2389,   515,   516,   372,   763,   372,  1173,  3111,
    2991,  2045,  2319,   765,  1710,  2511,  1902,  3459,  3460,   384,
     845,  3093,  3102,  -328,  1572,  1859,  1901,  1844,   752,   496,
    2901,  1903,  1860,  1845,  1083,  3208,  3408,  2191,   653,  2390,
    2192,   372,   551,   506,  1904,   508,   925,  1310,  1311,   511,
     780,  1113,   436,  1084,  1114,  2046,   437,  2897,  2897,  2897,
    1906,  2391,  1173,   576,  3170,   653,  1115,  2220,  1174,  1846,
    1847,   117,   504,   118,  2598,   517,  3103,   474,  2545,   763,
    3605,  1600,  1939,   372,  2201,  3112,   765,   926,  1941,  1173,
     558,  1944,  2392,  2210,  3606,  3534,  1954,  1351,  1934,  1600,
    1956,  1008,   927,   518,  3237,   541,   552,  2575,  2871,  1964,
    2919,  2982,   792,  1600,  1907,  1104,  1105,   519,  1905,  1902,
    3113,  2872,  1260,   780,   694,   695,   117,   577,   118,  1846,
    1847,  3209,  3210,  2862,  1903,  3211,  3212,   562,  3081,   520,
    1806,   372,  1807,  2939,  2943,  2944,  2940,  1904,   644,  1264,
     521,  2873,  2947,  1490,   572,  1481,  1902,  1735,  1736,  2970,
     905,  2034,  2035,  -328,  1351,  3118,  3119,  1848,   674,   808,
     421,  1903,   663,  1854,  1855,  1856,  2837,   544,  3136,   522,
     675,   812,   813,  3129,  1904,   792,  2760,  2761,  3392,  3133,
    3393,  1116,   684,  2920,   106,  1728,  2923,  2924,  1901,   603,
     604,   404,  1314,  1315,   523,  2255,   703,  1906,  1486,   417,
     524,   372,  3149,  2941,   423,  3151,   372,   897,  2066,  2067,
     372,  1905,  1491,  1372,  2277,   372,  1373,  2188,   900,  1374,
     906,   372,   930,   372,  3487,  2068,  2069,   921,   372,   372,
     938,   372,   808,   694,   695,   923,  1492,   525,   939,  1728,
    2072,  2073,   109,   372,   812,   813,   372,  1808,  1905,  2325,
     953,  1907,   372,   372,   372,   372,  1803,  1803,   928,  1803,
    1117,   954,   372,   372,   372,  1809,   642,   643,  3327,   646,
     962,  1825,   657,   658,   955,   659,   973,   660,  2079,  2080,
     372,   977,   967,  1837,   981,  1810,   974,  1493,   978,   372,
    1803,  1803,  1803,  2540,  2360,  2361,  2084,  2085,   984,  1811,
    1906,  2087,  2088,  3567,  2393,   992,   372,  2089,  2090,  3316,
     993,   372,  2194,  2195,  2380,   994,  3577,   653,  1902,  3094,
    2101,  2102,  3095,   372,  3581,  2781,  2105,  2106,   998,   372,
    2118,  2119,   843,  1903,  2122,  2123,   999,  1906,   845,  1893,
    1008,   846,  1812,  1813,  1013, -1100,  2624,  3604,   526,  2290,
    1014,  2294,  2299,  1015,  1907,  2124,  2125,  1912,  1494,  1016,
     940,  1017,  3620,  2132,  2133,   527,  2135,  2136,  2144,  2145,
    1814,   528,  2543,  2157,  2158,  2176,  2177,   529,   908,  1030,
    2549,  2178,  2179,  2224,  2225,   603,   604,   372,  1018,  2362,
     653,  1907,  3094,  3096,  3097,  3095,   372,  1031,  2336,  2290,
    1044,   530,  1297,  1298,  1046,   843,  2413,  2414,  2578,  2579,
    2017,   845,   531,   532,   846,  2660,  2661,  3425,  3418,  1049,
    1905,  2731,  2661,  1047,   372,  2788,  2789, -1100,  1815,  2792,
    2793,  1054,   372,  1074,  1007,   372,  2814,  2815,  2914,  1078,
    1299,  1776,  1777,  1778,  1779,  1780,  2975,  2976,   533,  1770,
    1771,  1007,  3004,  -527,  1300,  1121,  1497,  3051,  3052,  1728,
    2025,  1075,   909,  1498,  3172,  3173,  3096,  3097,  1816,  2572,
    3178,  3179,  1122,  1499,  1500,  1123,  3181,  3182,  3250,  3173,
    3332,  3333,  1772,  1774,   941,  1125,  1301,  3336,  3173,  3337,
    3173,  1128,   534,  1127,   535,  2465,  3345,  3346,  1302,  3347,
    3348,  1129,  1501,  2470,  3349,  3348,  1502, -1100,  1133,  1906,
   -1100,  3369,  3370,  3427,  3333,  3428,  3333,  1503,   910,  3563,
    3564,  2290,  1142,  3025,  1144,  1303,  1504,  1146,  2290,  2899,
    2900,  1505,  1147, -1100,   983,  1714,  1715,  3251,  3252, -1100,
    2588,  2589,   911,  1506,  2843,  2844,  3049,  3050,  1148,  1149,
    1150,  1152, -1100,  1153,  1154,  1155,  1156, -1100,  1063,  1157,
    2618,  1507,  1158,  1907, -1100,  1159,  1160,  1161,  1162,  1163,
    1508,  1509, -1100,  1350,  1294,  1164,  1510,  1165,  1168,  1170,
    1010,  1304,  1171,  1172,  1511, -1100,  1176,  1499,  1500, -1100,
    1512,  3438,  1323,  1177,   372,  2620,   372,  1178, -1100,  1179,
    1180,  1181,  1182,  1183,  1184,  1187,  1188,  1447,  1365,  1189,
    1190,  1191,  1192,  1193,  1194,  1513,  1195,  1196,  -447,  -447,
    1502,  1197,  1198,  2596,  1199,  2568,   912,  -447,  1200,  1201,
    1202,  1503,   913,  1091,  1092,  1093,  1094,  1095,  1096,  1203,
    1504,  1097,  1098,  1099,  1100,  1101,  1102,  1204,  1103,  1205,
    1313,  3490,  1206,  1353,  1208,  1209,  1210,  1506,  1211, -1100,
     914,  1514,  1212,  1515,  3507,  1387,  3507,  1213,  1214,  1215,
    1516,  1216,  1063,  1217,  2611,  1507,  1221,  1222,  1223, -1100,
    1224,  1225,   653,  1226,  1227,  1228,  1229, -1100,  1230,  1231,
    1232,  1234,  1236,  1237,  1238,  1366,   915,  1239,  1240,  1241,
    1242,   372,  1243,  1244,  1512,  1245,  3557,  1246, -1100,  1247,
    1248,  2654,  1249,  1250,  3561,  1251,   916,  1252,  2657,   372,
     372,  1253,  1254,  1369,  1255,  1256,   372,  1257,   372,   372,
    1258,   917,  1262,   118,  1263,  1266,  1517,  1267,  1271,  1272,
    1273,  1277,  1278,  1279,  2593,  1280,  3507,  1281, -1100,  1282,
    1518,  1352,  1104,  1105, -1100,  1519,  3507,  1357,  1362,  1367,
    3507,  1370,   372,  1388,  1391,  1393,  1400,  1399, -1100,   940,
    1151,  1401,  1402,  1408,  1416,   372,   372,  1515,  1422,  1431,
     546,  1435,  1451,  3507,  1516,   372,  1463,  1465,  1467,  3622,
    1479,   372,  1543,  1545,   372,  1481,  1544,   372,  1546,  3507,
    1547,  1520, -1100,  1521,  3075,  1548,  1549,  1550,   372,   372,
    1551,   372,  2659,  1552,  1553,  1554,  1555,   372,  1556,  1557,
    1558,  1559,  1560,  1562,  1522,  1523,   372,  1524,   372,  1561,
    1565,  1567,   372,   372,  1571,  1579, -1100,  1584,  2290,  1348,
    1591,  1525,  1288,  1619,  1270, -1100,  1639,  1653,  1670,  1702,
    1517,  1725,  1734,  1742,  2387,  1757,  1743,  1762, -1100, -1100,
    1782,  1788,  1795,  1526,  1518,  1794,  1819,  1822,  1867,  1853,
    1879,  1881,   372,   372,  1888, -1100,  1910, -1100,  1909,  1914,
    1915,  1917,  1925,  1926,  1927,  2987,  1928,  1929,  1930,  1931,
    1948,  1949,  1951,   941,  1952,  1959,  1960,  1978,   372,  2026,
    2423,  1957,  2032, -1100, -1100,   372,  2030,  2033,  2037,  2040,
   -1100,  2039,  2043,  2041,  1728,  1520,  2042,  1521,   372, -1100,
    2044,  3297,  2047,  2048,  2049,  2057,  2050,  2051,  2076,  2054,
    2056,  2058,  3303,  3304,  3305,  3306,  2059,  2060,  1522,  1523,
    2061,  1524, -1100,  2063,  1527,  2065,  2062,  2064, -1100,  2070,
    2071,  2075,  2077,  1528,  2078,  2081,  2184,  2082,  2083,  2086,
    2185,  2091,  2092,  2095,   372,  2096, -1100,  2110,  2097,  2098,
    2223,  2099,  2100, -1100,  2103,  -770,  2104,  1526,  2107,  2108,
    2109, -1100,  2111,  2120,  2228,  2186,  2113,  2229,  2114,  2115,
    2117,  2121,  2126,  2230, -1100,  1311,  2236,  2240, -1100,  2127,
    2549,  2128,  2129,  2130,  2131,  2241,  2134, -1100,  2137,  2139,
    2140,  2242,  -527,  2141,  2259,  2142,  2143,  2146,  -527,  2147,
    1499,  1500,  2148,  1728,  2149,  2258,  2150,  2153,  2155,  2156,
    2260,  2261,  2159,  2160,  2161,  1860,  2170,  2172,  2173,  2174,
    2175,  2180,  2187,  1078,  2209,  1859,  -948,  2282,  2238,  2246,
    2306,  -447,  -447,  1502,  2226,  2227,  2313,  2281,  1527,  3299,
    -447,  2283,  2309,  2314,  1503,  2315,  2867,  1528, -1100,  2331,
    2338,  2339,  2365,  1504,   372,  2415,  2366,  2396,   372,  2410,
     372,   372,   372,   372,  2336,  2411,  1481,  2416, -1100,  1585,
    1506,   372,  2442,  2462,   784,   372, -1100,  2475,   372,  2485,
    2497,  2498,  2517,  2522,  2524,  1063,  2526,  2532,  1507,  2529,
    2536,  2537,   372,   372,   372,  2566,  2541, -1100,  2548,  1825,
    1728,   372,  2555,  2560,  2582,  2562,  2432,  2574,   372,  2594,
    3541,  2577,  3278,  2580,   372,  2595,   372,  1512,  3154,  3155,
    2600,  2608,  2625,  2629,   372,  2619,  2630,  2633,  1728,  2645,
    2646,  2721,  2724,  2728,  2730,  2732,  2735, -1100,  2737,  2740,
    2750,  2741,  2742,  2743,  2746,  2751,  2752,  2753,  2754,  2755,
    1728,   373,  2758,  2756,  2757,  2832,  2762, -1100,  2768,  2833,
    3541,  2763,  2764,   403,  2221,  2765,   409,  2766,  2767,  2769,
    2770,  2771,  2772,   418,  2773,  2849,  2774,  2775,  2776,  2777,
    2778,  2779,  2785,   429,   372,  1175,  1261,  1265,  2782,  2783,
    1515, -1100,  3184,   445,  2784,   372,  2786,  1516,   372,  2806,
    2834,  3519,  2816,  2787,  2851,  1844,  2864,  2869,  2790,  3074,
    2791,  2881,  2884,  2887,  2888,  2909,  2797,  2910,  2921,  3005,
    3007,  3014,  3021,  2019,  2818,  2798,  2799,  2800,  2801,   372,
    2802,   463,  2803,  2804, -1100,  2805,   372,  2807,  2808,   372,
    2819,  3271,  2809,   372,   372,  2811,  2817,   372, -1100,  2820,
    2822,   466,   373,  2828,   373,  2839,  2824,   372,  2853,  2826,
    2827,  2829,  2830,  1517, -1100,   463, -1100,  2663,  2836,  2840,
    2877,  2868,  2878,  2902,  2882,  2908,  2917,  1518,  3135,  2918,
    2946,  2974,  2968,  2969,  2971,  2729,  2995,  3009,  3010,  3011,
    3016,  3022, -1100, -1100,  3047,  3266,  3023,  3031,  3034, -1100,
    3032,  3033,  3054,  3058,  3060,  3052,  3063,  3061,  3266,  3066,
    3069,  2598,  3071,  3072,  3076, -1032,  3109,  3110, -1037,  2965,
    3085,  3090,  3091,  3117,  2593,  2962,  3130,  3132,  1520,  3139,
    1521,  3140,  3128,  3141,  3143,  3144,  3158,  3156,  3145,  3146,
    3147,  3148,  3150,  3159,  3162,  3176,  3175,  3123,  3177,  3180,
    3191,  1522,  1523,  3183,  1524,  3185,  3192,  3201,  3186,  3203,
    3204,  3216,  3205,  3231,  3236,  2277,  3187,  3239,   581,   516,
     372,  3188,  3189,  3190,  3273,  3193,  3194,  3350,  3200,  3241,
    3272,  3286,  3195,  3196,  3302,  2290,  3197,  3198,  3199,  3233,
    1526,  3234,  3245,  3179,  3262,  3263,  3270,  3294,  3295,  3274,
    3309,  3317,  3275,  3276,  3277,  2336,  3288,  3308,  3289,  3318,
    3291,  3319,   372,   372,  3320,   372,  3326,  3356,  3329,  3331,
    3357,  3355,  3367,   372,  3358,  3381,   655,  3361,   983,  3368,
    3371,   372,  3372,  3373,  3385,  3387,  3388,  3390,  3395,  2406,
     517,   372,  2414,  3397,  3413,  3406,  2664,  2665,  3407,   372,
    3429,  3414,  2666,  3445,  2667,  2668,  2669,  3417,  3452,  3453,
    3447,  3463,  3475,  3476,  3477,  3492,   372, -1156,   518,  3471,
    2670,  1527,  3498,  3499,  3500,  3504,  3508,  3517,   372,  3513,
    1528,  3514,   519,  3521,  3522,   372,  3518,  3523,  3526,  3529,
    3287,  3530,  3536,  3532,   372,  3383,  3384,  3542,  3386,  3548,
   -1723,  3549,  3558,  3566,   520,  3570,  3571,  3569,  3575,  2671,
    3576,  3583,  2672,  3582,  3586,   521,  3588,  3595,  3587,  2222,
    2673,  3602,  3616,  3623,  2010,  3512,  3403,  1071,  3290,   655,
    3363,  3284,  3598,  3625,  3603,  3511,  3169,  2020,  1485,  2674,
     507,   495,   655,   373,   522,  3279,  2997,  3246,  1977,  2427,
     540,  2915,  1935,  2350,   548,  2407,  2675,  2911,  2933,   463,
    1564,  1981,  3264,  3422,   567,  3423,  3424,  2972,   372,   523,
    3101,  2934,  3142,  3134,  2912,   524,  2676,  3400,  2677,  2290,
    3396,  2875,  3261,  1578,  3344,  3269,   463,  3293,  2397,  1898,
    1466,  1563,  1082,  2243,  1836,  2565,   661,  2678,  2679,  2262,
    2239,  1059,   988,   664,  3310,  3037,  1858,  3202,  1769,  1764,
    2552,  3038,   525,   463,  2459,  2883,  3494,   463,  3335,  2546,
    3244,  3544,  3065,   685,  2272,   463,   463,  2235,  1386,  3056,
     697,   548,  2894,  2857,  3448,  2249,  3565,  1617,  2680,  1404,
     716,  2856,   650,  1669,   721,  1583,   722,   636,  2850,   898,
     373,  3321,   373,  1796,   548,   463,  1139,  1406,  3474,  3494,
    3389,  3450,  3578,  3138,  2860,  2681,  1868,  1420,  2616,  3070,
    2879,  3235,  1830,   583,  2682,  2683,   976,  2684,  3301,  1411,
    1379,  1568,   516,  2554,   585,  3307,   372,   676,   945,   980,
    2422,  1134,  3167,     0,     0,  2994,     0,     0,     0,     0,
       0,   372,     0,     0,   463,  2685,  2686,  2687,     0,     0,
       0,     0,   548,   463,     0,  3411,     0,   463,     0,     0,
       0,     0,     0,   526,   463,  2688,  2689,  2690,     0,   655,
     655,  2691,   655,     0,  2692,     0,     0,     0,     0,     0,
     527,   372,     0,     0,     0,     0,   528,  2693,  2694,     0,
       0,     0,   529,   517,   548,     0,     0,     0,     0,     0,
     655,     0,   372,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2695,     0,  2696,     0,   530,     0,     0,     0,
    3444,   518,   372,     0,     0,     0,     0,   531,   532,     0,
       0,     0,     0,     0,     0,   519,  2697,   655,     0,   655,
     655,  3444,  3444,     0,     0,     0,     0,   372,     0,   372,
    1062,     0,     0,     0,     0,     0,     0,   520,   548,     0,
     372,   463,     0,   533,  1081,   463,   372,     0,   521,     0,
       0,     0,     0,     0,     0,  3444,  3444,     0,     0,  2698,
    3444,  2699,     0,     0,     0,     0,     0,     0,  3161,     0,
       0,  2700,     0,  3444,     0,  3444,     0,   522,     0,   463,
       0,  1141,     0,     0,     0,     0,     0,   534,  3411,   535,
     372,     0,     0,     0,     0,     0,     0,     0,     0,  3444,
       0,     0,   523,     0,     0,     0,     0,     0,   524,     0,
       0,     0,  2701,  2702,     0,  3444,  2703,  2704,  2705,  2706,
       0,     0,     0,  3444,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1497,  3444,     0,     0,   372,     0,
       0,  1498,     0,   372,   372,   525,     0,     0,  3444,     0,
       0,  1499,  1500,     0,     0,  3444,  3444,   372,     0,  2707,
    2708,     0,     0,     0,     0,  3444,     0,     0,     0,  3444,
    3613,     0,     0,     0,     0,     0,   372,     0,  2709,  3444,
    1501,     0,     0,     0,  1502,     0,     0,     0,     0,     0,
       0,     0,  3444,     0,  3444,  1503,     0,  3613,  3444,     0,
       0,     0,     0,     0,  1504,     0,     0,     0,  3444,  1505,
       0,     0,     0,   372,  3562,     0,     0,     0,     0,     0,
       0,  1506,     0,     0,     0,     0,   372,     0,     0,  1290,
     548,  1293,     0,     0,     0,     0,  1063,     0,     0,  1507,
       0,     0,     0,     0,     0,     0,     0,     0,  1508,  3624,
       0,     0,     0,     0,  1510,     0,   526,     0,     0,     0,
       0,     0,  1511,     0,   463,     0,     0,     0,  1512,   463,
       0,     0,     0,   527,     0,     0,     0,     0,     0,   528,
       0,     0,     0,     0,     0,   529,     0,     0,     0,     0,
       0,     0,     0,  1513,     0,     0,     0,     0,   372,     0,
       0,     0,     0,     0,     0,     0,  1380,     0,  1383,   530,
     463,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     531,   532,   463,   548,     0,     0,     0,     0,     0,     0,
       0,     0,   463,   463,     0,     0,     0,     0,     0,     0,
       0,  1515,   372,  1412,     0,     0,     0,     0,  1516,     0,
       0,  1421,     0,     0,     0,     0,   533,     0,     0,     0,
       0,   372,   372,     0,     0,   373,   373,   463,   463,     0,
       0,     0,     0,     0,     0,   373,     0,   548,     0,     0,
       0,     0,   372,   373,   372,     0,   372,     0,     0,     0,
    3377,     0,     0,   463,     0,     0,     0,     0,     0,   372,
     534,     0,   535,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1517,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1518,     0,
       0,     0,     0,  1519,   372,     0,     0,     0,     0,   463,
       0,     0,   463,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   868,     0,     0,     0,
       0,     0,     0,     0,     0,  3442,     0,     0,     0,     0,
     372,     0,     0,  1481,     0,     0,     0,     0,     0,  1520,
       0,  1521,     0,   372,     0,     0,  3442,  3442,   372,     0,
       0,   548,     0,   548,   373,   373,     0,   463,     0,     0,
       0,     0,  1522,  1523,     0,  1524,   721,     0,  1586,   947,
     372,     0,     0,     0,     0,     0,  1499,  1500,     0,  1525,
    3442,  3442,     0,     0,     0,  3442,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3442,     0,
    3442,  1526,  1626,     0,     0,     0,     0,  -447,  -447,  1502,
       0,     0,     0,     0,     0,     0,  -447,     0,     0,     0,
    1503,     0,     0,     0,  3442,  1499,  1500,   372,     0,  1504,
       0,     0,     0,   372,     0,     0,     0,     0,     0,   372,
    3442,     0,     0,     0,  1626,     0,  1506,     0,  3442,     0,
       0,   372,     0,     0,     0,   372,     0,     0,  1502,     0,
    3442,  1063,     0,     0,  1507,     0,     0,     0,     0,  1503,
       0,     0,     0,  3442,     0,     0,     0,   372,  1504,   372,
    3442,  3442,  1527,     0,   372,     0,     0,     0,     0,     0,
    3442,  1528,     0,  1512,  3442,  1506,     0,  1090,     0,     0,
       0,     0,  1729,     0,  3442,     0,     0,   372,     0,     0,
    1063,     0,     0,  1507,     0,     0,     0,  3442,     0,  3442,
       0,     0,     0,  3442,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3442,   372,     0,     0,     0,     0,     0,
       0,     0,  1512,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1515,     0,     0,     0,
       0,     0,   548,  1516,     0,     0,     0,  1787,     0,     0,
       0,   548,     0,     0,     0,     0,   548,     0,     0,     0,
       0,     0,   463,     0,  1799,     0,     0,  1207,     0,  1804,
    1804,     0,  1804,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   463,  1515,     0,   463,     0,     0,
       0,     0,  1516,   548,   548,   463,   463,     0,     0,     0,
       0,     0,     0,  1804,  1804,  1804,     0,     0,     0,  1517,
       0,     0,     0,  1325,  1326,  1327,  1328,  1329,     0,     0,
       0,  1871,     0,  1518,     0,     0,     0,     0,     0,     0,
    1882,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1283,     0,     0,     0,  1289,  1890,     0,     0,
       0,     0,   463,     0,     0,     0,     0,     0,  1517,     0,
       0,     0,     0,     0,  1900,     0,     0,     0,     0,     0,
     463,     0,  1518,     0,  1520,     0,  1521,     0,     0,     0,
       0,     0,     0,     0,     0,  1330,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1522,  1523,     0,
    1524,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1331,  1332,  1333,
    1334,     0,     0,  1520,     0,  1521,     0,     0,  1984,     0,
       0,     0,     0,     0,     0,     0,  1526,  1988,     0,     0,
       0,     0,     0,     0,     0,     0,  1522,  1523,     0,  1524,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   373,     0,     0,     0,     0,
    1419,     0,     0,   463,     0,     0,  2028,     0,     0,  1434,
       0,     0,     0,     0,     0,  1526,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1335,     0,  1336,  1337,  1338,     0,     0,  1527,     0,     0,
       0,     0,  1339,     0,     0,     0,  1528,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1527,     0,     0,     0,
       0,     0,     0,     0,     0,  1528,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1340,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1588,
    1589,  1590,  1341,  1342,     0,   548,     0,  2190,  1605,  1606,
       0,     0,  1609,     0,  1611,  1612,  1613,  1614,     0,     0,
       0,  1618,     0,     0,  1620,  1621,     0,  1622,     0,  1623,
    1624,     0,  1627,  1628,  1629,  1630,  1631,     0,     0,     0,
    1634,     0,  1636,  1637,  1638,     0,  1640,  1641,  1642,  1643,
       0,  1645,  1646,     0,  1652,     0,     0,  1656,  1657,  1658,
       0,  1660,  1661,  1662,  1663,     0,  1665,  1666,  1667,  1668,
       0,     0,     0,     0,     0,  1675,  1676,     0,  1679,  1680,
    1681,  1682,  1683,     0,     0,     0,     0,  1687,     0,  1688,
    1689,  1690,  1691,  1692,     0,     0,  1695,  1697,  1698,  1699,
    1700,  1701,     0,  1703,  1704,     0,     0,  1707,  1708,  1709,
       0,  1712,  2256,  1713,     0,     0,  1343,  1716,     0,  1720,
    1721,     0,     0,     0,     0,  1724,     0,  1344,  1345,     0,
    2278,  2280,     0,  1731,  1732,  1733,     0,   548,     0,   548,
     548,     0,     0,  1737,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1729,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   548,   548,     0,     0,
       0,     0,     0,     0,     0,     0,  1984,     0,     0,     0,
       0,     0,  1984,  1785,     0,  1984,     0,     0,  1984,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1984,
    1984,     0,   548,     0,     0,     0,     0,     0,  1984,     0,
       0,     0,     0,     0,     0,     0,     0,   463,     0,   548,
       0,     0,     0,  1984,  2402,     0,     0,     0,     0,  1832,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   463,  1984,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     1,     0,     0,     0,     0,     0,   548,
       0,     0,     0,     2,     3,     0,   548,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     4,     0,     5,  2466,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     6,     7,     0,     0,
       0,     0,     8,     0,     0,     0,     9,    10,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    11,
       0,     0,     0,     0,     0,  1626,     0,     0,     0,     0,
       0,     0,     0,     0,    12,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1989,     0,
       0,     0,     0,    13,     0,     0,     0,     0,     0,     0,
       0,     0,    14,    15,    16,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    17,    18,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    19,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    20,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2553,     0,     0,    21,  1799,
       0,   945,   548,   548,   548,    22,     0,     0,    23,     0,
       0,     0,   463,     0,     0,     0,   548,     0,     0,  1729,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    24,
       0,     0,     0,   548,   548,   548,     0,     0,     0,     0,
       0,     0,   548,    25,     0,     0,     0,     0,     0,  2597,
       0,     0,     0,     0,     0,  2599,     0,  2601,     0,     0,
       0,    26,     0,     0,     0,   548,    27,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2163,  2165,  2167,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2189,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1984,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   548,     0,     0,  1984,
       0,     0,     0,     0,     0,  2216,     0,     0,     0,     0,
       0,    28,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     463,     0,    29,     0,     0,     0,     0,  2662,     0,    30,
     463,     0,     0,     0,  2718,  2719,     0,     0,  2722,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   463,    31,
       0,    32,    33,     0,     0,    34,     0,     0,    35,     0,
      36,     0,     0,     0,     0,    37,     0,    38,     0,     0,
       0,     0,     0,     0,     0,     0,    39,     0,     0,     0,
      40,     0,     0,     0,     0,     0,    41,     0,     2,     3,
       0,    42,     0,     0,     0,    43,     0,     0,     0,     0,
       0,     4,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    44,     0,     0,     0,    45,     0,
       0,     6,     7,     0,     0,     0,     0,     8,     0,     0,
       0,     9,    10,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    11,     0,     0,     0,     0,     0,
       0,     0,    46,     0,     0,     0,     0,     0,     0,    12,
       0,  2835,     0,     0,     0,     0,     0,     0,    47,     0,
       0,    48,     0,     0,     0,     0,    49,     0,    13,     0,
       0,     0,     0,     0,     0,     0,     0,    14,    15,    16,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    50,
      17,    18,     0,  2256,  2861,     0,   548,     0,     0,     0,
       0,     0,     0,     0,   548,     0,     0,     0,     0,     0,
      51,     0,  2553,    19,     0,     0,     0,     0,     0,     0,
       0,     0,   548,     0,     0,     0,     0,     0,     0,    20,
    1871,     0,     0,     0,     0,  2440,     0,     0,  2441,     0,
       0,  2443,  2444,     0,     0,     0,     0,  1729,     0,     0,
       0,     0,     0,    21,  2457,     0,     0,  2460,     0,  1984,
      22,     0,     0,    23,     0,     0,  1984,     0,     0,     0,
    2467,     0,  2468,     0,     0,  1984,  2471,     0,  2472,  2473,
       0,     0,     0,  2476,    24,  2477,  2478,     0,  2479,     0,
       0,  2480,     0,  2481,  2482,     0,     0,     0,    25,  2486,
    2487,     0,     0,  2489,     0,  2490,     0,  2491,     0,  2492,
       0,  2494,     0,     0,     0,     0,    26,     0,     0,     0,
       0,    27,  2499,  2500,     0,     0,  2501,     0,  2502,     0,
       0,     0,     0,     0,     0,     0,  2503,  2504,     0,  2505,
       0,  2506,     0,     0,  2507,  2508,  2509,     0,  2510,  3002,
       0,     0,     0,  2513,  2514,  2515,  2516,     0,     0,     0,
       0,  2518,  2519,  2520,     0,  2521,     0,  2523,     0,  2525,
       0,  2527,     0,  2528,     0,     0,     0,     0,     0,     0,
    2530,     0,  2531,     0,     0,  2534,     0,     0,   601,     0,
     563,   602,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    28,     0,     0,     0,
       0,     0,   603,   604,     0,     0,     0,     0,     0,     0,
       0,     0,   605,     0,   606,     0,     0,    29,     0,     0,
       0,     0,     0,     0,    30,  2561,     0,     0,     0,     0,
       0,   607,   608,     0,     0,     0,     0,     0,     0,     0,
     609,     0,     0,     0,    31,     0,    32,    33,     0,     0,
      34,     0,     0,    35,     0,    36,     0,  1729,     0,     0,
      37,     0,    38,     0,     0,     0,     0,     0,     0,     0,
       0,    39,   548,     0,     0,    40,     0,  2606,     0,     0,
       0,    41,  2610,     0,     0,     0,    42, -1320,   610,     0,
      43,     0,   611,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    44,
       0,     0,  3002,    45,     0,     0,     0,     0,     0,     0,
       0,   612,     0,   613,     0,  2641,     0,     0,     0,     0,
       0,     0,     0,   548,     0,   614,     0,   615,     0,  2644,
       0,     0,     0,     0,     0,     0,     0,    46,     0,     0,
       0,     0,     0,   548,     0,     0,     0,     0,     0,     0,
     616,   617,     0,    47,   618,     0,    48,     0,     0,     0,
       0,    49,     0,     0,     0,     0,     0,     0,  3152,   619,
    3153,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   463,     0,     0,    50,     0,     0,  3166,     0,     0,
     620,     0,     0,     0,     0,   621,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    51,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   622,
       0,     0,  2739,     0,     0,     0,     0,     0,     0,     0,
       0,  2278,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   623,     0,     0,     0,     0,     0,     0,     0,     0,
     624,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   625,  3243,
       0,     0,     0,     0,  3002,  3002,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2810,     0,     0,  3260,     0,
       0,     0,     0,   626,   627,  2821,     0,  2823,     0,  2825,
       0,     0,     0,     0,     0,  2831,     0,   548,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2838,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3285,     0,     0,     0,     0,     0,
       0,     0,     0,   628,     0,     0,     0,  3002,     0,     0,
       0,     0,     0,   629,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0, -1748,     0,     0,     0,   630,     0,     0,
    2880,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     631,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1988,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0, -1748,     0,     0,     0,   632,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3166,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1729,   463,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3243,     0,  3243,     0,  3394,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3401,  3008,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3012,     0,     0,     0,     0,     0,  3013,     0,     0,
       0,     0,     0,     0,     0,     0,  3017,  3018,     0,     0,
       0,     0,  3019,     0,     0,  3421,  3020,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3024,
       0,     0,     0,     0,     0,  3026,     0,     0,  3027,  3028,
       0,  3029,  3030,     0,     0,     0,     0,     0,     0,     0,
       0,  1729,     0,     0,     0,     0,  3035,  3036,     0,     0,
       0,     0,     0,     0,  3454,     0,     0,     0,     0,  3461,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3478,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3083,  3084,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2641,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1729,     0,
       0,     0,     0,     0,  3546,     0,     0,     0,     0,     0,
    3555,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   548,     0,     0,     0,  1729,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1729,     0,
    3579,     0,     0,     0,     0,  3584,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3614,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3614,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2641,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2606,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3296,     0,     0,     0,     0,
       0,  3298,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3300,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3315,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3328,     0,  3330,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2641,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3416,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3426,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3481,     0,  3483,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3501,     0,     0,     0,     0,     0,     0,
       0,  3510,     0,     0,     0,     0,     0,  3516,     0,     0,
       0,     0,     0,     0,     0,     0,  3524,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   122,     0,
     723,   124,   125,   126,   127,     0,     0,     0,     0,     0,
     128,     0,     0,   724,  3559,   725,   130,   131,   726,   133,
       0,   134,   727,   135,     0,   728,   136,   729,   730,   731,
     137,   732,     0,   138,   139,  1717,   140,     0,   141,   142,
       0,     0,   143,   733,   144,     0,   145,   734,   735,   147,
       0,   148,   149,   150,   736,   151,     0,   737,   153,     0,
     154,   155,   156,   157,   158,   738,   739,   159,     0,     0,
     160,     0,   740,     0,   741,   742,   743,     0,  3615,   162,
     744,   745,     0,   746,   747,     0,   163,   164,   748,   749,
     750,     0,     0,     0,     0,   751,   167,   752,     0,     0,
     753,   754,   168,     0,   169,     0,     0,     0,   755,   756,
     170,     0,   171,   172,   173,     0,     0,     0,   174,     0,
       0,   175,   176,   177,     0,     0,   757,   178,     0,   758,
     759,   179,   180,   181,   182,     0,     0,   183,     0,   184,
     185,   186,   760,     0,   187,   761,   188,   762,   763,   189,
       0,   764,   190,   191,   192,   765,     0,   193,     0,     0,
     766,     0,   194,   195,     0,   767,   196,     0,   197,   768,
     769,   770,   771,     0,   772,   773,   199,   774,   775,   776,
     201,     0,   202,   777,     0,   778,   779,     0,   203,   204,
       0,   205,   780,     0,   206,     0,     0,     0,   781,   208,
     209,   210,   782,     0,   211,   212,     0,     0,     0,   213,
       0,     0,   783,   214,   784,     0,     0,   215,     0,     0,
     216,   217,     0,     0,     0,     0,     0,     0,   218,   785,
     219,     0,  1718,   786,   220,     0,   787,   221,     0,     0,
       0,   788,     0,   789,     0,   223,   790,     0,   224,     0,
     225,   791,     0,     0,   792,     0,     0,     0,     0,   793,
     226,   227,   228,   229,   230,   231,   794,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   795,   241,   242,   243,
     796,   244,   245,     0,     0,     0,   246,   247,   797,   249,
       0,     0,   798,   251,   799,   800,   252,     0,   253,   801,
     802,   803,   804,   805,   806,   807,   258,   259,   260,   261,
       0,   808,   262,   263,     0,   264,   265,   266,   809,   810,
     811,   267,     0,   812,   813,     0,   268,   269,     0,   814,
       0,   271,   272,   273,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   274,   275,   815,   816,   277,   817,
     818,   819,   820,   821,     0,   280,   281,     0,   282,     0,
     283,   284,     0,   822,   286,   287,   288,   289,   290,   291,
     292,   823,     0,     0,     0,   293,   294,     0,     0,   295,
     296,   297,     0,   298,     0,   299,   300,   824,   825,   301,
       0,   302,   303,   304,     0,   305,   306,     0,     0,   826,
     307,   308,   827,   309,   310,   828,   311,   829,   313,   314,
       0,   830,   316,     0,     0,     0,   317,   318,   319,     0,
       0,   320,     0,     0,     0,   321,   322,   323,   324,     0,
     325,   326,     0,     0,     0,     0,     0,     0,   327,   328,
       0,   329,     0,     0,   330,     0,     0,   331,   332,   831,
     832,   333,   334,     0,   335,   833,   337,   834,   835,   836,
     338,   339,   837,   340,   341,     0,   342,   343,     0,   653,
     344,   838,   839,   840,   841,     0,     0,     0,     0,  1719,
     349,     0,   350,   842,   843,   844,   352,   353,   354,     0,
     845,   355,   356,   846,     0,   357,     0,     0,   847,   848,
     358,     0,     0,   359,     0,     0,     0,   849,   361,     0,
       0,   850,   851,   852,   853,   854,   362,     0,     0,   363,
     855,     0,   364,   365,   856,     0,     0,     0,     0,   367,
       0,   368,   369,     0,   857,     0,   858,     0,     0,     0,
       0,   859,     0,     0,     0,   860,   861,     0,     0,     0,
       0,   862,     0,   863,     0,     0,   864,   865,     0,   866,
     867,   122,     0,   723,   124,   125,   126,   127,  2602,     0,
       0,     0,     0,   128,     0,     0,   724,     0,   725,   130,
     131,   726,   133,     0,   134,   727,   135,     0,  2603,   136,
     729,   730,   731,   137,   732,     0,   138,   139,     0,   140,
       0,   141,   142,     0,     0,   143,   733,   144,     0,   145,
     734,   735,   147,     0,   148,   149,   150,   736,   151,     0,
     737,   153,     0,   154,   155,   156,   157,   158,   738,   739,
     159,     0,     0,   160,     0,   740,     0,   741,   742,   743,
       0,     0,   162,   744,   745,     0,   746,   747,     0,   163,
     164,   748,   749,   750,     0,     0,     0,     0,   751,   167,
     752,     0,     0,   753,  2604,   168,     0,   169,     0,     0,
       0,   755,   756,   170,     0,   171,   172,   173,     0,     0,
       0,   174,     0,     0,   175,   176,   177,     0,     0,   757,
     178,     0,   758,   759,   179,   180,   181,   182,     0,     0,
     183,     0,   184,   185,   186,   760,     0,   187,   761,   188,
     762,   763,   189,     0,   764,   190,   191,   192,   765,     0,
     193,     0,     0,   766,     0,   194,   195,     0,   767,   196,
       0,   197,   768,   769,   770,   771,     0,   772,   773,   199,
     774,   775,   776,   201,     0,   202,   777,     0,   778,   779,
       0,   203,   204,     0,   205,   780,     0,   206,     0,     0,
       0,   781,   208,   209,   210,   782,     0,   211,   212,     0,
       0,     0,   213,     0,     0,   783,   214,   784,     0,     0,
     215,     0,     0,   216,   217,     0,     0,     0,     0,     0,
       0,   218,   785,   219,     0,     0,   786,   220,     0,   787,
     221,     0,     0,     0,   788,     0,   789,     0,   223,   790,
       0,   224,     0,   225,   791,     0,     0,   792,     0,     0,
       0,     0,   793,   226,   227,   228,   229,   230,   231,   794,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   795,
     241,   242,   243,   796,   244,   245,     0,     0,     0,   246,
     247,   797,   249,     0,     0,   798,   251,   799,   800,   252,
       0,   253,   801,   802,   803,   804,   805,   806,   807,   258,
     259,   260,   261,     0,   808,   262,   263,     0,   264,   265,
     266,   809,   810,   811,   267,     0,   812,   813,     0,   268,
     269,     0,   814,  2605,   271,   272,   273,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   274,   275,   815,
     816,   277,   817,   818,   819,   820,   821,     0,   280,   281,
       0,   282,     0,   283,   284,     0,   822,   286,   287,   288,
     289,   290,   291,   292,   823,     0,     0,     0,   293,   294,
       0,     0,   295,   296,   297,     0,   298,     0,   299,   300,
     824,   825,   301,     0,   302,   303,   304,     0,   305,   306,
       0,     0,   826,   307,   308,   827,   309,   310,   828,   311,
     829,   313,   314,     0,   830,   316,     0,     0,     0,   317,
     318,   319,     0,     0,   320,     0,     0,     0,   321,   322,
     323,   324,     0,   325,   326,     0,     0,     0,     0,     0,
       0,   327,   328,     0,   329,     0,     0,   330,     0,     0,
     331,   332,   831,   832,   333,   334,     0,   335,   833,   337,
     834,   835,   836,   338,   339,   837,   340,   341,     0,   342,
     343,     0,   653,   344,   838,   839,   840,   841,     0,     0,
       0,     0,     0,   349,     0,   350,   842,   843,   844,   352,
     353,   354,     0,   845,   355,   356,   846,     0,   357,     0,
       0,   847,   848,   358,     0,     0,   359,     0,     0,     0,
     849,   361,     0,     0,   850,   851,   852,   853,   854,   362,
       0,     0,   363,   855,     0,   364,   365,   856,     0,     0,
       0,     0,   367,     0,   368,   369,     0,   857,     0,   858,
       0,     0,     0,     0,   859,     0,     0,     0,   860,   861,
       0,     0,     0,     0,   862,     0,   863,     0,     0,   864,
     865,     0,   866,   867,   122,     0,   723,   124,   125,   126,
     127,     0,     0,     0,     0,     0,   128,     0,     0,   724,
       0,   725,   130,   131,   726,   133,     0,   134,   727,   135,
       0,   728,   136,   729,   730,   731,   137,   732,     0,   138,
     139,     0,   140,     0,   141,   142,     0,     0,   143,   733,
     144,     0,   145,   734,   735,   147,     0,   148,   149,   150,
     736,   151,     0,   737,   153,     0,   154,   155,   156,   157,
     158,   738,   739,   159,     0,     0,   160,     0,   740,     0,
     741,   742,   743,     0,     0,   162,   744,   745,     0,   746,
     747,     0,   163,   164,   748,   749,   750,     0,     0,     0,
       0,   751,   167,   752,     0,     0,   753,   754,   168,     0,
     169,     0,     0,     0,   755,   756,   170,     0,   171,   172,
     173,     0,     0,     0,   174,     0,     0,   175,   176,   177,
       0,     0,   757,   178,     0,   758,   759,   179,   180,   181,
     182,     0,     0,   183,     0,   184,   185,   186,   760,     0,
     187,   761,   188,   762,   763,   189,     0,   764,   190,   191,
     192,   765,     0,   193,     0,     0,   766,     0,   194,   195,
       0,   767,   196,     0,   197,   768,   769,   770,   771,     0,
     772,   773,   199,   774,   775,   776,   201,     0,   202,   777,
       0,   778,   779,     0,   203,   204,     0,   205,   780,     0,
     206,     0,     0,     0,   781,   208,   209,   210,   782,     0,
     211,   212,     0,     0,     0,   213,     0,     0,   783,   214,
     784,     0,     0,   215,     0,     0,   216,   217,     0,     0,
       0,     0,     0,     0,   218,   785,   219,     0,     0,   786,
     220,     0,   787,   221,     0,     0,     0,   788,     0,   789,
       0,   223,   790,     0,   224,     0,   225,   791,     0,     0,
     792,     0,     0,     0,     0,   793,   226,   227,   228,   229,
     230,   231,   794,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   795,   241,   242,   243,   796,   244,   245,     0,
       0,     0,   246,   247,   797,   249,     0,     0,   798,   251,
     799,   800,   252,     0,   253,   801,   802,   803,   804,   805,
     806,   807,   258,   259,   260,   261,     0,   808,   262,   263,
       0,   264,   265,   266,   809,   810,   811,   267,     0,   812,
     813,     0,   268,   269,     0,   814,     0,   271,   272,   273,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     274,   275,   815,   816,   277,   817,   818,   819,   820,   821,
       0,   280,   281,     0,   282,     0,   283,   284,     0,   822,
     286,   287,   288,   289,   290,   291,   292,   823,     0,     0,
       0,   293,   294,     0,     0,   295,   296,   297,     0,   298,
       0,   299,   300,   824,   825,   301,     0,   302,   303,   304,
       0,   305,   306,     0,     0,   826,   307,   308,   827,   309,
     310,   828,   311,   829,   313,   314,     0,   830,   316,  1288,
       0,     0,   317,   318,   319,     0,     0,   320,     0,     0,
       0,   321,   322,   323,   324,     0,   325,   326,     0,     0,
       0,     0,     0,     0,   327,   328,     0,   329,     0,     0,
     330,     0,     0,   331,   332,   831,   832,   333,   334,     0,
     335,   833,   337,   834,   835,   836,   338,   339,   837,   340,
     341,     0,   342,   343,     0,   653,   344,   838,   839,   840,
     841,     0,     0,     0,     0,     0,   349,     0,   350,   842,
     843,   844,   352,   353,   354,     0,   845,   355,   356,   846,
       0,   357,     0,     0,   847,   848,   358,     0,     0,   359,
       0,     0,     0,   849,   361,     0,     0,   850,   851,   852,
     853,   854,   362,     0,     0,   363,   855,     0,   364,   365,
     856,     0,     0,     0,     0,   367,     0,   368,   369,     0,
     857,     0,   858,     0,     0,     0,     0,   859,     0,     0,
       0,   860,   861,     0,     0,     0,     0,   862,     0,   863,
       0,     0,   864,   865,     0,   866,   867,   122,     0,   723,
     124,   125,   126,   127,     0,     0,     0,     0,     0,   128,
       0,     0,   724,     0,   725,   130,   131,   726,   133,     0,
     134,   727,   135,     0,   728,   136,   729,   730,   731,   137,
     732,     0,   138,   139,     0,   140,     0,   141,   142,     0,
       0,   143,   733,   144,     0,   145,   734,   735,   147,     0,
     148,   149,   150,   736,   151,     0,   737,   153,     0,   154,
     155,   156,   157,   158,   738,   739,   159,     0,     0,   160,
       0,   740,     0,   741,   742,   743,     0,     0,   162,   744,
     745,     0,   746,   747,     0,   163,   164,   748,   749,   750,
       0,     0,     0,     0,   751,   167,   752,     0,     0,   753,
     754,   168,     0,   169,     0,     0,     0,   755,   756,   170,
       0,   171,   172,   173,     0,     0,     0,   174,     0,     0,
     175,   176,   177,     0,     0,   757,   178,     0,   758,   759,
     179,   180,   181,   182,     0,     0,   183,     0,   184,   185,
     186,   760,     0,   187,   761,   188,   762,   763,   189,     0,
     764,   190,   191,   192,   765,     0,   193,     0,     0,   766,
       0,   194,   195,     0,   767,   196,     0,   197,   768,   769,
     770,   771,     0,   772,   773,   199,   774,   775,   776,   201,
       0,   202,   777,     0,   778,   779,     0,   203,   204,     0,
     205,   780,     0,   206,     0,     0,     0,   781,   208,   209,
     210,   782,     0,   211,   212,     0,     0,     0,   213,     0,
       0,   783,   214,   784,     0,     0,   215,     0,     0,   216,
     217,     0,     0,     0,     0,     0,     0,   218,   785,   219,
       0,     0,   786,   220,     0,   787,   221,     0,     0,     0,
     788,     0,   789,     0,   223,   790,     0,   224,     0,   225,
     791,     0,     0,   792,     0,     0,     0,     0,   793,   226,
     227,   228,   229,   230,   231,   794,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   795,   241,   242,   243,   796,
     244,   245,     0,     0,     0,   246,   247,   797,   249,     0,
       0,   798,   251,   799,   800,   252,     0,   253,   801,   802,
     803,   804,   805,   806,   807,   258,   259,   260,   261,     0,
     808,   262,   263,     0,   264,   265,   266,   809,   810,   811,
     267,     0,   812,   813,     0,   268,   269,     0,   814,     0,
     271,   272,   273,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   274,   275,   815,   816,   277,   817,   818,
     819,   820,   821,     0,   280,   281,     0,   282,     0,   283,
     284,     0,   822,   286,   287,   288,   289,   290,   291,   292,
     823,     0,     0,     0,   293,   294,     0,     0,   295,   296,
     297,     0,   298,     0,   299,   300,   824,   825,   301,     0,
     302,   303,   304,     0,   305,   306,     0,     0,   826,   307,
     308,   827,   309,   310,   828,   311,   829,   313,   314,     0,
     830,   316,     0,     0,     0,   317,   318,   319,     0,     0,
     320,     0,     0,     0,   321,   322,   323,   324,     0,   325,
     326,     0,     0,     0,     0,     0,     0,   327,   328,     0,
     329,     0,     0,   330,     0,     0,   331,   332,   831,   832,
     333,   334,     0,   335,   833,   337,   834,   835,   836,   338,
     339,   837,   340,   341,     0,   342,   343,     0,   653,   344,
     838,   839,   840,   841,     0,     0,     0,     0,     0,   349,
       0,   350,   842,   843,   844,   352,   353,   354,     0,   845,
     355,   356,   846,     0,   357,     0,     0,   847,   848,   358,
       0,     0,   359,     0,     0,     0,   849,   361,     0,     0,
     850,   851,   852,   853,   854,   362,     0,     0,   363,   855,
       0,   364,   365,   856,     0,     0,     0,     0,   367,     0,
     368,   369,     0,   857,     0,   858,     0,     0,     0,     0,
     859,     0,     0,     0,   860,   861,     0,     0,     0,     0,
     862,     0,   863,  1565,     0,   864,   865,     0,   866,   867,
     122,     0,   723,   124,   125,   126,   127,     0,     0,     0,
       0,     0,   128,     0,     0,   724,     0,   725,   130,   131,
     726,   133,     0,   134,   727,   135,     0,   728,   136,   729,
     730,   731,   137,   732,     0,   138,   139,     0,   140,     0,
     141,   142,     0,     0,   143,   733,   144,     0,   145,   734,
     735,   147,     0,   148,   149,   150,   736,   151,     0,   737,
     153,     0,   154,   155,   156,   157,   158,   738,   739,   159,
       0,     0,   160,     0,   740,     0,   741,   742,   743,     0,
       0,   162,   744,   745,     0,   746,   747,     0,   163,   164,
     748,   749,   750,     0,     0,     0,     0,   751,   167,   752,
       0,     0,   753,   754,   168,     0,   169,     0,     0,     0,
     755,   756,   170,     0,   171,   172,   173,     0,     0,     0,
     174,     0,     0,   175,   176,   177,     0,     0,   757,   178,
       0,   758,   759,   179,   180,   181,   182,     0,     0,   183,
       0,   184,   185,   186,   760,     0,   187,   761,   188,   762,
     763,   189,     0,   764,   190,   191,   192,   765,     0,   193,
       0,     0,   766,     0,   194,   195,     0,   767,   196,     0,
     197,   768,   769,   770,   771,     0,   772,   773,   199,   774,
     775,   776,   201,     0,   202,   777,     0,   778,   779,     0,
     203,   204,     0,   205,   780,     0,   206,     0,     0,     0,
     781,   208,   209,   210,   782,     0,   211,   212,     0,     0,
       0,   213,     0,     0,   783,   214,   784,     0,     0,   215,
       0,     0,   216,   217,     0,     0,     0,     0,     0,     0,
     218,   785,   219,     0,     0,   786,   220,     0,   787,   221,
       0,     0,     0,   788,     0,   789,     0,   223,   790,     0,
     224,     0,   225,   791,     0,     0,   792,     0,     0,     0,
       0,   793,   226,   227,   228,   229,   230,   231,   794,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   795,   241,
     242,   243,   796,   244,   245,     0,     0,     0,   246,   247,
     797,   249,     0,     0,   798,   251,   799,   800,   252,     0,
     253,   801,   802,   803,   804,   805,   806,   807,   258,   259,
     260,   261,     0,   808,   262,   263,     0,   264,   265,   266,
     809,   810,   811,   267,     0,   812,   813,     0,   268,   269,
       0,   814,     0,   271,   272,   273,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   274,   275,   815,   816,
     277,   817,   818,   819,   820,   821,     0,   280,   281,     0,
     282,     0,   283,   284,     0,   822,   286,   287,   288,   289,
     290,   291,   292,   823,     0,     0,     0,   293,   294,     0,
       0,   295,   296,   297,     0,   298,     0,   299,   300,   824,
     825,   301,     0,   302,   303,   304,     0,   305,   306,     0,
       0,   826,   307,   308,   827,   309,   310,   828,   311,   829,
     313,   314,     0,   830,   316,     0,     0,     0,   317,   318,
     319,     0,     0,   320,     0,     0,     0,   321,   322,   323,
     324,     0,   325,   326,     0,     0,     0,     0,     0,     0,
     327,   328,     0,   329,     0,     0,   330,     0,     0,   331,
     332,   831,   832,   333,   334,     0,   335,   833,   337,   834,
     835,   836,   338,   339,   837,   340,   341,     0,   342,   343,
       0,   653,   344,   838,   839,   840,   841,     0,     0,     0,
       0,     0,   349,     0,   350,   842,   843,   844,   352,   353,
     354,     0,   845,   355,   356,   846,     0,   357,     0,     0,
     847,   848,   358,     0,     0,   359,     0,     0,     0,   849,
     361,     0,     0,   850,   851,   852,   853,   854,   362,     0,
       0,   363,   855,     0,   364,   365,   856,     0,     0,     0,
       0,   367,     0,   368,   369,     0,   857,     0,   858,     0,
       0,     0,     0,   859,     0,     0,     0,   860,   861,     0,
       0,     0,     0,   862,     0,   863,  1659,     0,   864,   865,
       0,   866,   867,   122,     0,   723,   124,   125,   126,   127,
       0,     0,     0,     0,     0,   128,     0,     0,   724,     0,
     725,   130,   131,   726,   133,     0,   134,   727,   135,     0,
     728,   136,   729,   730,   731,   137,   732,     0,   138,   139,
       0,   140,     0,   141,   142,     0,     0,   143,   733,   144,
       0,   145,   734,   735,   147,     0,   148,   149,   150,   736,
     151,     0,   737,   153,     0,   154,   155,   156,   157,   158,
     738,   739,   159,     0,     0,   160,     0,   740,     0,   741,
     742,   743,     0,     0,   162,   744,   745,     0,   746,   747,
       0,   163,   164,   748,   749,   750,     0,     0,     0,     0,
     751,   167,   752,     0,     0,   753,   754,   168,     0,   169,
       0,     0,     0,   755,   756,   170,     0,   171,   172,   173,
       0,     0,     0,   174,     0,     0,   175,   176,   177,     0,
       0,   757,   178,     0,   758,   759,   179,   180,   181,   182,
       0,     0,   183,     0,   184,   185,   186,   760,     0,   187,
     761,   188,   762,   763,   189,     0,   764,   190,   191,   192,
     765,     0,   193,     0,     0,   766,     0,   194,   195,     0,
     767,   196,     0,   197,   768,   769,   770,   771,     0,   772,
     773,   199,   774,   775,   776,   201,     0,   202,   777,     0,
     778,   779,     0,   203,   204,     0,   205,   780,     0,   206,
       0,     0,     0,   781,   208,   209,   210,   782,     0,   211,
     212,     0,     0,     0,   213,     0,     0,   783,   214,   784,
       0,     0,   215,     0,     0,   216,   217,     0,     0,     0,
       0,     0,     0,   218,   785,   219,     0,     0,   786,   220,
       0,   787,   221,     0,     0,     0,   788,     0,   789,     0,
     223,   790,     0,   224,     0,   225,   791,     0,     0,   792,
       0,     0,     0,     0,   793,   226,   227,   228,   229,   230,
     231,   794,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   795,   241,   242,   243,   796,   244,   245,     0,     0,
       0,   246,   247,   797,   249,     0,     0,   798,   251,   799,
     800,   252,     0,   253,   801,   802,   803,   804,   805,   806,
     807,   258,   259,   260,   261,     0,   808,   262,   263,     0,
     264,   265,   266,   809,   810,   811,   267,     0,   812,   813,
       0,   268,   269,     0,   814,     0,   271,   272,   273,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   274,
     275,   815,   816,   277,   817,   818,   819,   820,   821,     0,
     280,   281,     0,   282,     0,   283,   284,     0,   822,   286,
     287,   288,   289,   290,   291,   292,   823,     0,     0,     0,
     293,   294,     0,     0,   295,   296,   297,     0,   298,     0,
     299,   300,   824,   825,   301,     0,   302,   303,   304,     0,
     305,   306,     0,     0,   826,   307,   308,   827,   309,   310,
     828,   311,   829,   313,   314,     0,   830,   316,     0,     0,
       0,   317,   318,   319,     0,     0,   320,     0,     0,     0,
     321,   322,   323,   324,     0,   325,   326,     0,     0,     0,
       0,     0,     0,   327,   328,     0,   329,     0,     0,   330,
       0,     0,   331,   332,   831,   832,   333,   334,     0,   335,
     833,   337,   834,   835,   836,   338,   339,   837,   340,   341,
       0,   342,   343,     0,   653,   344,   838,   839,   840,   841,
       0,     0,     0,     0,     0,   349,     0,   350,   842,   843,
     844,   352,   353,   354,     0,   845,   355,   356,   846,     0,
     357,     0,     0,   847,   848,   358,     0,     0,   359,     0,
       0,     0,   849,   361,     0,     0,   850,   851,   852,   853,
     854,   362,     0,     0,   363,   855,     0,   364,   365,   856,
       0,     0,     0,     0,   367,     0,   368,   369,     0,   857,
       0,   858,     0,     0,     0,     0,   859,     0,     0,     0,
     860,   861,     0,     0,     0,     0,   862,     0,   863,  1696,
       0,   864,   865,     0,   866,   867,   122,     0,   723,   124,
     125,   126,   127,     0,     0,     0,     0,     0,   128,     0,
       0,   724,     0,   725,   130,   131,   726,   133,     0,   134,
     727,   135,     0,   728,   136,   729,   730,   731,   137,   732,
       0,   138,   139,     0,   140,     0,   141,   142,     0,     0,
     143,   733,   144,     0,   145,   734,   735,   147,     0,   148,
     149,   150,   736,   151,     0,   737,   153,     0,   154,   155,
     156,   157,   158,   738,   739,   159,     0,     0,   160,     0,
     740,     0,   741,   742,   743,     0,     0,   162,   744,   745,
       0,   746,   747,     0,   163,   164,   748,   749,   750,     0,
       0,     0,     0,   751,   167,   752,     0,     0,   753,   754,
     168,     0,   169,     0,     0,     0,   755,   756,   170,     0,
     171,   172,   173,     0,     0,     0,   174,     0,     0,   175,
     176,   177,     0,     0,   757,   178,     0,   758,   759,   179,
     180,   181,   182,     0,     0,   183,     0,   184,   185,   186,
     760,     0,   187,   761,   188,   762,   763,   189,     0,   764,
     190,   191,   192,   765,     0,   193,     0,     0,   766,     0,
     194,   195,     0,   767,   196,     0,   197,   768,   769,   770,
     771,     0,   772,   773,   199,   774,   775,   776,   201,     0,
     202,   777,     0,   778,   779,     0,   203,   204,     0,   205,
     780,     0,   206,     0,     0,     0,   781,   208,   209,   210,
     782,     0,   211,   212,     0,     0,     0,   213,     0,     0,
     783,   214,   784,     0,     0,   215,     0,     0,   216,   217,
       0,     0,     0,     0,     0,     0,   218,   785,   219,     0,
       0,   786,   220,     0,   787,   221,     0,     0,     0,   788,
       0,   789,     0,   223,   790,     0,   224,     0,   225,   791,
       0,     0,   792,     0,     0,     0,     0,   793,   226,   227,
     228,   229,   230,   231,   794,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   795,   241,   242,   243,   796,   244,
     245,     0,     0,     0,   246,   247,   797,   249,     0,     0,
     798,   251,   799,   800,   252,     0,   253,   801,   802,   803,
     804,   805,   806,   807,   258,   259,   260,   261,     0,   808,
     262,   263,     0,   264,   265,   266,   809,   810,   811,   267,
       0,   812,   813,     0,   268,   269,     0,   814,     0,   271,
     272,   273,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   274,   275,   815,   816,   277,   817,   818,   819,
     820,   821,     0,   280,   281,     0,   282,     0,   283,   284,
       0,   822,   286,   287,   288,   289,   290,   291,   292,   823,
       0,     0,     0,   293,   294,     0,     0,   295,   296,   297,
       0,   298,     0,   299,   300,   824,   825,   301,     0,   302,
     303,   304,     0,   305,   306,     0,     0,   826,   307,   308,
     827,   309,   310,   828,   311,   829,   313,   314,     0,   830,
     316,     0,     0,     0,   317,   318,   319,     0,     0,   320,
       0,     0,     0,   321,   322,   323,   324,     0,   325,   326,
       0,     0,     0,     0,     0,     0,   327,   328,     0,   329,
       0,     0,   330,     0,     0,   331,   332,   831,   832,   333,
     334,     0,   335,   833,   337,   834,   835,   836,   338,   339,
     837,   340,   341,     0,   342,   343,     0,   653,   344,   838,
     839,   840,   841,     0,     0,     0,     0,     0,   349,     0,
     350,   842,   843,   844,   352,   353,   354,     0,   845,   355,
     356,   846,     0,   357,     0,     0,   847,   848,   358,     0,
       0,   359,     0,     0,     0,   849,   361,     0,     0,   850,
     851,   852,   853,   854,   362,     0,     0,   363,   855,     0,
     364,   365,   856,     0,     0,     0,     0,   367,     0,   368,
     369,     0,   857,     0,   858,     0,     0,     0,     0,   859,
       0,     0,     0,   860,   861,     0,     0,     0,     0,   862,
       0,   863,  1723,     0,   864,   865,     0,   866,   867,   122,
       0,   723,   124,   125,   126,   127,     0,     0,     0,     0,
       0,   128,     0,     0,   724,     0,   725,   130,   131,   726,
     133,     0,   134,   727,   135,     0,   728,   136,   729,   730,
     731,   137,   732,     0,   138,   139,     0,   140,     0,   141,
     142,     0,     0,   143,   733,   144,     0,   145,   734,   735,
     147,     0,   148,   149,   150,   736,   151,     0,   737,   153,
       0,   154,   155,   156,   157,   158,   738,   739,   159,     0,
       0,   160,     0,   740,     0,   741,   742,   743,     0,     0,
     162,   744,   745,     0,   746,   747,     0,   163,   164,   748,
     749,   750,     0,     0,     0,     0,   751,   167,   752,     0,
       0,   753,   754,   168,     0,   169,     0,     0,     0,   755,
     756,   170,     0,   171,   172,   173,     0,     0,     0,   174,
       0,     0,   175,   176,   177,     0,     0,   757,   178,     0,
     758,   759,   179,   180,   181,   182,     0,     0,   183,     0,
     184,   185,   186,   760,     0,   187,   761,   188,   762,   763,
     189,     0,   764,   190,   191,   192,   765,     0,   193,     0,
       0,   766,     0,   194,   195,  2162,   767,   196,     0,   197,
     768,   769,   770,   771,     0,   772,   773,   199,   774,   775,
     776,   201,     0,   202,   777,     0,   778,   779,     0,   203,
     204,     0,   205,   780,     0,   206,     0,     0,     0,   781,
     208,   209,   210,   782,     0,   211,   212,     0,     0,     0,
     213,     0,     0,   783,   214,   784,     0,     0,   215,     0,
       0,   216,   217,     0,     0,     0,     0,     0,     0,   218,
     785,   219,     0,     0,   786,   220,     0,   787,   221,     0,
       0,     0,   788,     0,   789,     0,   223,   790,     0,   224,
       0,   225,   791,     0,     0,   792,     0,     0,     0,     0,
     793,   226,   227,   228,   229,   230,   231,   794,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   795,   241,   242,
     243,   796,   244,   245,     0,     0,     0,   246,   247,   797,
     249,     0,     0,   798,   251,   799,   800,   252,     0,   253,
     801,   802,   803,   804,   805,   806,   807,   258,   259,   260,
     261,     0,   808,   262,   263,     0,   264,   265,   266,   809,
     810,   811,   267,     0,   812,   813,     0,   268,   269,     0,
     814,     0,   271,   272,   273,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   274,   275,   815,   816,   277,
     817,   818,   819,   820,   821,     0,   280,   281,     0,   282,
       0,   283,   284,     0,   822,   286,   287,   288,   289,   290,
     291,   292,   823,     0,     0,     0,   293,   294,     0,     0,
     295,   296,   297,     0,   298,     0,   299,   300,   824,   825,
     301,     0,   302,   303,   304,     0,   305,   306,     0,     0,
     826,   307,   308,   827,   309,   310,   828,   311,   829,   313,
     314,     0,   830,   316,     0,     0,     0,   317,   318,   319,
       0,     0,   320,     0,     0,     0,   321,   322,   323,   324,
       0,   325,   326,     0,     0,     0,     0,     0,     0,   327,
     328,     0,   329,     0,     0,   330,     0,     0,   331,   332,
     831,   832,   333,   334,     0,   335,   833,   337,   834,   835,
     836,   338,   339,   837,   340,   341,     0,   342,   343,     0,
     653,   344,   838,   839,   840,   841,     0,     0,     0,     0,
       0,   349,     0,   350,   842,   843,   844,   352,   353,   354,
       0,   845,   355,   356,   846,     0,   357,     0,     0,   847,
     848,   358,     0,     0,   359,     0,     0,     0,   849,   361,
       0,     0,   850,   851,   852,   853,   854,   362,     0,     0,
     363,   855,     0,   364,   365,   856,     0,     0,     0,     0,
     367,     0,   368,   369,     0,   857,     0,   858,     0,     0,
       0,     0,   859,     0,     0,     0,   860,   861,     0,     0,
       0,     0,   862,     0,   863,     0,     0,   864,   865,     0,
     866,   867,   122,     0,   723,   124,   125,   126,   127,     0,
       0,     0,     0,     0,   128,     0,     0,   724,     0,   725,
     130,   131,   726,   133,     0,   134,   727,   135,     0,   728,
     136,   729,   730,   731,   137,   732,     0,   138,   139,     0,
     140,     0,   141,   142,     0,     0,   143,   733,   144,     0,
     145,   734,   735,   147,     0,   148,   149,   150,   736,   151,
       0,   737,   153,     0,   154,   155,   156,   157,   158,   738,
     739,   159,     0,     0,   160,     0,   740,     0,   741,   742,
     743,     0,     0,   162,   744,   745,     0,   746,   747,     0,
     163,   164,   748,   749,   750,     0,     0,     0,     0,   751,
     167,   752,     0,     0,   753,   754,   168,     0,   169,     0,
       0,     0,   755,   756,   170,     0,   171,   172,   173,     0,
       0,     0,   174,     0,     0,   175,   176,   177,     0,     0,
     757,   178,     0,   758,   759,   179,   180,   181,   182,     0,
       0,   183,     0,   184,   185,   186,   760,     0,   187,   761,
     188,   762,   763,   189,     0,   764,   190,   191,   192,   765,
       0,   193,     0,     0,   766,     0,   194,   195,  2164,   767,
     196,     0,   197,   768,   769,   770,   771,     0,   772,   773,
     199,   774,   775,   776,   201,     0,   202,   777,     0,   778,
     779,     0,   203,   204,     0,   205,   780,     0,   206,     0,
       0,     0,   781,   208,   209,   210,   782,     0,   211,   212,
       0,     0,     0,   213,     0,     0,   783,   214,   784,     0,
       0,   215,     0,     0,   216,   217,     0,     0,     0,     0,
       0,     0,   218,   785,   219,     0,     0,   786,   220,     0,
     787,   221,     0,     0,     0,   788,     0,   789,     0,   223,
     790,     0,   224,     0,   225,   791,     0,     0,   792,     0,
       0,     0,     0,   793,   226,   227,   228,   229,   230,   231,
     794,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     795,   241,   242,   243,   796,   244,   245,     0,     0,     0,
     246,   247,   797,   249,     0,     0,   798,   251,   799,   800,
     252,     0,   253,   801,   802,   803,   804,   805,   806,   807,
     258,   259,   260,   261,     0,   808,   262,   263,     0,   264,
     265,   266,   809,   810,   811,   267,     0,   812,   813,     0,
     268,   269,     0,   814,     0,   271,   272,   273,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   274,   275,
     815,   816,   277,   817,   818,   819,   820,   821,     0,   280,
     281,     0,   282,     0,   283,   284,     0,   822,   286,   287,
     288,   289,   290,   291,   292,   823,     0,     0,     0,   293,
     294,     0,     0,   295,   296,   297,     0,   298,     0,   299,
     300,   824,   825,   301,     0,   302,   303,   304,     0,   305,
     306,     0,     0,   826,   307,   308,   827,   309,   310,   828,
     311,   829,   313,   314,     0,   830,   316,     0,     0,     0,
     317,   318,   319,     0,     0,   320,     0,     0,     0,   321,
     322,   323,   324,     0,   325,   326,     0,     0,     0,     0,
       0,     0,   327,   328,     0,   329,     0,     0,   330,     0,
       0,   331,   332,   831,   832,   333,   334,     0,   335,   833,
     337,   834,   835,   836,   338,   339,   837,   340,   341,     0,
     342,   343,     0,   653,   344,   838,   839,   840,   841,     0,
       0,     0,     0,     0,   349,     0,   350,   842,   843,   844,
     352,   353,   354,     0,   845,   355,   356,   846,     0,   357,
       0,     0,   847,   848,   358,     0,     0,   359,     0,     0,
       0,   849,   361,     0,     0,   850,   851,   852,   853,   854,
     362,     0,     0,   363,   855,     0,   364,   365,   856,     0,
       0,     0,     0,   367,     0,   368,   369,     0,   857,     0,
     858,     0,     0,     0,     0,   859,     0,     0,     0,   860,
     861,     0,     0,     0,     0,   862,     0,   863,     0,     0,
     864,   865,     0,   866,   867,   122,     0,   723,   124,   125,
     126,   127,     0,     0,     0,     0,     0,   128,     0,     0,
     724,     0,   725,   130,   131,   726,   133,     0,   134,   727,
     135,     0,   728,   136,   729,   730,   731,   137,   732,     0,
     138,   139,     0,   140,     0,   141,   142,     0,     0,   143,
     733,   144,     0,   145,   734,   735,   147,     0,   148,   149,
     150,   736,   151,     0,   737,   153,     0,   154,   155,   156,
     157,   158,   738,   739,   159,     0,     0,   160,     0,   740,
       0,   741,   742,   743,     0,     0,   162,   744,   745,     0,
     746,   747,     0,   163,   164,   748,   749,   750,     0,     0,
       0,     0,   751,   167,   752,     0,     0,   753,   754,   168,
       0,   169,     0,     0,     0,   755,   756,   170,     0,   171,
     172,   173,     0,     0,     0,   174,     0,     0,   175,   176,
     177,     0,     0,   757,   178,     0,   758,   759,   179,   180,
     181,   182,     0,     0,   183,     0,   184,   185,   186,   760,
       0,   187,   761,   188,   762,   763,   189,     0,   764,   190,
     191,   192,   765,     0,   193,     0,     0,   766,     0,   194,
     195,  2166,   767,   196,     0,   197,   768,   769,   770,   771,
       0,   772,   773,   199,   774,   775,   776,   201,     0,   202,
     777,     0,   778,   779,     0,   203,   204,     0,   205,   780,
       0,   206,     0,     0,     0,   781,   208,   209,   210,   782,
       0,   211,   212,     0,     0,     0,   213,     0,     0,   783,
     214,   784,     0,     0,   215,     0,     0,   216,   217,     0,
       0,     0,     0,     0,     0,   218,   785,   219,     0,     0,
     786,   220,     0,   787,   221,     0,     0,     0,   788,     0,
     789,     0,   223,   790,     0,   224,     0,   225,   791,     0,
       0,   792,     0,     0,     0,     0,   793,   226,   227,   228,
     229,   230,   231,   794,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   795,   241,   242,   243,   796,   244,   245,
       0,     0,     0,   246,   247,   797,   249,     0,     0,   798,
     251,   799,   800,   252,     0,   253,   801,   802,   803,   804,
     805,   806,   807,   258,   259,   260,   261,     0,   808,   262,
     263,     0,   264,   265,   266,   809,   810,   811,   267,     0,
     812,   813,     0,   268,   269,     0,   814,     0,   271,   272,
     273,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   274,   275,   815,   816,   277,   817,   818,   819,   820,
     821,     0,   280,   281,     0,   282,     0,   283,   284,     0,
     822,   286,   287,   288,   289,   290,   291,   292,   823,     0,
       0,     0,   293,   294,     0,     0,   295,   296,   297,     0,
     298,     0,   299,   300,   824,   825,   301,     0,   302,   303,
     304,     0,   305,   306,     0,     0,   826,   307,   308,   827,
     309,   310,   828,   311,   829,   313,   314,     0,   830,   316,
       0,     0,     0,   317,   318,   319,     0,     0,   320,     0,
       0,     0,   321,   322,   323,   324,     0,   325,   326,     0,
       0,     0,     0,     0,     0,   327,   328,     0,   329,     0,
       0,   330,     0,     0,   331,   332,   831,   832,   333,   334,
       0,   335,   833,   337,   834,   835,   836,   338,   339,   837,
     340,   341,     0,   342,   343,     0,   653,   344,   838,   839,
     840,   841,     0,     0,     0,     0,     0,   349,     0,   350,
     842,   843,   844,   352,   353,   354,     0,   845,   355,   356,
     846,     0,   357,     0,     0,   847,   848,   358,     0,     0,
     359,     0,     0,     0,   849,   361,     0,     0,   850,   851,
     852,   853,   854,   362,     0,     0,   363,   855,     0,   364,
     365,   856,     0,     0,     0,     0,   367,     0,   368,   369,
       0,   857,     0,   858,     0,     0,     0,     0,   859,     0,
       0,     0,   860,   861,     0,     0,     0,     0,   862,     0,
     863,     0,     0,   864,   865,     0,   866,   867,   122,     0,
     723,   124,   125,   126,   127,     0,     0,     0,     0,     0,
     128,     0,     0,   724,     0,   725,   130,   131,   726,   133,
       0,   134,   727,   135,     0,   728,   136,   729,   730,   731,
     137,   732,     0,   138,   139,     0,   140,     0,   141,   142,
       0,     0,   143,   733,   144,     0,   145,   734,   735,   147,
       0,   148,   149,   150,   736,   151,     0,   737,   153,     0,
     154,   155,   156,   157,   158,   738,   739,   159,     0,     0,
     160,     0,   740,     0,   741,   742,   743,     0,     0,   162,
     744,   745,     0,   746,   747,     0,   163,   164,   748,   749,
     750,     0,     0,     0,     0,   751,   167,   752,     0,     0,
     753,   754,   168,     0,   169,     0,     0,     0,   755,   756,
     170,     0,   171,   172,   173,     0,     0,     0,   174,     0,
       0,   175,   176,   177,     0,     0,   757,   178,     0,   758,
     759,   179,   180,   181,   182,     0,     0,   183,     0,   184,
     185,   186,   760,     0,   187,   761,   188,   762,   763,   189,
       0,   764,   190,   191,   192,   765,     0,   193,     0,     0,
     766,     0,   194,   195,     0,   767,   196,     0,   197,   768,
     769,   770,   771,     0,   772,   773,   199,   774,   775,   776,
     201,     0,   202,   777,     0,   778,   779,     0,   203,   204,
       0,   205,   780,     0,   206,     0,     0,     0,   781,   208,
     209,   210,   782,     0,   211,   212,     0,     0,     0,   213,
       0,     0,   783,   214,   784,     0,     0,   215,     0,     0,
     216,   217,     0,     0,     0,     0,     0,     0,   218,   785,
     219,     0,     0,   786,   220,     0,   787,   221,     0,     0,
       0,   788,     0,   789,     0,   223,   790,     0,   224,     0,
     225,   791,     0,     0,   792,     0,     0,     0,     0,   793,
     226,   227,   228,   229,   230,   231,   794,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   795,   241,   242,   243,
     796,   244,   245,     0,     0,     0,   246,   247,   797,   249,
       0,     0,   798,   251,   799,   800,   252,     0,   253,   801,
     802,   803,   804,   805,   806,   807,   258,   259,   260,   261,
       0,   808,   262,   263,     0,   264,   265,   266,   809,   810,
     811,   267,     0,   812,   813,     0,   268,   269,     0,   814,
       0,   271,   272,   273,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   274,   275,   815,   816,   277,   817,
     818,   819,   820,   821,     0,   280,   281,     0,   282,     0,
     283,   284,     0,   822,   286,   287,   288,   289,   290,   291,
     292,   823,     0,     0,     0,   293,   294,     0,     0,   295,
     296,   297,     0,   298,     0,   299,   300,   824,   825,   301,
       0,   302,   303,   304,     0,   305,   306,     0,     0,   826,
     307,   308,   827,   309,   310,   828,   311,   829,   313,   314,
       0,   830,   316,     0,     0,     0,   317,   318,   319,     0,
       0,   320,     0,     0,     0,   321,   322,   323,   324,     0,
     325,   326,     0,     0,     0,     0,     0,     0,   327,   328,
       0,   329,     0,     0,   330,     0,     0,   331,   332,   831,
     832,   333,   334,     0,   335,   833,   337,   834,   835,   836,
     338,   339,   837,   340,   341,     0,   342,   343,     0,   653,
     344,   838,   839,   840,   841,     0,     0,     0,     0,     0,
     349,     0,   350,   842,   843,   844,   352,   353,   354,     0,
     845,   355,   356,   846,     0,   357,     0,     0,   847,   848,
     358,     0,     0,   359,     0,     0,     0,   849,   361,     0,
       0,   850,   851,   852,   853,   854,   362,     0,     0,   363,
     855,     0,   364,   365,   856,     0,     0,     0,     0,   367,
       0,   368,   369,     0,   857,     0,   858,     0,     0,     0,
       0,   859,     0,     0,     0,   860,   861,     0,     0,     0,
       0,   862,     0,   863,     0,     0,   864,   865,     0,   866,
     867,   122,     0,   723,   124,   125,   126,   127,  1753,     0,
       0,     0,     0,  1754,     0,     0,   724,     0,   725,   130,
     131,   726,   133,     0,   134,   727,   135,     0,   728,   136,
     729,   730,   731,   137,   732,     0,   138,   139,     0,   140,
       0,   141,   142,     0,     0,   143,   733,   144,     0,   145,
     734,   735,   147,     0,   148,   149,   150,   736,   151,     0,
     737,   153,     0,   154,   155,   156,   157,   158,   738,   739,
     159,     0,     0,   160,     0,   740,     0,   741,   742,   743,
       0,     0,   162,   744,   745,     0,   746,   747,     0,   163,
     164,   748,   749,   750,     0,     0,     0,     0,   751,   167,
     752,     0,     0,   753,   754,   168,     0,   169,     0,     0,
       0,   755,   756,   170,     0,   171,   172,   173,     0,     0,
       0,   174,     0,     0,   175,   176,   177,     0,     0,   757,
     178,     0,   758,   759,   179,   180,   181,   182,     0,     0,
     183,     0,   184,   185,   186,   760,     0,   187,   761,   188,
     762,   763,   189,     0,   764,   190,   191,   192,   765,     0,
     193,     0,     0,   766,     0,   194,   195,     0,   767,   196,
       0,   197,   768,   769,   770,   771,     0,   772,   773,   199,
     774,   775,   776,   201,     0,   202,   777,     0,   778,   779,
       0,   203,   204,     0,   205,   780,     0,   206,     0,     0,
       0,   781,   208,   209,   210,   782,     0,   211,   212,     0,
       0,     0,   213,     0,     0,   783,   214,   784,     0,     0,
     215,     0,     0,   216,   217,     0,     0,     0,     0,     0,
       0,   218,   785,   219,     0,     0,   786,   220,     0,   787,
     221,     0,     0,     0,   788,     0,   789,     0,   223,   790,
       0,   224,     0,   225,   791,     0,     0,   792,     0,     0,
       0,     0,   793,   226,   227,   228,   229,   230,   231,   794,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   795,
     241,   242,   243,   796,   244,   245,     0,     0,     0,   246,
     247,   797,   249,     0,     0,   798,   251,   799,   800,   252,
       0,   253,   801,   802,   803,   804,   805,   806,   807,   258,
     259,   260,   261,     0,   808,   262,   263,     0,   264,   265,
     266,   809,     0,   811,   267,     0,   812,   813,     0,   268,
     269,     0,   814,     0,   271,   272,   273,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   274,   275,   815,
     816,   277,   817,   818,   819,   820,   821,     0,   280,   281,
       0,   282,     0,   283,   284,     0,   822,   286,   287,   288,
     289,   290,   291,   292,   823,     0,     0,     0,   293,   294,
       0,     0,   295,   296,   297,     0,   298,     0,   299,   300,
     824,   825,   301,     0,   302,   303,   304,     0,   305,   306,
       0,     0,   826,   307,   308,   827,   309,   310,   828,   311,
     829,   313,   314,     0,   830,   316,     0,     0,     0,   317,
     318,   319,     0,     0,   320,     0,     0,     0,   321,   322,
     323,   324,     0,   325,   326,     0,     0,     0,     0,     0,
       0,   327,   328,     0,   329,     0,     0,   330,     0,     0,
     331,   332,   831,   832,   333,   334,     0,   335,   833,   337,
     834,   835,   836,   338,   339,   837,   340,   341,     0,   342,
     343,     0,   653,   344,   838,   839,   840,   841,     0,     0,
       0,     0,     0,   349,     0,   350,   842,   843,   844,   352,
     353,   354,     0,   845,   355,   356,   846,     0,   357,     0,
       0,   847,   848,   358,     0,     0,   359,     0,     0,     0,
     849,   361,     0,     0,   850,   851,   852,   853,   854,   362,
       0,     0,   363,   855,     0,   364,   365,   856,     0,     0,
       0,     0,   367,     0,   368,   369,     0,   857,     0,   858,
       0,     0,     0,     0,   859,     0,     0,     0,   860,   861,
       0,     0,     0,     0,   862,     0,   863,     0,     0,   864,
     865,     0,   866,   867,   122,     0,   723,   124,   125,   126,
     127,     0,     0,     0,     0,     0,   128,     0,     0,   724,
       0,   725,   130,   131,   726,   133,     0,   134,   727,   135,
       0,   728,   136,   729,   730,   731,   137,   732,     0,   138,
     139,     0,   140,     0,   141,   142,     0,     0,   143,   733,
     144,     0,   145,   734,   735,   147,     0,   148,   149,   150,
     736,   151,     0,   737,   153,     0,   154,   155,   156,   157,
     158,   738,   739,   159,     0,     0,   160,     0,   740,     0,
     741,   742,   743,     0,     0,   162,   744,   745,     0,   746,
     747,     0,   163,   164,   748,   749,   750,     0,     0,     0,
       0,   751,   167,   752,     0,     0,   753,   754,   168,     0,
     169,     0,     0,     0,   755,   756,   170,     0,   171,   172,
     173,     0,     0,     0,   174,     0,     0,   175,   176,   177,
       0,     0,   757,   178,     0,   758,   759,   179,   180,   181,
     182,     0,     0,   183,     0,   184,   185,   186,   760,     0,
     187,   761,   188,   762,   763,   189,     0,   764,   190,   191,
     192,   765,     0,   193,     0,     0,   766,     0,   194,   195,
       0,   767,   196,     0,   197,   768,   769,   770,   771,     0,
     772,   773,   199,   774,   775,   776,   201,     0,   202,   777,
       0,   778,   779,     0,   203,   204,     0,   205,   780,     0,
     206,     0,     0,     0,   781,   208,   209,   210,   782,     0,
     211,   212,     0,     0,     0,   213,     0,     0,   783,   214,
    2439,     0,     0,   215,     0,     0,   216,   217,     0,     0,
       0,     0,     0,     0,   218,   785,   219,     0,     0,   786,
     220,     0,   787,   221,     0,     0,     0,   788,     0,   789,
       0,   223,   790,     0,   224,     0,   225,   791,     0,     0,
     792,     0,     0,     0,     0,   793,   226,   227,   228,   229,
     230,   231,   794,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   795,   241,   242,   243,   796,   244,   245,     0,
       0,     0,   246,   247,   797,   249,     0,     0,   798,   251,
     799,   800,   252,     0,   253,   801,   802,   803,   804,   805,
     806,   807,   258,   259,   260,   261,     0,   808,   262,   263,
       0,   264,   265,   266,   809,   810,   811,   267,     0,   812,
     813,     0,   268,   269,     0,   814,     0,   271,   272,   273,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     274,   275,   815,   816,   277,   817,   818,   819,   820,   821,
       0,   280,   281,     0,   282,     0,   283,   284,     0,   822,
     286,   287,   288,   289,   290,   291,   292,   823,     0,     0,
       0,   293,   294,     0,     0,   295,   296,   297,     0,   298,
       0,   299,   300,   824,   825,   301,     0,   302,   303,   304,
       0,   305,   306,     0,     0,   826,   307,   308,   827,   309,
     310,   828,   311,   829,   313,   314,     0,   830,   316,     0,
       0,     0,   317,   318,   319,     0,     0,   320,     0,     0,
       0,   321,   322,   323,   324,     0,   325,   326,     0,     0,
       0,     0,     0,     0,   327,   328,     0,   329,     0,     0,
     330,     0,     0,   331,   332,   831,   832,   333,   334,     0,
     335,   833,   337,   834,   835,   836,   338,   339,   837,   340,
     341,     0,   342,   343,     0,   653,   344,   838,   839,   840,
     841,     0,     0,     0,     0,     0,   349,     0,   350,   842,
     843,   844,   352,   353,   354,     0,   845,   355,   356,   846,
       0,   357,     0,     0,   847,   848,   358,     0,     0,   359,
       0,     0,     0,   849,   361,     0,     0,   850,   851,   852,
     853,   854,   362,     0,     0,   363,   855,     0,   364,   365,
     856,     0,     0,     0,     0,   367,     0,   368,   369,     0,
     857,     0,   858,     0,     0,     0,     0,   859,     0,     0,
       0,   860,   861,     0,     0,     0,     0,   862,     0,   863,
       0,     0,   864,   865,     0,   866,   867,   122,     0,   723,
     124,   125,   126,   127,     0,     0,     0,     0,     0,   128,
       0,     0,   724,     0,   725,   130,   131,   726,   133,     0,
     134,   727,   135,     0,   728,   136,   729,   730,   731,   137,
     732,     0,   138,   139,     0,   140,     0,   141,   142,     0,
       0,   143,   733,   144,     0,   145,   734,   735,   147,     0,
     148,   149,   150,   736,   151,     0,   737,   153,     0,   154,
     155,   156,   157,   158,   738,   739,   159,     0,     0,   160,
       0,   740,     0,   741,   742,   743,     0,     0,   162,   744,
     745,     0,   746,   747,     0,   163,   164,   748,   749,   750,
       0,     0,     0,     0,   751,   167,   752,     0,     0,   753,
     754,   168,     0,   169,     0,     0,     0,   755,   756,   170,
       0,   171,   172,   173,     0,     0,     0,   174,     0,     0,
     175,   176,   177,     0,     0,   757,   178,     0,   758,   759,
     179,   180,   181,   182,     0,     0,   183,     0,   184,   185,
     186,   760,     0,   187,   761,   188,   762,   763,   189,     0,
     764,   190,   191,   192,   765,     0,   193,     0,     0,   766,
       0,   194,   195,     0,   767,   196,     0,   197,   768,   769,
     770,   771,     0,   772,   773,   199,   774,   775,   776,   201,
       0,   202,   777,     0,   778,   779,     0,   203,   204,     0,
     205,   780,     0,   206,     0,     0,     0,   781,   208,   209,
     210,   782,     0,   211,   212,     0,     0,     0,   213,     0,
       0,   783,   214,  2512,     0,     0,   215,     0,     0,   216,
     217,     0,     0,     0,     0,     0,     0,   218,   785,   219,
       0,     0,   786,   220,     0,   787,   221,     0,     0,     0,
     788,     0,   789,     0,   223,   790,     0,   224,     0,   225,
     791,     0,     0,   792,     0,     0,     0,     0,   793,   226,
     227,   228,   229,   230,   231,   794,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   795,   241,   242,   243,   796,
     244,   245,     0,     0,     0,   246,   247,   797,   249,     0,
       0,   798,   251,   799,   800,   252,     0,   253,   801,   802,
     803,   804,   805,   806,   807,   258,   259,   260,   261,     0,
     808,   262,   263,     0,   264,   265,   266,   809,   810,   811,
     267,     0,   812,   813,     0,   268,   269,     0,   814,     0,
     271,   272,   273,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   274,   275,   815,   816,   277,   817,   818,
     819,   820,   821,     0,   280,   281,     0,   282,     0,   283,
     284,     0,   822,   286,   287,   288,   289,   290,   291,   292,
     823,     0,     0,     0,   293,   294,     0,     0,   295,   296,
     297,     0,   298,     0,   299,   300,   824,   825,   301,     0,
     302,   303,   304,     0,   305,   306,     0,     0,   826,   307,
     308,   827,   309,   310,   828,   311,   829,   313,   314,     0,
     830,   316,     0,     0,     0,   317,   318,   319,     0,     0,
     320,     0,     0,     0,   321,   322,   323,   324,     0,   325,
     326,     0,     0,     0,     0,     0,     0,   327,   328,     0,
     329,     0,     0,   330,     0,     0,   331,   332,   831,   832,
     333,   334,     0,   335,   833,   337,   834,   835,   836,   338,
     339,   837,   340,   341,     0,   342,   343,     0,   653,   344,
     838,   839,   840,   841,     0,     0,     0,     0,     0,   349,
       0,   350,   842,   843,   844,   352,   353,   354,     0,   845,
     355,   356,   846,     0,   357,     0,     0,   847,   848,   358,
       0,     0,   359,     0,     0,     0,   849,   361,     0,     0,
     850,   851,   852,   853,   854,   362,     0,     0,   363,   855,
       0,   364,   365,   856,     0,     0,     0,     0,   367,     0,
     368,   369,     0,   857,     0,   858,     0,     0,     0,     0,
     859,     0,     0,     0,   860,   861,     0,     0,     0,     0,
     862,     0,   863,     0,     0,   864,   865,     0,   866,   867,
     122,     0,   723,   124,   125,   126,   127,     0,     0,     0,
       0,     0,   128,     0,     0,   724,     0,   725,   130,   131,
     726,   133,     0,   134,   727,   135,     0,   728,   136,   729,
     730,   731,   137,   732,     0,   138,   139,     0,   140,     0,
     141,   142,     0,     0,   143,   733,   144,     0,   145,   734,
     735,   147,     0,   148,   149,   150,   736,   151,     0,   737,
     153,     0,   154,   155,   156,   157,   158,   738,   739,   159,
       0,     0,   160,     0,   740,     0,   741,   742,   743,     0,
       0,   162,   744,   745,     0,   746,   747,     0,   163,   164,
     748,   749,   750,     0,     0,     0,     0,   751,   167,   752,
       0,     0,   753,  2845,   168,     0,   169,     0,     0,     0,
     755,   756,   170,     0,   171,   172,   173,     0,     0,     0,
     174,     0,     0,   175,   176,   177,     0,     0,   757,   178,
       0,   758,   759,   179,   180,   181,   182,     0,     0,   183,
       0,   184,   185,   186,   760,     0,   187,   761,   188,   762,
     763,   189,     0,   764,   190,   191,   192,   765,     0,   193,
       0,     0,   766,     0,   194,   195,     0,   767,   196,     0,
     197,   768,   769,   770,   771,     0,   772,   773,   199,   774,
     775,   776,   201,     0,   202,   777,     0,   778,   779,     0,
     203,   204,     0,   205,   780,     0,   206,     0,     0,     0,
     781,   208,   209,   210,   782,     0,   211,   212,     0,     0,
       0,   213,     0,     0,   783,   214,   784,     0,     0,   215,
       0,     0,   216,   217,     0,     0,     0,     0,     0,     0,
     218,   785,   219,     0,     0,   786,   220,     0,   787,   221,
       0,     0,     0,   788,     0,   789,     0,   223,   790,     0,
     224,     0,   225,   791,     0,     0,   792,     0,     0,     0,
       0,   793,   226,   227,   228,   229,   230,   231,   794,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   795,   241,
     242,   243,   796,   244,   245,     0,     0,     0,   246,   247,
     797,   249,     0,     0,   798,   251,   799,   800,   252,     0,
     253,   801,   802,   803,   804,   805,   806,   807,   258,   259,
     260,   261,     0,   808,   262,   263,     0,   264,   265,   266,
     809,   810,   811,   267,     0,   812,   813,     0,   268,   269,
       0,   814,     0,   271,   272,   273,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   274,   275,   815,   816,
     277,   817,   818,   819,   820,   821,     0,   280,   281,     0,
     282,     0,   283,   284,     0,   822,   286,   287,   288,   289,
     290,   291,   292,   823,     0,     0,     0,   293,   294,     0,
       0,   295,   296,   297,     0,   298,     0,   299,   300,   824,
     825,   301,     0,   302,   303,   304,     0,   305,   306,     0,
       0,   826,   307,   308,   827,   309,   310,   828,   311,   829,
     313,   314,     0,   830,   316,     0,     0,     0,   317,   318,
     319,     0,     0,   320,     0,     0,     0,   321,   322,   323,
     324,     0,   325,   326,     0,     0,     0,     0,     0,     0,
     327,   328,     0,   329,     0,     0,   330,     0,     0,   331,
     332,   831,   832,   333,   334,     0,   335,   833,   337,   834,
     835,   836,   338,   339,   837,   340,   341,     0,   342,   343,
       0,   653,   344,   838,   839,   840,   841,     0,     0,     0,
       0,     0,   349,     0,   350,   842,   843,   844,   352,   353,
     354,     0,   845,   355,   356,   846,     0,   357,     0,     0,
     847,   848,   358,     0,     0,   359,     0,     0,     0,   849,
     361,     0,     0,   850,   851,   852,   853,   854,   362,     0,
       0,   363,   855,     0,   364,   365,   856,     0,     0,     0,
       0,   367,     0,   368,   369,     0,   857,     0,   858,     0,
       0,     0,     0,   859,     0,     0,     0,   860,   861,     0,
       0,     0,     0,   862,     0,   863,     0,     0,   864,   865,
       0,   866,   867,   122,     0,   723,   124,   125,   126,   127,
       0,     0,     0,     0,     0,   128,     0,     0,   724,     0,
     725,   130,   131,   726,   133,     0,   134,   727,   135,     0,
     728,   136,   729,   730,   731,   137,   732,     0,   138,   139,
       0,   140,     0,   141,   142,     0,     0,   143,   733,   144,
       0,   145,   734,   735,   147,     0,   148,   149,   150,   736,
     151,     0,   737,   153,     0,   154,   155,   156,   157,   158,
     738,   739,   159,     0,     0,   160,     0,   740,     0,   741,
     742,   743,     0,     0,   162,   744,   745,     0,   746,   747,
       0,   163,   164,   748,   749,   750,     0,     0,     0,     0,
     751,   167,   752,     0,     0,   753,   754,   168,     0,   169,
       0,     0,     0,   755,   756,   170,     0,   171,   172,   173,
       0,     0,     0,   174,     0,     0,   175,   176,   177,     0,
       0,   757,   178,     0,   758,   759,   179,   180,   181,   182,
       0,     0,   183,     0,   184,   185,   186,   760,     0,   187,
     761,   188,   762,   763,   189,     0,   764,   190,   191,   192,
     765,     0,   193,     0,     0,   766,     0,   194,   195,     0,
     767,   196,     0,   197,   768,   769,   770,   771,     0,   772,
     773,   199,   774,   775,   776,   201,     0,   202,   777,     0,
     778,   779,     0,   203,   204,     0,   205,   780,     0,   206,
       0,     0,     0,   781,   208,   209,   210,   782,     0,   211,
     212,     0,     0,     0,   213,     0,     0,   783,   214,   784,
       0,     0,   215,     0,     0,   216,   217,     0,     0,     0,
       0,     0,     0,   218,   785,   219,     0,     0,   786,   220,
       0,   787,   221,     0,     0,     0,   788,     0,   789,     0,
     223,   790,     0,   224,     0,   225,   791,     0,     0,   792,
       0,     0,     0,     0,   793,   226,   227,   228,   229,   230,
     231,   794,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   795,   241,   242,   243,   796,   244,   245,     0,     0,
       0,   246,   247,   797,   249,     0,     0,   798,   251,   799,
     800,   252,     0,   253,   801,   802,   803,   804,   805,   806,
     807,   258,   259,   260,   261,     0,   808,   262,   263,     0,
     264,   265,   266,   809,     0,   811,   267,     0,   812,   813,
       0,   268,   269,     0,   814,     0,   271,   272,   273,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   274,
     275,   815,   816,   277,   817,   818,   819,   820,   821,     0,
     280,   281,     0,   282,     0,   283,   284,     0,   822,   286,
     287,   288,   289,   290,   291,   292,   823,     0,     0,     0,
     293,   294,     0,     0,   295,   296,   297,     0,   298,     0,
     299,   300,   824,   825,   301,     0,   302,   303,   304,     0,
     305,   306,     0,     0,   826,   307,   308,   827,   309,   310,
     828,   311,   829,   313,   314,     0,   830,   316,     0,     0,
       0,   317,   318,   319,     0,     0,   320,     0,     0,     0,
     321,   322,   323,   324,     0,   325,   326,     0,     0,     0,
       0,     0,     0,   327,   328,     0,   329,     0,     0,   330,
       0,     0,   331,   332,   831,   832,   333,   334,     0,   335,
     833,   337,   834,   835,   836,   338,   339,   837,   340,   341,
       0,   342,   343,     0,   653,   344,   838,   839,   840,   841,
       0,     0,     0,     0,     0,   349,     0,   350,   842,   843,
     844,   352,   353,   354,     0,   845,   355,   356,   846,     0,
     357,     0,     0,   847,   848,   358,     0,     0,   359,     0,
       0,     0,   849,   361,     0,     0,   850,   851,   852,   853,
     854,   362,     0,     0,   363,   855,     0,   364,   365,   856,
       0,     0,     0,     0,   367,     0,   368,   369,     0,   857,
       0,   858,     0,     0,     0,     0,   859,     0,     0,     0,
     860,   861,     0,     0,     0,     0,   862,     0,   863,     0,
       0,   864,   865,     0,   866,   867,   122,     0,   123,   124,
     125,   126,   127,     0,     0,     0,     0,     0,   128,     0,
       0,   129,     0,     0,   130,   131,   132,   133,     0,   134,
       0,   135,     0,     0,   136,     0,     0,     0,   137,     0,
       0,   138,   139,     0,   140,     0,   141,   142,     0,     0,
     143,     0,   144,     0,   145,   146,     0,   147,     0,   148,
     149,   150,     0,   151,     0,   152,   153,     0,   154,   155,
     156,   157,   158,     0,     0,   159,     0,     0,   160,  1932,
     161,     0,     0,     0,     0,     0,     0,   162,     0,     0,
       0,     0,     0,     0,   163,   164,     0,     0,   165,     0,
       0,     0,     0,   166,   167,     0,     0,     0,     0,     0,
     168,     0,   169,     0,     0,     0,     0,     0,   170,     0,
     171,   172,   173,     0,     0,     0,   174,     0,     0,   175,
     176,   177,     0,     0,     0,   178,     0,     0,     0,   179,
     180,   181,   182,     0,     0,   183,     0,   184,   185,   186,
       0,     0,   187,     0,   188,     0,     0,   189,     0,     0,
     190,   191,   192,     0,     0,   193,     0,     0,     0,     0,
     194,   195,     0,     0,   196,  1933,   197,     0,     0,     0,
       0,     0,     0,   198,   199,     0,     0,   200,   201,     0,
     202,     0,     0,     0,     0,     0,   203,   204,     0,   205,
       0,     0,   206,     0,     0,     0,   207,   208,   209,   210,
       0,     0,   211,   212,  1083,     0,     0,   213,     0,     0,
       0,   214,     0,     0,     0,   215,     0,     0,   216,   217,
       0,     0,     0,  1084,     0,     0,   218,     0,   219,     0,
       0,     0,   220,     0,     0,   221,     0,  2424,     0,     0,
       0,   222,     0,   223,     0,     0,   224,     0,   225,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   226,   227,
     228,   229,   230,   231,     0,   232,   233,   234,   235,   236,
     237,   238,   239,   240,     0,   241,   242,   243,     0,   244,
     245,     0,     0,     0,   246,   247,   248,   249,     0,     0,
     250,   251,     0,     0,   252,     0,   253,     0,   254,     0,
       0,   255,   256,   257,   258,   259,   260,   261,     0,     0,
     262,   263,     0,   264,   265,   266,     0,     0,     0,   267,
       0,     0,     0,     0,   268,   269,     0,   270,     0,   271,
     272,   273,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   274,   275,   276,     0,   277,     0,   278,     0,
     279,     0,     0,   280,   281,     0,   282,     0,   283,   284,
       0,   285,   286,   287,   288,   289,   290,   291,   292,     0,
       0,     0,     0,   293,   294,     0,     0,   295,   296,   297,
       0,   298,     0,   299,   300,     0,     0,   301,     0,   302,
     303,   304,     0,   305,   306,     0,     0,     0,   307,   308,
       0,   309,   310,     0,   311,   312,   313,   314,     0,   315,
     316,  1844,     0,     0,   317,   318,   319,     0,     0,   320,
       0,     0,     0,   321,   322,   323,   324,     0,   325,   326,
    1934,     0,     0,     0,     0,     0,   327,   328,     0,   329,
       0,     0,   330,     0,     0,   331,   332,     0,     0,   333,
     334,     0,   335,   336,   337,     0,     0,     0,   338,   339,
       0,   340,   341,     0,   342,   343,     0,     0,   344,   345,
     346,   347,   348,     0,     0,     0,     0,     0,   349,     0,
     350,     0,     0,   351,   352,   353,   354,     0,     0,   355,
     356,     0,     0,   357,     0,     0,     0,     0,   358,     0,
       0,   359,     0,     0,     0,   360,   361,     0,     0,     0,
       0,     0,     0,     0,   362,     0,     0,   363,     0,     0,
     364,   365,   366,     0,     0,     0,     0,   367,     0,   368,
     369,     0,     0,     0,   370,     0,   122,     0,   123,   124,
     125,   126,   127,     0,     0,     0,     0,     0,   128,     0,
       0,   129,     0,     0,   130,   131,   132,   133,  1980,   134,
       0,   135,     0,     0,   136,     0,     0,     0,   137,     0,
       0,   138,   139,     0,   140,     0,   141,   142,     0,     0,
     143,     0,   144,     0,   145,   146,     0,   147,     0,   148,
     149,   150,     0,   151,     0,   152,   153,     0,   154,   155,
     156,   157,   158,     0,     0,   159,     0,     0,   160,  1932,
     161,     0,     0,     0,     0,     0,     0,   162,     0,     0,
       0,     0,     0,     0,   163,   164,     0,     0,   165,     0,
       0,     0,     0,   166,   167,     0,     0,     0,     0,     0,
     168,     0,   169,     0,     0,     0,     0,     0,   170,     0,
     171,   172,   173,     0,     0,     0,   174,     0,     0,   175,
     176,   177,     0,     0,     0,   178,     0,     0,     0,   179,
     180,   181,   182,     0,     0,   183,     0,   184,   185,   186,
       0,     0,   187,     0,   188,     0,     0,   189,     0,     0,
     190,   191,   192,     0,     0,   193,     0,     0,     0,     0,
     194,   195,     0,     0,   196,  1933,   197,     0,     0,     0,
       0,     0,     0,   198,   199,     0,     0,   200,   201,     0,
     202,     0,     0,     0,     0,     0,   203,   204,     0,   205,
       0,     0,   206,     0,     0,     0,   207,   208,   209,   210,
       0,     0,   211,   212,  1083,     0,     0,   213,     0,     0,
       0,   214,     0,     0,     0,   215,     0,     0,   216,   217,
       0,     0,     0,  1084,     0,     0,   218,     0,   219,     0,
       0,     0,   220,     0,     0,   221,     0,     0,     0,     0,
       0,   222,     0,   223,     0,     0,   224,     0,   225,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   226,   227,
     228,   229,   230,   231,     0,   232,   233,   234,   235,   236,
     237,   238,   239,   240,     0,   241,   242,   243,     0,   244,
     245,     0,     0,     0,   246,   247,   248,   249,     0,     0,
     250,   251,     0,     0,   252,     0,   253,     0,   254,     0,
       0,   255,   256,   257,   258,   259,   260,   261,     0,     0,
     262,   263,     0,   264,   265,   266,     0,     0,     0,   267,
       0,     0,     0,     0,   268,   269,     0,   270,     0,   271,
     272,   273,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   274,   275,   276,     0,   277,     0,   278,     0,
     279,     0,     0,   280,   281,     0,   282,     0,   283,   284,
       0,   285,   286,   287,   288,   289,   290,   291,   292,     0,
       0,     0,     0,   293,   294,     0,     0,   295,   296,   297,
       0,   298,     0,   299,   300,     0,     0,   301,     0,   302,
     303,   304,     0,   305,   306,     0,     0,     0,   307,   308,
       0,   309,   310,     0,   311,   312,   313,   314,     0,   315,
     316,     0,     0,     0,   317,   318,   319,     0,     0,   320,
       0,     0,     0,   321,   322,   323,   324,     0,   325,   326,
    1934,     0,     0,     0,     0,     0,   327,   328,     0,   329,
       0,     0,   330,     0,     0,   331,   332,     0,     0,   333,
     334,     0,   335,   336,   337,     0,     0,     0,   338,   339,
       0,   340,   341,     0,   342,   343,     0,     0,   344,   345,
     346,   347,   348,     0,     0,     0,     0,     0,   349,     0,
     350,     0,     0,   351,   352,   353,   354,     0,     0,   355,
     356,     0,     0,   357,     0,     0,     0,     0,   358,     0,
       0,   359,     0,     0,     0,   360,   361,     0,     0,     0,
       0,     0,     0,     0,   362,     0,     0,   363,     0,     0,
     364,   365,   366,     0,     0,     0,     0,   367,     0,   368,
     369,     0,     0,     0,   370,     0,   122,     0,   123,   124,
     125,   126,   127,     0,     0,     0,     0,     0,   128,     0,
       0,   129,     0,     0,   130,   131,   132,   133,  1980,   134,
       0,   135,     0,     0,   136,     0,     0,     0,   137,     0,
       0,   138,   139,     0,   140,     0,   141,   142,     0,     0,
     143,     0,   144,     0,   145,   146,     0,   147,     0,   148,
     149,   150,     0,   151,     0,   152,   153,     0,   154,   155,
     156,   157,   158,     0,     0,   159,     0,     0,   160,     0,
     161,     0,     0,     0,     0,     0,     0,   162,     0,     0,
       0,     0,     0,     0,   163,   164,     0,     0,   165,     0,
       0,     0,     0,   166,   167,     0,     0,     0,     0,     0,
     168,     0,   169,     0,     0,     0,     0,     0,   170,     0,
     171,   172,   173,     0,     0,     0,   174,     0,     0,   175,
     176,   177,     0,     0,     0,   178,     0,     0,     0,   179,
     180,   181,   182,     0,     0,   183,     0,   184,   185,   186,
       0,     0,   187,     0,   188,     0,     0,   189,     0,     0,
     190,   191,   192,     0,     0,   193,     0,     0,     0,     0,
     194,   195,     0,     0,   196,     0,   197,     0,     0,     0,
       0,     0,     0,   198,   199,     0,     0,   200,   201,     0,
     202,     0,     0,     0,     0,     0,   203,   204,     0,   205,
       0,     0,   206,     0,     0,     0,   207,   208,   209,   210,
       0,     0,   211,   212,     0,     0,     0,   213,     0,     0,
       0,   214,     0,     0,     0,   215,     0,     0,   216,   217,
       0,     0,     0,     0,     0,     0,   218,     0,   219,     0,
       0,     0,   220,     0,     0,   221,     0,     0,     0,     0,
       0,   222,     0,   223,     0,     0,   224,     0,   225,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   226,   227,
     228,   229,   230,   231,     0,   232,   233,   234,   235,   236,
     237,   238,   239,   240,     0,   241,   242,   243,     0,   244,
     245,     0,     0,     0,   246,   247,   248,   249,     0,     0,
     250,   251,     0,     0,   252,     0,   253,     0,   254,     0,
       0,   255,   256,   257,   258,   259,   260,   261,     0,     0,
     262,   263,     0,   264,   265,   266,     0,     0,     0,   267,
       0,     0,     0,     0,   268,   269,     0,   270,     0,   271,
     272,   273,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   274,   275,   276,     0,   277,     0,   278,     0,
     279,     0,     0,   280,   281,     0,   282,     0,   283,   284,
       0,   285,   286,   287,   288,   289,   290,   291,   292,     0,
       0,     0,     0,   293,   294,     0,     0,   295,   296,   297,
       0,   298,     0,   299,   300,     0,     0,   301,     0,   302,
     303,   304,     0,   305,   306,     0,     0,     0,   307,   308,
       0,   309,   310,     0,   311,   312,   313,   314,     0,   315,
     316,  1844,     0,     0,   317,   318,   319,     0,     0,   320,
       0,     0,     0,   321,   322,   323,   324,     0,   325,   326,
       0,     0,     0,     0,     0,     0,   327,   328,     0,   329,
       0,     0,   330,     0,     0,   331,   332,     0,     0,   333,
     334,     0,   335,   336,   337,     0,     0,     0,   338,   339,
       0,   340,   341,     0,   342,   343,     0,     0,   344,   345,
     346,   347,   348,     0,     0,     0,     0,     0,   349,     0,
     350,     0,     0,   351,   352,   353,   354,     0,     0,   355,
     356,     0,     0,   357,     0,     0,     0,     0,   358,     0,
       0,   359,     0,     0,     0,   360,   361,     0,     0,     0,
       0,     0,     0,     0,   362,     0,     0,   363,     0,     0,
     364,   365,   366,     0,     0,     0,     0,   367,     0,   368,
     369,     0,     0,     0,   370,     0,   122,     0,   123,   124,
     125,   126,   127,     0,     0,     0,     0,     0,   128,     0,
       0,   129,  2250,     0,   130,   131,   132,   133,   867,   134,
       0,   135,     0,     0,   136,     0,     0,     0,   137,     0,
       0,   138,   139,     0,   140,     0,   141,   142,     0,     0,
     143,     0,   144,     0,   145,   146,     0,   147,     0,   148,
     149,   150,     0,   151,     0,   152,   153,     0,   154,   155,
     156,   157,   158,     0,     0,   159,     0,     0,   160,     0,
     161,     0,     0,     0,     0,     0,     0,   162,     0,     0,
       0,     0,     0,     0,   163,   164,     0,     0,   165,     0,
       0,     0,     0,   166,   167,     0,     0,     0,     0,     0,
     168,     0,   169,     0,     0,     0,     0,     0,   170,     0,
     171,   172,   173,     0,     0,     0,   174,     0,     0,   175,
     176,   177,     0,     0,     0,   178,     0,     0,     0,   179,
     180,   181,   182,     0,     0,   183,     0,   184,   185,   186,
       0,     0,   187,     0,   188,     0,     0,   189,     0,     0,
     190,   191,   192,     0,     0,   193,     0,     0,     0,     0,
     194,   195,     0,     0,   196,     0,   197,     0,     0,     0,
       0,     0,     0,   198,   199,     0,     0,   200,   201,     0,
     202,     0,     0,     0,     0,     0,   203,   204,     0,   205,
       0,     0,   206,     0,     0,     0,   207,   208,   209,   210,
       0,     0,   211,   212,     0,     0,     0,   213,     0,     0,
       0,   214,     0,     0,     0,   215,     0,     0,   216,   217,
       0,     0,     0,     0,     0,     0,   218,     0,   219,     0,
       0,     0,   220,     0,     0,   221,     0,     0,     0,     0,
       0,   222,     0,   223,     0,     0,   224,     0,   225,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   226,   227,
     228,   229,   230,   231,     0,   232,   233,   234,   235,   236,
     237,   238,   239,   240,     0,   241,   242,   243,     0,   244,
     245,     0,     0,     0,   246,   247,   248,   249,     0,     0,
     250,   251,     0,     0,   252,     0,   253,     0,   254,     0,
       0,   255,   256,   257,   258,   259,   260,   261,     0,     0,
     262,   263,     0,   264,   265,   266,     0,     0,     0,   267,
       0,     0,     0,     0,   268,   269,     0,   270,     0,   271,
     272,   273,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   274,   275,   276,     0,   277,     0,   278,     0,
     279,     0,     0,   280,   281,     0,   282,     0,   283,   284,
       0,   285,   286,   287,   288,   289,   290,   291,   292,     0,
       0,     0,     0,   293,   294,     0,     0,   295,   296,   297,
       0,   298,     0,   299,   300,     0,     0,   301,     0,   302,
     303,   304,     0,   305,   306,     0,     0,     0,   307,   308,
       0,   309,   310,     0,   311,   312,   313,   314,     0,   315,
     316,     0,     0,     0,   317,   318,   319,     0,     0,   320,
       0,     0,     0,   321,   322,   323,   324,     0,   325,   326,
       0,     0,     0,     0,     0,     0,   327,   328,     0,   329,
       0,     0,   330,     0,     0,   331,   332,     0,     0,   333,
     334,     0,   335,   336,   337,     0,     0,     0,   338,   339,
       0,   340,   341,     0,   342,   343,     0,     0,   344,   345,
     346,   347,   348,     0,     0,     0,     0,     0,   349,     0,
     350,     0,     0,   351,   352,   353,   354,     0,     0,   355,
     356,     0,     0,   357,     0,     0,     0,     0,   358,     0,
       0,   359,     0,     0,     0,   360,   361,     0,     0,     0,
       0,     0,     0,     0,   362,     0,     0,   363,     0,     0,
     364,   365,   366,     0,     0,     0,     0,   367,     0,   368,
     369,     0,     0,     0,   370,     0,     0,     0,     0,     0,
       0,   122,     0,   123,   124,   125,   126,   127,     0,     0,
       0,     0,  3537,   128,     0,     0,   129,  3538,   867,   130,
     131,   132,   133,     0,   134,     0,   135,     0,     0,   136,
       0,     0,     0,   137,     0,     0,   138,   139,     0,   140,
       0,   141,   142,     0,     0,   143,     0,   144,     0,   145,
     146,     0,   147,     0,   148,   149,   150,     0,   151,     0,
     152,   153,     0,   154,   155,   156,   157,   158,     0,     0,
     159,     0,     0,   160,     0,   161,     0,     0,     0,     0,
       0,     0,   162,     0,     0,     0,     0,     0,     0,   163,
     164,     0,     0,   165,     0,     0,     0,     0,   166,   167,
       0,     0,     0,     0,     0,   168,     0,   169,     0,     0,
       0,     0,     0,   170,     0,   171,   172,   173,     0,     0,
       0,   174,     0,     0,   175,   176,   177,     0,     0,     0,
     178,     0,     0,     0,   179,   180,   181,   182,     0,     0,
     183,     0,   184,   185,   186,     0,     0,   187,     0,   188,
       0,     0,   189,     0,     0,   190,   191,   192,     0,     0,
     193,     0,     0,     0,     0,   194,   195,     0,     0,   196,
       0,   197,     0,     0,     0,     0,     0,     0,   198,   199,
       0,     0,   200,   201,     0,   202,     0,     0,     0,     0,
       0,   203,   204,     0,   205,     0,     0,   206,     0,     0,
       0,   207,   208,   209,   210,     0,     0,   211,   212,     0,
       0,     0,   213,     0,     0,     0,   214,     0,   969,     0,
     215,     0,     0,   216,   217,     0,     0,     0,     0,     0,
       0,   218,     0,   219,     0,     0,     0,   220,     0,     0,
     221,     0,     0,     0,     0,     0,   222,     0,   223,     0,
       0,   224,     0,   225,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   226,   227,   228,   229,   230,   231,     0,
     232,   233,   234,   235,   236,   237,   238,   239,   240,     0,
     241,   242,   243,     0,   244,   245,     0,     0,     0,   246,
     247,   248,   249,     0,     0,   250,   251,     0,     0,   252,
       0,   253,     0,   254,     0,     0,   255,   256,   257,   258,
     259,   260,   261,     0,     0,   262,   263,     0,   264,   265,
     266,     0,     0,     0,   267,     0,     0,     0,     0,   268,
     269,     0,   270,     0,   271,   272,   273,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   274,   275,   276,
       0,   277,     0,   278,     0,   279,     0,     0,   280,   281,
       0,   282,     0,   283,   284,     0,   285,   286,   287,   288,
     289,   290,   291,   292,     0,     0,     0,     0,   293,   294,
       0,     0,   295,   296,   297,     0,   298,     0,   299,   300,
       0,     0,   301,     0,   302,   303,   304,     0,   305,   306,
       0,     0,     0,   307,   308,     0,   309,   310,     0,   311,
     312,   313,   314,     0,   315,   316,     0,     0,     0,   317,
     318,   319,     0,     0,   320,     0,     0,     0,   321,   322,
     323,   324,     0,   325,   326,     0,     0,     0,     0,     0,
       0,   327,   328,     0,   329,     0,     0,   330,     0,     0,
     331,   332,     0,     0,   333,   334,     0,   335,   336,   337,
       0,     0,     0,   338,   339,     0,   340,   341,     0,   342,
     343,     0,     0,   344,   345,   346,   347,   348,     0,     0,
       0,     0,     0,   349,     0,   350,     0,     0,   351,   352,
     353,   354,     0,     0,   355,   356,     0,     0,   357,     0,
       0,     0,     0,   358,     0,     0,   359,     0,     0,     0,
     360,   361,     0,     0,     0,     0,     0,     0,     0,   362,
       0,     0,   363,     0,     0,   364,   365,   366,     0,     0,
       0,     0,   367,     0,   368,   369,     0,     0,     0,   370,
       0,   122,     0,   123,   124,   125,   126,   127,     0,     0,
       0,     0,     0,   128,     0,     0,   129,     0,     0,   130,
     131,   132,   133,   406,   134,     0,   135,     0,     0,   136,
       0,     0,     0,   137,     0,     0,   138,   139,     0,   140,
       0,   141,   142,     0,     0,   143,     0,   144,     0,   145,
     146,     0,   147,     0,   148,   149,   150,     0,   151,     0,
     152,   153,     0,   154,   155,   156,   157,   158,     0,     0,
     159,     0,     0,   160,     0,   161,     0,     0,     0,     0,
       0,     0,   162,     0,     0,     0,     0,     0,     0,   163,
     164,     0,     0,   165,     0,     0,     0,     0,   166,   167,
       0,     0,     0,     0,     0,   168,     0,   169,     0,     0,
       0,     0,     0,   170,     0,   171,   172,   173,     0,     0,
       0,   174,     0,     0,   175,   176,   177,     0,     0,     0,
     178,     0,     0,     0,   179,   180,   181,   182,     0,     0,
     183,     0,   184,   185,   186,     0,     0,   187,     0,   188,
       0,     0,   189,     0,     0,   190,   191,   192,     0,     0,
     193,     0,     0,     0,     0,   194,   195,     0,     0,   196,
       0,   197,     0,     0,     0,     0,     0,     0,   198,   199,
       0,     0,   200,   201,     0,   202,     0,     0,     0,     0,
       0,   203,   204,     0,   205,     0,     0,   206,     0,     0,
       0,   207,   208,   209,   210,     0,     0,   211,   212,     0,
       0,     0,   213,     0,     0,     0,   214,     0,     0,     0,
     215,     0,     0,   216,   217,     0,     0,     0,     0,     0,
       0,   218,     0,   219,     0,     0,     0,   220,     0,     0,
     221,     0,     0,     0,     0,     0,   222,     0,   223,     0,
       0,   224,     0,   225,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   226,   227,   228,   229,   230,   231,     0,
     232,   233,   234,   235,   236,   237,   238,   239,   240,     0,
     241,   242,   243,     0,   244,   245,     0,     0,     0,   246,
     247,   248,   249,     0,     0,   250,   251,     0,     0,   252,
       0,   253,     0,   254,     0,     0,   255,   256,   257,   258,
     259,   260,   261,     0,     0,   262,   263,     0,   264,   265,
     266,     0,     0,     0,   267,     0,     0,     0,     0,   268,
     269,     0,   270,     0,   271,   272,   273,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   274,   275,   276,
       0,   277,     0,   278,     0,   279,     0,     0,   280,   281,
       0,   282,     0,   283,   284,     0,   285,   286,   287,   288,
     289,   290,   291,   292,     0,     0,     0,     0,   293,   294,
       0,     0,   295,   296,   297,     0,   298,     0,   299,   300,
       0,     0,   301,     0,   302,   303,   304,     0,   305,   306,
       0,     0,     0,   307,   308,     0,   309,   310,     0,   311,
     312,   313,   314,     0,   315,   316,     0,     0,     0,   317,
     318,   319,     0,     0,   320,     0,     0,     0,   321,   322,
     323,   324,     0,   325,   326,     0,     0,     0,     0,     0,
       0,   327,   328,     0,   329,     0,     0,   330,     0,     0,
     331,   332,     0,     0,   333,   334,     0,   335,   336,   337,
       0,     0,     0,   338,   339,     0,   340,   341,     0,   342,
     343,     0,     0,   344,   345,   346,   347,   348,     0,     0,
       0,     0,     0,   349,     0,   350,     0,     0,   351,   352,
     353,   354,     0,     0,   355,   356,     0,     0,   357,     0,
       0,     0,     0,   358,     0,     0,   359,     0,     0,     0,
     360,   361,     0,     0,     0,     0,     0,     0,     0,   362,
       0,     0,   363,     0,     0,   364,   365,   366,     0,     0,
       0,     0,   367,     0,   368,   369,     0,     0,     0,   370,
       0,   122,     0,   123,   124,   125,   126,   127,     0,     0,
    1802,     0,     0,   128,     0,     0,   129,     0,     0,   130,
     131,   132,   133,   406,   134,     0,   135,     0,     0,   136,
       0,     0,     0,   137,     0,     0,   138,   139,     0,   140,
       0,   141,   142,     0,     0,   143,     0,   144,     0,   145,
     146,     0,   147,     0,   148,   149,   150,     0,   151,     0,
     152,   153,     0,   154,   155,   156,   157,   158,     0,     0,
     159,     0,     0,   160,     0,   161,     0,     0,     0,     0,
       0,     0,   162,     0,     0,     0,     0,     0,     0,   163,
     164,     0,     0,   165,     0,     0,     0,     0,   166,   167,
       0,     0,     0,     0,     0,   168,     0,   169,     0,     0,
       0,     0,     0,   170,     0,   171,   172,   173,     0,     0,
       0,   174,     0,     0,   175,   176,   177,     0,     0,     0,
     178,     0,     0,     0,   179,   180,   181,   182,     0,     0,
     183,     0,   184,   185,   186,     0,     0,   187,     0,   188,
       0,     0,   189,     0,     0,   190,   191,   192,     0,     0,
     193,     0,     0,     0,     0,   194,   195,     0,     0,   196,
       0,   197,     0,     0,     0,     0,     0,     0,   198,   199,
       0,     0,   200,   201,     0,   202,     0,     0,     0,     0,
       0,   203,   204,     0,   205,     0,     0,   206,     0,     0,
       0,   207,   208,   209,   210,     0,     0,   211,   212,     0,
       0,     0,   213,     0,     0,     0,   214,     0,     0,     0,
     215,     0,     0,   216,   217,     0,     0,     0,     0,     0,
       0,   218,     0,   219,     0,     0,     0,   220,     0,     0,
     221,     0,     0,     0,     0,     0,   222,     0,   223,     0,
       0,   224,     0,   225,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   226,   227,   228,   229,   230,   231,     0,
     232,   233,   234,   235,   236,   237,   238,   239,   240,     0,
     241,   242,   243,     0,   244,   245,     0,     0,     0,   246,
     247,   248,   249,     0,     0,   250,   251,     0,     0,   252,
       0,   253,     0,   254,     0,     0,   255,   256,   257,   258,
     259,   260,   261,     0,     0,   262,   263,     0,   264,   265,
     266,     0,     0,     0,   267,     0,     0,     0,     0,   268,
     269,     0,   270,     0,   271,   272,   273,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   274,   275,   276,
       0,   277,     0,   278,     0,   279,     0,     0,   280,   281,
       0,   282,     0,   283,   284,     0,   285,   286,   287,   288,
     289,   290,   291,   292,     0,     0,     0,     0,   293,   294,
       0,     0,   295,   296,   297,     0,   298,     0,   299,   300,
       0,     0,   301,     0,   302,   303,   304,     0,   305,   306,
       0,     0,     0,   307,   308,     0,   309,   310,     0,   311,
     312,   313,   314,     0,   315,   316,     0,     0,     0,   317,
     318,   319,     0,     0,   320,     0,     0,     0,   321,   322,
     323,   324,     0,   325,   326,     0,     0,     0,     0,     0,
       0,   327,   328,     0,   329,     0,     0,   330,     0,     0,
     331,   332,     0,     0,   333,   334,     0,   335,   336,   337,
       0,     0,     0,   338,   339,     0,   340,   341,     0,   342,
     343,     0,     0,   344,   345,   346,   347,   348,     0,     0,
       0,     0,     0,   349,     0,   350,     0,     0,   351,   352,
     353,   354,     0,     0,   355,   356,     0,     0,   357,     0,
       0,     0,     0,   358,     0,     0,   359,     0,     0,     0,
     360,   361,     0,     0,     0,     0,     0,     0,     0,   362,
       0,     0,   363,     0,     0,   364,   365,   366,     0,     0,
       0,     0,   367,     0,   368,   369,     0,     0,     0,   370,
       0,     0,     0,     0,     0,     0,   122,     0,   123,   124,
     125,   126,   127,     0,     0,     0,  1979,     0,   128,     0,
       0,   129,     0,  1980,   130,   131,   132,   133,     0,   134,
       0,   135,     0,     0,   136,     0,     0,     0,   137,     0,
       0,   138,   139,     0,   140,     0,   141,   142,     0,     0,
     143,     0,   144,     0,   145,   146,     0,   147,     0,   148,
     149,   150,     0,   151,     0,   152,   153,     0,   154,   155,
     156,   157,   158,     0,     0,   159,     0,     0,   160,     0,
     161,     0,     0,     0,     0,     0,     0,   162,     0,     0,
       0,     0,     0,     0,   163,   164,     0,     0,   165,     0,
       0,     0,     0,   166,   167,     0,     0,     0,     0,     0,
     168,     0,   169,     0,     0,     0,     0,     0,   170,     0,
     171,   172,   173,     0,     0,     0,   174,     0,     0,   175,
     176,   177,     0,     0,     0,   178,     0,     0,     0,   179,
     180,   181,   182,     0,     0,   183,     0,   184,   185,   186,
       0,     0,   187,     0,   188,     0,     0,   189,     0,     0,
     190,   191,   192,     0,     0,   193,     0,     0,     0,     0,
     194,   195,     0,     0,   196,     0,   197,     0,     0,     0,
       0,     0,     0,   198,   199,     0,     0,   200,   201,     0,
     202,     0,     0,     0,     0,     0,   203,   204,     0,   205,
       0,     0,   206,     0,     0,     0,   207,   208,   209,   210,
       0,     0,   211,   212,     0,     0,     0,   213,     0,     0,
       0,   214,     0,     0,     0,   215,     0,     0,   216,   217,
       0,     0,     0,     0,     0,     0,   218,     0,   219,     0,
       0,     0,   220,     0,     0,   221,     0,     0,     0,     0,
       0,   222,     0,   223,     0,     0,   224,     0,   225,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   226,   227,
     228,   229,   230,   231,     0,   232,   233,   234,   235,   236,
     237,   238,   239,   240,     0,   241,   242,   243,     0,   244,
     245,     0,     0,     0,   246,   247,   248,   249,     0,     0,
     250,   251,     0,     0,   252,     0,   253,     0,   254,     0,
       0,   255,   256,   257,   258,   259,   260,   261,     0,     0,
     262,   263,     0,   264,   265,   266,     0,     0,     0,   267,
       0,     0,     0,     0,   268,   269,     0,   270,     0,   271,
     272,   273,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   274,   275,   276,     0,   277,     0,   278,     0,
     279,     0,     0,   280,   281,     0,   282,     0,   283,   284,
       0,   285,   286,   287,   288,   289,   290,   291,   292,     0,
       0,     0,     0,   293,   294,     0,     0,   295,   296,   297,
       0,   298,     0,   299,   300,     0,     0,   301,     0,   302,
     303,   304,     0,   305,   306,     0,     0,     0,   307,   308,
       0,   309,   310,     0,   311,   312,   313,   314,     0,   315,
     316,     0,     0,     0,   317,   318,   319,     0,     0,   320,
       0,     0,     0,   321,   322,   323,   324,     0,   325,   326,
       0,     0,     0,     0,     0,     0,   327,   328,     0,   329,
       0,     0,   330,     0,     0,   331,   332,     0,     0,   333,
     334,     0,   335,   336,   337,     0,     0,     0,   338,   339,
       0,   340,   341,     0,   342,   343,     0,     0,   344,   345,
     346,   347,   348,     0,     0,     0,     0,     0,   349,     0,
     350,     0,     0,   351,   352,   353,   354,     0,     0,   355,
     356,     0,     0,   357,     0,     0,     0,     0,   358,     0,
       0,   359,     0,     0,     0,   360,   361,     0,     0,     0,
       0,     0,     0,     0,   362,     0,     0,   363,     0,     0,
     364,   365,   366,     0,     0,     0,     0,   367,     0,   368,
     369,     0,     0,     0,   370,     0,     0,     0,     0,     0,
       0,   122,     0,   123,   124,   125,   126,   127,     0,     0,
       0,     0,     0,   128,     0,     0,   129,  3538,   867,   130,
     131,   132,   133,     0,   134,     0,   135,     0,     0,   136,
       0,     0,     0,   137,     0,     0,   138,   139,     0,   140,
       0,   141,   142,     0,     0,   143,     0,   144,     0,   145,
     146,     0,   147,     0,   148,   149,   150,     0,   151,     0,
     152,   153,     0,   154,   155,   156,   157,   158,     0,     0,
     159,     0,     0,   160,     0,   161,     0,     0,     0,     0,
       0,     0,   162,     0,     0,     0,     0,     0,     0,   163,
     164,     0,     0,   165,     0,     0,     0,     0,   166,   167,
       0,     0,     0,     0,     0,   168,     0,   169,     0,     0,
       0,     0,     0,   170,     0,   171,   172,   173,     0,     0,
       0,   174,     0,     0,   175,   176,   177,     0,     0,     0,
     178,     0,     0,     0,   179,   180,   181,   182,     0,     0,
     183,     0,   184,   185,   186,     0,     0,   187,     0,   188,
       0,     0,   189,     0,     0,   190,   191,   192,     0,     0,
     193,     0,     0,     0,     0,   194,   195,     0,     0,   196,
       0,   197,     0,     0,     0,     0,     0,     0,   198,   199,
       0,     0,   200,   201,     0,   202,     0,     0,     0,     0,
       0,   203,   204,     0,   205,     0,     0,   206,     0,     0,
       0,   207,   208,   209,   210,     0,     0,   211,   212,     0,
       0,     0,   213,     0,     0,     0,   214,     0,     0,     0,
     215,     0,     0,   216,   217,     0,     0,     0,     0,     0,
       0,   218,     0,   219,     0,     0,     0,   220,     0,     0,
     221,     0,     0,     0,     0,     0,   222,     0,   223,     0,
       0,   224,     0,   225,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   226,   227,   228,   229,   230,   231,     0,
     232,   233,   234,   235,   236,   237,   238,   239,   240,     0,
     241,   242,   243,     0,   244,   245,     0,     0,     0,   246,
     247,   248,   249,     0,     0,   250,   251,     0,     0,   252,
       0,   253,     0,   254,     0,     0,   255,   256,   257,   258,
     259,   260,   261,     0,     0,   262,   263,     0,   264,   265,
     266,     0,     0,     0,   267,     0,     0,     0,     0,   268,
     269,     0,   270,     0,   271,   272,   273,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   274,   275,   276,
       0,   277,     0,   278,     0,   279,     0,     0,   280,   281,
       0,   282,     0,   283,   284,     0,   285,   286,   287,   288,
     289,   290,   291,   292,     0,     0,     0,     0,   293,   294,
       0,     0,   295,   296,   297,     0,   298,     0,   299,   300,
       0,     0,   301,     0,   302,   303,   304,     0,   305,   306,
       0,     0,     0,   307,   308,     0,   309,   310,     0,   311,
     312,   313,   314,     0,   315,   316,     0,     0,     0,   317,
     318,   319,     0,     0,   320,     0,     0,     0,   321,   322,
     323,   324,     0,   325,   326,     0,     0,     0,     0,     0,
       0,   327,   328,     0,   329,     0,     0,   330,     0,     0,
     331,   332,     0,     0,   333,   334,     0,   335,   336,   337,
       0,     0,     0,   338,   339,     0,   340,   341,     0,   342,
     343,     0,     0,   344,   345,   346,   347,   348,     0,     0,
       0,     0,     0,   349,     0,   350,     0,     0,   351,   352,
     353,   354,     0,     0,   355,   356,     0,     0,   357,     0,
       0,     0,     0,   358,     0,     0,   359,     0,     0,     0,
     360,   361,     0,     0,     0,     0,     0,     0,     0,   362,
       0,     0,   363,     0,     0,   364,   365,   366,     0,     0,
       0,     0,   367,     0,   368,   369,     0,     0,     0,   370,
       0,   122,     0,   123,   124,   125,   126,   127,     0,     0,
       0,     0,     0,   128,     0,     0,   129,     0,     0,   130,
     131,   132,   133,   406,   134,     0,   135,     0,     0,   136,
       0,     0,     0,   137,     0,     0,   138,   139,     0,   140,
       0,   141,   142,     0,     0,   143,     0,   144,     0,   145,
     146,     0,   147,     0,   148,   149,   150,     0,   151,     0,
     152,   153,     0,   154,   155,   156,   157,   158,     0,     0,
     159,     0,     0,   160,     0,   161,     0,     0,     0,     0,
       0,     0,   162,     0,     0,     0,     0,     0,     0,   163,
     164,     0,     0,   165,     0,     0,     0,     0,   166,   167,
       0,     0,     0,     0,     0,   168,     0,   169,     0,     0,
       0,     0,     0,   170,     0,   171,   172,   173,     0,     0,
       0,   174,     0,     0,   175,   176,   177,     0,     0,     0,
     178,     0,     0,     0,   179,   180,   181,   182,     0,     0,
     183,     0,   184,   185,   186,     0,     0,   187,     0,   460,
       0,     0,   189,     0,     0,   190,   191,   192,     0,     0,
     193,     0,     0,     0,     0,   194,   195,     0,     0,   196,
       0,   197,     0,     0,     0,     0,     0,     0,   198,   199,
       0,     0,   200,   201,     0,   202,     0,     0,     0,     0,
       0,   203,   204,     0,   205,     0,     0,   206,     0,     0,
       0,   207,   208,   209,   210,     0,     0,   211,   212,     0,
       0,     0,   213,     0,     0,     0,   214,     0,     0,     0,
     215,     0,     0,   216,   217,     0,     0,     0,     0,     0,
       0,   218,     0,   219,     0,     0,     0,   220,     0,     0,
     221,     0,     0,     0,     0,     0,   222,     0,   223,     0,
       0,   224,     0,   225,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   226,   227,   228,   229,   230,   231,     0,
     232,   233,   234,   235,   236,   237,   238,   239,   240,     0,
     241,   242,   243,     0,   244,   245,     0,     0,     0,   246,
     247,   248,   249,     0,     0,   250,   251,     0,     0,   252,
       0,   253,     0,   254,     0,     0,   255,   256,   257,   258,
     259,   260,   261,     0,     0,   262,   263,     0,   264,   265,
     266,     0,     0,     0,   267,     0,     0,     0,     0,   268,
     269,     0,   270,     0,   271,   272,   273,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   274,   275,   276,
       0,   277,     0,   278,     0,   279,     0,     0,   280,   281,
       0,   282,     0,   283,   284,     0,   285,   286,   287,   288,
     289,   290,   291,   292,     0,     0,     0,     0,   293,   294,
       0,     0,   295,   296,   297,     0,   298,     0,   299,   300,
       0,     0,   301,     0,   302,   303,   304,     0,   305,   306,
       0,     0,     0,   307,   308,     0,   309,   310,     0,   311,
     312,   313,   314,     0,   315,   316,     0,     0,     0,   317,
     318,   319,     0,     0,   320,     0,     0,     0,   321,   322,
     323,   324,     0,   325,   326,     0,     0,     0,     0,     0,
       0,   327,   328,     0,   329,     0,     0,   330,     0,     0,
     331,   332,     0,     0,   333,   334,     0,   335,   336,   337,
       0,     0,     0,   338,   339,     0,   340,   341,     0,   342,
     343,     0,     0,   344,   345,   346,   347,   348,     0,     0,
       0,     0,     0,   349,     0,   350,     0,     0,   351,   352,
     353,   354,     0,     0,   355,   356,     0,     0,   357,     0,
       0,     0,     0,   358,     0,     0,   359,     0,     0,     0,
     360,   361,     0,     0,     0,     0,     0,     0,     0,   362,
       0,     0,   363,     0,     0,   364,   365,   366,     0,     0,
       0,     0,   367,     0,   368,   369,     0,     0,     0,   370,
       0,   122,     0,   123,   124,   125,   126,   127,     0,     0,
       0,     0,     0,   128,     0,     0,   129,     0,     0,   130,
     131,   132,   133,   406,   134,     0,   135,     0,     0,   136,
       0,     0,     0,   137,     0,     0,   138,   139,     0,   140,
       0,   141,   142,     0,     0,   143,     0,   144,     0,   145,
     146,     0,   147,     0,   148,   149,   150,     0,   151,     0,
     152,   153,     0,   154,   155,   156,   157,   158,     0,     0,
     159,     0,     0,   160,     0,   161,     0,     0,     0,     0,
       0,     0,   162,     0,     0,     0,     0,     0,     0,   163,
     164,     0,     0,   165,     0,     0,     0,     0,   166,   167,
       0,     0,     0,     0,     0,   168,     0,   169,     0,     0,
       0,     0,     0,   170,     0,   171,   172,   173,     0,     0,
       0,   174,     0,     0,   175,   176,   177,     0,     0,     0,
     178,     0,     0,     0,   179,   180,   181,   182,     0,     0,
     183,     0,   184,   185,   186,     0,     0,   187,     0,   188,
       0,     0,   189,     0,     0,   190,   191,   192,     0,     0,
     193,     0,     0,     0,     0,   194,   195,     0,     0,   196,
       0,   197,     0,     0,     0,     0,     0,     0,   198,   199,
       0,     0,   200,   201,     0,   202,     0,     0,     0,     0,
       0,   203,   204,     0,   205,     0,     0,   206,     0,     0,
       0,   207,   208,   209,   210,     0,     0,   211,   212,     0,
       0,     0,   213,     0,     0,     0,   214,     0,     0,     0,
     215,     0,     0,   216,   217,     0,     0,     0,     0,     0,
       0,   218,     0,   219,     0,     0,     0,   220,     0,     0,
     221,     0,     0,     0,     0,     0,   222,     0,   223,     0,
       0,   224,     0,   225,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   226,   227,   228,   229,   230,   231,     0,
     232,   233,   234,   235,   236,   237,   238,   239,   240,     0,
     241,   242,   243,     0,   244,   245,     0,     0,     0,   246,
     247,   248,   249,     0,     0,   250,   251,     0,     0,   252,
       0,   253,     0,   254,     0,     0,   255,   256,   257,   258,
     259,   260,   261,     0,     0,   262,   263,     0,   264,   265,
     266,     0,     0,     0,   267,     0,     0,     0,     0,   268,
     269,     0,   270,     0,   271,   272,   273,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   274,   275,   276,
       0,   277,     0,   278,     0,   279,     0,     0,   280,   281,
       0,   282,     0,   283,   284,     0,   285,   286,   287,   288,
     289,   290,   291,   292,     0,     0,     0,     0,   293,   294,
       0,     0,   295,   296,   297,     0,   298,     0,   299,   300,
       0,     0,   301,     0,   302,   303,   304,     0,   305,   306,
       0,     0,     0,   307,   308,     0,   309,   310,     0,   311,
     312,   313,   314,     0,   315,   316,     0,     0,     0,   317,
     318,   319,     0,     0,   320,     0,     0,     0,   321,   322,
     323,   324,     0,   325,   326,     0,     0,     0,     0,     0,
       0,   327,   328,     0,   329,     0,     0,   330,     0,     0,
     331,   332,     0,     0,   333,   334,     0,   335,   336,   337,
       0,     0,     0,   338,   339,     0,   340,   341,     0,   342,
     343,     0,     0,   344,   345,   346,   347,   348,     0,     0,
       0,     0,     0,   349,     0,   350,     0,     0,   351,   352,
     353,   354,     0,     0,   355,   356,     0,     0,   357,     0,
       0,     0,     0,   358,     0,     0,   359,     0,     0,     0,
     360,   361,     0,     0,     0,     0,     0,     0,     0,   362,
       0,     0,   363,     0,     0,   364,   365,   366,     0,     0,
       0,     0,   367,     0,   368,   369,     0,     0,     0,   370,
       0,   122,     0,   123,   124,   125,   126,   127,     0,     0,
       0,     0,     0,   128,     0,     0,   129,     0,     0,   130,
     131,   132,   133,   867,   134,     0,   135,     0,     0,   136,
       0,     0,     0,   137,     0,     0,   138,   139,     0,   140,
       0,   141,   142,     0,     0,   143,     0,   144,     0,   145,
     146,     0,   147,     0,   148,   149,   150,     0,   151,     0,
     152,   153,     0,   154,   155,   156,   157,   158,     0,     0,
     159,     0,     0,   160,     0,   161,     0,     0,     0,     0,
       0,     0,   162,     0,     0,     0,     0,     0,     0,   163,
     164,     0,     0,   165,     0,     0,     0,     0,   166,   167,
       0,     0,     0,     0,     0,   168,     0,   169,     0,     0,
       0,     0,     0,   170,     0,   171,   172,   173,     0,     0,
       0,   174,     0,     0,   175,   176,   177,     0,     0,     0,
     178,     0,     0,     0,   179,   180,   181,   182,     0,     0,
     183,     0,   184,   185,   186,     0,     0,   187,     0,   188,
       0,     0,   189,     0,     0,   190,   191,   192,     0,     0,
     193,     0,     0,     0,     0,   194,   195,     0,     0,   196,
       0,   197,     0,     0,     0,     0,     0,     0,   198,   199,
       0,     0,   200,   201,     0,   202,     0,     0,     0,     0,
       0,   203,   204,     0,   205,     0,     0,   206,     0,     0,
       0,   207,   208,   209,   210,     0,     0,   211,   212,     0,
       0,     0,   213,     0,     0,     0,   214,     0,     0,     0,
     215,     0,     0,   216,   217,     0,     0,     0,     0,     0,
       0,   218,     0,   219,     0,     0,     0,   220,     0,     0,
     221,     0,     0,     0,     0,     0,   222,     0,   223,     0,
       0,   224,     0,   225,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   226,   227,   228,   229,   230,   231,     0,
     232,   233,   234,   235,   236,   237,   238,   239,   240,     0,
     241,   242,   243,     0,   244,   245,     0,     0,     0,   246,
     247,   248,   249,     0,     0,   250,   251,     0,     0,   252,
       0,   253,     0,   254,     0,     0,   255,   256,   257,   258,
     259,   260,   261,     0,     0,   262,   263,     0,   264,   265,
     266,     0,     0,     0,   267,     0,     0,     0,     0,   268,
     269,     0,   270,     0,   271,   272,   273,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   274,   275,   276,
       0,   277,     0,   278,     0,   279,     0,     0,   280,   281,
       0,   282,     0,   283,   284,     0,   285,   286,   287,   288,
     289,   290,   291,   292,     0,     0,     0,     0,   293,   294,
       0,     0,   295,   296,   297,     0,   298,     0,   299,   300,
       0,     0,   301,     0,   302,   303,   304,     0,   305,   306,
       0,     0,     0,   307,   308,     0,   309,   310,     0,   311,
     312,   313,   314,     0,   315,   316,     0,     0,     0,   317,
     318,   319,     0,     0,   320,     0,     0,     0,   321,   322,
     323,   324,     0,   325,   326,     0,     0,     0,     0,     0,
       0,   327,   328,     0,   329,     0,     0,   330,     0,     0,
     331,   332,     0,     0,   333,   334,     0,   335,   336,   337,
       0,     0,     0,   338,   339,     0,   340,   341,     0,   342,
     343,     0,     0,   344,   345,   346,   347,   348,     0,     0,
       0,     0,     0,   349,     0,   350,     0,     0,   351,   352,
     353,   354,     0,     0,   355,   356,     0,     0,   357,     0,
       0,     0,     0,   358,     0,     0,   359,     0,     0,     0,
     360,   361,     0,     0,     0,     0,     0,     0,     0,   362,
       0,     0,   363,     0,     0,   364,   365,   366,     0,     0,
       0,     0,   367,     0,   368,   369,     0,     0,     0,   370,
       0,   122,     0,   123,   124,   125,   126,   127,     0,     0,
       0,     0,     0,   128,     0,     0,   129,     0,     0,   130,
     131,   132,   133,  1980,   134,     0,   135,     0,     0,   136,
       0,     0,     0,   137,     0,     0,   138,   139,     0,   140,
       0,   141,   142,     0,     0,   143,     0,   144,     0,   145,
     146,     0,   147,     0,   148,   149,   150,     0,   151,     0,
     152,   153,     0,   154,   155,   156,   157,   158,     0,     0,
     159,     0,     0,   160,     0,   161,     0,     0,     0,     0,
       0,     0,   162,     0,     0,     0,     0,     0,     0,   163,
     164,     0,     0,   165,     0,     0,     0,     0,   166,   167,
       0,     0,     0,     0,     0,   168,     0,   169,     0,     0,
       0,     0,     0,   170,     0,   171,   172,   173,     0,     0,
       0,   174,     0,     0,   175,   176,   177,     0,     0,     0,
     178,     0,     0,     0,   179,   180,   181,   182,     0,     0,
     183,     0,   184,   185,   186,     0,     0,   187,     0,   188,
       0,     0,   189,     0,     0,   190,   191,   192,     0,     0,
     193,     0,     0,     0,     0,   194,   195,     0,     0,   196,
       0,   197,     0,     0,     0,     0,     0,     0,   198,   199,
       0,     0,   200,   201,     0,   202,     0,     0,     0,     0,
       0,   203,   204,     0,   205,     0,     0,   206,     0,     0,
       0,   207,   208,   209,   210,     0,     0,   211,   212,     0,
       0,     0,   213,     0,     0,     0,   214,     0,     0,     0,
     215,     0,     0,   216,   217,     0,     0,     0,     0,     0,
       0,   218,     0,   219,     0,     0,     0,   220,     0,     0,
     221,   545,     0,     0,     0,     0,   222,     0,   223,     0,
       0,   224,     0,   225,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   226,   227,   228,   229,   230,   231,     0,
     232,   233,   234,   235,   236,   237,   238,   239,   240,     0,
     241,   242,   243,     0,   244,   245,     0,     0,     0,   246,
     247,   248,   249,     0,     0,   250,   251,     0,     0,   252,
       0,   253,     0,   254,     0,     0,   255,   256,   257,   258,
     259,   260,   261,     0,     0,   262,   263,     0,   264,   265,
     266,     0,     0,     0,   267,     0,     0,     0,     0,   268,
     269,     0,   270,     0,   271,   272,   273,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   274,   275,   276,
       0,   277,     0,   278,     0,   279,     0,     0,   280,   281,
       0,   282,     0,   283,   284,     0,   285,   286,   287,   288,
     289,   290,   291,   292,     0,     0,     0,     0,   293,   294,
       0,     0,   295,   296,   297,     0,   298,     0,   299,   300,
       0,     0,   301,     0,   302,   303,   304,     0,   305,   306,
       0,     0,     0,   307,   308,     0,   309,   310,     0,   311,
     312,   313,   314,     0,   315,   316,     0,     0,     0,   317,
     318,   319,     0,     0,   320,     0,     0,     0,   321,   322,
     323,   324,     0,   325,   326,     0,     0,     0,     0,     0,
       0,   327,   328,     0,   329,     0,     0,   330,     0,     0,
     331,   332,     0,     0,   333,   334,     0,   335,   336,   337,
       0,     0,     0,   338,   339,     0,   340,   341,     0,   342,
     343,     0,   546,   344,   345,   346,   347,   348,     0,     0,
       0,     0,     0,   349,     0,   350,     0,     0,   351,   352,
     353,   354,     0,     0,   355,   356,     0,     0,   357,     0,
       0,     0,     0,   358,     0,     0,   359,     0,     0,     0,
     360,   361,     0,     0,     0,     0,     0,     0,     0,   362,
       0,     0,   363,     0,     0,   364,   365,   366,     0,     0,
       0,     0,   367,     0,   368,   369,     0,     0,   122,   370,
     123,   124,   125,   126,   127,     0,     0,     0,     0,     0,
     128,     0,     0,   129,     0,     0,   130,   131,   132,   133,
       0,   134,  1291,   135,     0,     0,   136,     0,     0,     0,
     137,     0,     0,   138,   139,     0,   140,     0,   141,   142,
       0,     0,   143,     0,   144,     0,   145,   146,     0,   147,
       0,   148,   149,   150,     0,   151,     0,   152,   153,     0,
     154,   155,   156,   157,   158,     0,     0,   159,     0,     0,
     160,     0,   161,     0,     0,     0,     0,     0,     0,   162,
       0,     0,     0,     0,     0,     0,   163,   164,     0,     0,
     165,     0,     0,     0,     0,   166,   167,     0,     0,     0,
       0,     0,   168,     0,   169,     0,     0,     0,     0,     0,
     170,     0,   171,   172,   173,     0,     0,     0,   174,     0,
       0,   175,   176,   177,     0,     0,     0,   178,     0,     0,
       0,   179,   180,   181,   182,     0,     0,   183,     0,   184,
     185,   186,     0,     0,   187,     0,   188,     0,     0,   189,
       0,     0,   190,   191,   192,     0,     0,   193,     0,     0,
       0,     0,   194,   195,     0,     0,   196,     0,   197,     0,
       0,     0,     0,     0,     0,   198,   199,     0,     0,   200,
     201,     0,   202,     0,     0,     0,     0,     0,   203,   204,
       0,   205,     0,     0,   206,     0,     0,     0,   207,   208,
     209,   210,     0,     0,   211,   212,     0,     0,     0,   213,
       0,     0,     0,   214,     0,     0,     0,   215,     0,     0,
     216,   217,     0,     0,     0,     0,     0,     0,   218,     0,
     219,     0,     0,     0,   220,     0,     0,   221,   545,     0,
       0,     0,     0,   222,     0,   223,     0,     0,   224,     0,
     225,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     226,   227,   228,   229,   230,   231,     0,   232,   233,   234,
     235,   236,   237,   238,   239,   240,     0,   241,   242,   243,
       0,   244,   245,     0,     0,     0,   246,   247,   248,   249,
       0,     0,   250,   251,     0,     0,   252,     0,   253,     0,
     254,     0,     0,   255,   256,   257,   258,   259,   260,   261,
       0,     0,   262,   263,     0,   264,   265,   266,     0,     0,
       0,   267,     0,     0,     0,     0,   268,   269,     0,   270,
       0,   271,   272,   273,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   274,   275,   276,     0,   277,     0,
     278,     0,   279,     0,     0,   280,   281,     0,   282,     0,
     283,   284,     0,   285,   286,   287,   288,   289,   290,   291,
     292,     0,     0,     0,     0,   293,   294,     0,     0,   295,
     296,   297,     0,   298,     0,   299,   300,     0,     0,   301,
       0,   302,   303,   304,     0,   305,   306,     0,     0,     0,
     307,   308,     0,   309,   310,     0,   311,   312,   313,   314,
       0,   315,   316,     0,     0,     0,   317,   318,   319,     0,
       0,   320,     0,     0,     0,   321,   322,   323,   324,     0,
     325,   326,     0,     0,     0,     0,     0,     0,   327,   328,
       0,   329,     0,     0,   330,     0,     0,   331,   332,     0,
       0,   333,   334,     0,   335,   336,   337,     0,     0,     0,
     338,   339,     0,   340,   341,     0,   342,   343,     0,   546,
     344,   345,   346,   347,   348,     0,     0,     0,     0,     0,
     349,     0,   350,     0,     0,   351,   352,   353,   354,     0,
       0,   355,   356,     0,     0,   357,     0,     0,     0,     0,
     358,     0,     0,   359,     0,     0,     0,   360,   361,     0,
       0,     0,     0,     0,     0,     0,   362,     0,     0,   363,
       0,     0,   364,   365,   366,     0,     0,     0,     0,   367,
       0,   368,   369,     0,     0,   122,   370,   123,   124,   125,
     126,   127,     0,     0,     0,     0,     0,   128,     0,     0,
     129,     0,     0,   130,   131,   132,   133,     0,   134,  2293,
     135,     0,     0,   136,     0,     0,     0,   137,     0,     0,
     138,   139,     0,   140,     0,   141,   142,     0,     0,   143,
       0,   144,     0,   145,   146,     0,   147,     0,   148,   149,
     150,     0,   151,     0,   152,   153,     0,   154,   155,   156,
     157,   158,     0,     0,   159,     0,     0,   160,     0,   161,
       0,     0,     0,     0,     0,     0,   162,     0,     0,     0,
       0,     0,     0,   163,   164,     0,     0,   165,     0,     0,
       0,     0,   166,   167,     0,     0,     0,     0,     0,   168,
       0,   169,     0,     0,     0,     0,     0,   170,     0,   171,
     172,   173,     0,     0,     0,   174,     0,     0,   175,   176,
     177,     0,     0,     0,   178,     0,     0,     0,   179,   180,
     181,   182,     0,     0,   183,     0,   184,   185,   186,     0,
       0,   187,     0,   188,     0,     0,   189,     0,     0,   190,
     191,   192,     0,     0,   193,     0,     0,     0,     0,   194,
     195,     0,     0,   196,     0,   197,     0,     0,     0,     0,
       0,     0,   198,   199,     0,     0,   200,   201,     0,   202,
       0,     0,     0,     0,     0,   203,   204,     0,   205,     0,
       0,   206,     0,     0,     0,   207,   208,   209,   210,     0,
       0,   211,   212,     0,     0,     0,   213,     0,     0,     0,
     214,     0,     0,     0,   215,     0,     0,   216,   217,     0,
       0,     0,     0,     0,     0,   218,     0,   219,     0,     0,
       0,   220,     0,     0,   221,   545,     0,     0,     0,     0,
     222,     0,   223,     0,     0,   224,     0,   225,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   226,   227,   228,
     229,   230,   231,     0,   232,   233,   234,   235,   236,   237,
     238,   239,   240,     0,   241,   242,   243,     0,   244,   245,
       0,     0,     0,   246,   247,   248,   249,     0,     0,   250,
     251,     0,     0,   252,     0,   253,     0,   254,     0,     0,
     255,   256,   257,   258,   259,   260,   261,     0,     0,   262,
     263,     0,   264,   265,   266,     0,     0,     0,   267,     0,
       0,     0,     0,   268,   269,     0,   270,     0,   271,   272,
     273,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   274,   275,   276,     0,   277,     0,   278,     0,   279,
       0,     0,   280,   281,     0,   282,     0,   283,   284,     0,
     285,   286,   287,   288,   289,   290,   291,   292,     0,     0,
       0,     0,   293,   294,     0,     0,   295,   296,   297,     0,
     298,     0,   299,   300,     0,     0,   301,     0,   302,   303,
     304,     0,   305,   306,     0,     0,     0,   307,   308,     0,
     309,   310,     0,   311,   312,   313,   314,     0,   315,   316,
       0,     0,     0,   317,   318,   319,     0,     0,   320,     0,
       0,     0,   321,   322,   323,   324,     0,   325,   326,     0,
       0,     0,     0,     0,     0,   327,   328,     0,   329,     0,
       0,   330,     0,     0,   331,   332,     0,     0,   333,   334,
       0,   335,   336,   337,     0,     0,     0,   338,   339,     0,
     340,   341,     0,   342,   343,     0,   546,   344,   345,   346,
     347,   348,     0,     0,     0,     0,     0,   349,     0,   350,
       0,     0,   351,   352,   353,   354,     0,     0,   355,   356,
       0,     0,   357,     0,     0,     0,     0,   358,     0,     0,
     359,     0,     0,     0,   360,   361,     0,     0,     0,     0,
       0,     0,     0,   362,     0,     0,   363,     0,     0,   364,
     365,   366,     0,     0,     0,     0,   367,     0,   368,   369,
       0,     0,   122,   370,   123,   124,   125,   126,   127,     0,
       0,     0,     0,     0,   128,     0,     0,     0,     0,     0,
     130,   131,   132,     0,     0,  -187,  2590,   135,     0,     0,
     136,     0,     0,     0,   137,     0,     0,   138,   139,     0,
     140,     0,     0,     0,     0,     0,   143,     0,   144,     0,
     145,     0,     0,     0,     0,   148,   149,  3430,     0,   151,
       0,   152,   153,     0,     0,   155,     0,   157,   158,     0,
       0,   159,     0,     0,   160,     0,     0,     0,     0,     0,
       0,     0,     0,   162,     0,     0,     0,     0,     0,     0,
     163,   164,     0,     0,   165,     0,     0,     0,     0,   166,
       0,     0,     0,     0,     0,     0,   168,     0,   169,     0,
       0,     0,     0,     0,   170,     0,   171,   172,   173,     0,
       0,     0,     0,     0,     0,   175,   176,   177,     0,     0,
       0,   178,     0,     0,     0,     0,   180,   181,   182,     0,
       0,   183,     0,   184,   185,     0,     0,     0,   187,     0,
     188,     0,     0,   189,  3431,     0,   190,   191,   192,     0,
       0,     0,     0,     0,     0,     0,   194,   195,     0,     0,
     196,     0,   197,     0,     0,     0,     0,     0,     0,   198,
     199,     0,     0,   200,   201,     0,   202,     0,     0,     0,
       0,     0,     0,   204,     0,     0,     0,     0,   206,     0,
       0,     0,   207,   208,   209,   210,  3432,     0,   211,   212,
       0,     0,     0,   213,     0,     0,     0,   214,     0,     0,
       0,   215,     0,     0,   216,   217,  3433,     0,     0,     0,
       0,     0,     0,     0,   219,     0,     0,     0,   220,  3434,
       0,   221,     0,     0,     0,     0,     0,   222,     0,   223,
       0,     0,   224,     0,   225,     0,     0,     0,     0,     0,
    -187,     0,     0,     0,   226,   227,   228,   229,   230,   231,
       0,   232,   233,   234,   235,   236,   237,   238,   239,   240,
       0,   241,   242,   243,     0,   244,   245,     0,     0,     0,
     246,   247,   248,   249,     0,     0,   250,   251,     0,     0,
     252,     0,   253,     0,   254,     0,     0,   255,   256,   257,
     258,   259,   260,   261,     0,     0,   262,   263,     0,   264,
     265,   266,     0,     0,     0,     0,     0,     0,     0,     0,
     268,   269,     0,   270,     0,   271,   272,  3435,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   274,   275,
     276,     0,   277,     0,   278,     0,   279,     0,     0,     0,
     281,     0,   282,     0,   283,   284,     0,   285,   286,   287,
     288,   289,   290,   291,   292,     0,     0,     0,     0,   293,
     294,     0,     0,   295,   296,   297,     0,   298,     0,     0,
     300,  -187,     0,   301,     0,     0,   303,     0,     0,   305,
     306,  3436,     0,     0,     0,   308,     0,   309,   310,     0,
     311,   312,   313,     0,     0,   315,     0,     0,     0,     0,
     317,   318,   319,     0,     0,   320,     0,     0,     0,   321,
       0,   323,     0,     0,   325,   326,     0,     0,     0,     0,
       0,     0,   327,   328,     0,   329,     0,     0,   330,     0,
       0,     0,   332,     0,     0,     0,   334,     0,   335,   336,
     337,     0,     0,     0,   338,   339,     0,   340,   341,     0,
     342,   343,     0,     0,   344,   345,   346,   347,   348,     0,
       0,     0,     0,     0,   349,     0,   350,     0,     0,     0,
     352,   353,   354,     0,     0,   355,   356,     0,     0,     0,
       0,     0,     0,     0,   358,     0,     0,   359,     0,     0,
       0,   360,   361,     0,     0,     0,     0,     0,     0,     0,
     362,     0,     0,   363,     0,     0,   364,   365,   366,     0,
       0,  -187,     0,   367,     0,   368,     0,     0,     0,     0,
     370,     0,     0,     0,     0,  3437,   122,     0,   123,   124,
     125,   126,   127,     0,     0,     0,     0,     0,   128,  3621,
       0,   129,     0,     0,   130,   131,   132,   133,     0,   134,
       0,   135,     0,     0,   136,     0,     0,     0,   137,     0,
       0,   138,   139,     0,   140,     0,   141,   142,     0,     0,
     143,     0,   144,     0,   145,   146,     0,   147,     0,   148,
     149,   150,     0,   151,     0,   152,   153,     0,   154,   155,
     156,   157,   158,     0,     0,   159,     0,     0,   160,     0,
     161,     0,     0,     0,     0,     0,     0,   162,     0,     0,
       0,     0,     0,     0,   163,   164,     0,     0,   165,     0,
       0,     0,     0,   166,   167,     0,     0,     0,     0,     0,
     168,     0,   169,     0,     0,     0,     0,     0,   170,     0,
     171,   172,   173,     0,     0,     0,   174,     0,     0,   175,
     176,   177,     0,     0,     0,   178,     0,     0,     0,   179,
     180,   181,   182,     0,     0,   183,     0,   184,   185,   186,
       0,     0,   187,     0,   188,     0,     0,   189,     0,     0,
     190,   191,   192,     0,     0,   193,     0,     0,     0,     0,
     194,   195,     0,     0,   196,     0,   197,     0,     0,     0,
       0,     0,     0,   198,   199,     0,     0,   200,   201,     0,
     202,     0,     0,     0,     0,     0,   203,   204,     0,   205,
       0,     0,   206,     0,     0,     0,   207,   208,   209,   210,
       0,     0,   211,   212,     0,     0,     0,   213,     0,     0,
       0,   214,     0,     0,     0,   215,     0,     0,   216,   217,
       0,     0,     0,     0,     0,     0,   218,     0,   219,     0,
       0,     0,   220,     0,     0,   221,     0,     0,     0,     0,
       0,   222,     0,   223,     0,     0,   224,     0,   225,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   226,   227,
     228,   229,   230,   231,     0,   232,   233,   234,   235,   236,
     237,   238,   239,   240,     0,   241,   242,   243,     0,   244,
     245,     0,     0,     0,   246,   247,   248,   249,     0,     0,
     250,   251,     0,     0,   252,     0,   253,     0,   254,     0,
       0,   255,   256,   257,   258,   259,   260,   261,     0,     0,
     262,   263,     0,   264,   265,   266,     0,     0,     0,   267,
       0,     0,     0,     0,   268,   269,     0,   270,     0,   271,
     272,   273,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   274,   275,   276,     0,   277,     0,   278,     0,
     279,     0,     0,   280,   281,     0,   282,     0,   283,   284,
       0,   285,   286,   287,   288,   289,   290,   291,   292,     0,
       0,     0,     0,   293,   294,     0,     0,   295,   296,   297,
       0,   298,     0,   299,   300,     0,     0,   301,     0,   302,
     303,   304,     0,   305,   306,     0,     0,     0,   307,   308,
       0,   309,   310,     0,   311,   312,   313,   314,     0,   315,
     316,     0,     0,     0,   317,   318,   319,     0,     0,   320,
       0,     0,     0,   321,   322,   323,   324,     0,   325,   326,
       0,     0,     0,     0,     0,     0,   327,   328,     0,   329,
       0,     0,   330,     0,     0,   331,   332,     0,     0,   333,
     334,     0,   335,   336,   337,     0,     0,     0,   338,   339,
       0,   340,   341,     0,   342,   343,     0,     0,   344,   345,
     346,   347,   348,     0,     0,     0,     0,     0,   349,     0,
     350,     0,     0,   351,   352,   353,   354,     0,     0,   355,
     356,     0,     0,   357,     0,     0,     0,     0,   358,     0,
       0,   359,     0,     0,     0,   360,   361,     0,     0,     0,
       0,     0,     0,     0,   362,     0,     0,   363,     0,     0,
     364,   365,   366,     0,     0,     0,     0,   367,     0,   368,
     369,     0,     0,     0,   370,   122,     0,   123,   124,   125,
     126,   127,     0,     0,     0,  1585,     0,   128,     0,     0,
     129,     0,     0,   130,   131,   132,   133,     0,   134,     0,
     135,     0,     0,   136,     0,     0,     0,   137,     0,     0,
     138,   139,     0,   140,     0,   141,   142,     0,     0,   143,
       0,   144,     0,   145,   146,     0,   147,     0,   148,   149,
     150,     0,   151,     0,   152,   153,     0,   154,   155,   156,
     157,   158,     0,     0,   159,     0,     0,   160,     0,   161,
       0,     0,     0,     0,     0,     0,   162,     0,     0,     0,
       0,     0,     0,   163,   164,     0,     0,   165,     0,     0,
       0,     0,   166,   167,     0,     0,     0,     0,     0,   168,
       0,   169,     0,     0,     0,     0,     0,   170,     0,   171,
     172,   173,     0,     0,     0,   174,     0,     0,   175,   176,
     177,     0,     0,     0,   178,     0,     0,     0,   179,   180,
     181,   182,     0,     0,   183,     0,   184,   185,   186,     0,
       0,   187,     0,   188,     0,     0,   189,     0,     0,   190,
     191,   192,     0,     0,   193,     0,     0,     0,     0,   194,
     195,     0,     0,   196,     0,   197,     0,     0,     0,     0,
       0,     0,   198,   199,     0,     0,   200,   201,     0,   202,
       0,     0,     0,     0,     0,   203,   204,     0,   205,     0,
       0,   206,     0,     0,     0,   207,   208,   209,   210,     0,
       0,   211,   212,     0,     0,     0,   213,     0,     0,     0,
     214,     0,     0,     0,   215,     0,     0,   216,   217,     0,
       0,     0,     0,     0,     0,   218,     0,   219,     0,     0,
       0,   220,     0,     0,   221,     0,     0,     0,     0,     0,
     222,     0,   223,     0,     0,   224,     0,   225,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   226,   227,   228,
     229,   230,   231,     0,   232,   233,   234,   235,   236,   237,
     238,   239,   240,     0,   241,   242,   243,     0,   244,   245,
       0,     0,     0,   246,   247,   248,   249,     0,     0,   250,
     251,     0,     0,   252,     0,   253,     0,   254,     0,     0,
     255,   256,   257,   258,   259,   260,   261,     0,     0,   262,
     263,     0,   264,   265,   266,     0,     0,     0,   267,     0,
       0,     0,     0,   268,   269,     0,   270,     0,   271,   272,
     273,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   274,   275,   276,     0,   277,     0,   278,     0,   279,
       0,     0,   280,   281,     0,   282,     0,   283,   284,     0,
     285,   286,   287,   288,   289,   290,   291,   292,     0,     0,
       0,     0,   293,   294,     0,     0,   295,   296,   297,     0,
     298,     0,   299,   300,     0,     0,   301,     0,   302,   303,
     304,     0,   305,   306,     0,     0,     0,   307,   308,     0,
     309,   310,     0,   311,   312,   313,   314,     0,   315,   316,
       0,     0,     0,   317,   318,   319,     0,     0,   320,     0,
       0,     0,   321,   322,   323,   324,     0,   325,   326,     0,
       0,     0,     0,     0,     0,   327,   328,     0,   329,     0,
       0,   330,     0,     0,   331,   332,     0,     0,   333,   334,
       0,   335,   336,   337,     0,     0,     0,   338,   339,     0,
     340,   341,     0,   342,   343,     0,     0,   344,   345,   346,
     347,   348,     0,     0,     0,     0,     0,   349,     0,   350,
       0,     0,   351,   352,   353,   354,     0,     0,   355,   356,
       0,     0,   357,     0,     0,     0,     0,   358,     0,     0,
     359,     0,     0,     0,   360,   361,     0,     0,     0,     0,
       0,     0,     0,   362,     0,     0,   363,     0,     0,   364,
     365,   366,     0,     0,     0,     0,   367,     0,   368,   369,
       0,     0,     0,   370,   122,     0,   123,   124,   125,   126,
     127,     0,     0,     0,  2279,     0,   128,     0,     0,   129,
       0,     0,   130,   131,   132,   133,     0,   134,     0,   135,
       0,     0,   136,     0,     0,     0,   137,     0,     0,   138,
     139,     0,   140,     0,   141,   142,     0,     0,   143,     0,
     144,     0,   145,   146,     0,   147,     0,   148,   149,   150,
       0,   151,     0,   152,   153,     0,   154,   155,   156,   157,
     158,     0,     0,   159,     0,     0,   160,     0,   161,     0,
       0,     0,     0,     0,     0,   162,     0,     0,     0,     0,
       0,     0,   163,   164,     0,     0,   165,     0,     0,     0,
       0,   166,   167,     0,     0,     0,     0,     0,   168,     0,
     169,     0,     0,     0,     0,     0,   170,     0,   171,   172,
     173,     0,     0,     0,   174,     0,     0,   175,   176,   177,
       0,     0,     0,   178,     0,     0,     0,   179,   180,   181,
     182,     0,     0,   183,     0,   184,   185,   186,     0,     0,
     187,     0,   188,     0,     0,   189,     0,     0,   190,   191,
     192,     0,     0,   193,     0,     0,     0,     0,   194,   195,
       0,     0,   196,     0,   197,     0,     0,     0,     0,     0,
       0,   198,   199,     0,     0,   200,   201,     0,   202,     0,
       0,     0,     0,     0,   203,   204,     0,   205,     0,     0,
     206,     0,     0,     0,   207,   208,   209,   210,     0,     0,
     211,   212,     0,     0,     0,   213,     0,     0,     0,   214,
       0,     0,     0,   215,     0,     0,   216,   217,     0,     0,
       0,     0,     0,     0,   218,     0,   219,     0,     0,     0,
     220,     0,     0,   221,     0,     0,     0,     0,     0,   222,
       0,   223,     0,     0,   224,     0,   225,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   226,   227,   228,   229,
     230,   231,     0,   232,   233,   234,   235,   236,   237,   238,
     239,   240,     0,   241,   242,   243,     0,   244,   245,     0,
       0,     0,   246,   247,   248,   249,     0,     0,   250,   251,
       0,     0,   252,     0,   253,     0,   254,     0,     0,   255,
     256,   257,   258,   259,   260,   261,     0,     0,   262,   263,
       0,   264,   265,   266,     0,     0,     0,   267,     0,     0,
       0,     0,   268,   269,     0,   270,     0,   271,   272,   273,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     274,   275,   276,     0,   277,     0,   278,     0,   279,     0,
       0,   280,   281,     0,   282,     0,   283,   284,     0,   285,
     286,   287,   288,   289,   290,   291,   292,     0,     0,     0,
       0,   293,   294,     0,     0,   295,   296,   297,     0,   298,
       0,   299,   300,     0,     0,   301,     0,   302,   303,   304,
       0,   305,   306,     0,     0,     0,   307,   308,     0,   309,
     310,     0,   311,   312,   313,   314,     0,   315,   316,     0,
       0,     0,   317,   318,   319,     0,     0,   320,     0,     0,
       0,   321,   322,   323,   324,     0,   325,   326,     0,     0,
       0,     0,     0,     0,   327,   328,     0,   329,     0,     0,
     330,     0,     0,   331,   332,     0,     0,   333,   334,     0,
     335,   336,   337,     0,     0,     0,   338,   339,     0,   340,
     341,     0,   342,   343,     0,     0,   344,   345,   346,   347,
     348,     0,     0,     0,     0,     0,   349,     0,   350,     0,
       0,   351,   352,   353,   354,     0,     0,   355,   356,     0,
       0,   357,     0,     0,     0,     0,   358,     0,     0,   359,
       0,     0,     0,   360,   361,     0,     0,     0,     0,     0,
       0,     0,   362,     0,     0,   363,     0,     0,   364,   365,
     366,     0,     0,     0,     0,   367,     0,   368,   369,     0,
       0,     0,   370,   122,     0,   123,   124,   125,   126,   127,
       0,     0,     0,  2556,     0,   128,     0,     0,   129,     0,
       0,   130,   131,   132,   133,     0,   134,     0,   135,     0,
       0,   136,     0,     0,     0,   137,     0,     0,   138,   139,
       0,   140,     0,   141,   142,     0,     0,   143,     0,   144,
       0,   145,   146,     0,   147,     0,   148,   149,   150,     0,
     151,     0,   152,   153,     0,   154,   155,   156,   157,   158,
       0,     0,   159,     0,     0,   160,     0,   161,     0,     0,
       0,     0,     0,     0,   162,     0,     0,     0,     0,     0,
       0,   163,   164,     0,     0,   165,     0,     0,     0,     0,
     166,   167,     0,     0,     0,     0,     0,   168,     0,   169,
       0,     0,     0,     0,     0,   170,     0,   171,   172,   173,
       0,     0,     0,   174,     0,     0,   175,   176,   177,     0,
       0,     0,   178,     0,     0,     0,   179,   180,   181,   182,
       0,     0,   183,     0,   184,   185,   186,     0,     0,   187,
       0,   188,     0,     0,   189,     0,     0,   190,   191,   192,
       0,     0,   193,     0,     0,     0,     0,   194,   195,     0,
       0,   196,     0,   197,     0,     0,     0,     0,     0,     0,
     198,   199,     0,     0,   200,   201,     0,   202,     0,     0,
       0,     0,     0,   203,   204,     0,   205,     0,     0,   206,
       0,     0,     0,   207,   208,   209,   210,     0,     0,   211,
     212,     0,     0,     0,   213,     0,     0,     0,   214,     0,
       0,     0,   215,     0,     0,   216,   217,     0,     0,     0,
       0,     0,     0,   218,     0,   219,     0,     0,     0,   220,
       0,     0,   221,     0,     0,     0,     0,     0,   222,     0,
     223,     0,     0,   224,     0,   225,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   226,   227,   228,   229,   230,
     231,     0,   232,   233,   234,   235,   236,   237,   238,   239,
     240,     0,   241,   242,   243,     0,   244,   245,     0,     0,
       0,   246,   247,   248,   249,     0,     0,   250,   251,     0,
       0,   252,     0,   253,     0,   254,     0,     0,   255,   256,
     257,   258,   259,   260,   261,     0,     0,   262,   263,     0,
     264,   265,   266,     0,     0,     0,   267,     0,     0,     0,
       0,   268,   269,     0,   270,     0,   271,   272,   273,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   274,
     275,   276,     0,   277,     0,   278,     0,   279,     0,     0,
     280,   281,     0,   282,     0,   283,   284,     0,   285,   286,
     287,   288,   289,   290,   291,   292,     0,     0,     0,     0,
     293,   294,     0,     0,   295,   296,   297,     0,   298,     0,
     299,   300,     0,     0,   301,     0,   302,   303,   304,     0,
     305,   306,     0,     0,     0,   307,   308,     0,   309,   310,
       0,   311,   312,   313,   314,     0,   315,   316,     0,     0,
       0,   317,   318,   319,     0,     0,   320,     0,     0,     0,
     321,   322,   323,   324,     0,   325,   326,     0,     0,     0,
       0,     0,     0,   327,   328,     0,   329,     0,     0,   330,
       0,     0,   331,   332,     0,     0,   333,   334,     0,   335,
     336,   337,     0,     0,     0,   338,   339,     0,   340,   341,
       0,   342,   343,     0,     0,   344,   345,   346,   347,   348,
       0,     0,     0,     0,     0,   349,     0,   350,     0,     0,
     351,   352,   353,   354,     0,     0,   355,   356,     0,     0,
     357,     0,     0,     0,     0,   358,     0,     0,   359,     0,
       0,     0,   360,   361,     0,     0,     0,     0,     0,     0,
       0,   362,     0,     0,   363,     0,     0,   364,   365,   366,
       0,     0,     0,     0,   367,     0,   368,   369,     0,     0,
       0,   370,   122,     0,   123,   124,   125,   126,   127,     0,
       0,     0,  2870,     0,   128,     0,     0,     0,     0,     0,
     130,   131,   132,     0,     0,  -187,     0,   135,     0,     0,
     136,     0,     0,     0,   137,     0,     0,   138,   139,     0,
     140,     0,     0,     0,     0,     0,   143,     0,   144,     0,
     145,     0,     0,     0,     0,   148,   149,  3430,     0,   151,
       0,   152,   153,     0,     0,   155,     0,   157,   158,     0,
       0,   159,     0,     0,   160,     0,     0,     0,     0,     0,
       0,     0,     0,   162,     0,     0,     0,     0,     0,     0,
     163,   164,     0,     0,   165,     0,     0,     0,     0,   166,
       0,     0,     0,     0,     0,     0,   168,     0,   169,     0,
       0,     0,     0,     0,   170,     0,   171,   172,   173,     0,
       0,     0,     0,     0,     0,   175,   176,   177,     0,  -202,
       0,   178,     0,     0,     0,  -202,   180,   181,   182,     0,
       0,   183,     0,   184,   185,     0,     0,     0,   187,     0,
     188,     0,     0,   189,  3431,     0,   190,   191,   192,     0,
       0,     0,     0,     0,     0,     0,   194,   195,     0,     0,
     196,     0,   197,     0,     0,     0,     0,     0,     0,   198,
     199,     0,     0,   200,   201,     0,   202,     0,     0,     0,
       0,     0,     0,   204,     0,     0,     0,     0,   206,     0,
       0,     0,   207,   208,   209,   210,  3432,     0,   211,   212,
       0,     0,     0,   213,     0,     0,     0,   214,     0,     0,
       0,   215,     0,     0,   216,   217,  3433,     0,     0,     0,
       0,     0,     0,     0,   219,     0,     0,     0,   220,  3434,
       0,   221,     0,     0,     0,     0,     0,   222,     0,   223,
       0,     0,   224,     0,   225,     0,     0,     0,     0,     0,
    -187,     0,     0,     0,   226,   227,   228,   229,   230,   231,
       0,   232,   233,   234,   235,   236,   237,   238,   239,   240,
       0,   241,   242,   243,     0,   244,   245,     0,     0,     0,
     246,   247,   248,   249,     0,     0,   250,   251,     0,     0,
     252,     0,   253,     0,   254,     0,     0,   255,   256,   257,
     258,   259,   260,   261,     0,     0,   262,   263,     0,   264,
     265,   266,     0,     0,     0,     0,     0,     0,     0,     0,
     268,   269,     0,   270,     0,   271,   272,  3435,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   274,   275,
     276,     0,   277,     0,   278,     0,   279,     0,     0,     0,
     281,     0,   282,     0,   283,   284,     0,   285,   286,   287,
     288,   289,   290,   291,   292,     0,     0,     0,     0,   293,
     294,     0,     0,   295,   296,   297,     0,   298,     0,     0,
     300,  -187,     0,   301,     0,     0,   303,     0,     0,   305,
     306,  3436,     0,     0,     0,   308,     0,   309,   310,     0,
     311,   312,   313,     0,     0,   315,     0,     0,     0,     0,
     317,   318,   319,     0,     0,   320,     0,     0,     0,   321,
       0,   323,     0,     0,   325,   326,     0,     0,     0,     0,
       0,     0,   327,   328,     0,   329,     0,     0,   330,     0,
       0,     0,   332,     0,     0,     0,   334,     0,   335,   336,
     337,     0,     0,     0,   338,   339,     0,   340,   341,     0,
     342,   343,     0,     0,   344,   345,   346,   347,   348,     0,
       0,     0,     0,     0,   349,     0,   350,     0,     0,     0,
     352,   353,   354,     0,     0,   355,   356,     0,     0,     0,
       0,     0,     0,     0,   358,     0,     0,   359,     0,     0,
       0,   360,   361,     0,     0,     0,     0,     0,     0,     0,
     362,     0,     0,   363,     0,     0,   364,   365,   366,     0,
       0,  -187,     0,   367,     0,   368,     0,     0,     0,     0,
     370,     0,     0,  -202,   122,  3437,   123,   124,   125,   126,
     127,     0,     0,     0,     0,     0,   128,     0,     0,     0,
       0,     0,   130,   131,   132,     0,     0,  -187,     0,   135,
       0,     0,   136,     0,     0,     0,   137,     0,     0,   138,
     139,     0,   140,     0,     0,     0,     0,     0,   143,     0,
     144,     0,   145,     0,     0,     0,     0,   148,   149,  3430,
       0,   151,     0,   152,   153,     0,     0,   155,     0,   157,
     158,     0,     0,   159,     0,     0,   160,     0,     0,     0,
       0,     0,     0,     0,     0,   162,     0,     0,     0,     0,
       0,     0,   163,   164,     0,     0,   165,     0,     0,     0,
       0,   166,     0,     0,     0,     0,     0,     0,   168,     0,
     169,     0,     0,     0,     0,     0,   170,     0,   171,   172,
     173,     0,     0,     0,     0,     0,     0,   175,   176,   177,
       0,     0,     0,   178,     0,     0,     0,  -209,   180,   181,
     182,     0,     0,   183,     0,   184,   185,     0,     0,     0,
     187,     0,   188,     0,     0,   189,  3431,     0,   190,   191,
     192,     0,     0,     0,     0,     0,     0,     0,   194,   195,
       0,     0,   196,     0,   197,     0,     0,     0,     0,     0,
       0,   198,   199,     0,     0,   200,   201,     0,   202,     0,
       0,     0,     0,     0,     0,   204,     0,     0,     0,     0,
     206,     0,     0,     0,   207,   208,   209,   210,  3432,     0,
     211,   212,     0,     0,     0,   213,     0,     0,     0,   214,
       0,     0,     0,   215,     0,     0,   216,   217,  3433,     0,
       0,     0,     0,     0,     0,     0,   219,     0,     0,     0,
     220,  3434,     0,   221,     0,     0,     0,     0,     0,   222,
       0,   223,     0,     0,   224,     0,   225,     0,     0,     0,
       0,     0,  -187,     0,     0,     0,   226,   227,   228,   229,
     230,   231,     0,   232,   233,   234,   235,   236,   237,   238,
     239,   240,     0,   241,   242,   243,     0,   244,   245,     0,
       0,     0,   246,   247,   248,   249,     0,     0,   250,   251,
       0,     0,   252,     0,   253,     0,   254,     0,     0,   255,
     256,   257,   258,   259,   260,   261,     0,     0,   262,   263,
       0,   264,   265,   266,     0,     0,     0,     0,     0,     0,
       0,     0,   268,   269,     0,   270,     0,   271,   272,  3435,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     274,   275,   276,     0,   277,     0,   278,     0,   279,     0,
       0,     0,   281,     0,   282,     0,   283,   284,     0,   285,
     286,   287,   288,   289,   290,   291,   292,     0,     0,     0,
       0,   293,   294,     0,     0,   295,   296,   297,     0,   298,
       0,     0,   300,  -187,     0,   301,     0,     0,   303,     0,
       0,   305,   306,  3436,     0,     0,     0,   308,     0,   309,
     310,     0,   311,   312,   313,     0,     0,   315,     0,     0,
       0,     0,   317,   318,   319,     0,     0,   320,     0,     0,
       0,   321,     0,   323,     0,     0,   325,   326,     0,     0,
       0,     0,     0,     0,   327,   328,     0,   329,     0,     0,
     330,     0,     0,     0,   332,     0,     0,     0,   334,     0,
     335,   336,   337,     0,     0,     0,   338,   339,     0,   340,
     341,     0,   342,   343,     0,     0,   344,   345,   346,   347,
     348,     0,     0,     0,     0,     0,   349,     0,   350,     0,
       0,     0,   352,   353,   354,     0,     0,   355,   356,     0,
       0,     0,     0,     0,     0,     0,   358,     0,     0,   359,
       0,     0,     0,   360,   361,     0,     0,     0,     0,     0,
       0,     0,   362,     0,     0,   363,     0,     0,   364,   365,
     366,  -209,     0,  -187,     0,   367,     0,   368,     0,     0,
       0,     0,   370,     0,     0,  -209,   122,  3437,   123,   124,
     125,   126,   127,     0,     0,     0,     0,     0,   128,     0,
       0,     0,     0,     0,   130,   131,   132,     0,     0,  -187,
       0,   135,     0,     0,   136,     0,     0,     0,   137,     0,
       0,   138,   139,     0,   140,     0,     0,     0,     0,     0,
     143,     0,   144,     0,   145,     0,     0,     0,     0,   148,
     149,  3430,     0,   151,     0,   152,   153,     0,     0,   155,
       0,   157,   158,     0,     0,   159,     0,     0,   160,     0,
       0,     0,     0,     0,     0,     0,     0,   162,     0,     0,
       0,     0,     0,     0,   163,   164,     0,     0,   165,     0,
       0,     0,     0,   166,     0,     0,     0,     0,     0,     0,
     168,     0,   169,     0,     0,     0,     0,     0,   170,     0,
     171,   172,   173,     0,     0,     0,     0,     0,     0,   175,
     176,   177,     0,     0,     0,   178,     0,     0,     0,  3506,
     180,   181,   182,     0,     0,   183,     0,   184,   185,     0,
       0,     0,   187,     0,   188,     0,     0,   189,  3431,     0,
     190,   191,   192,     0,     0,     0,     0,     0,     0,     0,
     194,   195,     0,     0,   196,     0,   197,     0,     0,     0,
       0,     0,     0,   198,   199,     0,     0,   200,   201,     0,
     202,     0,     0,     0,     0,     0,     0,   204,     0,     0,
       0,     0,   206,     0,     0,     0,   207,   208,   209,   210,
    3432,     0,   211,   212,     0,     0,     0,   213,     0,     0,
       0,   214,     0,     0,     0,   215,     0,     0,   216,   217,
    3433,     0,     0,     0,     0,     0,     0,     0,   219,     0,
       0,     0,   220,  3434,     0,   221,     0,     0,     0,     0,
       0,   222,     0,   223,     0,     0,   224,     0,   225,     0,
       0,     0,     0,     0,  -187,     0,     0,     0,   226,   227,
     228,   229,   230,   231,     0,   232,   233,   234,   235,   236,
     237,   238,   239,   240,     0,   241,   242,   243,     0,   244,
     245,     0,     0,     0,   246,   247,   248,   249,     0,     0,
     250,   251,     0,     0,   252,     0,   253,     0,   254,     0,
       0,   255,   256,   257,   258,   259,   260,   261,     0,     0,
     262,   263,     0,   264,   265,   266,     0,     0,     0,     0,
       0,     0,     0,     0,   268,   269,     0,   270,     0,   271,
     272,  3435,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   274,   275,   276,     0,   277,     0,   278,     0,
     279,     0,     0,     0,   281,     0,   282,     0,   283,   284,
       0,   285,   286,   287,   288,   289,   290,   291,   292,     0,
       0,     0,     0,   293,   294,     0,     0,   295,   296,   297,
       0,   298,     0,     0,   300,  -187,     0,   301,     0,     0,
     303,     0,     0,   305,   306,  3436,     0,     0,     0,   308,
       0,   309,   310,     0,   311,   312,   313,     0,     0,   315,
       0,     0,     0,     0,   317,   318,   319,     0,     0,   320,
       0,     0,     0,   321,     0,   323,     0,     0,   325,   326,
       0,     0,     0,     0,     0,     0,   327,   328,     0,   329,
       0,     0,   330,     0,     0,     0,   332,     0,     0,     0,
     334,     0,   335,   336,   337,     0,     0,     0,   338,   339,
       0,   340,   341,     0,   342,   343,     0,     0,   344,   345,
     346,   347,   348,     0,     0,     0,     0,     0,   349,     0,
     350,     0,     0,     0,   352,   353,   354,     0,     0,   355,
     356,     0,     0,     0,     0,     0,     0,     0,   358,     0,
       0,   359,     0,     0,     0,   360,   361,     0,     0,     0,
       0,     0,     0,     0,   362,     0,     0,   363,     0,     0,
     364,   365,   366,     0,     0,  -187,     0,   367,     0,   368,
       0,     0,     0,     0,   370,     0,     0,     0,   122,  3437,
     123,   124,   125,   126,   127,     0,     0,     0,     0,     0,
     128,     0,     0,     0,     0,     0,   130,   131,   132,     0,
       0,  -187,     0,   135,     0,     0,   136,     0,     0,     0,
     137,     0,     0,   138,   139,     0,   140,     0,     0,     0,
       0,     0,   143,     0,   144,     0,   145,     0,     0,     0,
       0,   148,   149,  3430,     0,   151,     0,   152,   153,     0,
       0,   155,     0,   157,   158,     0,     0,   159,     0,     0,
     160,     0,     0,     0,     0,     0,     0,     0,     0,   162,
       0,     0,     0,     0,     0,     0,   163,   164,     0,     0,
     165,     0,     0,     0,     0,   166,     0,     0,     0,     0,
       0,     0,   168,     0,   169,     0,     0,     0,     0,     0,
     170,     0,   171,   172,   173,     0,     0,     0,     0,     0,
       0,   175,   176,   177,     0,     0,     0,   178,     0,     0,
       0,  3556,   180,   181,   182,     0,     0,   183,     0,   184,
     185,     0,     0,     0,   187,     0,   188,     0,     0,   189,
    3431,     0,   190,   191,   192,     0,     0,     0,     0,     0,
       0,     0,   194,   195,     0,     0,   196,     0,   197,     0,
       0,     0,     0,     0,     0,   198,   199,     0,     0,   200,
     201,     0,   202,     0,     0,     0,     0,     0,     0,   204,
       0,     0,     0,     0,   206,     0,     0,     0,   207,   208,
     209,   210,  3432,     0,   211,   212,     0,     0,     0,   213,
       0,     0,     0,   214,     0,     0,     0,   215,     0,     0,
     216,   217,  3433,     0,     0,     0,     0,     0,     0,     0,
     219,     0,     0,     0,   220,  3434,     0,   221,     0,     0,
       0,     0,     0,   222,     0,   223,     0,     0,   224,     0,
     225,     0,     0,     0,     0,     0,  -187,     0,     0,     0,
     226,   227,   228,   229,   230,   231,     0,   232,   233,   234,
     235,   236,   237,   238,   239,   240,     0,   241,   242,   243,
       0,   244,   245,     0,     0,     0,   246,   247,   248,   249,
       0,     0,   250,   251,     0,     0,   252,     0,   253,     0,
     254,     0,     0,   255,   256,   257,   258,   259,   260,   261,
       0,     0,   262,   263,     0,   264,   265,   266,     0,     0,
       0,     0,     0,     0,     0,     0,   268,   269,     0,   270,
       0,   271,   272,  3435,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   274,   275,   276,     0,   277,     0,
     278,     0,   279,     0,     0,     0,   281,     0,   282,     0,
     283,   284,     0,   285,   286,   287,   288,   289,   290,   291,
     292,     0,     0,     0,     0,   293,   294,     0,     0,   295,
     296,   297,     0,   298,     0,     0,   300,  -187,     0,   301,
       0,     0,   303,     0,     0,   305,   306,  3436,     0,     0,
       0,   308,     0,   309,   310,     0,   311,   312,   313,     0,
       0,   315,     0,     0,     0,     0,   317,   318,   319,     0,
       0,   320,     0,     0,     0,   321,     0,   323,     0,     0,
     325,   326,     0,     0,     0,     0,     0,     0,   327,   328,
       0,   329,     0,     0,   330,     0,     0,     0,   332,     0,
       0,     0,   334,     0,   335,   336,   337,     0,     0,     0,
     338,   339,     0,   340,   341,     0,   342,   343,     0,     0,
     344,   345,   346,   347,   348,     0,     0,     0,     0,     0,
     349,     0,   350,     0,     0,     0,   352,   353,   354,     0,
       0,   355,   356,     0,     0,     0,     0,     0,     0,     0,
     358,     0,     0,   359,     0,     0,     0,   360,   361,     0,
       0,     0,     0,     0,     0,     0,   362,     0,     0,   363,
       0,     0,   364,   365,   366,     0,     0,  -187,     0,   367,
       0,   368,     0,     0,     0,     0,   370,     0,     0,     0,
     122,  3437,   123,   124,   125,   126,   127,     0,     0,     0,
       0,     0,   128,     0,     0,     0,     0,     0,   130,   131,
     132,     0,     0,  -187,     0,   135,     0,     0,   136,     0,
       0,     0,   137,     0,     0,   138,   139,     0,   140,     0,
       0,     0,     0,     0,   143,     0,   144,     0,   145,     0,
       0,     0,     0,   148,   149,  3430,     0,   151,     0,   152,
     153,     0,     0,   155,     0,   157,   158,     0,     0,   159,
       0,     0,   160,     0,     0,     0,     0,     0,     0,     0,
       0,   162,     0,     0,     0,     0,     0,     0,   163,   164,
       0,     0,   165,     0,     0,     0,     0,   166,     0,     0,
       0,     0,     0,     0,   168,     0,   169,     0,     0,     0,
       0,     0,   170,     0,   171,   172,   173,     0,     0,     0,
       0,     0,     0,   175,   176,   177,     0,     0,     0,   178,
       0,     0,     0,  3589,   180,   181,   182,     0,     0,   183,
       0,   184,   185,     0,     0,     0,   187,     0,   188,     0,
       0,   189,  3431,     0,   190,   191,   192,     0,     0,     0,
       0,     0,     0,     0,   194,   195,     0,     0,   196,     0,
     197,     0,     0,     0,     0,     0,     0,   198,   199,     0,
       0,   200,   201,     0,   202,     0,     0,     0,     0,     0,
       0,   204,     0,     0,     0,     0,   206,     0,     0,     0,
     207,   208,   209,   210,  3432,     0,   211,   212,     0,     0,
       0,   213,     0,     0,     0,   214,     0,     0,     0,   215,
       0,     0,   216,   217,  3433,     0,     0,     0,     0,     0,
       0,     0,   219,     0,     0,     0,   220,  3434,     0,   221,
       0,     0,     0,     0,     0,   222,     0,   223,     0,     0,
     224,     0,   225,     0,     0,     0,     0,     0,  -187,     0,
       0,     0,   226,   227,   228,   229,   230,   231,     0,   232,
     233,   234,   235,   236,   237,   238,   239,   240,     0,   241,
     242,   243,     0,   244,   245,     0,     0,     0,   246,   247,
     248,   249,     0,     0,   250,   251,     0,     0,   252,     0,
     253,     0,   254,     0,     0,   255,   256,   257,   258,   259,
     260,   261,     0,     0,   262,   263,     0,   264,   265,   266,
       0,     0,     0,     0,     0,     0,     0,     0,   268,   269,
       0,   270,     0,   271,   272,  3435,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   274,   275,   276,     0,
     277,     0,   278,     0,   279,     0,     0,     0,   281,     0,
     282,     0,   283,   284,     0,   285,   286,   287,   288,   289,
     290,   291,   292,     0,     0,     0,     0,   293,   294,     0,
       0,   295,   296,   297,     0,   298,     0,     0,   300,  -187,
       0,   301,     0,     0,   303,     0,     0,   305,   306,  3436,
       0,     0,     0,   308,     0,   309,   310,     0,   311,   312,
     313,     0,     0,   315,     0,     0,     0,     0,   317,   318,
     319,     0,     0,   320,     0,     0,     0,   321,     0,   323,
       0,     0,   325,   326,     0,     0,     0,     0,     0,     0,
     327,   328,     0,   329,     0,     0,   330,     0,     0,     0,
     332,     0,     0,     0,   334,     0,   335,   336,   337,     0,
       0,     0,   338,   339,     0,   340,   341,     0,   342,   343,
       0,     0,   344,   345,   346,   347,   348,     0,     0,     0,
       0,     0,   349,     0,   350,     0,     0,     0,   352,   353,
     354,     0,     0,   355,   356,     0,     0,     0,     0,     0,
       0,     0,   358,     0,     0,   359,     0,     0,     0,   360,
     361,     0,     0,     0,     0,     0,     0,     0,   362,     0,
       0,   363,     0,     0,   364,   365,   366,     0,     0,  -187,
       0,   367,     0,   368,     0,     0,     0,     0,   370,     0,
       0,     0,   122,  3437,   123,   124,   125,   126,   127,     0,
       0,     0,     0,     0,   128,     0,     0,     0,     0,     0,
     130,   131,   132,     0,     0,  -187,     0,   135,     0,     0,
     136,     0,     0,     0,   137,     0,     0,   138,   139,     0,
     140,     0,     0,     0,     0,     0,   143,     0,   144,     0,
     145,     0,     0,     0,     0,   148,   149,  3430,     0,   151,
       0,   152,   153,     0,     0,   155,     0,   157,   158,     0,
       0,   159,     0,     0,   160,     0,     0,     0,     0,     0,
       0,     0,     0,   162,     0,     0,     0,     0,     0,     0,
     163,   164,     0,     0,   165,     0,     0,     0,     0,   166,
       0,     0,     0,     0,     0,     0,   168,     0,   169,     0,
       0,     0,     0,     0,   170,     0,   171,   172,   173,     0,
       0,     0,     0,     0,     0,   175,   176,   177,     0,     0,
       0,   178,     0,     0,     0,  -206,   180,   181,   182,     0,
       0,   183,     0,   184,   185,     0,     0,     0,   187,     0,
     188,     0,     0,   189,  3431,     0,   190,   191,   192,     0,
       0,     0,     0,     0,     0,     0,   194,   195,     0,     0,
     196,     0,   197,     0,     0,     0,     0,     0,     0,   198,
     199,     0,     0,   200,   201,     0,   202,     0,     0,     0,
       0,     0,     0,   204,     0,     0,     0,     0,   206,     0,
       0,     0,   207,   208,   209,   210,  3432,     0,   211,   212,
       0,     0,     0,   213,     0,     0,     0,   214,     0,     0,
       0,   215,     0,     0,   216,   217,  3433,     0,     0,     0,
       0,     0,     0,     0,   219,     0,     0,     0,   220,  3434,
       0,   221,     0,     0,     0,     0,     0,   222,     0,   223,
       0,     0,   224,     0,   225,     0,     0,     0,     0,     0,
    -187,     0,     0,     0,   226,   227,   228,   229,   230,   231,
       0,   232,   233,   234,   235,   236,   237,   238,   239,   240,
       0,   241,   242,   243,     0,   244,   245,     0,     0,     0,
     246,   247,   248,   249,     0,     0,   250,   251,     0,     0,
     252,     0,   253,     0,   254,     0,     0,   255,   256,   257,
     258,   259,   260,   261,     0,     0,   262,   263,     0,   264,
     265,   266,     0,     0,     0,     0,     0,     0,     0,     0,
     268,   269,     0,   270,     0,   271,   272,  3435,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   274,   275,
     276,     0,   277,     0,   278,     0,   279,     0,     0,     0,
     281,     0,   282,     0,   283,   284,     0,   285,   286,   287,
     288,   289,   290,   291,   292,     0,     0,     0,     0,   293,
     294,     0,     0,   295,   296,   297,     0,   298,     0,     0,
     300,  -187,     0,   301,     0,     0,   303,     0,     0,   305,
     306,  3436,     0,     0,     0,   308,     0,   309,   310,     0,
     311,   312,   313,     0,     0,   315,     0,     0,     0,     0,
     317,   318,   319,     0,     0,   320,     0,     0,     0,   321,
       0,   323,     0,     0,   325,   326,     0,     0,     0,     0,
       0,     0,   327,   328,     0,   329,     0,     0,   330,     0,
       0,     0,   332,     0,     0,     0,   334,     0,   335,   336,
     337,     0,     0,     0,   338,   339,     0,   340,   341,     0,
     342,   343,     0,     0,   344,   345,   346,   347,   348,     0,
       0,     0,     0,     0,   349,     0,   350,     0,     0,     0,
     352,   353,   354,     0,     0,   355,   356,     0,     0,     0,
       0,     0,     0,     0,   358,     0,     0,   359,     0,     0,
       0,   360,   361,     0,     0,     0,     0,     0,     0,     0,
     362,     0,     0,   363,     0,     0,   364,   365,   366,     0,
       0,  -187,     0,   367,     0,   368,     0,     0,     0,     0,
     370,     0,     0,     0,   122,  3437,   123,   124,   125,   126,
     127,     0,     0,     0,     0,     0,   128,     0,     0,     0,
       0,     0,   130,   131,   132,     0,     0,  -187,     0,   135,
       0,     0,   136,     0,     0,     0,   137,     0,     0,   138,
     139,     0,   140,     0,     0,     0,     0,     0,   143,     0,
     144,     0,   145,     0,     0,     0,     0,   148,   149,  3430,
       0,   151,     0,   152,   153,     0,     0,   155,     0,   157,
     158,     0,     0,   159,     0,     0,   160,     0,     0,     0,
       0,     0,     0,     0,     0,   162,     0,     0,     0,     0,
       0,     0,   163,   164,     0,     0,   165,     0,     0,     0,
       0,   166,     0,     0,     0,     0,     0,     0,   168,     0,
     169,     0,     0,     0,     0,     0,   170,     0,   171,   172,
     173,     0,     0,     0,     0,     0,     0,   175,   176,   177,
       0,     0,     0,   178,     0,     0,     0,  -212,   180,   181,
     182,     0,     0,   183,     0,   184,   185,     0,     0,     0,
     187,     0,   188,     0,     0,   189,  3431,     0,   190,   191,
     192,     0,     0,     0,     0,     0,     0,     0,   194,   195,
       0,     0,   196,     0,   197,     0,     0,     0,     0,     0,
       0,   198,   199,     0,     0,   200,   201,     0,   202,     0,
       0,     0,     0,     0,     0,   204,     0,     0,     0,     0,
     206,     0,     0,     0,   207,   208,   209,   210,  3432,     0,
     211,   212,     0,     0,     0,   213,     0,     0,     0,   214,
       0,     0,     0,   215,     0,     0,   216,   217,  3433,     0,
       0,     0,     0,     0,     0,     0,   219,     0,     0,     0,
     220,  3434,     0,   221,     0,     0,     0,     0,     0,   222,
       0,   223,     0,     0,   224,     0,   225,     0,     0,     0,
       0,     0,  -187,     0,     0,     0,   226,   227,   228,   229,
     230,   231,     0,   232,   233,   234,   235,   236,   237,   238,
     239,   240,     0,   241,   242,   243,     0,   244,   245,     0,
       0,     0,   246,   247,   248,   249,     0,     0,   250,   251,
       0,     0,   252,     0,   253,     0,   254,     0,     0,   255,
     256,   257,   258,   259,   260,   261,     0,     0,   262,   263,
       0,   264,   265,   266,     0,     0,     0,     0,     0,     0,
       0,     0,   268,   269,     0,   270,     0,   271,   272,  3435,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     274,   275,   276,     0,   277,     0,   278,     0,   279,     0,
       0,     0,   281,     0,   282,     0,   283,   284,     0,   285,
     286,   287,   288,   289,   290,   291,   292,     0,     0,     0,
       0,   293,   294,     0,     0,   295,   296,   297,     0,   298,
       0,     0,   300,  -187,     0,   301,     0,     0,   303,     0,
       0,   305,   306,  3436,     0,     0,     0,   308,     0,   309,
     310,     0,   311,   312,   313,     0,     0,   315,     0,     0,
       0,     0,   317,   318,   319,     0,     0,   320,     0,     0,
       0,   321,     0,   323,     0,     0,   325,   326,     0,     0,
       0,     0,     0,     0,   327,   328,     0,   329,     0,     0,
     330,     0,     0,     0,   332,     0,     0,     0,   334,     0,
     335,   336,   337,     0,     0,     0,   338,   339,     0,   340,
     341,     0,   342,   343,     0,     0,   344,   345,   346,   347,
     348,     0,     0,     0,     0,     0,   349,     0,   350,     0,
       0,     0,   352,   353,   354,     0,     0,   355,   356,     0,
       0,     0,     0,     0,     0,     0,   358,     0,     0,   359,
       0,     0,     0,   360,   361,     0,     0,     0,     0,     0,
       0,     0,   362,     0,     0,   363,     0,     0,   364,   365,
     366,     0,     0,  -187,     0,   367,     0,   368,     0,     0,
       0,     0,   370,     0,     0,     0,   122,  3437,   123,   124,
     125,   126,   127,     0,     0,     0,     0,     0,   128,     0,
       0,     0,     0,     0,   130,   131,   132,     0,     0,  -187,
       0,   135,     0,     0,   136,     0,     0,     0,   137,     0,
       0,   138,   139,     0,   140,     0,     0,     0,     0,     0,
     143,     0,   144,     0,   145,     0,     0,     0,     0,   148,
     149,  3430,     0,   151,     0,   152,   153,     0,     0,   155,
       0,   157,   158,     0,     0,   159,     0,     0,   160,     0,
       0,     0,     0,     0,     0,     0,     0,   162,     0,     0,
       0,     0,     0,     0,   163,   164,     0,     0,   165,     0,
       0,     0,     0,   166,     0,     0,     0,     0,     0,     0,
     168,     0,   169,     0,     0,     0,     0,     0,   170,     0,
     171,   172,   173,     0,     0,     0,     0,     0,     0,   175,
     176,   177,     0,     0,     0,   178,     0,     0,     0,     0,
     180,   181,   182,     0,     0,   183,     0,   184,   185,     0,
       0,     0,   187,     0,   188,     0,     0,   189,  3431,     0,
     190,   191,   192,     0,     0,     0,     0,     0,     0,     0,
     194,   195,     0,     0,   196,     0,   197,     0,     0,     0,
       0,     0,     0,   198,   199,     0,     0,   200,   201,     0,
     202,     0,     0,     0,     0,     0,     0,   204,     0,     0,
       0,     0,   206,     0,     0,     0,   207,   208,   209,   210,
    3432,     0,   211,   212,     0,     0,     0,   213,     0,     0,
       0,   214,     0,     0,     0,   215,     0,     0,   216,   217,
    3433,     0,     0,     0,     0,     0,     0,     0,   219,     0,
       0,     0,   220,  3434,     0,   221,     0,     0,     0,     0,
       0,   222,     0,   223,     0,     0,   224,     0,   225,     0,
       0,     0,     0,     0,  -187,     0,     0,     0,   226,   227,
     228,   229,   230,   231,     0,   232,   233,   234,   235,   236,
     237,   238,   239,   240,     0,   241,   242,   243,     0,   244,
     245,     0,     0,     0,   246,   247,   248,   249,     0,     0,
     250,   251,     0,     0,   252,     0,   253,     0,   254,     0,
       0,   255,   256,   257,   258,   259,   260,   261,     0,     0,
     262,   263,     0,   264,   265,   266,     0,     0,     0,     0,
       0,     0,     0,     0,   268,   269,     0,   270,     0,   271,
     272,  3435,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   274,   275,   276,     0,   277,     0,   278,     0,
     279,     0,     0,     0,   281,     0,   282,     0,   283,   284,
       0,   285,   286,   287,   288,   289,   290,   291,   292,     0,
       0,     0,     0,   293,   294,     0,     0,   295,   296,   297,
       0,   298,     0,     0,   300,  -187,     0,   301,     0,     0,
     303,     0,     0,   305,   306,  3436,     0,     0,     0,   308,
       0,   309,   310,     0,   311,   312,   313,     0,     0,   315,
       0,     0,     0,     0,   317,   318,   319,     0,     0,   320,
       0,     0,     0,   321,     0,   323,     0,     0,   325,   326,
       0,     0,     0,     0,     0,     0,   327,   328,     0,   329,
       0,     0,   330,     0,     0,     0,   332,     0,     0,     0,
     334,     0,   335,   336,   337,     0,     0,     0,   338,   339,
       0,   340,   341,     0,   342,   343,     0,     0,   344,   345,
     346,   347,   348,     0,     0,     0,     0,     0,   349,     0,
     350,     0,     0,     0,   352,   353,   354,     0,     0,   355,
     356,     0,     0,     0,     0,     0,     0,     0,   358,     0,
       0,   359,     0,     0,     0,   360,   361,     0,     0,     0,
       0,     0,     0,     0,   362,     0,     0,   363,     0,     0,
     364,   365,   366,     0,     0,  -187,     0,   367,     0,   368,
       0,     0,     0,     0,   370,     0,     0,     0,   122,  3437,
     123,   124,   125,   126,   127,     0,     0,     0,     0,     0,
     128,     0,     0,     0,     0,     0,   130,   131,   132,     0,
       0,  -187,     0,   135,     0,     0,   136,     0,     0,     0,
     137,     0,     0,   138,   139,     0,   140,     0,     0,     0,
       0,     0,   143,     0,   144,     0,   145,     0,     0,     0,
       0,   148,   149,  3430,     0,   151,     0,   152,   153,     0,
       0,   155,     0,   157,   158,     0,     0,   159,     0,     0,
     160,     0,     0,     0,     0,     0,     0,     0,     0,   162,
       0,     0,     0,     0,     0,     0,   163,   164,     0,     0,
     165,     0,     0,     0,     0,   166,     0,     0,     0,     0,
       0,     0,   168,     0,   169,     0,     0,     0,     0,     0,
     170,     0,   171,   172,   173,     0,     0,     0,     0,     0,
       0,   175,   176,   177,     0,     0,     0,   178,     0,     0,
       0,     0,   180,   181,   182,     0,     0,   183,     0,   184,
     185,     0,     0,     0,   187,     0,   188,     0,     0,   189,
    3431,     0,   190,   191,   192,     0,     0,     0,     0,     0,
       0,     0,   194,   195,     0,     0,   196,     0,   197,     0,
       0,     0,     0,     0,     0,   198,   199,     0,     0,   200,
     201,     0,   202,     0,     0,     0,     0,     0,     0,   204,
       0,     0,     0,     0,   206,     0,     0,     0,   207,   208,
     209,   210,  3432,     0,   211,   212,     0,     0,     0,   213,
       0,     0,     0,   214,     0,     0,     0,   215,     0,     0,
     216,   217,  3433,     0,     0,     0,     0,     0,     0,     0,
     219,     0,     0,     0,   220,  3434,     0,   221,     0,     0,
       0,     0,     0,   222,     0,   223,     0,     0,   224,     0,
     225,     0,     0,     0,     0,     0,  -187,     0,     0,     0,
     226,   227,   228,   229,   230,   231,     0,   232,   233,   234,
     235,   236,   237,   238,   239,   240,     0,   241,   242,   243,
       0,   244,   245,     0,     0,     0,   246,   247,   248,   249,
       0,     0,   250,   251,     0,     0,   252,     0,   253,     0,
     254,     0,     0,   255,   256,   257,   258,   259,   260,   261,
       0,     0,   262,   263,     0,   264,   265,   266,     0,     0,
       0,     0,     0,     0,     0,     0,   268,   269,     0,   270,
       0,   271,   272,  3435,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   274,   275,   276,     0,   277,     0,
     278,     0,   279,     0,     0,     0,   281,     0,   282,     0,
     283,   284,     0,   285,   286,   287,   288,   289,   290,   291,
     292,     0,     0,     0,     0,   293,   294,     0,     0,   295,
     296,   297,     0,   298,     0,     0,   300,  -187,     0,   301,
       0,     0,   303,     0,     0,   305,   306,  3436,     0,     0,
       0,   308,     0,   309,   310,     0,   311,   312,   313,     0,
       0,   315,     0,     0,     0,     0,   317,   318,   319,     0,
       0,   320,     0,     0,     0,   321,     0,   323,     0,     0,
     325,   326,     0,     0,     0,     0,     0,     0,   327,   328,
       0,   329,     0,     0,   330,     0,     0,     0,   332,     0,
       0,     0,   334,     0,   335,   336,   337,     0,     0,     0,
     338,   339,     0,   340,   341,     0,   342,   343,     0,     0,
     344,   345,   346,   347,   348,     0,     0,     0,     0,     0,
     349,     0,   350,     0,     0,     0,   352,   353,   354,     0,
       0,   355,   356,     0,     0,     0,     0,     0,     0,     0,
     358,     0,     0,  3509,     0,     0,     0,   360,   361,     0,
       0,     0,     0,     0,     0,     0,   362,     0,     0,   363,
       0,     0,   364,   365,   366,     0,     0,  -187,     0,   367,
       0,   368,     0,     0,     0,     0,   370,     0,     0,     0,
     122,  3437,   123,   124,   125,   126,   127,     0,     0,     0,
       0,     0,   128,     0,     0,   129,     0,     0,   130,   131,
     132,   133,     0,   134,     0,   135,     0,     0,   136,     0,
       0,     0,   137,     0,     0,   138,   139,     0,   140,     0,
     141,   142,     0,     0,   143,     0,   144,     0,   145,   146,
       0,   147,     0,   148,   149,   150,     0,   151,     0,   152,
     153,     0,   154,   155,   156,   157,   158,     0,     0,   159,
       0,     0,   160,     0,   161,     0,     0,     0,     0,     0,
       0,   162,     0,     0,     0,     0,     0,     0,   163,   164,
       0,     0,   165,     0,     0,     0,     0,   166,   167,  1595,
       0,     0,     0,     0,   168,     0,   169,     0,     0,     0,
       0,     0,   170,     0,   171,   172,   173,     0,     0,     0,
     174,     0,     0,   175,   176,   177,     0,     0,     0,   178,
       0,     0,     0,   179,   180,   181,   182,     0,     0,   183,
       0,   184,   185,   186,     0,     0,   187,     0,   188,     0,
       0,   189,     0,     0,   190,   191,   192,  1596,     0,   193,
       0,     0,     0,     0,   194,   195,     0,     0,   196,     0,
     197,     0,     0,     0,     0,     0,     0,   198,   199,     0,
       0,   200,   201,     0,   202,     0,     0,     0,     0,     0,
     203,   204,     0,   205,  1597,     0,   206,     0,     0,     0,
     207,   208,   209,   210,     0,     0,   211,   212,     0,     0,
       0,   213,     0,     0,     0,   214,     0,     0,     0,   215,
       0,     0,   216,   217,     0,     0,     0,     0,     0,     0,
     218,     0,   219,     0,     0,     0,   220,     0,     0,   221,
       0,     0,     0,     0,     0,   222,     0,   223,     0,     0,
     224,     0,   225,     0,     0,     0,  1598,     0,     0,     0,
       0,     0,   226,   227,   228,   229,   230,   231,     0,   232,
     233,   234,   235,   236,   237,   238,   239,   240,     0,   241,
     242,   243,     0,   244,   245,     0,     0,     0,   246,   247,
     248,   249,     0,     0,   250,   251,     0,     0,   252,     0,
     253,     0,   254,     0,     0,   255,   256,   257,   258,   259,
     260,   261,     0,     0,   262,   263,     0,   264,   265,   266,
     694,   695,     0,   267,     0,     0,  1599,     0,   268,   269,
       0,   270,     0,   271,   272,   273,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   274,   275,   276,     0,
     277,     0,   278,     0,   279,     0,     0,   280,   281,     0,
     282,     0,   283,   284,     0,   285,   286,   287,   288,   289,
     290,   291,   292,     0,     0,     0,     0,   293,   294,     0,
       0,   295,   296,   297,     0,   298,     0,   299,   300,     0,
       0,   301,     0,   302,   303,   304,     0,   305,   306,     0,
       0,     0,   307,   308,     0,   309,   310,     0,   311,   312,
     313,   314,     0,   315,   316,     0,     0,     0,   317,   318,
     319,     0,     0,   320,     0,     0,     0,   321,   322,   323,
     324,     0,   325,   326,     0,     0,  3608,  3597,  3609,     0,
     327,   328,     0,   329,     0,     0,   330,     0,     0,   331,
     332,     0,     0,   333,   334,     0,   335,   336,   337,     0,
       0,     0,   338,   339,     0,   340,   341,     0,   342,   343,
       0,     0,   344,   345,   346,   347,   348,     0,     0,     0,
       0,     0,   349,     0,   350,     0,     0,   351,   352,   353,
     354,     0,  1600,   355,   356,     0,     0,   357,     0,     0,
       0,     0,   358,     0,     0,   359,     0,     0,     0,   360,
     361,     0,     0,     0,     0,     0,     0,     0,   362,     0,
       0,   363,     0,     0,   364,   365,   366,     0,     0,     0,
       0,   367,     0,   368,   369,     0,     0,   122,   370,   123,
     124,   125,   126,   127,     0,     0,     0,     0,     0,   128,
       0,     0,   129,     0,     0,   130,   131,   132,   133,     0,
     134,     0,   135,     0,  2285,   136,     0,     0,     0,   137,
       0,     0,   138,   139,     0,   140,     0,   141,   142,     0,
       0,   143,     0,   144,     0,   145,   146,     0,   147,     0,
     148,   149,   150,     0,   151,     0,   152,   153,     0,   154,
     155,   156,   157,   158,     0,     0,   159,     0,     0,   160,
       0,   161,     0,     0,     0,     0,     0,     0,   162,     0,
       0,     0,     0,     0,     0,   163,   164,     0,     0,   165,
       0,     0,     0,     0,   166,   167,     0,     0,     0,     0,
    2286,   168,     0,   169,     0,     0,     0,     0,     0,   170,
       0,   171,   172,   173,     0,     0,     0,   174,     0,     0,
     175,   176,   177,     0,     0,     0,   178,     0,     0,     0,
     179,   180,   181,   182,  1919,     0,   183,     0,   184,   185,
     186,     0,     0,   187,     0,   188,     0,     0,   189,     0,
       0,   190,   191,   192,     0,     0,   193,     0,     0,     0,
       0,   194,   195,     0,     0,   196,     0,   197,     0,     0,
       0,     0,     0,     0,   198,   199,     0,     0,   200,   201,
       0,   202,     0,     0,     0,     0,     0,   203,   204,     0,
     205,     0,     0,   206,     0,     0,     0,   207,   208,   209,
     210,     0,     0,   211,   212,     0,     0,     0,   213,     0,
       0,     0,   214,     0,     0,     0,   215,     0,     0,   216,
     217,     0,     0,     0,     0,     0,     0,   218,     0,   219,
       0,     0,     0,   220,     0,     0,   221,   545,     0,     0,
       0,     0,   222,     0,   223,     0,     0,   224,     0,   225,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   226,
     227,   228,   229,   230,   231,     0,   232,   233,   234,   235,
     236,   237,   238,   239,   240,     0,   241,   242,   243,     0,
     244,   245,     0,     0,     0,   246,   247,   248,   249,     0,
       0,   250,   251,     0,     0,   252,     0,   253,     0,   254,
       0,     0,   255,   256,   257,   258,   259,   260,   261,     0,
       0,   262,   263,     0,   264,   265,   266,     0,     0,     0,
     267,     0,     0,     0,     0,   268,   269,     0,   270,     0,
     271,   272,   273,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   274,   275,   276,     0,   277,     0,   278,
       0,   279,     0,     0,   280,   281,     0,   282,     0,   283,
     284,     0,   285,   286,   287,   288,   289,   290,   291,   292,
       0,     0,     0,     0,   293,   294,     0,     0,   295,   296,
     297,     0,   298,     0,   299,   300,     0,     0,   301,     0,
     302,   303,   304,     0,   305,   306,     0,     0,     0,   307,
     308,     0,   309,   310,     0,   311,   312,   313,   314,     0,
     315,   316,     0,     0,     0,   317,   318,   319,     0,  1920,
     320,     0,     0,     0,   321,   322,   323,   324,     0,   325,
     326,     0,     0,     0,     0,     0,     0,   327,   328,     0,
     329,     0,     0,   330,     0,     0,   331,   332,     0,     0,
     333,   334,     0,   335,   336,   337,     0,     0,     0,   338,
     339,     0,   340,   341,     0,   342,   343,     0,   546,   344,
     345,   346,   347,   348,     0,     0,     0,     0,     0,   349,
       0,   350,     0,     0,   351,   352,   353,   354,     0,     0,
     355,   356,     0,     0,   357,     0,     0,     0,     0,   358,
       0,     0,   359,     0,     0,     0,   360,   361,     0,     0,
       0,     0,     0,     0,     0,   362,     0,     0,   363,     0,
       0,   364,   365,   366,     0,     0,     0,     0,   367,     0,
     368,   369,     0,     0,   122,   370,   123,   124,   125,   126,
     127,     0,     0,     0,     0,     0,   128,     0,     0,   129,
       0,     0,   130,   131,   132,   133,     0,   134,     0,   135,
       0,  2295,   136,     0,     0,     0,   137,     0,     0,   138,
     139,     0,   140,     0,   141,   142,     0,     0,   143,     0,
     144,     0,   145,   146,     0,   147,     0,   148,   149,   150,
       0,   151,     0,   152,   153,     0,   154,   155,   156,   157,
     158,     0,     0,   159,     0,     0,   160,     0,   161,     0,
       0,     0,     0,     0,     0,   162,     0,     0,     0,     0,
       0,     0,   163,   164,     0,     0,   165,     0,     0,     0,
       0,   166,   167,     0,     0,     0,     0,  2296,   168,     0,
     169,     0,     0,     0,     0,     0,   170,     0,   171,   172,
     173,     0,     0,     0,   174,     0,     0,   175,   176,   177,
       0,     0,     0,   178,     0,     0,     0,   179,   180,   181,
     182,     0,     0,   183,     0,   184,   185,   186,     0,     0,
     187,     0,   188,     0,     0,   189,     0,     0,   190,   191,
     192,     0,     0,   193,     0,     0,     0,     0,   194,   195,
       0,     0,   196,     0,   197,     0,     0,     0,     0,     0,
       0,   198,   199,     0,     0,   200,   201,     0,   202,     0,
       0,     0,     0,     0,   203,   204,     0,   205,     0,     0,
     206,     0,     0,     0,   207,   208,   209,   210,     0,     0,
     211,   212,     0,     0,     0,   213,     0,     0,     0,   214,
       0,     0,     0,   215,     0,     0,   216,   217,     0,     0,
       0,     0,     0,     0,   218,     0,   219,     0,     0,     0,
     220,     0,     0,   221,   545,     0,     0,     0,     0,   222,
       0,   223,     0,     0,   224,     0,   225,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   226,   227,   228,   229,
     230,   231,     0,   232,   233,   234,   235,   236,   237,   238,
     239,   240,     0,   241,   242,   243,     0,   244,   245,     0,
       0,     0,   246,   247,   248,   249,     0,     0,   250,   251,
       0,     0,   252,     0,   253,     0,   254,     0,     0,   255,
     256,   257,   258,   259,   260,   261,     0,     0,   262,   263,
       0,   264,   265,   266,     0,     0,     0,   267,     0,     0,
       0,     0,   268,   269,     0,   270,     0,   271,   272,   273,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     274,   275,   276,     0,   277,     0,   278,     0,   279,     0,
       0,   280,   281,     0,   282,     0,   283,   284,     0,   285,
     286,   287,   288,   289,   290,   291,   292,     0,     0,     0,
       0,   293,   294,     0,     0,   295,   296,   297,     0,   298,
       0,   299,   300,     0,     0,   301,     0,   302,   303,   304,
       0,   305,   306,     0,     0,     0,   307,   308,     0,   309,
     310,     0,   311,   312,   313,   314,     0,   315,   316,     0,
       0,     0,   317,   318,   319,     0,     0,   320,     0,     0,
       0,   321,   322,   323,   324,     0,   325,   326,     0,     0,
       0,     0,     0,     0,   327,   328,     0,   329,     0,     0,
     330,     0,     0,   331,   332,     0,     0,   333,   334,     0,
     335,   336,   337,     0,     0,     0,   338,   339,     0,   340,
     341,     0,   342,   343,     0,   546,   344,   345,   346,   347,
     348,     0,     0,     0,     0,     0,   349,     0,   350,     0,
       0,   351,   352,   353,   354,     0,     0,   355,   356,     0,
       0,   357,     0,     0,     0,     0,   358,     0,     0,   359,
       0,     0,     0,   360,   361,     0,     0,     0,     0,     0,
       0,     0,   362,     0,     0,   363,     0,     0,   364,   365,
     366,     0,     0,     0,     0,   367,     0,   368,   369,     0,
       0,   122,   370,   123,   124,   125,   126,   127,     0,     0,
       0,     0,     0,   128,     0,     0,   129,     0,     0,   130,
     131,   132,   133,     0,   134,     0,   135,     0,  2285,   136,
       0,     0,     0,   137,     0,     0,   138,   139,     0,   140,
       0,   141,   142,     0,     0,   143,     0,   144,     0,   145,
     146,     0,   147,     0,   148,   149,   150,     0,   151,     0,
     152,   153,     0,   154,   155,   156,   157,   158,     0,     0,
     159,     0,     0,   160,     0,   161,     0,     0,     0,     0,
       0,     0,   162,     0,     0,     0,     0,     0,     0,   163,
     164,     0,     0,   165,     0,     0,     0,     0,   166,   167,
       0,     0,     0,     0,  2286,   168,     0,   169,     0,     0,
       0,     0,     0,   170,     0,   171,   172,   173,     0,     0,
       0,   174,     0,     0,   175,   176,   177,     0,     0,     0,
     178,     0,     0,     0,   179,   180,   181,   182,     0,     0,
     183,     0,   184,   185,   186,     0,     0,   187,     0,   188,
       0,     0,   189,     0,     0,   190,   191,   192,     0,     0,
     193,     0,     0,     0,     0,   194,   195,     0,     0,   196,
       0,   197,     0,     0,     0,     0,     0,     0,   198,   199,
       0,     0,   200,   201,     0,   202,     0,     0,     0,     0,
       0,   203,   204,     0,   205,     0,     0,   206,     0,     0,
       0,   207,   208,   209,   210,     0,     0,   211,   212,     0,
       0,     0,   213,     0,     0,     0,   214,     0,     0,     0,
     215,     0,     0,   216,   217,     0,     0,     0,     0,     0,
       0,   218,     0,   219,     0,     0,     0,   220,     0,     0,
     221,   545,     0,     0,     0,     0,   222,     0,   223,     0,
       0,   224,     0,   225,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   226,   227,   228,   229,   230,   231,     0,
     232,   233,   234,   235,   236,   237,   238,   239,   240,     0,
     241,   242,   243,     0,   244,   245,     0,     0,     0,   246,
     247,   248,   249,     0,     0,   250,   251,     0,     0,   252,
       0,   253,     0,   254,     0,     0,   255,   256,   257,   258,
     259,   260,   261,     0,     0,   262,   263,     0,   264,   265,
     266,     0,     0,     0,   267,     0,     0,     0,     0,   268,
     269,     0,   270,     0,   271,   272,   273,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   274,   275,   276,
       0,   277,     0,   278,     0,   279,     0,     0,   280,   281,
       0,   282,     0,   283,   284,     0,   285,   286,   287,   288,
     289,   290,   291,   292,     0,     0,     0,     0,   293,   294,
       0,     0,   295,   296,   297,     0,   298,     0,   299,   300,
       0,     0,   301,     0,   302,   303,   304,     0,   305,   306,
       0,     0,     0,   307,   308,     0,   309,   310,     0,   311,
     312,   313,   314,     0,   315,   316,     0,     0,     0,   317,
     318,   319,     0,     0,   320,     0,     0,     0,   321,   322,
     323,   324,     0,   325,   326,     0,     0,     0,     0,     0,
       0,   327,   328,     0,   329,     0,     0,   330,     0,     0,
     331,   332,     0,     0,   333,   334,     0,   335,   336,   337,
       0,     0,     0,   338,   339,     0,   340,   341,     0,   342,
     343,     0,   546,   344,   345,   346,   347,   348,     0,     0,
       0,     0,     0,   349,     0,   350,     0,     0,   351,   352,
     353,   354,     0,     0,   355,   356,     0,     0,   357,     0,
       0,     0,     0,   358,     0,     0,   359,     0,     0,     0,
     360,   361,     0,     0,     0,     0,     0,     0,     0,   362,
       0,     0,   363,     0,     0,   364,   365,   366,     0,     0,
       0,     0,   367,     0,   368,   369,     0,     0,   122,   370,
     123,   124,   125,   126,   127,     0,     0,     0,     0,     0,
     128,     0,     0,   129,     0,     0,   130,   131,   132,   133,
       0,   134,     0,   135,     0,     0,   136,     0,     0,     0,
     137,     0,     0,   138,   139,     0,   140,     0,   141,   142,
       0,     0,   143,     0,   144,     0,   145,   146,     0,   147,
       0,   148,   149,   150,     0,   151,     0,   152,   153,     0,
     154,   155,   156,   157,   158,     0,     0,   159,     0,     0,
     160,     0,   161,     0,     0,     0,     0,     0,     0,   162,
       0,   698,     0,     0,     0,     0,   163,   164,     0,     0,
     165,     0,     0,     0,     0,   166,   167,     0,     0,     0,
       0,     0,   168,     0,   169,     0,     0,     0,     0,     0,
     170,     0,   171,   172,   173,     0,     0,     0,   174,     0,
       0,   175,   176,   177,     0,     0,     0,   178,     0,     0,
       0,   179,   180,   181,   182,     0,     0,   183,     0,   184,
     185,   186,     0,     0,   187,     0,   188,     0,     0,   189,
       0,     0,   190,   191,   192,     0,     0,   193,     0,     0,
       0,     0,   194,   195,     0,     0,   196,     0,   197,     0,
       0,     0,     0,     0,     0,   198,   199,     0,     0,   200,
     201,     0,   202,     0,     0,     0,     0,     0,   203,   204,
       0,   205,     0,     0,   206,     0,     0,     0,   207,   208,
     209,   210,     0,     0,   211,   212,     0,     0,     0,   213,
       0,     0,     0,   214,     0,     0,     0,   215,     0,     0,
     216,   217,     0,     0,     0,     0,     0,     0,   218,     0,
     219,     0,     0,     0,   220,     0,     0,   221,   545,     0,
       0,     0,     0,   222,     0,   223,     0,     0,   224,     0,
     225,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     226,   227,   228,   229,   230,   231,     0,   232,   233,   234,
     235,   236,   237,   238,   239,   240,     0,   241,   242,   243,
       0,   244,   245,     0,     0,     0,   246,   247,   248,   249,
       0,     0,   250,   251,     0,     0,   252,     0,   253,     0,
     254,     0,     0,   255,   256,   257,   258,   259,   260,   261,
       0,     0,   262,   263,     0,   264,   265,   266,     0,     0,
       0,   267,     0,     0,     0,     0,   268,   269,     0,   270,
       0,   271,   272,   273,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   274,   275,   276,     0,   277,     0,
     278,     0,   279,     0,     0,   280,   281,     0,   282,     0,
     283,   284,     0,   285,   286,   287,   288,   289,   290,   291,
     292,     0,     0,     0,     0,   293,   294,     0,     0,   295,
     296,   297,     0,   298,     0,   299,   300,     0,     0,   301,
       0,   302,   303,   304,     0,   305,   306,     0,     0,     0,
     307,   308,     0,   309,   310,     0,   311,   312,   313,   314,
       0,   315,   316,     0,     0,     0,   317,   318,   319,     0,
       0,   320,     0,     0,     0,   321,   322,   323,   324,     0,
     325,   326,     0,     0,     0,     0,     0,     0,   327,   328,
       0,   329,     0,     0,   330,     0,     0,   331,   332,     0,
       0,   333,   334,     0,   335,   336,   337,     0,     0,     0,
     338,   339,     0,   340,   341,     0,   342,   343,     0,   546,
     344,   345,   346,   347,   348,     0,     0,     0,     0,     0,
     349,     0,   350,     0,     0,   351,   352,   353,   354,     0,
       0,   355,   356,     0,     0,   357,     0,     0,     0,     0,
     358,     0,     0,   359,     0,     0,     0,   360,   361,     0,
       0,     0,     0,     0,     0,     0,   362,     0,     0,   363,
       0,     0,   364,   365,   366,     0,     0,     0,     0,   367,
       0,   368,   369,     0,     0,   122,   370,   123,   124,   125,
     126,   127,     0,     0,     0,     0,     0,   128,     0,     0,
     129,     0,     0,   130,   131,   132,   133,     0,   134,     0,
     135,     0,     0,   136,   651,     0,     0,   137,     0,     0,
     138,   139,     0,   140,     0,   141,   142,     0,     0,   143,
       0,   144,     0,   145,   146,     0,   147,     0,   148,   149,
     150,     0,   151,     0,   152,   153,     0,   154,   155,   156,
     157,   158,     0,     0,   159,     0,     0,   160,     0,   161,
       0,     0,     0,     0,     0,     0,   162,     0,     0,     0,
       0,     0,     0,   163,   164,     0,     0,   165,     0,     0,
       0,     0,   166,   167,     0,     0,     0,     0,     0,   168,
       0,   169,     0,     0,     0,     0,     0,   170,     0,   171,
     172,   173,     0,     0,     0,   174,     0,     0,   175,   176,
     177,     0,     0,     0,   178,     0,     0,     0,   179,   180,
     181,   182,     0,     0,   183,     0,   184,   185,   186,     0,
       0,   187,     0,   188,     0,     0,   189,     0,     0,   190,
     191,   192,     0,     0,   193,     0,     0,     0,     0,   194,
     195,     0,     0,   196,     0,   197,     0,     0,     0,     0,
       0,     0,   198,   199,     0,     0,   200,   201,     0,   202,
       0,     0,     0,     0,     0,   203,   204,     0,   205,   652,
       0,   206,     0,     0,     0,   207,   208,   209,   210,     0,
       0,   211,   212,     0,     0,     0,   213,     0,     0,     0,
     214,     0,     0,     0,   215,     0,     0,   216,   217,     0,
       0,     0,     0,     0,     0,   218,     0,   219,     0,     0,
       0,   220,     0,     0,   221,     0,     0,     0,     0,     0,
     222,     0,   223,     0,     0,   224,     0,   225,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   226,   227,   228,
     229,   230,   231,     0,   232,   233,   234,   235,   236,   237,
     238,   239,   240,     0,   241,   242,   243,     0,   244,   245,
       0,     0,     0,   246,   247,   248,   249,     0,     0,   250,
     251,     0,     0,   252,     0,   253,     0,   254,     0,     0,
     255,   256,   257,   258,   259,   260,   261,     0,     0,   262,
     263,     0,   264,   265,   266,     0,     0,     0,   267,     0,
       0,     0,     0,   268,   269,     0,   270,     0,   271,   272,
     273,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   274,   275,   276,     0,   277,     0,   278,     0,   279,
       0,     0,   280,   281,     0,   282,     0,   283,   284,     0,
     285,   286,   287,   288,   289,   290,   291,   292,     0,     0,
       0,     0,   293,   294,     0,     0,   295,   296,   297,     0,
     298,     0,   299,   300,     0,     0,   301,     0,   302,   303,
     304,     0,   305,   306,     0,     0,     0,   307,   308,     0,
     309,   310,     0,   311,   312,   313,   314,     0,   315,   316,
       0,     0,     0,   317,   318,   319,     0,     0,   320,     0,
       0,     0,   321,   322,   323,   324,     0,   325,   326,     0,
       0,     0,     0,     0,     0,   327,   328,     0,   329,     0,
       0,   330,     0,     0,   331,   332,     0,     0,   333,   334,
       0,   335,   336,   337,     0,     0,     0,   338,   339,     0,
     340,   341,     0,   342,   343,     0,   653,   344,   345,   346,
     347,   348,     0,     0,     0,     0,     0,   349,     0,   350,
       0,     0,   351,   352,   353,   354,     0,     0,   355,   356,
       0,     0,   357,     0,     0,     0,     0,   358,     0,     0,
     359,     0,     0,     0,   360,   361,     0,     0,     0,     0,
       0,     0,     0,   362,     0,     0,   363,     0,     0,   364,
     365,   366,     0,     0,     0,     0,   367,     0,   368,   369,
       0,     0,   122,   370,   123,   124,   125,   126,   127,     0,
       0,     0,     0,     0,   128,     0,     0,   129,     0,     0,
     130,   131,   132,   133,     0,   134,     0,   135,     0,     0,
     136,     0,     0,     0,   137,     0,     0,   138,   139,     0,
     140,     0,   141,   142,     0,     0,   143,     0,   144,     0,
     145,   146,     0,   147,     0,   148,   149,   150,     0,   151,
       0,   152,   153,     0,   154,   155,   156,   157,   158,     0,
       0,   159,     0,     0,   160,     0,   161,     0,     0,     0,
       0,     0,     0,   162,     0,     0,     0,     0,     0,     0,
     163,   164,     0,     0,   165,     0,     0,     0,     0,   166,
     167,     0,     0,     0,     0,  2333,   168,     0,   169,     0,
       0,     0,     0,     0,   170,     0,   171,   172,   173,     0,
       0,     0,   174,     0,     0,   175,   176,   177,     0,     0,
       0,   178,     0,     0,     0,   179,   180,   181,   182,     0,
       0,   183,     0,   184,   185,   186,     0,     0,   187,     0,
     188,     0,     0,   189,     0,     0,   190,   191,   192,     0,
       0,   193,     0,     0,     0,     0,   194,   195,     0,     0,
     196,     0,   197,     0,     0,     0,     0,     0,     0,   198,
     199,     0,     0,   200,   201,     0,   202,     0,     0,     0,
       0,     0,   203,   204,     0,   205,     0,     0,   206,     0,
       0,     0,   207,   208,   209,   210,     0,     0,   211,   212,
       0,     0,     0,   213,     0,     0,     0,   214,     0,     0,
       0,   215,     0,     0,   216,   217,     0,     0,     0,     0,
       0,     0,   218,     0,   219,     0,     0,     0,   220,     0,
       0,   221,   545,     0,     0,     0,     0,   222,     0,   223,
       0,     0,   224,     0,   225,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   226,   227,   228,   229,   230,   231,
       0,   232,   233,   234,   235,   236,   237,   238,   239,   240,
       0,   241,   242,   243,     0,   244,   245,     0,     0,     0,
     246,   247,   248,   249,     0,     0,   250,   251,     0,     0,
     252,     0,   253,     0,   254,     0,     0,   255,   256,   257,
     258,   259,   260,   261,     0,     0,   262,   263,     0,   264,
     265,   266,     0,     0,     0,   267,     0,     0,     0,     0,
     268,   269,     0,   270,     0,   271,   272,   273,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   274,   275,
     276,     0,   277,     0,   278,     0,   279,     0,     0,   280,
     281,     0,   282,     0,   283,   284,     0,   285,   286,   287,
     288,   289,   290,   291,   292,     0,     0,     0,     0,   293,
     294,     0,     0,   295,   296,   297,     0,   298,     0,   299,
     300,     0,     0,   301,     0,   302,   303,   304,     0,   305,
     306,     0,     0,     0,   307,   308,     0,   309,   310,     0,
     311,   312,   313,   314,     0,   315,   316,     0,     0,     0,
     317,   318,   319,     0,     0,   320,     0,     0,     0,   321,
     322,   323,   324,     0,   325,   326,     0,     0,     0,     0,
       0,     0,   327,   328,     0,   329,     0,     0,   330,     0,
       0,   331,   332,     0,     0,   333,   334,     0,   335,   336,
     337,     0,     0,     0,   338,   339,     0,   340,   341,     0,
     342,   343,     0,   546,   344,   345,   346,   347,   348,     0,
       0,     0,     0,     0,   349,     0,   350,     0,     0,   351,
     352,   353,   354,     0,     0,   355,   356,     0,     0,   357,
       0,     0,     0,     0,   358,     0,     0,   359,     0,     0,
       0,   360,   361,     0,     0,     0,     0,     0,     0,     0,
     362,     0,     0,   363,     0,     0,   364,   365,   366,     0,
       0,     0,     0,   367,     0,   368,   369,     0,     0,   122,
     370,   123,   124,   125,   126,   127,     0,     0,     0,     0,
       0,   128,     0,     0,   129,     0,     0,   130,   131,   132,
     133,     0,   134,     0,   135,     0,  2285,   136,     0,     0,
       0,   137,     0,     0,   138,   139,     0,   140,     0,   141,
     142,     0,     0,   143,     0,   144,     0,   145,   146,     0,
     147,     0,   148,   149,   150,     0,   151,     0,   152,   153,
       0,   154,   155,   156,   157,   158,     0,     0,   159,     0,
       0,   160,     0,   161,     0,     0,     0,     0,     0,     0,
     162,     0,     0,     0,     0,     0,     0,   163,   164,     0,
       0,   165,     0,     0,     0,     0,   166,   167,     0,     0,
       0,     0,     0,   168,     0,   169,     0,     0,     0,     0,
       0,   170,     0,   171,   172,   173,     0,     0,     0,   174,
       0,     0,   175,   176,   177,     0,     0,     0,   178,     0,
       0,     0,   179,   180,   181,   182,     0,     0,   183,     0,
     184,   185,   186,     0,     0,   187,     0,   188,     0,     0,
     189,     0,     0,   190,   191,   192,     0,     0,   193,     0,
       0,     0,     0,   194,   195,     0,     0,   196,     0,   197,
       0,     0,     0,     0,     0,     0,   198,   199,     0,     0,
     200,   201,     0,   202,     0,     0,     0,     0,     0,   203,
     204,     0,   205,     0,     0,   206,     0,     0,     0,   207,
     208,   209,   210,     0,     0,   211,   212,     0,     0,     0,
     213,     0,     0,     0,   214,     0,     0,     0,   215,     0,
       0,   216,   217,     0,     0,     0,     0,     0,     0,   218,
       0,   219,     0,     0,     0,   220,     0,     0,   221,   545,
       0,     0,     0,     0,   222,     0,   223,     0,     0,   224,
       0,   225,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   226,   227,   228,   229,   230,   231,     0,   232,   233,
     234,   235,   236,   237,   238,   239,   240,     0,   241,   242,
     243,     0,   244,   245,     0,     0,     0,   246,   247,   248,
     249,     0,     0,   250,   251,     0,     0,   252,     0,   253,
       0,   254,     0,     0,   255,   256,   257,   258,   259,   260,
     261,     0,     0,   262,   263,     0,   264,   265,   266,     0,
       0,     0,   267,     0,     0,     0,     0,   268,   269,     0,
     270,     0,   271,   272,   273,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   274,   275,   276,     0,   277,
       0,   278,     0,   279,     0,     0,   280,   281,     0,   282,
       0,   283,   284,     0,   285,   286,   287,   288,   289,   290,
     291,   292,     0,     0,     0,     0,   293,   294,     0,     0,
     295,   296,   297,     0,   298,     0,   299,   300,     0,     0,
     301,     0,   302,   303,   304,     0,   305,   306,     0,     0,
       0,   307,   308,     0,   309,   310,     0,   311,   312,   313,
     314,     0,   315,   316,     0,     0,     0,   317,   318,   319,
       0,     0,   320,     0,     0,     0,   321,   322,   323,   324,
       0,   325,   326,     0,     0,     0,     0,     0,     0,   327,
     328,     0,   329,     0,     0,   330,     0,     0,   331,   332,
       0,     0,   333,   334,     0,   335,   336,   337,     0,     0,
       0,   338,   339,     0,   340,   341,     0,   342,   343,     0,
     546,   344,   345,   346,   347,   348,     0,     0,     0,     0,
       0,   349,     0,   350,     0,     0,   351,   352,   353,   354,
       0,     0,   355,   356,     0,     0,   357,     0,     0,     0,
       0,   358,     0,     0,   359,     0,     0,     0,   360,   361,
       0,     0,     0,     0,     0,     0,     0,   362,     0,     0,
     363,     0,     0,   364,   365,   366,     0,     0,     0,     0,
     367,     0,   368,   369,     0,     0,   122,   370,   123,   124,
     125,   126,   127,     0,     0,     0,     0,     0,   128,     0,
       0,   129,     0,     0,   130,   131,   132,   133,     0,   134,
       0,   135,     0,     0,   136,     0,     0,     0,   137,     0,
       0,   138,   139,     0,   140,     0,   141,   142,     0,     0,
     143,     0,   144,     0,   145,   146,     0,   147,     0,   148,
     149,   150,     0,   151,     0,   152,   153,     0,   154,   155,
     156,   157,   158,     0,     0,   159,     0,     0,   160,     0,
     161,     0,     0,     0,     0,     0,     0,   162,     0,     0,
       0,     0,     0,     0,   163,   164,     0,     0,   165,     0,
       0,     0,     0,   166,   167,     0,     0,     0,     0,     0,
     168,     0,   169,     0,     0,     0,     0,     0,   170,     0,
     171,   172,   173,     0,     0,     0,   174,     0,     0,   175,
     176,   177,     0,     0,     0,   178,     0,     0,     0,   179,
     180,   181,   182,     0,     0,   183,     0,   184,   185,   186,
       0,     0,   187,     0,   188,     0,     0,   189,     0,     0,
     190,   191,   192,     0,     0,   193,     0,     0,     0,     0,
     194,   195,     0,     0,   196,     0,   197,     0,     0,     0,
       0,     0,     0,   198,   199,     0,     0,   200,   201,     0,
     202,     0,     0,     0,     0,     0,   203,   204,     0,   205,
       0,     0,   206,     0,     0,     0,   207,   208,   209,   210,
       0,     0,   211,   212,     0,     0,     0,   213,     0,     0,
       0,   214,     0,     0,     0,   215,     0,     0,   216,   217,
       0,     0,     0,     0,     0,     0,   218,     0,   219,     0,
       0,     0,   220,     0,     0,   221,   545,     0,     0,     0,
       0,   222,     0,   223,     0,     0,   224,     0,   225,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   226,   227,
     228,   229,   230,   231,     0,   232,   233,   234,   235,   236,
     237,   238,   239,   240,     0,   241,   242,   243,     0,   244,
     245,     0,     0,     0,   246,   247,   248,   249,     0,     0,
     250,   251,     0,     0,   252,     0,   253,     0,   254,     0,
       0,   255,   256,   257,   258,   259,   260,   261,     0,     0,
     262,   263,     0,   264,   265,   266,     0,     0,     0,   267,
       0,     0,     0,     0,   268,   269,     0,   270,     0,   271,
     272,   273,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   274,   275,   276,     0,   277,     0,   278,     0,
     279,     0,     0,   280,   281,     0,   282,     0,   283,   284,
       0,   285,   286,   287,   288,   289,   290,   291,   292,     0,
       0,     0,     0,   293,   294,     0,     0,   295,   296,   297,
       0,   298,     0,   299,   300,     0,     0,   301,     0,   302,
     303,   304,     0,   305,   306,     0,     0,     0,   307,   308,
       0,   309,   310,     0,   311,   312,   313,   314,     0,   315,
     316,     0,     0,     0,   317,   318,   319,     0,     0,   320,
       0,     0,     0,   321,   322,   323,   324,     0,   325,   326,
       0,     0,     0,     0,     0,     0,   327,   328,     0,   329,
       0,     0,   330,     0,     0,   331,   332,     0,     0,   333,
     334,     0,   335,   336,   337,     0,     0,     0,   338,   339,
       0,   340,   341,     0,   342,   343,     0,   546,   344,   345,
     346,   347,   348,     0,     0,     0,     0,     0,   349,     0,
     350,     0,     0,   351,   352,   353,   354,     0,     0,   355,
     356,     0,     0,   357,     0,     0,     0,     0,   358,     0,
       0,   359,     0,     0,     0,   360,   361,     0,     0,     0,
       0,     0,     0,     0,   362,     0,     0,   363,     0,     0,
     364,   365,   366,     0,     0,     0,     0,   367,     0,   368,
     369,     0,     0,   122,   370,   123,   124,   125,   126,   127,
       0,     0,     0,     0,     0,   128,  2275,     0,   129,     0,
       0,   130,   131,   132,   133,     0,   134,     0,   135,     0,
       0,   136,     0,     0,     0,   137,     0,     0,   138,   139,
       0,   140,     0,   141,   142,     0,     0,   143,     0,   144,
       0,   145,   146,     0,   147,     0,   148,   149,   150,     0,
     151,     0,   152,   153,     0,   154,   155,   156,   157,   158,
       0,     0,   159,     0,     0,   160,     0,   161,     0,     0,
       0,     0,     0,     0,   162,     0,     0,     0,     0,     0,
       0,   163,   164,     0,     0,   165,     0,     0,     0,     0,
     166,   167,     0,     0,     0,     0,     0,   168,     0,   169,
       0,     0,     0,     0,     0,   170,     0,   171,   172,   173,
       0,     0,     0,   174,     0,     0,   175,   176,   177,     0,
       0,     0,   178,     0,     0,     0,   179,   180,   181,   182,
       0,     0,   183,     0,   184,   185,   186,     0,     0,   187,
       0,   188,     0,     0,   189,     0,     0,   190,   191,   192,
       0,     0,   193,     0,     0,     0,     0,   194,   195,     0,
       0,   196,     0,   197,     0,     0,     0,     0,     0,     0,
     198,   199,     0,     0,   200,   201,     0,   202,     0,     0,
       0,     0,     0,   203,   204,     0,   205,     0,     0,   206,
       0,     0,     0,   207,   208,   209,   210,     0,     0,   211,
     212,     0,     0,     0,   213,     0,     0,     0,   214,     0,
       0,     0,   215,     0,     0,   216,   217,     0,     0,     0,
       0,     0,     0,   218,     0,   219,     0,     0,     0,   220,
       0,     0,   221,     0,     0,     0,     0,     0,   222,     0,
     223,     0,     0,   224,     0,   225,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   226,   227,   228,   229,   230,
     231,     0,   232,   233,   234,   235,   236,   237,   238,   239,
     240,     0,   241,   242,   243,     0,   244,   245,     0,     0,
       0,   246,   247,   248,   249,     0,     0,   250,   251,     0,
       0,   252,     0,   253,     0,   254,     0,     0,   255,   256,
     257,   258,   259,   260,   261,     0,     0,   262,   263,     0,
     264,   265,   266,     0,     0,     0,   267,     0,     0,     0,
       0,   268,   269,     0,   270,     0,   271,   272,   273,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   274,
     275,   276,     0,   277,     0,   278,     0,   279,     0,     0,
     280,   281,     0,   282,     0,   283,   284,     0,   285,   286,
     287,   288,   289,   290,   291,   292,     0,     0,     0,     0,
     293,   294,     0,     0,   295,   296,   297,     0,   298,     0,
     299,   300,     0,     0,   301,     0,   302,   303,   304,     0,
     305,   306,     0,     0,     0,   307,   308,     0,   309,   310,
       0,   311,   312,   313,   314,     0,   315,   316,     0,     0,
       0,   317,   318,   319,     0,     0,   320,     0,     0,     0,
     321,   322,   323,   324,     0,   325,   326,     0,     0,     0,
       0,     0,     0,   327,   328,     0,   329,     0,     0,   330,
       0,     0,   331,   332,     0,     0,   333,   334,     0,   335,
     336,   337,     0,     0,     0,   338,   339,     0,   340,   341,
       0,   342,   343,     0,   546,   344,   345,   346,   347,   348,
       0,     0,     0,     0,     0,   349,     0,   350,     0,     0,
     351,   352,   353,   354,     0,     0,   355,   356,     0,     0,
     357,     0,     0,     0,     0,   358,     0,     0,   359,     0,
       0,     0,   360,   361,     0,     0,     0,     0,     0,     0,
       0,   362,     0,     0,   363,     0,     0,   364,   365,   366,
       0,     0,     0,     0,   367,     0,   368,   369,     0,     0,
     122,   370,   123,   124,   125,   126,   127,     0,     0,     0,
       0,     0,   128,     0,     0,   129,     0,     0,   130,   131,
     132,   133,     0,   134,     0,   135,     0,     0,   136,     0,
       0,     0,   137,     0,     0,   138,   139,     0,   140,     0,
     141,   142,     0,     0,   143,     0,   144,     0,   145,   146,
       0,   147,     0,   148,   149,   150,     0,   151,     0,   152,
     153,     0,   154,   155,   156,   157,   158,     0,     0,   159,
       0,     0,   160,     0,   161,  3551,     0,     0,     0,     0,
       0,   162,     0,     0,     0,     0,     0,     0,   163,   164,
       0,     0,   165,     0,     0,     0,     0,   166,   167,     0,
       0,     0,     0,     0,   168,     0,   169,     0,     0,     0,
       0,     0,   170,     0,   171,   172,   173,     0,     0,     0,
     174,     0,     0,   175,   176,   177,     0,     0,     0,   178,
       0,     0,     0,   179,   180,   181,   182,     0,     0,   183,
       0,   184,   185,   186,     0,  3552,   187,     0,   188,     0,
       0,   189,     0,     0,   190,   191,   192,     0,     0,   193,
       0,     0,     0,     0,   194,   195,     0,     0,   196,     0,
     197,     0,     0,     0,     0,     0,     0,   198,   199,     0,
       0,   200,   201,     0,   202,     0,     0,     0,     0,     0,
     203,   204,     0,   205,     0,     0,   206,     0,     0,     0,
     207,   208,   209,   210,     0,     0,   211,   212,     0,     0,
       0,   213,     0,     0,     0,   214,     0,     0,     0,   215,
       0,     0,   216,   217,     0,     0,     0,     0,     0,     0,
     218,     0,   219,     0,     0,     0,   220,     0,     0,   221,
       0,     0,     0,     0,     0,   222,     0,   223,     0,     0,
     224,     0,   225,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   226,   227,   228,   229,   230,   231,     0,   232,
     233,   234,   235,   236,   237,   238,   239,   240,     0,   241,
     242,   243,     0,   244,   245,     0,     0,     0,   246,   247,
     248,   249,     0,     0,   250,   251,     0,     0,   252,     0,
     253,     0,   254,     0,     0,   255,   256,   257,   258,   259,
     260,   261,     0,     0,   262,   263,     0,   264,   265,   266,
       0,     0,     0,   267,     0,     0,     0,     0,   268,   269,
       0,   270,     0,   271,   272,   273,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   274,   275,   276,     0,
     277,     0,   278,     0,   279,     0,     0,   280,   281,     0,
     282,     0,   283,   284,     0,   285,   286,   287,   288,   289,
     290,   291,   292,     0,     0,     0,     0,   293,   294,     0,
       0,   295,   296,   297,     0,   298,     0,   299,   300,     0,
       0,   301,     0,   302,   303,   304,     0,   305,   306,     0,
       0,     0,   307,   308,     0,   309,   310,     0,   311,   312,
     313,   314,     0,   315,   316,     0,     0,     0,   317,   318,
     319,     0,     0,   320,     0,     0,     0,   321,   322,   323,
     324,     0,   325,   326,     0,     0,     0,     0,     0,     0,
     327,   328,     0,   329,     0,     0,   330,     0,     0,   331,
     332,     0,     0,   333,   334,     0,   335,   336,   337,     0,
       0,     0,   338,   339,     0,   340,   341,     0,   342,   343,
       0,     0,   344,   345,   346,   347,   348,     0,     0,     0,
       0,     0,   349,     0,   350,     0,     0,   351,   352,   353,
     354,     0,     0,   355,   356,     0,     0,   357,     0,     0,
       0,     0,   358,     0,     0,   359,     0,     0,     0,   360,
     361,     0,     0,     0,     0,     0,     0,     0,   362,     0,
       0,   363,     0,     0,   364,   365,   366,     0,     0,     0,
       0,   367,     0,   368,   369,     0,     0,   122,   370,   123,
     124,   125,   126,   127,     0,     0,     0,     0,     0,   128,
       0,     0,   129,     0,     0,   130,   131,   132,   133,     0,
     134,     0,   135,     0,     0,   136,     0,     0,     0,   137,
       0,     0,   138,   139,     0,   140,     0,   141,   142,     0,
       0,   143,     0,   144,     0,   145,   146,     0,   147,     0,
     148,   149,   150,     0,   151,     0,   152,   153,     0,   154,
     155,   156,   157,   158,     0,     0,   159,     0,     0,   160,
       0,   161,     0,     0,     0,     0,     0,     0,   162,     0,
       0,     0,     0,     0,     0,   163,   164,     0,     0,   165,
       0,     0,     0,     0,   166,   167,     0,     0,     0,     0,
       0,   168,     0,   169,     0,     0,     0,     0,     0,   170,
       0,   171,   172,   173,     0,     0,     0,   174,     0,     0,
     175,   176,   177,     0,     0,     0,   178,     0,     0,     0,
     179,   180,   181,   182,     0,     0,   183,     0,   184,   185,
     186,     0,     0,   187,     0,   188,     0,     0,   189,     0,
       0,   190,   191,   192,     0,     0,   193,     0,     0,     0,
       0,   194,   195,   717,     0,   196,     0,   197,     0,     0,
       0,     0,     0,     0,   198,   199,     0,     0,   200,   201,
       0,   202,     0,     0,     0,     0,     0,   203,   204,     0,
     205,     0,     0,   206,     0,     0,     0,   207,   208,   209,
     210,     0,     0,   211,   212,     0,     0,     0,   213,     0,
       0,     0,   214,     0,     0,     0,   215,     0,     0,   216,
     217,     0,     0,     0,     0,     0,     0,   218,     0,   219,
       0,     0,     0,   220,     0,     0,   221,     0,     0,     0,
       0,     0,   222,     0,   223,     0,     0,   224,     0,   225,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   226,
     227,   228,   229,   230,   231,     0,   232,   233,   234,   235,
     236,   237,   238,   239,   240,     0,   241,   242,   243,     0,
     244,   245,     0,     0,     0,   246,   247,   248,   249,     0,
       0,   250,   251,     0,     0,   252,     0,   253,     0,   254,
       0,     0,   255,   256,   257,   258,   259,   260,   261,     0,
       0,   262,   263,     0,   264,   265,   266,     0,     0,     0,
     267,     0,     0,     0,     0,   268,   269,     0,   270,     0,
     271,   272,   273,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   274,   275,   276,     0,   277,     0,   278,
       0,   279,     0,     0,   280,   281,     0,   282,     0,   283,
     284,     0,   285,   286,   287,   288,   289,   290,   291,   292,
       0,     0,     0,     0,   293,   294,     0,     0,   295,   296,
     297,     0,   298,     0,   299,   300,     0,     0,   301,     0,
     302,   303,   304,     0,   305,   306,     0,     0,     0,   307,
     308,     0,   309,   310,     0,   311,   312,   313,   314,     0,
     315,   316,     0,     0,     0,   317,   318,   319,     0,     0,
     320,     0,     0,     0,   321,   322,   323,   324,     0,   325,
     326,     0,     0,     0,     0,     0,     0,   327,   328,     0,
     329,     0,     0,   330,     0,     0,   331,   332,     0,     0,
     333,   334,     0,   335,   336,   337,     0,     0,     0,   338,
     339,     0,   340,   341,     0,   342,   343,     0,     0,   344,
     345,   346,   347,   348,     0,     0,     0,     0,     0,   349,
       0,   350,     0,     0,   351,   352,   353,   354,     0,     0,
     355,   356,     0,     0,   357,     0,     0,     0,     0,   358,
       0,     0,   359,     0,     0,     0,   360,   361,     0,     0,
       0,     0,     0,     0,     0,   362,     0,     0,   363,     0,
       0,   364,   365,   366,     0,     0,     0,     0,   367,     0,
     368,   369,     0,     0,   122,   370,   123,   124,   125,   126,
     127,     0,     0,     0,     0,     0,   128,     0,     0,   129,
       0,     0,   130,   131,   132,   133,     0,   134,     0,   135,
       0,     0,   136,     0,     0,     0,   137,     0,     0,   138,
     139,     0,   140,     0,   141,   142,     0,     0,   143,     0,
     144,     0,   145,   146,     0,   147,     0,   148,   149,   150,
       0,   151,     0,   152,   153,     0,   154,   155,   156,   157,
     158,     0,     0,   159,     0,     0,   160,     0,   161,     0,
       0,     0,     0,     0,     0,   162,     0,     0,     0,     0,
       0,     0,   163,   164,     0,     0,   165,     0,     0,     0,
       0,   166,   167,     0,     0,     0,     0,  1079,   168,     0,
     169,     0,     0,     0,     0,     0,   170,     0,   171,   172,
     173,     0,     0,     0,   174,     0,     0,   175,   176,   177,
       0,     0,     0,   178,     0,     0,     0,   179,   180,   181,
     182,     0,     0,   183,     0,   184,   185,   186,     0,     0,
     187,     0,   188,     0,     0,   189,     0,     0,   190,   191,
     192,     0,     0,   193,     0,     0,     0,     0,   194,   195,
       0,     0,   196,     0,   197,     0,     0,     0,     0,     0,
       0,   198,   199,     0,     0,   200,   201,     0,   202,     0,
       0,     0,     0,     0,   203,   204,     0,   205,     0,     0,
     206,     0,     0,     0,   207,   208,   209,   210,     0,     0,
     211,   212,     0,     0,     0,   213,     0,     0,     0,   214,
       0,     0,     0,   215,     0,     0,   216,   217,     0,     0,
       0,     0,     0,     0,   218,     0,   219,     0,     0,     0,
     220,     0,     0,   221,     0,     0,     0,     0,     0,   222,
       0,   223,     0,     0,   224,     0,   225,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   226,   227,   228,   229,
     230,   231,     0,   232,   233,   234,   235,   236,   237,   238,
     239,   240,     0,   241,   242,   243,     0,   244,   245,     0,
       0,     0,   246,   247,   248,   249,     0,     0,   250,   251,
       0,     0,   252,     0,   253,     0,   254,     0,     0,   255,
     256,   257,   258,   259,   260,   261,     0,     0,   262,   263,
       0,   264,   265,   266,     0,     0,     0,   267,     0,     0,
       0,     0,   268,   269,     0,   270,     0,   271,   272,   273,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     274,   275,   276,     0,   277,     0,   278,     0,   279,     0,
       0,   280,   281,     0,   282,     0,   283,   284,     0,   285,
     286,   287,   288,   289,   290,   291,   292,     0,     0,     0,
       0,   293,   294,     0,     0,   295,   296,   297,     0,   298,
       0,   299,   300,     0,     0,   301,     0,   302,   303,   304,
       0,   305,   306,     0,     0,     0,   307,   308,     0,   309,
     310,     0,   311,   312,   313,   314,     0,   315,   316,     0,
       0,     0,   317,   318,   319,     0,     0,   320,     0,     0,
       0,   321,   322,   323,   324,     0,   325,   326,     0,     0,
       0,     0,     0,     0,   327,   328,     0,   329,     0,     0,
     330,     0,     0,   331,   332,     0,     0,   333,   334,     0,
     335,   336,   337,     0,     0,     0,   338,   339,     0,   340,
     341,     0,   342,   343,     0,     0,   344,   345,   346,   347,
     348,     0,     0,     0,     0,     0,   349,     0,   350,     0,
       0,   351,   352,   353,   354,     0,     0,   355,   356,     0,
       0,   357,     0,     0,     0,     0,   358,     0,     0,   359,
       0,     0,     0,   360,   361,     0,     0,     0,     0,     0,
       0,     0,   362,     0,     0,   363,     0,     0,   364,   365,
     366,     0,     0,     0,     0,   367,     0,   368,   369,     0,
       0,   122,   370,   123,   124,   125,   126,   127,     0,     0,
       0,     0,     0,   128,     0,     0,   129,     0,     0,   130,
     131,   132,   133,     0,   134,     0,   135,     0,     0,   136,
       0,     0,     0,   137,     0,     0,   138,   139,     0,   140,
       0,   141,   142,     0,     0,   143,     0,   144,     0,   145,
     146,     0,   147,     0,   148,   149,   150,     0,   151,     0,
     152,   153,     0,   154,   155,   156,   157,   158,     0,     0,
     159,     0,     0,   160,     0,   161,     0,     0,     0,     0,
       0,     0,   162,     0,     0,     0,     0,     0,     0,   163,
     164,     0,     0,   165,     0,     0,     0,     0,   166,   167,
       0,     0,     0,     0,  1869,   168,     0,   169,     0,     0,
       0,     0,     0,   170,     0,   171,   172,   173,     0,     0,
       0,   174,     0,     0,   175,   176,   177,     0,     0,     0,
     178,     0,     0,     0,   179,   180,   181,   182,     0,     0,
     183,     0,   184,   185,   186,     0,     0,   187,     0,   188,
       0,     0,   189,     0,     0,   190,   191,   192,     0,     0,
     193,     0,     0,     0,     0,   194,   195,     0,     0,   196,
       0,   197,     0,     0,     0,     0,     0,     0,   198,   199,
       0,     0,   200,   201,     0,   202,     0,     0,     0,     0,
       0,   203,   204,     0,   205,     0,     0,   206,     0,     0,
       0,   207,   208,   209,   210,     0,     0,   211,   212,     0,
       0,     0,   213,     0,     0,     0,   214,     0,     0,     0,
     215,     0,     0,   216,   217,     0,     0,     0,     0,     0,
       0,   218,     0,   219,     0,     0,     0,   220,     0,     0,
     221,     0,     0,     0,     0,     0,   222,     0,   223,     0,
       0,   224,     0,   225,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   226,   227,   228,   229,   230,   231,     0,
     232,   233,   234,   235,   236,   237,   238,   239,   240,     0,
     241,   242,   243,     0,   244,   245,     0,     0,     0,   246,
     247,   248,   249,     0,     0,   250,   251,     0,     0,   252,
       0,   253,     0,   254,     0,     0,   255,   256,   257,   258,
     259,   260,   261,     0,     0,   262,   263,     0,   264,   265,
     266,     0,     0,     0,   267,     0,     0,     0,     0,   268,
     269,     0,   270,     0,   271,   272,   273,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   274,   275,   276,
       0,   277,     0,   278,     0,   279,     0,     0,   280,   281,
       0,   282,     0,   283,   284,     0,   285,   286,   287,   288,
     289,   290,   291,   292,     0,     0,     0,     0,   293,   294,
       0,     0,   295,   296,   297,     0,   298,     0,   299,   300,
       0,     0,   301,     0,   302,   303,   304,     0,   305,   306,
       0,     0,     0,   307,   308,     0,   309,   310,     0,   311,
     312,   313,   314,     0,   315,   316,     0,     0,     0,   317,
     318,   319,     0,     0,   320,     0,     0,     0,   321,   322,
     323,   324,     0,   325,   326,     0,     0,     0,     0,     0,
       0,   327,   328,     0,   329,     0,     0,   330,     0,     0,
     331,   332,     0,     0,   333,   334,     0,   335,   336,   337,
       0,     0,     0,   338,   339,     0,   340,   341,     0,   342,
     343,     0,     0,   344,   345,   346,   347,   348,     0,     0,
       0,     0,     0,  1870,     0,   350,     0,     0,   351,   352,
     353,   354,     0,     0,   355,   356,     0,     0,   357,     0,
       0,     0,     0,   358,     0,     0,   359,     0,     0,     0,
     360,   361,     0,     0,     0,     0,     0,     0,     0,   362,
       0,     0,   363,     0,     0,   364,   365,   366,     0,     0,
       0,     0,   367,     0,   368,   369,     0,     0,   122,   370,
     123,   124,   125,   126,   127,     0,     0,     0,     0,     0,
     128,     0,     0,   129,     0,     0,   130,   131,   132,   133,
       0,   134,     0,   135,     0,     0,   136,     0,     0,     0,
     137,     0,     0,   138,   139,     0,   140,     0,   141,   142,
       0,     0,   143,     0,   144,     0,   145,   146,     0,   147,
       0,   148,   149,   150,     0,   151,     0,   152,   153,     0,
     154,   155,   156,   157,   158,     0,     0,   159,     0,     0,
     160,     0,   161,     0,     0,     0,     0,     0,     0,   162,
       0,     0,     0,     0,     0,     0,   163,   164,     0,     0,
     165,     0,     0,     0,     0,   166,   167,     0,     0,     0,
       0,     0,   168,     0,   169,     0,     0,     0,     0,     0,
     170,     0,   171,   172,   173,     0,     0,     0,   174,     0,
       0,   175,   176,   177,     0,     0,     0,   178,     0,     0,
       0,   179,   180,   181,   182,     0,     0,   183,     0,   184,
     185,   186,     0,     0,   187,     0,   188,     0,     0,   189,
       0,     0,   190,   191,   192,     0,     0,   193,     0,     0,
       0,     0,   194,   195,     0,     0,   196,     0,   197,     0,
       0,     0,     0,     0,     0,   198,   199,     0,     0,   200,
     201,     0,   202,     0,     0,     0,     0,     0,   203,   204,
       0,   205,     0,     0,   206,     0,     0,     0,   207,   208,
     209,   210,     0,     0,   211,   212,     0,     0,     0,   213,
       0,     0,     0,   214,     0,     0,     0,   215,     0,     0,
     216,   217,     0,     0,     0,     0,     0,     0,   218,     0,
     219,     0,     0,     0,   220,     0,     0,   221,     0,     0,
       0,     0,     0,   222,     0,   223,     0,     0,   224,     0,
     225,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     226,   227,   228,   229,   230,   231,     0,   232,   233,   234,
     235,   236,   237,   238,   239,   240,     0,   241,   242,   243,
       0,   244,   245,     0,     0,     0,   246,   247,   248,   249,
       0,     0,   250,   251,     0,     0,   252,     0,   253,     0,
     254,     0,     0,   255,   256,   257,   258,   259,   260,   261,
       0,     0,   262,   263,     0,   264,   265,   266,     0,     0,
       0,   267,     0,     0,     0,     0,   268,   269,     0,   270,
       0,   271,   272,   273,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   274,   275,   276,     0,   277,     0,
     278,     0,   279,     0,     0,   280,   281,  1986,   282,     0,
     283,   284,     0,   285,   286,   287,   288,   289,   290,   291,
     292,     0,     0,     0,     0,   293,   294,     0,     0,   295,
     296,   297,     0,   298,     0,   299,   300,     0,     0,   301,
       0,   302,   303,   304,     0,   305,   306,     0,     0,     0,
     307,   308,     0,   309,   310,     0,   311,   312,   313,   314,
       0,   315,   316,     0,     0,     0,   317,   318,   319,     0,
       0,   320,     0,     0,     0,   321,   322,   323,   324,     0,
     325,   326,     0,     0,     0,     0,     0,     0,   327,   328,
       0,   329,     0,     0,   330,     0,     0,   331,   332,     0,
       0,   333,   334,     0,   335,   336,   337,     0,     0,     0,
     338,   339,     0,   340,   341,     0,   342,   343,     0,     0,
     344,   345,   346,   347,   348,     0,     0,     0,     0,     0,
     349,     0,   350,     0,     0,   351,   352,   353,   354,     0,
       0,   355,   356,     0,     0,   357,     0,     0,     0,     0,
     358,     0,     0,   359,     0,     0,     0,   360,   361,     0,
       0,     0,     0,     0,     0,     0,   362,     0,     0,   363,
       0,     0,   364,   365,   366,     0,     0,     0,     0,   367,
       0,   368,   369,     0,     0,   122,   370,   123,   124,   125,
     126,   127,     0,     0,     0,     0,     0,   128,     0,     0,
     129,     0,     0,   130,   131,   132,   133,     0,   134,     0,
     135,     0,     0,   136,     0,     0,     0,   137,     0,     0,
     138,   139,     0,   140,     0,   141,   142,     0,     0,   143,
       0,   144,     0,   145,   146,     0,   147,     0,   148,   149,
     150,     0,   151,     0,   152,   153,     0,   154,   155,   156,
     157,   158,     0,     0,   159,     0,     0,   160,     0,   161,
       0,     0,     0,     0,     0,     0,   162,     0,     0,     0,
       0,     0,     0,   163,   164,     0,     0,   165,     0,     0,
       0,     0,   166,   167,     0,     0,     0,     0,     0,   168,
       0,   169,     0,     0,     0,     0,     0,   170,     0,   171,
     172,   173,     0,     0,     0,   174,     0,     0,   175,   176,
     177,     0,     0,     0,   178,     0,     0,     0,   179,   180,
     181,   182,     0,     0,   183,     0,   184,   185,   186,     0,
       0,   187,     0,   188,     0,     0,   189,     0,     0,   190,
     191,   192,     0,     0,   193,     0,     0,     0,     0,   194,
     195,     0,     0,   196,     0,   197,     0,     0,     0,     0,
       0,     0,   198,   199,     0,     0,   200,   201,     0,   202,
       0,     0,     0,     0,     0,   203,   204,     0,   205,     0,
       0,   206,     0,     0,     0,   207,   208,   209,   210,     0,
       0,   211,   212,     0,     0,     0,   213,     0,     0,     0,
     214,     0,     0,     0,   215,     0,     0,   216,   217,     0,
       0,     0,     0,     0,     0,   218,     0,   219,     0,     0,
       0,   220,     0,     0,   221,     0,     0,     0,     0,     0,
     222,     0,   223,     0,     0,   224,     0,   225,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   226,   227,   228,
     229,   230,   231,     0,   232,   233,   234,   235,   236,   237,
     238,   239,   240,     0,   241,   242,   243,     0,   244,   245,
       0,     0,     0,   246,   247,   248,   249,     0,     0,   250,
     251,     0,     0,   252,     0,   253,     0,   254,     0,     0,
     255,   256,   257,   258,   259,   260,   261,     0,     0,   262,
     263,     0,   264,   265,   266,     0,     0,     0,   267,     0,
       0,     0,     0,   268,   269,     0,   270,     0,   271,   272,
     273,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   274,   275,   276,     0,   277,     0,   278,     0,   279,
       0,     0,   280,   281,     0,   282,     0,   283,   284,     0,
     285,   286,   287,   288,   289,   290,   291,   292,     0,     0,
       0,     0,   293,   294,     0,     0,   295,   296,   297,     0,
     298,     0,   299,   300,     0,     0,   301,     0,   302,   303,
     304,     0,   305,   306,     0,     0,     0,   307,   308,     0,
     309,   310,     0,   311,   312,   313,   314,     0,   315,   316,
       0,     0,     0,   317,   318,   319,     0,     0,   320,     0,
       0,     0,   321,   322,   323,   324,     0,   325,   326,     0,
       0,     0,     0,     0,     0,   327,   328,     0,   329,     0,
       0,   330,     0,     0,   331,   332,     0,     0,   333,   334,
       0,   335,   336,   337,     0,     0,     0,   338,   339,     0,
     340,   341,     0,   342,   343,     0,   546,   344,   345,   346,
     347,   348,     0,     0,     0,     0,     0,   349,     0,   350,
       0,     0,   351,   352,   353,   354,     0,     0,   355,   356,
       0,     0,   357,     0,     0,     0,     0,   358,     0,     0,
     359,     0,     0,     0,   360,   361,     0,     0,     0,     0,
       0,     0,     0,   362,     0,     0,   363,     0,     0,   364,
     365,   366,     0,     0,     0,     0,   367,     0,   368,   369,
       0,     0,   122,   370,   123,   124,   125,   126,   127,     0,
       0,     0,     0,     0,   128,     0,     0,   129,     0,     0,
     130,   131,   132,   133,     0,   134,     0,   135,     0,     0,
     136,     0,     0,     0,   137,     0,     0,   138,   139,     0,
     140,     0,   141,   142,     0,     0,   143,     0,   144,     0,
     145,   146,     0,   147,     0,   148,   149,   150,     0,   151,
       0,   152,   153,     0,   154,   155,   156,   157,   158,     0,
       0,   159,     0,     0,   160,     0,   161,     0,     0,     0,
       0,     0,     0,   162,     0,     0,     0,     0,     0,     0,
     163,   164,     0,     0,   165,     0,     0,     0,     0,   166,
     167,     0,     0,     0,     0,  1869,   168,     0,   169,     0,
       0,     0,     0,     0,   170,     0,   171,   172,   173,     0,
       0,     0,   174,     0,     0,   175,   176,   177,     0,     0,
       0,   178,     0,     0,     0,   179,   180,   181,   182,     0,
       0,   183,     0,   184,   185,   186,     0,     0,   187,     0,
     188,     0,     0,   189,     0,     0,   190,   191,   192,     0,
       0,   193,     0,     0,     0,     0,   194,   195,     0,     0,
     196,     0,   197,     0,     0,     0,     0,     0,     0,   198,
     199,     0,     0,   200,   201,     0,   202,     0,     0,     0,
       0,     0,   203,   204,     0,   205,     0,     0,   206,     0,
       0,     0,   207,   208,   209,   210,     0,     0,   211,   212,
       0,     0,     0,   213,     0,     0,     0,   214,     0,     0,
       0,   215,     0,     0,   216,   217,     0,     0,     0,     0,
       0,     0,   218,     0,   219,     0,     0,     0,   220,     0,
       0,   221,     0,     0,     0,     0,     0,   222,     0,   223,
       0,     0,   224,     0,   225,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   226,   227,   228,   229,   230,   231,
       0,   232,   233,   234,   235,   236,   237,   238,   239,   240,
       0,   241,   242,   243,     0,   244,   245,     0,     0,     0,
     246,   247,   248,   249,     0,     0,   250,   251,     0,     0,
     252,     0,   253,     0,   254,     0,     0,   255,   256,   257,
     258,   259,   260,   261,     0,     0,   262,   263,     0,   264,
     265,   266,     0,     0,     0,   267,     0,     0,     0,     0,
     268,   269,     0,   270,     0,   271,   272,   273,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   274,   275,
     276,     0,   277,     0,   278,     0,   279,     0,     0,   280,
     281,     0,   282,     0,   283,   284,     0,   285,   286,   287,
     288,   289,   290,   291,   292,     0,     0,     0,     0,   293,
     294,     0,     0,   295,   296,   297,     0,   298,     0,   299,
     300,     0,     0,   301,     0,   302,   303,   304,     0,   305,
     306,     0,     0,     0,   307,   308,     0,   309,   310,     0,
     311,   312,   313,   314,     0,   315,   316,     0,     0,     0,
     317,   318,   319,     0,     0,   320,     0,     0,     0,   321,
     322,   323,   324,     0,   325,   326,     0,     0,     0,     0,
       0,     0,   327,   328,     0,   329,     0,     0,   330,     0,
       0,   331,   332,     0,     0,   333,   334,     0,   335,   336,
     337,     0,     0,     0,   338,   339,     0,   340,   341,     0,
     342,   343,     0,     0,   344,   345,   346,   347,   348,     0,
       0,     0,     0,     0,   349,     0,   350,     0,     0,   351,
     352,   353,   354,     0,     0,   355,   356,     0,     0,   357,
       0,     0,     0,     0,   358,     0,     0,   359,     0,     0,
       0,   360,   361,     0,     0,     0,     0,     0,     0,     0,
     362,     0,     0,   363,     0,     0,   364,   365,   366,     0,
       0,     0,     0,   367,     0,   368,   369,     0,     0,   122,
     370,   123,   124,   125,   126,   127,     0,     0,     0,     0,
       0,   128,     0,     0,   129,     0,     0,   130,   131,   132,
     133,     0,   134,     0,   135,     0,     0,   136,     0,     0,
       0,   137,     0,     0,   138,   139,     0,   140,     0,   141,
     142,     0,     0,   143,     0,   144,     0,   145,   146,     0,
     147,     0,   148,   149,   150,     0,   151,     0,   152,   153,
       0,   154,   155,   156,   157,   158,     0,     0,   159,     0,
       0,   160,     0,   161,     0,     0,     0,     0,     0,     0,
     162,     0,     0,     0,     0,     0,     0,   163,   164,     0,
       0,   165,     0,     0,     0,     0,   166,   167,     0,     0,
       0,     0,     0,   168,     0,   169,     0,     0,     0,     0,
       0,   170,     0,   171,   172,   173,     0,     0,     0,   174,
       0,     0,   175,   176,   177,     0,     0,     0,   178,     0,
       0,     0,   179,   180,   181,   182,     0,     0,   183,     0,
     184,   185,   186,     0,     0,   187,     0,   188,     0,     0,
     189,     0,     0,   190,   191,   192,     0,     0,   193,     0,
       0,     0,     0,   194,   195,     0,     0,   196,     0,   197,
       0,     0,     0,     0,     0,     0,   198,   199,     0,     0,
     200,   201,     0,   202,     0,     0,     0,     0,     0,   203,
     204,     0,   205,     0,     0,   206,     0,     0,     0,   207,
     208,   209,   210,     0,     0,   211,   212,     0,     0,     0,
     213,     0,     0,     0,   214,     0,     0,     0,   215,     0,
       0,   216,   217,     0,     0,     0,     0,     0,     0,   218,
       0,   219,     0,     0,     0,   220,     0,     0,   221,     0,
       0,     0,     0,     0,   222,     0,   223,     0,     0,   224,
       0,   225,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   226,   227,   228,   229,   230,   231,     0,   232,   233,
     234,   235,   236,   237,   238,   239,   240,     0,   241,   242,
     243,     0,   244,   245,     0,     0,     0,   246,   247,   248,
     249,     0,     0,   250,   251,     0,     0,   252,     0,   253,
       0,   254,     0,     0,   255,   256,   257,   258,   259,   260,
     261,     0,     0,   262,   263,     0,   264,   265,   266,     0,
       0,     0,   267,     0,     0,     0,     0,   268,   269,     0,
     270,     0,   271,   272,   273,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   274,   275,   276,     0,   277,
       0,   278,     0,   279,     0,     0,   280,   281,     0,   282,
       0,   283,   284,     0,   285,   286,   287,   288,   289,   290,
     291,   292,     0,     0,     0,     0,   293,   294,     0,     0,
     295,   296,   297,     0,   298,     0,   299,   300,     0,     0,
     301,     0,   302,   303,   304,     0,   305,   306,     0,     0,
       0,   307,   308,     0,   309,   310,     0,   311,   312,   313,
     314,     0,   315,   316,     0,     0,     0,   317,   318,   319,
       0,     0,   320,     0,     0,     0,   321,   322,   323,   324,
       0,   325,   326,     0,     0,     0,     0,     0,     0,   327,
     328,     0,   329,     0,     0,   330,     0,     0,   331,   332,
       0,     0,   333,   334,     0,   335,   336,   337,     0,     0,
       0,   338,   339,     0,   340,   341,     0,   342,   343,     0,
       0,   344,   345,   346,   347,   348,     0,     0,     0,     0,
       0,   349,     0,   350,     0,     0,   351,   352,   353,   354,
       0,     0,   355,   356,     0,     0,   357,     0,     0,     0,
       0,   358,     0,     0,   359,     0,     0,     0,   360,   361,
       0,     0,     0,     0,     0,     0,     0,   362,     0,     0,
     363,     0,     0,   364,   365,   366,     0,     0,     0,     0,
     367,     0,   368,   369,     0,     0,   122,   370,   123,   124,
     125,   126,   127,     0,     0,     0,     0,     0,   128,     0,
       0,   129,     0,     0,   130,   131,   132,   133,     0,   134,
       0,   135,     0,     0,   136,     0,     0,     0,   137,     0,
       0,   138,   139,     0,   140,     0,   141,   142,     0,     0,
     143,     0,   144,     0,   145,   146,     0,   147,     0,   148,
     149,   150,     0,   151,     0,   152,   153,     0,   154,   155,
     156,   157,   158,     0,     0,   159,     0,     0,   160,     0,
     161,     0,     0,     0,     0,     0,     0,   162,     0,     0,
       0,     0,     0,     0,   163,   164,     0,     0,   165,     0,
       0,     0,     0,   166,   167,     0,     0,     0,     0,     0,
     168,     0,   169,     0,     0,     0,     0,     0,   170,     0,
     171,   172,   173,     0,     0,     0,   174,     0,     0,   175,
     176,   177,     0,     0,     0,   178,     0,     0,     0,   179,
     180,   181,   182,     0,     0,   183,     0,   184,   185,   186,
       0,     0,   187,     0,   188,     0,     0,   189,     0,     0,
     190,  1381,   192,     0,     0,   193,     0,     0,     0,     0,
     194,   195,     0,     0,   196,     0,   197,     0,     0,     0,
       0,     0,     0,   198,   199,     0,     0,   200,   201,     0,
     202,     0,     0,     0,     0,     0,   203,   204,     0,   205,
       0,     0,   206,     0,     0,     0,   207,   208,   209,   210,
       0,     0,   211,   212,     0,     0,     0,   213,     0,     0,
       0,   214,     0,     0,     0,   215,     0,     0,   216,   217,
       0,     0,     0,     0,     0,     0,   218,     0,   219,     0,
       0,     0,   220,     0,     0,   221,     0,     0,     0,     0,
       0,   222,     0,   223,     0,     0,   224,     0,   225,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   226,   227,
     228,   229,   230,   231,     0,   232,   233,   234,   235,   236,
     237,   238,   239,   240,     0,   241,   242,   243,     0,   244,
     245,     0,     0,     0,   246,   247,   248,   249,     0,     0,
     250,   251,     0,     0,   252,     0,   253,     0,   254,     0,
       0,   255,   256,   257,   258,   259,   260,   261,     0,     0,
     262,   263,     0,   264,  1382,   266,     0,     0,     0,   267,
       0,     0,     0,     0,   268,   269,     0,   270,     0,   271,
     272,   273,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   274,   275,   276,     0,   277,     0,   278,     0,
     279,     0,     0,   280,   281,     0,   282,     0,   283,   284,
       0,   285,   286,   287,   288,   289,   290,   291,   292,     0,
       0,     0,     0,   293,   294,     0,     0,   295,   296,   297,
       0,   298,     0,   299,   300,     0,     0,   301,     0,   302,
     303,   304,     0,   305,   306,     0,     0,     0,   307,   308,
       0,   309,   310,     0,   311,   312,   313,   314,     0,   315,
     316,     0,     0,     0,   317,   318,   319,     0,     0,   320,
       0,     0,     0,   321,   322,   323,   324,     0,   325,   326,
       0,     0,     0,     0,     0,     0,   327,   328,     0,   329,
       0,     0,   330,     0,     0,   331,   332,     0,     0,   333,
     334,     0,   335,   336,   337,     0,     0,     0,   338,   339,
       0,   340,   341,     0,   342,   343,     0,     0,   344,   345,
     346,   347,   348,     0,     0,     0,     0,     0,   349,     0,
     350,     0,     0,   351,   352,   353,   354,     0,     0,   355,
     356,     0,     0,   357,     0,     0,     0,     0,   358,     0,
       0,   359,     0,     0,     0,   360,   361,     0,     0,     0,
       0,     0,     0,     0,   362,     0,     0,   363,     0,     0,
     364,   365,   366,     0,     0,     0,     0,   367,     0,   368,
     369,     0,     0,   122,   370,   123,   124,   125,   126,   127,
       0,     0,     0,     0,     0,   128,     0,     0,     0,     0,
       0,   130,   131,   132,     0,     0,     0,     0,   135,     0,
       0,   136,     0,     0,     0,   137,     0,     0,   138,   139,
       0,   140,     0,     0,     0,     0,     0,   143,     0,   144,
       0,   145,     0,     0,     0,     0,   148,   149,     0,     0,
     151,     0,   152,   153,     0,     0,   155,     0,   157,   158,
       0,     0,   159,     0,     0,   160,     0,     0,     0,     0,
       0,     0,     0,     0,   162,     0,     0,     0,     0,     0,
       0,   163,   164,     0,     0,   165,     0,     0,     0,     0,
     166,     0,     0,     0,     0,     0,     0,   168,     0,   169,
       0,     0,     0,     0,     0,   170,     0,   171,   172,   173,
       0,     0,     0,     0,     0,     0,   175,   176,   177,     0,
       0,     0,   178,     0,     0,     0,     0,   180,   181,   182,
       0,     0,   183,     0,   184,   185,     0,     0,     0,   187,
       0,   188,     0,     0,   189,     0,     0,   190,   191,   192,
       0,     0,     0,     0,     0,     0,     0,   194,   195,     0,
       0,   196,     0,   197,     0,     0,     0,     0,     0,     0,
     198,   199,     0,     0,   200,   201,     0,   202,     0,     0,
       0,     0,     0,     0,   204,     0,     0,     0,     0,   206,
       0,     0,     0,   207,   208,   209,   210,     0,     0,   211,
     212,     0,     0,     0,   213,     0,     0,     0,   214,     0,
       0,     0,   215,     0,     0,   216,   217,     0,     0,     0,
       0,     0,     0,     0,     0,   219,     0,     0,     0,   220,
       0,     0,   221,     0,     0,     0,     0,     0,   222,     0,
     223,     0,     0,   224,     0,   225,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   226,   227,   228,   229,   230,
     231,     0,   232,   233,   234,   235,   236,   237,   238,   239,
     240,     0,   241,   242,   243,     0,   244,   245,     0,     0,
       0,   246,   247,   248,   249,     0,     0,   250,   251,     0,
       0,   252,     0,   253,     0,   254,     0,     0,   255,   256,
     257,   258,   259,   260,   261,     0,     0,   262,   263,     0,
     264,   265,   266,     0,     0,     0,     0,     0,     0,     0,
       0,   268,   269,     0,   270,     0,   271,   272,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   274,
     275,   276,     0,   277,     0,   278,     0,   279,     0,     0,
       0,   281,     0,   282,     0,   283,   284,     0,   285,   286,
     287,   288,   289,   290,   291,   292,     0,     0,     0,     0,
     293,   294,     0,     0,   295,   296,   297,     0,   298,     0,
       0,   300,     0,     0,   301,     0,     0,   303,     0,     0,
     305,   306,     0,     0,     0,     0,   308,     0,   309,   310,
       0,   311,   312,   313,     0,     0,   315,     0,     0,     0,
       0,   317,   318,   319,     0,     0,   320,     0,     0,     0,
     321,     0,   323,     0,     0,   325,   326,     0,     0,     0,
       0,     0,     0,   327,   328,     0,   329,     0,     0,   330,
       0,     0,     0,   332,     0,     0,     0,   334,     0,   335,
     336,   337,     0,     0,     0,   338,   339,     0,   340,   341,
       0,   342,   343,     0,     0,   344,   345,   346,   347,   348,
       0,     0,     0,     0,     0,   349,     0,   350,     0,     0,
       0,   352,   353,   354,     0,     0,   355,   356,     0,     0,
       0,     0,     0,     0,     0,   358,     0,     0,   359,     0,
       0,     0,   360,   361,     0,     0,     0,     0,     0,     0,
       0,   362,     0,     0,   363,     0,     0,   364,   365,   366,
       0,     0,     0,     0,   367,     0,   368,     0,     0,     0,
       0,   370
};

static const short int yycheck[] =
{
       7,   485,   750,   586,   666,   455,   705,   706,   707,   744,
     745,   746,    19,  1150,   896,    22,   435,   955,  1008,   447,
     448,   449,    29,   451,  1278,   453,   410,  1152,  1153,  1154,
     611,   632,    39,   510,  1278,   728,   609,   481,   482,  1058,
    1165,  1188,    49,    22,  1848,  1820,  1879,   810,  1497,  1581,
     562,   632,  2045,  1072,  1872,  1873,  1874,  1298,  1900,  2052,
     633,  1510,  2310,  1361,  1305,  2027,  1908,   511,  1910,   760,
    1178,  2257,  1294,  2658,  1023,  1242,   811,  1072,  1907,  1463,
      87,  1886,  1887,  2635,   442,  1034,  1035,   108,  1863,   110,
     838,   568,  1938,   841,    18,  1633,  1221,  1316,  1317,  1224,
     107,   108,   837,   110,     3,    16,    16,     3,    87,  1942,
       3,     3,  1220,     3,   121,   850,   851,   852,     3,     3,
       3,   494,     3,    32,    18,    18,    28,  1252,  1253,  1962,
    1963,    48,  1257,    16,    54,    55,   580,    16,    20,  1932,
      27,  1308,   121,  1310,  1417,  1938,    92,    55,  1941,    20,
    1923,  1944,  1277,  2902,  1279,   670,  1157,  1158,    18,  1160,
    1586,    32,  1955,  1956,  1477,   670,    20,   860,   861,   862,
      34,  1964,    54,    55,    45,   168,    10,    53,    32,    34,
     112,  1584,  2684,    54,    55,  2687,   634,   880,    11,  1933,
    1934,    45,  2925,   155,    62,  2928,  1197,   674,   112,   132,
      54,    55,    58,    68,  2706,   153,    57,  1145,   165,  2911,
    2712,  1212,   225,   217,    57,   573,  2020,   213,   142,  2250,
      60,   225,  2354,  1076,   108,    20,   610,   108,    57,  1230,
    1231,  1232,   171,   677,    51,    63,   232,    32,   666,   247,
    1241,    32,   334,  2745,    11,    32,   126,   171,   142,   142,
      45,   246,  2024,   210,  1487,   210,    63,   225,   201,    54,
      55,   127,   397,   160,    55,    62,  1499,  1500,    91,  1502,
    1503,  1504,   173,   171,  1507,    65,   230,   153,    49,  1512,
     156,    91,   142,  1516,  1517,  1518,    57,  1520,  1521,  1522,
    1523,  1524,   168,  1526,  1527,  1528,   128,   171,  3439,    91,
    1906,    58,  2854,    94,  1186,   219,    97,   144,   153,    12,
     420,  3060,   108,   171,   105,   166,    59,    94,   146,   123,
      97,   403,    23,   166,    93,   210,     4,    12,   257,   420,
     109,     9,    10,  3359,   353,   199,    19,   345,   387,     8,
     237,   517,   109,  2244,   199,  3525,   350,   210,   247,    27,
     328,   247,   175,    43,    32,   247,   171,   247,    36,   388,
    1892,   263,    63,   325,   326,   175,    67,   455,   330,   476,
     535,  1958,   228,   494,   560,    48,   553,    75,   399,     8,
     153,   567,   435,   175,  1046,   536,   562,   210,  1975,   396,
     874,    89,   399,  3126,   314,    37,   517,   562,    27,   406,
     213,   264,    76,   410,   264,   493,   281,   108,   415,  1546,
     225,   389,    28,   420,  1551,   110,   416,   293,    86,   122,
    1557,   213,   451,  1560,   372,  3605,   142,   562,  2329,    48,
     113,   328,  2934,   353,   487,   442,   415,   122,   116,  1012,
     395,  2943,   491,   225,   213,   224,   345,  1020,   402,   345,
     560,   352,   459,    69,   564,  1203,  1859,   476,   886,   566,
    3601,   905,   469,  1036,  1037,   323,   473,  1592,   324,   560,
     562,   228,   479,   650,   481,   482,  2294,  1058,   560,   486,
     487,   252,   866,   995,   401,   506,  3512,   508,  2317,   496,
     469,   160,   394,   500,   281,   503,   372,  2029,   505,   506,
    3052,   508,   306,   510,   511,  2351,   196,  2325,  1457,   372,
     395,   328,   455,   364,   958,   200,  2648,   349,   346,  2365,
     380,   364,   138,  1271,   968,    91,   455,   372,   319,   491,
    1979,   232,   366,   434,   330,  1530,  1013,   544,   533,   346,
     380,  1394,  3275,   366,  3277,   507,   426,  2578,  1673,   562,
    1065,  3253,  1677,   560,   420,   384,   366,   561,  2351,   516,
    1065,   568,   569,  3312,   560,  1077,   573,   515,   561,   264,
     362,  2020,  2365,   580,   366,   959,   102,   104,   368,   511,
     347,   560,   550,   529,  1032,  1710,  1899,   455,   946,  2362,
     569,   485,  1865,   517,  1848,  1762,   452,   511,   485,   372,
    1767,  1768,  2028,   610,  1848,  2349,   485,   463,   174,  1124,
    2858,   969,   476,   546,  1307,  1306,   450,   525,  1046,  1124,
     502,   476,   561,  2026,   325,   326,  1773,  1000,  1775,   330,
    1323,   502,   534,   498,   533,   162,   337,   533,   562,   550,
     550,   533,   433,   533,   170,   562,   566,   213,   502,   472,
    1069,   560,   535,   504,   488,  1909,  1349,   528,   455,   666,
    2432,   504,   472,   364,   562,  1909,  2204,   674,   567,   568,
     677,   567,   568,   680,   681,   568,   568,   537,   568,   205,
     470,   473,   538,   568,   568,   568,   562,   568,   562,   560,
     481,   104,   435,   530,   560,   529,   488,   371,   564,   489,
    3285,   478,   681,   472,   481,  3290,   463,   502,   715,   328,
     717,   427,  2318,  2319,   175,   155,  1949,   562,   509,   529,
    1078,    67,   514,   424,   402,   415,  3001,  1960,   401,   524,
     525,  2263,  2264,    79,   261,  1736,   715,   529,   717,   417,
     408,   142,   515,  1127,   386,   423,   362,  1175,  2996,   162,
     554,   555,   556,   535,  2572,   225,  1757,   104,   400,   444,
     445,   446,   447,   448,   449,   443,   382,   168,   550,   109,
     187,  2575,  3274,   299,  3276,   460,   246,  1914,   135,   421,
     283,   307,   401,  2625,   105,   476,   199,  2629,   145,   562,
     420,   407,   317,  2611,   420,   261,  2625,   455,   175,  2645,
    2629,   247,    12,   504,   331,   340,  1943,   426,  1945,   420,
     264,  2586,   337,  1950,  3089,   162,  2910,  1301,   104,   342,
     420,   453,   387,   252,   503,   336,   187,   435,  1965,   168,
    1967,  1968,  1969,  1261,   337,   252,   104,  1265,   454,   485,
    2059,  2060,   353,   475,   370,  3347,    57,  3349,   261,    74,
     104,   472,  2645,   225,   108,    66,     0,  2951,   865,   866,
     867,  3446,   362,    12,   476,   331,  3418,    78,   526,    85,
    2908,   562,   109,   439,   246,   294,   162,  1759,    12,  1452,
    1357,  1482,   561,  1456,   224,  1397,  1459,  1460,   354,   235,
     330,   252,   418,   900,   162,  1407,  1886,  1887,   905,   345,
     329,  1482,   223,  2435,   318,   366,   472,   473,   162,  2228,
    2229,  2230,   122,   199,   261,   385,   562,   256,   331,  1431,
      12,   900,  1399,  1400,  1368,  2309,   380,   492,    66,  2733,
     560,   199,  2737,  2895,   560,   942,  2929,   944,   504,   946,
    2259,  2260,  2261,  2110,  1893,   199,   171,  3222,   514,   560,
     562,   958,   959,   325,   326,   166,   318,   142,   304,  1978,
     560,   968,   969,   174,  1348,   476,   230,  2208,   552,   553,
     497,  2193,   979,   122,  1912,   261,  1488,   338,  1362,   243,
    1001,  1002,   328,  1978,   331,  3171,   343,  3572,   122,   366,
    1011,  2245,   517,   261,  1001,  1002,  1003,  1004,  1019,   215,
       3,  2245,   213,  2111,  1011,   531,  1013,   261,   425,  1428,
     318,   472,  1019,   385,   230,    34,    85,   543,  3293,  2446,
     472,   232,  1029,  2450,  1003,  1004,   427,   243,   166,   442,
     122,   497,   567,   379,    12,  1547,  1548,   318,  1550,   264,
    1552,  1553,  1554,  1555,  1556,   331,  1558,  1559,   567,  2050,
    1029,   491,  3090,  3091,  2055,   474,    16,   560,  2887,  2888,
     381,  2879,   476,   331,   425,  1756,   438,   507,  1075,  2070,
    2368,  1078,   209,  1766,  1765,   213,  2077,   331,    97,   549,
     499,    53,   110,   537,   497,   104,   500,   373,    34,  2569,
     376,  2092,  2093,  2031,   232,   472,  1075,   420,  2099,   485,
    3062,   317,  2634,   281,   450,  3380,  2107,  3355,   217,  1130,
    1131,   171,   472,   410,   476,    67,   225,  3365,   475,    85,
    1127,   337,  1129,  1130,  1131,    38,  1133,    79,   269,   270,
    3123,    70,    71,    12,    13,  1142,   155,  1144,   500,   433,
     461,   517,   406,   162,   122,  2146,   215,  3433,  3434,   473,
     497,    97,   283,   364,  1133,   171,    85,   420,   104,   213,
    2640,   230,   222,   426,   213,   188,   118,   344,   476,   108,
     347,  1178,   200,   395,   243,   397,   473,   549,   550,   401,
     199,   153,   454,   232,   156,   561,   458,  2636,  2637,  2638,
     406,   130,   500,   371,  2998,   476,   168,   560,   560,   522,
     523,   470,   209,   472,   567,    84,   337,   120,  2209,   155,
     532,   497,  2661,  1220,  1756,   509,   162,   514,  1498,   500,
     222,  1501,   161,  1765,   546,  3511,   364,  1655,   439,   497,
    1510,   247,   529,   112,  3076,   340,   264,   560,   380,  1519,
    2667,   350,   261,   497,   460,   386,   387,   126,   317,   215,
     544,   393,   560,   199,   325,   326,   470,   435,   472,   522,
     523,   284,   285,  2582,   230,   288,   289,   171,   337,   148,
    1376,  1278,  1378,   525,  2701,  2702,   528,   243,   535,   560,
     159,   423,  2709,   235,   264,   345,   215,   561,   562,  2716,
     512,   561,   562,   504,  1722,  2923,  2924,   560,   142,   318,
     514,   230,   561,  1409,  1410,  1411,  2547,   567,   327,   188,
     450,   330,   331,  2941,   243,   261,  2463,  2464,  3329,  2947,
    3331,   293,   560,  2673,    11,  2579,  2676,  2677,    85,    54,
      55,    20,   429,   430,   213,  2579,   395,   406,    63,    28,
     219,  1348,  2970,  2693,    33,  2973,  1353,   149,   561,   562,
    1357,   317,   304,   931,  1866,  1362,   934,  1741,   337,   937,
     517,  1368,   470,  1370,  3468,   561,   562,   365,  1375,  1376,
     337,  1378,   318,   325,   326,   410,   328,   256,   562,  2633,
     561,   562,   210,  1390,   330,   331,  1393,   142,   317,  2633,
      46,   460,  1399,  1400,  1401,  1402,  1375,  1376,   342,  1378,
     372,   171,  1409,  1410,  1411,   160,   437,   438,   337,   440,
     257,  1390,   448,   449,  1393,   451,    46,   453,   561,   562,
    1427,   337,  1401,  1402,   503,   180,   562,   379,   416,  1436,
    1409,  1410,  1411,  2196,  1946,  1947,   561,   562,   554,   194,
     406,   561,   562,  3547,   383,   257,  1453,   561,   562,  3224,
     147,  1458,    15,    16,  1966,   426,  3560,   476,   215,   478,
     561,   562,   481,  1470,  3568,  2484,   561,   562,   493,  1476,
     561,   562,   491,   230,   561,   562,   560,   406,   497,  1458,
     247,   500,   237,   238,   168,     3,   243,  3591,   367,  1873,
     455,  1875,  1876,   455,   460,   561,   562,  1476,   450,   455,
      18,   281,  3606,   561,   562,   384,   561,   562,   561,   562,
     265,   390,  2205,   561,   562,   561,   562,   396,   117,   257,
    2219,   561,   562,   561,   562,    54,    55,  1534,   470,  1948,
     476,   460,   478,   552,   553,   481,  1543,   139,  1922,  1923,
      77,   420,   142,   143,   562,   491,   561,   562,   561,   562,
    1571,   497,   431,   432,   500,   561,   562,  3390,  3376,   468,
     317,   561,   562,   339,  1571,   561,   562,    85,   323,   561,
     562,   561,  1579,   419,  1958,  1582,   561,   562,   561,   562,
     180,  1318,  1319,  1320,  1321,  1322,   561,   562,   467,  1314,
    1315,  1975,  2739,     3,   194,    51,     6,   561,   562,  2853,
    1579,   529,   201,    13,   561,   562,   552,   553,   363,  2853,
     561,   562,   389,    23,    24,   149,   561,   562,   561,   562,
     561,   562,  1316,  1317,   142,   560,   226,   561,   562,   561,
     562,   207,   511,   566,   513,  2063,   561,   562,   238,   561,
     562,   562,    52,  2071,   561,   562,    56,   165,   529,   406,
     168,   561,   562,   561,   562,   561,   562,    67,   257,   561,
     562,  2045,   562,  2810,   567,   265,    76,   560,  2052,  2637,
    2638,    81,   560,   191,  2257,  1262,  1263,  3096,  3097,   197,
    2265,  2266,   281,    93,  2558,  2559,  2843,  2844,   560,   560,
     560,   560,   210,   560,   560,   560,   560,   215,   108,   560,
    2301,   111,   560,   460,   222,   560,   560,   560,   560,   560,
     120,   121,   230,   562,   540,   560,   126,   560,   560,   560,
    2301,   321,   560,   560,   134,   243,   560,    23,    24,   247,
     140,  3412,   557,   560,  1741,  2308,  1743,   560,   256,   560,
     560,   560,   560,   560,   560,   560,   560,  2737,    46,   560,
     560,   560,   560,   560,   560,   165,   560,   560,    54,    55,
      56,   560,   560,  2275,   560,  2242,   365,    63,   560,   560,
     560,    67,   371,   267,   268,   269,   270,   271,   272,   560,
      76,   275,   276,   277,   278,   279,   280,   560,   282,   560,
     551,  3472,   560,   567,   560,   560,   560,    93,   560,   317,
     399,   211,   560,   213,  3485,   281,  3487,   560,   560,   560,
     220,   560,   108,   560,  2291,   111,   560,   560,   560,   337,
     560,   560,   476,   560,   560,   560,   560,   345,   560,   560,
     560,   560,   560,   560,   560,   535,   435,   560,   560,   560,
     560,  1848,   560,   560,   140,   560,  3527,   560,   366,   560,
     560,  2363,   560,   560,  3535,   560,   455,   560,  2370,  1866,
    1867,   560,   560,   470,   560,   560,  1873,   560,  1875,  1876,
     560,   470,   560,   472,   560,   560,   286,   560,   560,   560,
     560,   560,   560,   560,  2268,   560,  3567,   560,   406,   560,
     300,   560,   386,   387,     3,   305,  3577,   562,   566,   562,
    3581,   560,  1909,   252,   281,   562,   485,   562,   426,    18,
    2603,   562,   485,   562,   562,  1922,  1923,   213,   562,   225,
     476,   554,   168,  3604,   220,  1932,   510,   562,   437,  3610,
     355,  1938,   560,   562,  1941,   345,   561,  1944,   142,  3620,
     142,   351,   460,   353,  2882,   142,   142,   142,  1955,  1956,
     142,  1958,  2396,   142,   142,   142,   142,  1964,   142,   142,
     142,   142,   142,   512,   374,   375,  1973,   377,  1975,   562,
     561,    44,  1979,  1980,   175,   337,    85,   171,  2362,    63,
      12,   391,   420,   561,   476,   503,   561,   122,     9,   561,
     286,   561,   532,   427,  1973,   560,   567,   246,   516,   517,
     553,   561,   380,   413,   300,   562,   533,   214,   567,   188,
     171,   561,  2019,  2020,   435,   533,   562,   535,   426,   562,
     168,    44,   450,   450,   450,  2724,   450,   450,   419,    66,
     485,   119,   231,   142,   471,   471,   119,   562,  2045,   517,
    2019,   231,   562,   561,   562,  2052,   567,   561,   561,   561,
     568,   562,    18,   561,  3308,   351,   561,   353,  2065,   168,
     561,  3186,   561,   561,   561,   554,   562,   562,   171,   562,
     561,   561,  3209,  3210,  3211,  3212,   562,   562,   374,   375,
     561,   377,   191,   562,   494,   567,   561,   561,   197,   562,
     562,   562,   562,   503,   562,   561,   565,   562,   562,   561,
     567,   562,   562,   561,  2111,   562,   215,   560,   562,   561,
     256,   562,   562,   222,   561,   560,   562,   413,   562,   562,
     561,   230,   562,   562,   485,   567,   561,   485,   561,   561,
     561,   561,   561,   485,   243,   550,   476,   537,   247,   561,
    2839,   561,   561,   561,   561,   252,   562,   256,   561,   561,
     561,   485,   562,   562,   171,   562,   562,   562,   568,   561,
      23,    24,   561,  3417,   561,   342,   562,   562,   561,   561,
     171,   171,   562,   562,   561,   222,   562,   561,   561,   561,
     561,   561,   567,   562,   560,   171,   561,   227,   562,   560,
     535,    54,    55,    56,   567,   567,   230,   567,   494,  3200,
      63,   567,   562,   230,    67,   348,  2590,   503,   317,   296,
      93,    93,   232,    76,  2221,   476,   232,   560,  2225,   567,
    2227,  2228,  2229,  2230,  2608,   560,   345,   560,   337,   554,
      93,  2238,   561,   561,   221,  2242,   345,   331,  2245,   331,
     561,   561,   561,   171,   171,   108,   171,   546,   111,   331,
     561,   567,  2259,  2260,  2261,   210,   561,   366,   561,  2238,
    3514,  2268,   554,   560,   171,   337,   562,   562,  2275,   511,
    3514,   561,  3154,   567,  2281,   225,  2283,   140,  2977,  2978,
     244,    63,   230,   230,  2291,   269,   337,   562,  3542,   232,
     232,    18,   337,    18,   561,    18,   560,   406,   247,   561,
     223,   561,   561,   560,   560,   223,   561,   561,   561,   561,
    3564,     7,   562,   561,   561,   138,   561,   426,   562,   547,
    3564,   561,   561,    19,   567,   561,    22,   561,   561,   561,
     561,   561,   561,    29,   561,   129,   562,   561,   561,   561,
     561,   561,   561,    39,  2351,  3093,  3094,  3095,   562,   562,
     213,   460,  3014,    49,   562,  2362,   561,   220,  2365,   562,
     532,  3498,   562,   561,   241,   420,   191,   428,   561,  2881,
     561,   142,   348,   230,   230,   108,   561,   108,   361,   331,
     331,   422,    40,   246,   562,   561,   561,   561,   561,  2396,
     561,    87,   561,   561,   503,   561,  2403,   561,   561,  2406,
     562,  3136,   561,  2410,  2411,   561,   561,  2414,   517,   561,
     561,   107,   108,   562,   110,   562,   561,  2424,   562,   561,
     561,   561,   561,   286,   533,   121,   535,  2406,   561,   561,
     560,   562,   560,   562,   561,   560,   560,   300,  2950,   560,
     560,   567,   560,   560,   560,  2424,   561,   561,   561,   561,
     331,   371,   561,   562,   535,  3117,   561,   561,   331,   568,
     561,   561,   222,   561,    44,   562,    65,   197,  3130,   303,
     380,   567,   476,   476,   230,   517,   331,   331,   517,    32,
     560,   560,   560,   560,  2868,   528,   560,   331,   351,   511,
     353,   108,   528,   232,   232,   330,   561,   535,   331,   331,
     331,   331,   331,   562,   496,   561,   560,  2926,   561,   561,
     303,   374,   375,   561,   377,   561,   151,   547,   562,   476,
     476,   232,   476,   249,    16,  3037,   561,   517,    12,    13,
    2537,   562,   561,   561,   523,   561,   561,  3272,   562,   517,
     327,   168,   561,   561,   342,  2929,   561,   561,   561,   561,
     413,   561,   560,   562,   561,   561,   561,   331,   331,   561,
     472,    44,   561,   561,   561,  2949,   561,   511,   562,    44,
     561,   135,  2579,  2580,    44,  2582,   270,    57,   560,   560,
     342,   561,   561,  2590,    57,   366,  3014,  3286,  3171,   561,
     561,  2598,   561,   561,    44,    44,    44,   142,   561,   384,
      84,  2608,   562,     5,   131,   342,    31,    32,   342,  2616,
     118,   403,    37,   414,    39,    40,    41,   562,    16,   565,
     561,   532,   560,   274,   171,   210,  2633,   561,   112,   569,
      55,   494,   142,   222,   138,   532,   568,   561,  2645,   331,
     503,   560,   126,   209,   547,  2652,   562,   138,   106,   263,
    3162,   568,   249,   125,  2661,  3317,  3318,   426,  3320,   548,
     569,   547,   568,   562,   148,   195,   562,   138,   568,    94,
     138,   168,    97,   548,   168,   159,   394,   108,   168,  1794,
     105,   534,   523,   169,  1561,  3491,  3348,   672,  3166,  3117,
    3289,  3159,  3586,  3621,  3590,  3489,  2997,   560,  1065,   124,
     396,   390,  3130,   399,   188,  3155,  2731,  3088,  1530,  2020,
     406,  2661,  1497,  1936,   410,  1982,   141,  2652,  2684,   415,
    1124,  1534,  3115,  3385,   420,  3387,  3388,  2717,  2735,   213,
    2913,  2684,  2958,  2949,  2653,   219,   161,  3345,   163,  3123,
    3336,  2608,  3107,  1137,  3258,  3130,   442,  3173,  1978,  1465,
    1043,  1120,   681,  1843,  1401,  2238,   454,   182,   183,  1857,
    1825,   665,   598,   459,  3219,  2838,  1416,  3037,  1313,  1311,
    2220,  2839,   256,   469,  2053,  2623,  3475,   473,  3245,  2211,
    3086,  3518,  2868,   479,  1862,   481,   482,  1821,   946,  2853,
     486,   487,  2633,  2574,  3417,  1847,  3542,  1165,   223,   969,
     496,  2573,   444,  1217,   500,  1142,   501,   435,  2564,   505,
     506,  3229,   508,  1367,   510,   511,   717,   974,  3450,  3518,
    3324,  3419,  3564,  2951,  2579,   250,  1422,   987,  2293,  2876,
    2616,  3073,  1393,   427,   259,   260,   581,   262,  3207,   977,
     939,  1129,    13,  2225,   428,  3213,  2853,   471,   544,   585,
    2018,   713,  2994,    -1,    -1,  2728,    -1,    -1,    -1,    -1,
      -1,  2868,    -1,    -1,   560,   290,   291,   292,    -1,    -1,
      -1,    -1,   568,   569,    -1,  3359,    -1,   573,    -1,    -1,
      -1,    -1,    -1,   367,   580,   310,   311,   312,    -1,  3317,
    3318,   316,  3320,    -1,   319,    -1,    -1,    -1,    -1,    -1,
     384,  2908,    -1,    -1,    -1,    -1,   390,   332,   333,    -1,
      -1,    -1,   396,    84,   610,    -1,    -1,    -1,    -1,    -1,
    3348,    -1,  2929,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   357,    -1,   359,    -1,   420,    -1,    -1,    -1,
    3412,   112,  2949,    -1,    -1,    -1,    -1,   431,   432,    -1,
      -1,    -1,    -1,    -1,    -1,   126,   381,  3385,    -1,  3387,
    3388,  3433,  3434,    -1,    -1,    -1,    -1,  2974,    -1,  2976,
     666,    -1,    -1,    -1,    -1,    -1,    -1,   148,   674,    -1,
    2987,   677,    -1,   467,   680,   681,  2993,    -1,   159,    -1,
      -1,    -1,    -1,    -1,    -1,  3467,  3468,    -1,    -1,   424,
    3472,   426,    -1,    -1,    -1,    -1,    -1,    -1,  2987,    -1,
      -1,   436,    -1,  3485,    -1,  3487,    -1,   188,    -1,   715,
      -1,   717,    -1,    -1,    -1,    -1,    -1,   511,  3512,   513,
    3037,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3511,
      -1,    -1,   213,    -1,    -1,    -1,    -1,    -1,   219,    -1,
      -1,    -1,   477,   478,    -1,  3527,   481,   482,   483,   484,
      -1,    -1,    -1,  3535,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,     6,  3547,    -1,    -1,  3085,    -1,
      -1,    13,    -1,  3090,  3091,   256,    -1,    -1,  3560,    -1,
      -1,    23,    24,    -1,    -1,  3567,  3568,  3104,    -1,   524,
     525,    -1,    -1,    -1,    -1,  3577,    -1,    -1,    -1,  3581,
    3594,    -1,    -1,    -1,    -1,    -1,  3123,    -1,   543,  3591,
      52,    -1,    -1,    -1,    56,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3604,    -1,  3606,    67,    -1,  3621,  3610,    -1,
      -1,    -1,    -1,    -1,    76,    -1,    -1,    -1,  3620,    81,
      -1,    -1,    -1,  3160,  3538,    -1,    -1,    -1,    -1,    -1,
      -1,    93,    -1,    -1,    -1,    -1,  3173,    -1,    -1,   865,
     866,   867,    -1,    -1,    -1,    -1,   108,    -1,    -1,   111,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   120,  3617,
      -1,    -1,    -1,    -1,   126,    -1,   367,    -1,    -1,    -1,
      -1,    -1,   134,    -1,   900,    -1,    -1,    -1,   140,   905,
      -1,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,   390,
      -1,    -1,    -1,    -1,    -1,   396,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   165,    -1,    -1,    -1,    -1,  3245,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   942,    -1,   944,   420,
     946,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     431,   432,   958,   959,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   968,   969,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   213,  3289,   979,    -1,    -1,    -1,    -1,   220,    -1,
      -1,   987,    -1,    -1,    -1,    -1,   467,    -1,    -1,    -1,
      -1,  3308,  3309,    -1,    -1,  1001,  1002,  1003,  1004,    -1,
      -1,    -1,    -1,    -1,    -1,  1011,    -1,  1013,    -1,    -1,
      -1,    -1,  3329,  1019,  3331,    -1,  3333,    -1,    -1,    -1,
    3309,    -1,    -1,  1029,    -1,    -1,    -1,    -1,    -1,  3346,
     511,    -1,   513,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   286,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   300,    -1,
      -1,    -1,    -1,   305,  3381,    -1,    -1,    -1,    -1,  1075,
      -1,    -1,  1078,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   503,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3412,    -1,    -1,    -1,    -1,
    3417,    -1,    -1,   345,    -1,    -1,    -1,    -1,    -1,   351,
      -1,   353,    -1,  3430,    -1,    -1,  3433,  3434,  3435,    -1,
      -1,  1127,    -1,  1129,  1130,  1131,    -1,  1133,    -1,    -1,
      -1,    -1,   374,   375,    -1,   377,  1142,    -1,  1144,   556,
    3457,    -1,    -1,    -1,    -1,    -1,    23,    24,    -1,   391,
    3467,  3468,    -1,    -1,    -1,  3472,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3485,    -1,
    3487,   413,  1178,    -1,    -1,    -1,    -1,    54,    55,    56,
      -1,    -1,    -1,    -1,    -1,    -1,    63,    -1,    -1,    -1,
      67,    -1,    -1,    -1,  3511,    23,    24,  3514,    -1,    76,
      -1,    -1,    -1,  3520,    -1,    -1,    -1,    -1,    -1,  3526,
    3527,    -1,    -1,    -1,  1220,    -1,    93,    -1,  3535,    -1,
      -1,  3538,    -1,    -1,    -1,  3542,    -1,    -1,    56,    -1,
    3547,   108,    -1,    -1,   111,    -1,    -1,    -1,    -1,    67,
      -1,    -1,    -1,  3560,    -1,    -1,    -1,  3564,    76,  3566,
    3567,  3568,   494,    -1,  3571,    -1,    -1,    -1,    -1,    -1,
    3577,   503,    -1,   140,  3581,    93,    -1,   684,    -1,    -1,
      -1,    -1,  1278,    -1,  3591,    -1,    -1,  3594,    -1,    -1,
     108,    -1,    -1,   111,    -1,    -1,    -1,  3604,    -1,  3606,
      -1,    -1,    -1,  3610,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3620,  3621,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   140,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   213,    -1,    -1,    -1,
      -1,    -1,  1348,   220,    -1,    -1,    -1,  1353,    -1,    -1,
      -1,  1357,    -1,    -1,    -1,    -1,  1362,    -1,    -1,    -1,
      -1,    -1,  1368,    -1,  1370,    -1,    -1,   784,    -1,  1375,
    1376,    -1,  1378,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  1390,   213,    -1,  1393,    -1,    -1,
      -1,    -1,   220,  1399,  1400,  1401,  1402,    -1,    -1,    -1,
      -1,    -1,    -1,  1409,  1410,  1411,    -1,    -1,    -1,   286,
      -1,    -1,    -1,    98,    99,   100,   101,   102,    -1,    -1,
      -1,  1427,    -1,   300,    -1,    -1,    -1,    -1,    -1,    -1,
    1436,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   859,    -1,    -1,    -1,   863,  1453,    -1,    -1,
      -1,    -1,  1458,    -1,    -1,    -1,    -1,    -1,   286,    -1,
      -1,    -1,    -1,    -1,  1470,    -1,    -1,    -1,    -1,    -1,
    1476,    -1,   300,    -1,   351,    -1,   353,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   170,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   374,   375,    -1,
     377,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   202,   203,   204,
     205,    -1,    -1,   351,    -1,   353,    -1,    -1,  1534,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   413,  1543,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   374,   375,    -1,   377,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1571,    -1,    -1,    -1,    -1,
     987,    -1,    -1,  1579,    -1,    -1,  1582,    -1,    -1,   996,
      -1,    -1,    -1,    -1,    -1,   413,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,    -1,    -1,   494,    -1,    -1,
      -1,    -1,   307,    -1,    -1,    -1,   503,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   494,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   503,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   370,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1146,
    1147,  1148,   417,   418,    -1,  1741,    -1,  1743,  1155,  1156,
      -1,    -1,  1159,    -1,  1161,  1162,  1163,  1164,    -1,    -1,
      -1,  1168,    -1,    -1,  1171,  1172,    -1,  1174,    -1,  1176,
    1177,    -1,  1179,  1180,  1181,  1182,  1183,    -1,    -1,    -1,
    1187,    -1,  1189,  1190,  1191,    -1,  1193,  1194,  1195,  1196,
      -1,  1198,  1199,    -1,  1201,    -1,    -1,  1204,  1205,  1206,
      -1,  1208,  1209,  1210,  1211,    -1,  1213,  1214,  1215,  1216,
      -1,    -1,    -1,    -1,    -1,  1222,  1223,    -1,  1225,  1226,
    1227,  1228,  1229,    -1,    -1,    -1,    -1,  1234,    -1,  1236,
    1237,  1238,  1239,  1240,    -1,    -1,  1243,  1244,  1245,  1246,
    1247,  1248,    -1,  1250,  1251,    -1,    -1,  1254,  1255,  1256,
      -1,  1258,  1848,  1260,    -1,    -1,   531,  1264,    -1,  1266,
    1267,    -1,    -1,    -1,    -1,  1272,    -1,   542,   543,    -1,
    1866,  1867,    -1,  1280,  1281,  1282,    -1,  1873,    -1,  1875,
    1876,    -1,    -1,  1290,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  1909,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  1922,  1923,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  1932,    -1,    -1,    -1,
      -1,    -1,  1938,  1350,    -1,  1941,    -1,    -1,  1944,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1955,
    1956,    -1,  1958,    -1,    -1,    -1,    -1,    -1,  1964,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1973,    -1,  1975,
      -1,    -1,    -1,  1979,  1980,    -1,    -1,    -1,    -1,  1396,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2019,  2020,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,     3,    -1,    -1,    -1,    -1,    -1,  2045,
      -1,    -1,    -1,    13,    14,    -1,  2052,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    26,    -1,    28,  2065,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    46,    47,    -1,    -1,
      -1,    -1,    52,    -1,    -1,    -1,    56,    57,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    69,
      -1,    -1,    -1,    -1,    -1,  2111,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    84,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1545,    -1,
      -1,    -1,    -1,   103,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   112,   113,   114,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   125,   126,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   148,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   164,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2221,    -1,    -1,   188,  2225,
      -1,  2227,  2228,  2229,  2230,   195,    -1,    -1,   198,    -1,
      -1,    -1,  2238,    -1,    -1,    -1,  2242,    -1,    -1,  2245,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   219,
      -1,    -1,    -1,  2259,  2260,  2261,    -1,    -1,    -1,    -1,
      -1,    -1,  2268,   233,    -1,    -1,    -1,    -1,    -1,  2275,
      -1,    -1,    -1,    -1,    -1,  2281,    -1,  2283,    -1,    -1,
      -1,   251,    -1,    -1,    -1,  2291,   256,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    1717,  1718,  1719,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1742,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2351,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2362,    -1,    -1,  2365,
      -1,    -1,    -1,    -1,    -1,  1782,    -1,    -1,    -1,    -1,
      -1,   341,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2396,    -1,   362,    -1,    -1,    -1,    -1,  2403,    -1,   369,
    2406,    -1,    -1,    -1,  2410,  2411,    -1,    -1,  2414,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2424,   389,
      -1,   391,   392,    -1,    -1,   395,    -1,    -1,   398,    -1,
     400,    -1,    -1,    -1,    -1,   405,    -1,   407,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   416,    -1,    -1,    -1,
     420,    -1,    -1,    -1,    -1,    -1,   426,    -1,    13,    14,
      -1,   431,    -1,    -1,    -1,   435,    -1,    -1,    -1,    -1,
      -1,    26,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   454,    -1,    -1,    -1,   458,    -1,
      -1,    46,    47,    -1,    -1,    -1,    -1,    52,    -1,    -1,
      -1,    56,    57,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    69,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   492,    -1,    -1,    -1,    -1,    -1,    -1,    84,
      -1,  2537,    -1,    -1,    -1,    -1,    -1,    -1,   508,    -1,
      -1,   511,    -1,    -1,    -1,    -1,   516,    -1,   103,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   112,   113,   114,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   539,
     125,   126,    -1,  2579,  2580,    -1,  2582,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2590,    -1,    -1,    -1,    -1,    -1,
     560,    -1,  2598,   148,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2608,    -1,    -1,    -1,    -1,    -1,    -1,   164,
    2616,    -1,    -1,    -1,    -1,  2032,    -1,    -1,  2035,    -1,
      -1,  2038,  2039,    -1,    -1,    -1,    -1,  2633,    -1,    -1,
      -1,    -1,    -1,   188,  2051,    -1,    -1,  2054,    -1,  2645,
     195,    -1,    -1,   198,    -1,    -1,  2652,    -1,    -1,    -1,
    2067,    -1,  2069,    -1,    -1,  2661,  2073,    -1,  2075,  2076,
      -1,    -1,    -1,  2080,   219,  2082,  2083,    -1,  2085,    -1,
      -1,  2088,    -1,  2090,  2091,    -1,    -1,    -1,   233,  2096,
    2097,    -1,    -1,  2100,    -1,  2102,    -1,  2104,    -1,  2106,
      -1,  2108,    -1,    -1,    -1,    -1,   251,    -1,    -1,    -1,
      -1,   256,  2119,  2120,    -1,    -1,  2123,    -1,  2125,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2133,  2134,    -1,  2136,
      -1,  2138,    -1,    -1,  2141,  2142,  2143,    -1,  2145,  2735,
      -1,    -1,    -1,  2150,  2151,  2152,  2153,    -1,    -1,    -1,
      -1,  2158,  2159,  2160,    -1,  2162,    -1,  2164,    -1,  2166,
      -1,  2168,    -1,  2170,    -1,    -1,    -1,    -1,    -1,    -1,
    2177,    -1,  2179,    -1,    -1,  2182,    -1,    -1,    30,    -1,
      32,    33,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   341,    -1,    -1,    -1,
      -1,    -1,    54,    55,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    64,    -1,    66,    -1,    -1,   362,    -1,    -1,
      -1,    -1,    -1,    -1,   369,  2232,    -1,    -1,    -1,    -1,
      -1,    83,    84,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      92,    -1,    -1,    -1,   389,    -1,   391,   392,    -1,    -1,
     395,    -1,    -1,   398,    -1,   400,    -1,  2853,    -1,    -1,
     405,    -1,   407,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   416,  2868,    -1,    -1,   420,    -1,  2284,    -1,    -1,
      -1,   426,  2289,    -1,    -1,    -1,   431,   139,   140,    -1,
     435,    -1,   144,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   454,
      -1,    -1,  2908,   458,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   173,    -1,   175,    -1,  2332,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2929,    -1,   187,    -1,   189,    -1,  2346,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   492,    -1,    -1,
      -1,    -1,    -1,  2949,    -1,    -1,    -1,    -1,    -1,    -1,
     212,   213,    -1,   508,   216,    -1,   511,    -1,    -1,    -1,
      -1,   516,    -1,    -1,    -1,    -1,    -1,    -1,  2974,   231,
    2976,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2987,    -1,    -1,   539,    -1,    -1,  2993,    -1,    -1,
     252,    -1,    -1,    -1,    -1,   257,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   560,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   281,
      -1,    -1,  2439,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3037,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   313,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     322,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   340,  3085,
      -1,    -1,    -1,    -1,  3090,  3091,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2512,    -1,    -1,  3104,    -1,
      -1,    -1,    -1,   365,   366,  2522,    -1,  2524,    -1,  2526,
      -1,    -1,    -1,    -1,    -1,  2532,    -1,  3123,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2549,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3160,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   425,    -1,    -1,    -1,  3173,    -1,    -1,
      -1,    -1,    -1,   435,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   455,    -1,    -1,    -1,   459,    -1,    -1,
    2617,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     472,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3245,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   526,    -1,    -1,    -1,   530,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3289,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3308,  3309,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3329,    -1,  3331,    -1,  3333,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3346,  2758,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2768,    -1,    -1,    -1,    -1,    -1,  2774,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2783,  2784,    -1,    -1,
      -1,    -1,  2789,    -1,    -1,  3381,  2793,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2806,
      -1,    -1,    -1,    -1,    -1,  2812,    -1,    -1,  2815,  2816,
      -1,  2818,  2819,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3417,    -1,    -1,    -1,    -1,  2833,  2834,    -1,    -1,
      -1,    -1,    -1,    -1,  3430,    -1,    -1,    -1,    -1,  3435,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3457,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2891,  2892,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2902,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3514,    -1,
      -1,    -1,    -1,    -1,  3520,    -1,    -1,    -1,    -1,    -1,
    3526,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3538,    -1,    -1,    -1,  3542,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3564,    -1,
    3566,    -1,    -1,    -1,    -1,  3571,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3594,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3621,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3060,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3073,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3182,    -1,    -1,    -1,    -1,
      -1,  3188,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3201,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3223,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3238,    -1,  3240,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3312,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3370,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3391,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3462,    -1,  3464,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3480,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3488,    -1,    -1,    -1,    -1,    -1,  3494,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3503,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,     5,    -1,
       7,     8,     9,    10,    11,    -1,    -1,    -1,    -1,    -1,
      17,    -1,    -1,    20,  3531,    22,    23,    24,    25,    26,
      -1,    28,    29,    30,    -1,    32,    33,    34,    35,    36,
      37,    38,    -1,    40,    41,    42,    43,    -1,    45,    46,
      -1,    -1,    49,    50,    51,    -1,    53,    54,    55,    56,
      -1,    58,    59,    60,    61,    62,    -1,    64,    65,    -1,
      67,    68,    69,    70,    71,    72,    73,    74,    -1,    -1,
      77,    -1,    79,    -1,    81,    82,    83,    -1,  3595,    86,
      87,    88,    -1,    90,    91,    -1,    93,    94,    95,    96,
      97,    -1,    -1,    -1,    -1,   102,   103,   104,    -1,    -1,
     107,   108,   109,    -1,   111,    -1,    -1,    -1,   115,   116,
     117,    -1,   119,   120,   121,    -1,    -1,    -1,   125,    -1,
      -1,   128,   129,   130,    -1,    -1,   133,   134,    -1,   136,
     137,   138,   139,   140,   141,    -1,    -1,   144,    -1,   146,
     147,   148,   149,    -1,   151,   152,   153,   154,   155,   156,
      -1,   158,   159,   160,   161,   162,    -1,   164,    -1,    -1,
     167,    -1,   169,   170,    -1,   172,   173,    -1,   175,   176,
     177,   178,   179,    -1,   181,   182,   183,   184,   185,   186,
     187,    -1,   189,   190,    -1,   192,   193,    -1,   195,   196,
      -1,   198,   199,    -1,   201,    -1,    -1,    -1,   205,   206,
     207,   208,   209,    -1,   211,   212,    -1,    -1,    -1,   216,
      -1,    -1,   219,   220,   221,    -1,    -1,   224,    -1,    -1,
     227,   228,    -1,    -1,    -1,    -1,    -1,    -1,   235,   236,
     237,    -1,   239,   240,   241,    -1,   243,   244,    -1,    -1,
      -1,   248,    -1,   250,    -1,   252,   253,    -1,   255,    -1,
     257,   258,    -1,    -1,   261,    -1,    -1,    -1,    -1,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,    -1,    -1,    -1,   293,   294,   295,   296,
      -1,    -1,   299,   300,   301,   302,   303,    -1,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
      -1,   318,   319,   320,    -1,   322,   323,   324,   325,   326,
     327,   328,    -1,   330,   331,    -1,   333,   334,    -1,   336,
      -1,   338,   339,   340,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,    -1,   362,   363,    -1,   365,    -1,
     367,   368,    -1,   370,   371,   372,   373,   374,   375,   376,
     377,   378,    -1,    -1,    -1,   382,   383,    -1,    -1,   386,
     387,   388,    -1,   390,    -1,   392,   393,   394,   395,   396,
      -1,   398,   399,   400,    -1,   402,   403,    -1,    -1,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
      -1,   418,   419,    -1,    -1,    -1,   423,   424,   425,    -1,
      -1,   428,    -1,    -1,    -1,   432,   433,   434,   435,    -1,
     437,   438,    -1,    -1,    -1,    -1,    -1,    -1,   445,   446,
      -1,   448,    -1,    -1,   451,    -1,    -1,   454,   455,   456,
     457,   458,   459,    -1,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,    -1,   473,   474,    -1,   476,
     477,   478,   479,   480,   481,    -1,    -1,    -1,    -1,   486,
     487,    -1,   489,   490,   491,   492,   493,   494,   495,    -1,
     497,   498,   499,   500,    -1,   502,    -1,    -1,   505,   506,
     507,    -1,    -1,   510,    -1,    -1,    -1,   514,   515,    -1,
      -1,   518,   519,   520,   521,   522,   523,    -1,    -1,   526,
     527,    -1,   529,   530,   531,    -1,    -1,    -1,    -1,   536,
      -1,   538,   539,    -1,   541,    -1,   543,    -1,    -1,    -1,
      -1,   548,    -1,    -1,    -1,   552,   553,    -1,    -1,    -1,
      -1,   558,    -1,   560,    -1,    -1,   563,   564,    -1,   566,
     567,     5,    -1,     7,     8,     9,    10,    11,    12,    -1,
      -1,    -1,    -1,    17,    -1,    -1,    20,    -1,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    32,    33,
      34,    35,    36,    37,    38,    -1,    40,    41,    -1,    43,
      -1,    45,    46,    -1,    -1,    49,    50,    51,    -1,    53,
      54,    55,    56,    -1,    58,    59,    60,    61,    62,    -1,
      64,    65,    -1,    67,    68,    69,    70,    71,    72,    73,
      74,    -1,    -1,    77,    -1,    79,    -1,    81,    82,    83,
      -1,    -1,    86,    87,    88,    -1,    90,    91,    -1,    93,
      94,    95,    96,    97,    -1,    -1,    -1,    -1,   102,   103,
     104,    -1,    -1,   107,   108,   109,    -1,   111,    -1,    -1,
      -1,   115,   116,   117,    -1,   119,   120,   121,    -1,    -1,
      -1,   125,    -1,    -1,   128,   129,   130,    -1,    -1,   133,
     134,    -1,   136,   137,   138,   139,   140,   141,    -1,    -1,
     144,    -1,   146,   147,   148,   149,    -1,   151,   152,   153,
     154,   155,   156,    -1,   158,   159,   160,   161,   162,    -1,
     164,    -1,    -1,   167,    -1,   169,   170,    -1,   172,   173,
      -1,   175,   176,   177,   178,   179,    -1,   181,   182,   183,
     184,   185,   186,   187,    -1,   189,   190,    -1,   192,   193,
      -1,   195,   196,    -1,   198,   199,    -1,   201,    -1,    -1,
      -1,   205,   206,   207,   208,   209,    -1,   211,   212,    -1,
      -1,    -1,   216,    -1,    -1,   219,   220,   221,    -1,    -1,
     224,    -1,    -1,   227,   228,    -1,    -1,    -1,    -1,    -1,
      -1,   235,   236,   237,    -1,    -1,   240,   241,    -1,   243,
     244,    -1,    -1,    -1,   248,    -1,   250,    -1,   252,   253,
      -1,   255,    -1,   257,   258,    -1,    -1,   261,    -1,    -1,
      -1,    -1,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,    -1,    -1,    -1,   293,
     294,   295,   296,    -1,    -1,   299,   300,   301,   302,   303,
      -1,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,    -1,   318,   319,   320,    -1,   322,   323,
     324,   325,   326,   327,   328,    -1,   330,   331,    -1,   333,
     334,    -1,   336,   337,   338,   339,   340,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,    -1,   362,   363,
      -1,   365,    -1,   367,   368,    -1,   370,   371,   372,   373,
     374,   375,   376,   377,   378,    -1,    -1,    -1,   382,   383,
      -1,    -1,   386,   387,   388,    -1,   390,    -1,   392,   393,
     394,   395,   396,    -1,   398,   399,   400,    -1,   402,   403,
      -1,    -1,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,    -1,   418,   419,    -1,    -1,    -1,   423,
     424,   425,    -1,    -1,   428,    -1,    -1,    -1,   432,   433,
     434,   435,    -1,   437,   438,    -1,    -1,    -1,    -1,    -1,
      -1,   445,   446,    -1,   448,    -1,    -1,   451,    -1,    -1,
     454,   455,   456,   457,   458,   459,    -1,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,    -1,   473,
     474,    -1,   476,   477,   478,   479,   480,   481,    -1,    -1,
      -1,    -1,    -1,   487,    -1,   489,   490,   491,   492,   493,
     494,   495,    -1,   497,   498,   499,   500,    -1,   502,    -1,
      -1,   505,   506,   507,    -1,    -1,   510,    -1,    -1,    -1,
     514,   515,    -1,    -1,   518,   519,   520,   521,   522,   523,
      -1,    -1,   526,   527,    -1,   529,   530,   531,    -1,    -1,
      -1,    -1,   536,    -1,   538,   539,    -1,   541,    -1,   543,
      -1,    -1,    -1,    -1,   548,    -1,    -1,    -1,   552,   553,
      -1,    -1,    -1,    -1,   558,    -1,   560,    -1,    -1,   563,
     564,    -1,   566,   567,     5,    -1,     7,     8,     9,    10,
      11,    -1,    -1,    -1,    -1,    -1,    17,    -1,    -1,    20,
      -1,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    32,    33,    34,    35,    36,    37,    38,    -1,    40,
      41,    -1,    43,    -1,    45,    46,    -1,    -1,    49,    50,
      51,    -1,    53,    54,    55,    56,    -1,    58,    59,    60,
      61,    62,    -1,    64,    65,    -1,    67,    68,    69,    70,
      71,    72,    73,    74,    -1,    -1,    77,    -1,    79,    -1,
      81,    82,    83,    -1,    -1,    86,    87,    88,    -1,    90,
      91,    -1,    93,    94,    95,    96,    97,    -1,    -1,    -1,
      -1,   102,   103,   104,    -1,    -1,   107,   108,   109,    -1,
     111,    -1,    -1,    -1,   115,   116,   117,    -1,   119,   120,
     121,    -1,    -1,    -1,   125,    -1,    -1,   128,   129,   130,
      -1,    -1,   133,   134,    -1,   136,   137,   138,   139,   140,
     141,    -1,    -1,   144,    -1,   146,   147,   148,   149,    -1,
     151,   152,   153,   154,   155,   156,    -1,   158,   159,   160,
     161,   162,    -1,   164,    -1,    -1,   167,    -1,   169,   170,
      -1,   172,   173,    -1,   175,   176,   177,   178,   179,    -1,
     181,   182,   183,   184,   185,   186,   187,    -1,   189,   190,
      -1,   192,   193,    -1,   195,   196,    -1,   198,   199,    -1,
     201,    -1,    -1,    -1,   205,   206,   207,   208,   209,    -1,
     211,   212,    -1,    -1,    -1,   216,    -1,    -1,   219,   220,
     221,    -1,    -1,   224,    -1,    -1,   227,   228,    -1,    -1,
      -1,    -1,    -1,    -1,   235,   236,   237,    -1,    -1,   240,
     241,    -1,   243,   244,    -1,    -1,    -1,   248,    -1,   250,
      -1,   252,   253,    -1,   255,    -1,   257,   258,    -1,    -1,
     261,    -1,    -1,    -1,    -1,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,    -1,
      -1,    -1,   293,   294,   295,   296,    -1,    -1,   299,   300,
     301,   302,   303,    -1,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,    -1,   318,   319,   320,
      -1,   322,   323,   324,   325,   326,   327,   328,    -1,   330,
     331,    -1,   333,   334,    -1,   336,    -1,   338,   339,   340,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
      -1,   362,   363,    -1,   365,    -1,   367,   368,    -1,   370,
     371,   372,   373,   374,   375,   376,   377,   378,    -1,    -1,
      -1,   382,   383,    -1,    -1,   386,   387,   388,    -1,   390,
      -1,   392,   393,   394,   395,   396,    -1,   398,   399,   400,
      -1,   402,   403,    -1,    -1,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,    -1,   418,   419,   420,
      -1,    -1,   423,   424,   425,    -1,    -1,   428,    -1,    -1,
      -1,   432,   433,   434,   435,    -1,   437,   438,    -1,    -1,
      -1,    -1,    -1,    -1,   445,   446,    -1,   448,    -1,    -1,
     451,    -1,    -1,   454,   455,   456,   457,   458,   459,    -1,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,    -1,   473,   474,    -1,   476,   477,   478,   479,   480,
     481,    -1,    -1,    -1,    -1,    -1,   487,    -1,   489,   490,
     491,   492,   493,   494,   495,    -1,   497,   498,   499,   500,
      -1,   502,    -1,    -1,   505,   506,   507,    -1,    -1,   510,
      -1,    -1,    -1,   514,   515,    -1,    -1,   518,   519,   520,
     521,   522,   523,    -1,    -1,   526,   527,    -1,   529,   530,
     531,    -1,    -1,    -1,    -1,   536,    -1,   538,   539,    -1,
     541,    -1,   543,    -1,    -1,    -1,    -1,   548,    -1,    -1,
      -1,   552,   553,    -1,    -1,    -1,    -1,   558,    -1,   560,
      -1,    -1,   563,   564,    -1,   566,   567,     5,    -1,     7,
       8,     9,    10,    11,    -1,    -1,    -1,    -1,    -1,    17,
      -1,    -1,    20,    -1,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    32,    33,    34,    35,    36,    37,
      38,    -1,    40,    41,    -1,    43,    -1,    45,    46,    -1,
      -1,    49,    50,    51,    -1,    53,    54,    55,    56,    -1,
      58,    59,    60,    61,    62,    -1,    64,    65,    -1,    67,
      68,    69,    70,    71,    72,    73,    74,    -1,    -1,    77,
      -1,    79,    -1,    81,    82,    83,    -1,    -1,    86,    87,
      88,    -1,    90,    91,    -1,    93,    94,    95,    96,    97,
      -1,    -1,    -1,    -1,   102,   103,   104,    -1,    -1,   107,
     108,   109,    -1,   111,    -1,    -1,    -1,   115,   116,   117,
      -1,   119,   120,   121,    -1,    -1,    -1,   125,    -1,    -1,
     128,   129,   130,    -1,    -1,   133,   134,    -1,   136,   137,
     138,   139,   140,   141,    -1,    -1,   144,    -1,   146,   147,
     148,   149,    -1,   151,   152,   153,   154,   155,   156,    -1,
     158,   159,   160,   161,   162,    -1,   164,    -1,    -1,   167,
      -1,   169,   170,    -1,   172,   173,    -1,   175,   176,   177,
     178,   179,    -1,   181,   182,   183,   184,   185,   186,   187,
      -1,   189,   190,    -1,   192,   193,    -1,   195,   196,    -1,
     198,   199,    -1,   201,    -1,    -1,    -1,   205,   206,   207,
     208,   209,    -1,   211,   212,    -1,    -1,    -1,   216,    -1,
      -1,   219,   220,   221,    -1,    -1,   224,    -1,    -1,   227,
     228,    -1,    -1,    -1,    -1,    -1,    -1,   235,   236,   237,
      -1,    -1,   240,   241,    -1,   243,   244,    -1,    -1,    -1,
     248,    -1,   250,    -1,   252,   253,    -1,   255,    -1,   257,
     258,    -1,    -1,   261,    -1,    -1,    -1,    -1,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,    -1,    -1,    -1,   293,   294,   295,   296,    -1,
      -1,   299,   300,   301,   302,   303,    -1,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,    -1,
     318,   319,   320,    -1,   322,   323,   324,   325,   326,   327,
     328,    -1,   330,   331,    -1,   333,   334,    -1,   336,    -1,
     338,   339,   340,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,    -1,   362,   363,    -1,   365,    -1,   367,
     368,    -1,   370,   371,   372,   373,   374,   375,   376,   377,
     378,    -1,    -1,    -1,   382,   383,    -1,    -1,   386,   387,
     388,    -1,   390,    -1,   392,   393,   394,   395,   396,    -1,
     398,   399,   400,    -1,   402,   403,    -1,    -1,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,    -1,
     418,   419,    -1,    -1,    -1,   423,   424,   425,    -1,    -1,
     428,    -1,    -1,    -1,   432,   433,   434,   435,    -1,   437,
     438,    -1,    -1,    -1,    -1,    -1,    -1,   445,   446,    -1,
     448,    -1,    -1,   451,    -1,    -1,   454,   455,   456,   457,
     458,   459,    -1,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,    -1,   473,   474,    -1,   476,   477,
     478,   479,   480,   481,    -1,    -1,    -1,    -1,    -1,   487,
      -1,   489,   490,   491,   492,   493,   494,   495,    -1,   497,
     498,   499,   500,    -1,   502,    -1,    -1,   505,   506,   507,
      -1,    -1,   510,    -1,    -1,    -1,   514,   515,    -1,    -1,
     518,   519,   520,   521,   522,   523,    -1,    -1,   526,   527,
      -1,   529,   530,   531,    -1,    -1,    -1,    -1,   536,    -1,
     538,   539,    -1,   541,    -1,   543,    -1,    -1,    -1,    -1,
     548,    -1,    -1,    -1,   552,   553,    -1,    -1,    -1,    -1,
     558,    -1,   560,   561,    -1,   563,   564,    -1,   566,   567,
       5,    -1,     7,     8,     9,    10,    11,    -1,    -1,    -1,
      -1,    -1,    17,    -1,    -1,    20,    -1,    22,    23,    24,
      25,    26,    -1,    28,    29,    30,    -1,    32,    33,    34,
      35,    36,    37,    38,    -1,    40,    41,    -1,    43,    -1,
      45,    46,    -1,    -1,    49,    50,    51,    -1,    53,    54,
      55,    56,    -1,    58,    59,    60,    61,    62,    -1,    64,
      65,    -1,    67,    68,    69,    70,    71,    72,    73,    74,
      -1,    -1,    77,    -1,    79,    -1,    81,    82,    83,    -1,
      -1,    86,    87,    88,    -1,    90,    91,    -1,    93,    94,
      95,    96,    97,    -1,    -1,    -1,    -1,   102,   103,   104,
      -1,    -1,   107,   108,   109,    -1,   111,    -1,    -1,    -1,
     115,   116,   117,    -1,   119,   120,   121,    -1,    -1,    -1,
     125,    -1,    -1,   128,   129,   130,    -1,    -1,   133,   134,
      -1,   136,   137,   138,   139,   140,   141,    -1,    -1,   144,
      -1,   146,   147,   148,   149,    -1,   151,   152,   153,   154,
     155,   156,    -1,   158,   159,   160,   161,   162,    -1,   164,
      -1,    -1,   167,    -1,   169,   170,    -1,   172,   173,    -1,
     175,   176,   177,   178,   179,    -1,   181,   182,   183,   184,
     185,   186,   187,    -1,   189,   190,    -1,   192,   193,    -1,
     195,   196,    -1,   198,   199,    -1,   201,    -1,    -1,    -1,
     205,   206,   207,   208,   209,    -1,   211,   212,    -1,    -1,
      -1,   216,    -1,    -1,   219,   220,   221,    -1,    -1,   224,
      -1,    -1,   227,   228,    -1,    -1,    -1,    -1,    -1,    -1,
     235,   236,   237,    -1,    -1,   240,   241,    -1,   243,   244,
      -1,    -1,    -1,   248,    -1,   250,    -1,   252,   253,    -1,
     255,    -1,   257,   258,    -1,    -1,   261,    -1,    -1,    -1,
      -1,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,    -1,    -1,    -1,   293,   294,
     295,   296,    -1,    -1,   299,   300,   301,   302,   303,    -1,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,    -1,   318,   319,   320,    -1,   322,   323,   324,
     325,   326,   327,   328,    -1,   330,   331,    -1,   333,   334,
      -1,   336,    -1,   338,   339,   340,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,    -1,   362,   363,    -1,
     365,    -1,   367,   368,    -1,   370,   371,   372,   373,   374,
     375,   376,   377,   378,    -1,    -1,    -1,   382,   383,    -1,
      -1,   386,   387,   388,    -1,   390,    -1,   392,   393,   394,
     395,   396,    -1,   398,   399,   400,    -1,   402,   403,    -1,
      -1,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,    -1,   418,   419,    -1,    -1,    -1,   423,   424,
     425,    -1,    -1,   428,    -1,    -1,    -1,   432,   433,   434,
     435,    -1,   437,   438,    -1,    -1,    -1,    -1,    -1,    -1,
     445,   446,    -1,   448,    -1,    -1,   451,    -1,    -1,   454,
     455,   456,   457,   458,   459,    -1,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,    -1,   473,   474,
      -1,   476,   477,   478,   479,   480,   481,    -1,    -1,    -1,
      -1,    -1,   487,    -1,   489,   490,   491,   492,   493,   494,
     495,    -1,   497,   498,   499,   500,    -1,   502,    -1,    -1,
     505,   506,   507,    -1,    -1,   510,    -1,    -1,    -1,   514,
     515,    -1,    -1,   518,   519,   520,   521,   522,   523,    -1,
      -1,   526,   527,    -1,   529,   530,   531,    -1,    -1,    -1,
      -1,   536,    -1,   538,   539,    -1,   541,    -1,   543,    -1,
      -1,    -1,    -1,   548,    -1,    -1,    -1,   552,   553,    -1,
      -1,    -1,    -1,   558,    -1,   560,   561,    -1,   563,   564,
      -1,   566,   567,     5,    -1,     7,     8,     9,    10,    11,
      -1,    -1,    -1,    -1,    -1,    17,    -1,    -1,    20,    -1,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      32,    33,    34,    35,    36,    37,    38,    -1,    40,    41,
      -1,    43,    -1,    45,    46,    -1,    -1,    49,    50,    51,
      -1,    53,    54,    55,    56,    -1,    58,    59,    60,    61,
      62,    -1,    64,    65,    -1,    67,    68,    69,    70,    71,
      72,    73,    74,    -1,    -1,    77,    -1,    79,    -1,    81,
      82,    83,    -1,    -1,    86,    87,    88,    -1,    90,    91,
      -1,    93,    94,    95,    96,    97,    -1,    -1,    -1,    -1,
     102,   103,   104,    -1,    -1,   107,   108,   109,    -1,   111,
      -1,    -1,    -1,   115,   116,   117,    -1,   119,   120,   121,
      -1,    -1,    -1,   125,    -1,    -1,   128,   129,   130,    -1,
      -1,   133,   134,    -1,   136,   137,   138,   139,   140,   141,
      -1,    -1,   144,    -1,   146,   147,   148,   149,    -1,   151,
     152,   153,   154,   155,   156,    -1,   158,   159,   160,   161,
     162,    -1,   164,    -1,    -1,   167,    -1,   169,   170,    -1,
     172,   173,    -1,   175,   176,   177,   178,   179,    -1,   181,
     182,   183,   184,   185,   186,   187,    -1,   189,   190,    -1,
     192,   193,    -1,   195,   196,    -1,   198,   199,    -1,   201,
      -1,    -1,    -1,   205,   206,   207,   208,   209,    -1,   211,
     212,    -1,    -1,    -1,   216,    -1,    -1,   219,   220,   221,
      -1,    -1,   224,    -1,    -1,   227,   228,    -1,    -1,    -1,
      -1,    -1,    -1,   235,   236,   237,    -1,    -1,   240,   241,
      -1,   243,   244,    -1,    -1,    -1,   248,    -1,   250,    -1,
     252,   253,    -1,   255,    -1,   257,   258,    -1,    -1,   261,
      -1,    -1,    -1,    -1,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,    -1,    -1,
      -1,   293,   294,   295,   296,    -1,    -1,   299,   300,   301,
     302,   303,    -1,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,    -1,   318,   319,   320,    -1,
     322,   323,   324,   325,   326,   327,   328,    -1,   330,   331,
      -1,   333,   334,    -1,   336,    -1,   338,   339,   340,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,    -1,
     362,   363,    -1,   365,    -1,   367,   368,    -1,   370,   371,
     372,   373,   374,   375,   376,   377,   378,    -1,    -1,    -1,
     382,   383,    -1,    -1,   386,   387,   388,    -1,   390,    -1,
     392,   393,   394,   395,   396,    -1,   398,   399,   400,    -1,
     402,   403,    -1,    -1,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,    -1,   418,   419,    -1,    -1,
      -1,   423,   424,   425,    -1,    -1,   428,    -1,    -1,    -1,
     432,   433,   434,   435,    -1,   437,   438,    -1,    -1,    -1,
      -1,    -1,    -1,   445,   446,    -1,   448,    -1,    -1,   451,
      -1,    -1,   454,   455,   456,   457,   458,   459,    -1,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
      -1,   473,   474,    -1,   476,   477,   478,   479,   480,   481,
      -1,    -1,    -1,    -1,    -1,   487,    -1,   489,   490,   491,
     492,   493,   494,   495,    -1,   497,   498,   499,   500,    -1,
     502,    -1,    -1,   505,   506,   507,    -1,    -1,   510,    -1,
      -1,    -1,   514,   515,    -1,    -1,   518,   519,   520,   521,
     522,   523,    -1,    -1,   526,   527,    -1,   529,   530,   531,
      -1,    -1,    -1,    -1,   536,    -1,   538,   539,    -1,   541,
      -1,   543,    -1,    -1,    -1,    -1,   548,    -1,    -1,    -1,
     552,   553,    -1,    -1,    -1,    -1,   558,    -1,   560,   561,
      -1,   563,   564,    -1,   566,   567,     5,    -1,     7,     8,
       9,    10,    11,    -1,    -1,    -1,    -1,    -1,    17,    -1,
      -1,    20,    -1,    22,    23,    24,    25,    26,    -1,    28,
      29,    30,    -1,    32,    33,    34,    35,    36,    37,    38,
      -1,    40,    41,    -1,    43,    -1,    45,    46,    -1,    -1,
      49,    50,    51,    -1,    53,    54,    55,    56,    -1,    58,
      59,    60,    61,    62,    -1,    64,    65,    -1,    67,    68,
      69,    70,    71,    72,    73,    74,    -1,    -1,    77,    -1,
      79,    -1,    81,    82,    83,    -1,    -1,    86,    87,    88,
      -1,    90,    91,    -1,    93,    94,    95,    96,    97,    -1,
      -1,    -1,    -1,   102,   103,   104,    -1,    -1,   107,   108,
     109,    -1,   111,    -1,    -1,    -1,   115,   116,   117,    -1,
     119,   120,   121,    -1,    -1,    -1,   125,    -1,    -1,   128,
     129,   130,    -1,    -1,   133,   134,    -1,   136,   137,   138,
     139,   140,   141,    -1,    -1,   144,    -1,   146,   147,   148,
     149,    -1,   151,   152,   153,   154,   155,   156,    -1,   158,
     159,   160,   161,   162,    -1,   164,    -1,    -1,   167,    -1,
     169,   170,    -1,   172,   173,    -1,   175,   176,   177,   178,
     179,    -1,   181,   182,   183,   184,   185,   186,   187,    -1,
     189,   190,    -1,   192,   193,    -1,   195,   196,    -1,   198,
     199,    -1,   201,    -1,    -1,    -1,   205,   206,   207,   208,
     209,    -1,   211,   212,    -1,    -1,    -1,   216,    -1,    -1,
     219,   220,   221,    -1,    -1,   224,    -1,    -1,   227,   228,
      -1,    -1,    -1,    -1,    -1,    -1,   235,   236,   237,    -1,
      -1,   240,   241,    -1,   243,   244,    -1,    -1,    -1,   248,
      -1,   250,    -1,   252,   253,    -1,   255,    -1,   257,   258,
      -1,    -1,   261,    -1,    -1,    -1,    -1,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,    -1,    -1,    -1,   293,   294,   295,   296,    -1,    -1,
     299,   300,   301,   302,   303,    -1,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,    -1,   318,
     319,   320,    -1,   322,   323,   324,   325,   326,   327,   328,
      -1,   330,   331,    -1,   333,   334,    -1,   336,    -1,   338,
     339,   340,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,    -1,   362,   363,    -1,   365,    -1,   367,   368,
      -1,   370,   371,   372,   373,   374,   375,   376,   377,   378,
      -1,    -1,    -1,   382,   383,    -1,    -1,   386,   387,   388,
      -1,   390,    -1,   392,   393,   394,   395,   396,    -1,   398,
     399,   400,    -1,   402,   403,    -1,    -1,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,    -1,   418,
     419,    -1,    -1,    -1,   423,   424,   425,    -1,    -1,   428,
      -1,    -1,    -1,   432,   433,   434,   435,    -1,   437,   438,
      -1,    -1,    -1,    -1,    -1,    -1,   445,   446,    -1,   448,
      -1,    -1,   451,    -1,    -1,   454,   455,   456,   457,   458,
     459,    -1,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,    -1,   473,   474,    -1,   476,   477,   478,
     479,   480,   481,    -1,    -1,    -1,    -1,    -1,   487,    -1,
     489,   490,   491,   492,   493,   494,   495,    -1,   497,   498,
     499,   500,    -1,   502,    -1,    -1,   505,   506,   507,    -1,
      -1,   510,    -1,    -1,    -1,   514,   515,    -1,    -1,   518,
     519,   520,   521,   522,   523,    -1,    -1,   526,   527,    -1,
     529,   530,   531,    -1,    -1,    -1,    -1,   536,    -1,   538,
     539,    -1,   541,    -1,   543,    -1,    -1,    -1,    -1,   548,
      -1,    -1,    -1,   552,   553,    -1,    -1,    -1,    -1,   558,
      -1,   560,   561,    -1,   563,   564,    -1,   566,   567,     5,
      -1,     7,     8,     9,    10,    11,    -1,    -1,    -1,    -1,
      -1,    17,    -1,    -1,    20,    -1,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    32,    33,    34,    35,
      36,    37,    38,    -1,    40,    41,    -1,    43,    -1,    45,
      46,    -1,    -1,    49,    50,    51,    -1,    53,    54,    55,
      56,    -1,    58,    59,    60,    61,    62,    -1,    64,    65,
      -1,    67,    68,    69,    70,    71,    72,    73,    74,    -1,
      -1,    77,    -1,    79,    -1,    81,    82,    83,    -1,    -1,
      86,    87,    88,    -1,    90,    91,    -1,    93,    94,    95,
      96,    97,    -1,    -1,    -1,    -1,   102,   103,   104,    -1,
      -1,   107,   108,   109,    -1,   111,    -1,    -1,    -1,   115,
     116,   117,    -1,   119,   120,   121,    -1,    -1,    -1,   125,
      -1,    -1,   128,   129,   130,    -1,    -1,   133,   134,    -1,
     136,   137,   138,   139,   140,   141,    -1,    -1,   144,    -1,
     146,   147,   148,   149,    -1,   151,   152,   153,   154,   155,
     156,    -1,   158,   159,   160,   161,   162,    -1,   164,    -1,
      -1,   167,    -1,   169,   170,   171,   172,   173,    -1,   175,
     176,   177,   178,   179,    -1,   181,   182,   183,   184,   185,
     186,   187,    -1,   189,   190,    -1,   192,   193,    -1,   195,
     196,    -1,   198,   199,    -1,   201,    -1,    -1,    -1,   205,
     206,   207,   208,   209,    -1,   211,   212,    -1,    -1,    -1,
     216,    -1,    -1,   219,   220,   221,    -1,    -1,   224,    -1,
      -1,   227,   228,    -1,    -1,    -1,    -1,    -1,    -1,   235,
     236,   237,    -1,    -1,   240,   241,    -1,   243,   244,    -1,
      -1,    -1,   248,    -1,   250,    -1,   252,   253,    -1,   255,
      -1,   257,   258,    -1,    -1,   261,    -1,    -1,    -1,    -1,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,    -1,    -1,    -1,   293,   294,   295,
     296,    -1,    -1,   299,   300,   301,   302,   303,    -1,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,    -1,   318,   319,   320,    -1,   322,   323,   324,   325,
     326,   327,   328,    -1,   330,   331,    -1,   333,   334,    -1,
     336,    -1,   338,   339,   340,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,    -1,   362,   363,    -1,   365,
      -1,   367,   368,    -1,   370,   371,   372,   373,   374,   375,
     376,   377,   378,    -1,    -1,    -1,   382,   383,    -1,    -1,
     386,   387,   388,    -1,   390,    -1,   392,   393,   394,   395,
     396,    -1,   398,   399,   400,    -1,   402,   403,    -1,    -1,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,    -1,   418,   419,    -1,    -1,    -1,   423,   424,   425,
      -1,    -1,   428,    -1,    -1,    -1,   432,   433,   434,   435,
      -1,   437,   438,    -1,    -1,    -1,    -1,    -1,    -1,   445,
     446,    -1,   448,    -1,    -1,   451,    -1,    -1,   454,   455,
     456,   457,   458,   459,    -1,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,    -1,   473,   474,    -1,
     476,   477,   478,   479,   480,   481,    -1,    -1,    -1,    -1,
      -1,   487,    -1,   489,   490,   491,   492,   493,   494,   495,
      -1,   497,   498,   499,   500,    -1,   502,    -1,    -1,   505,
     506,   507,    -1,    -1,   510,    -1,    -1,    -1,   514,   515,
      -1,    -1,   518,   519,   520,   521,   522,   523,    -1,    -1,
     526,   527,    -1,   529,   530,   531,    -1,    -1,    -1,    -1,
     536,    -1,   538,   539,    -1,   541,    -1,   543,    -1,    -1,
      -1,    -1,   548,    -1,    -1,    -1,   552,   553,    -1,    -1,
      -1,    -1,   558,    -1,   560,    -1,    -1,   563,   564,    -1,
     566,   567,     5,    -1,     7,     8,     9,    10,    11,    -1,
      -1,    -1,    -1,    -1,    17,    -1,    -1,    20,    -1,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    32,
      33,    34,    35,    36,    37,    38,    -1,    40,    41,    -1,
      43,    -1,    45,    46,    -1,    -1,    49,    50,    51,    -1,
      53,    54,    55,    56,    -1,    58,    59,    60,    61,    62,
      -1,    64,    65,    -1,    67,    68,    69,    70,    71,    72,
      73,    74,    -1,    -1,    77,    -1,    79,    -1,    81,    82,
      83,    -1,    -1,    86,    87,    88,    -1,    90,    91,    -1,
      93,    94,    95,    96,    97,    -1,    -1,    -1,    -1,   102,
     103,   104,    -1,    -1,   107,   108,   109,    -1,   111,    -1,
      -1,    -1,   115,   116,   117,    -1,   119,   120,   121,    -1,
      -1,    -1,   125,    -1,    -1,   128,   129,   130,    -1,    -1,
     133,   134,    -1,   136,   137,   138,   139,   140,   141,    -1,
      -1,   144,    -1,   146,   147,   148,   149,    -1,   151,   152,
     153,   154,   155,   156,    -1,   158,   159,   160,   161,   162,
      -1,   164,    -1,    -1,   167,    -1,   169,   170,   171,   172,
     173,    -1,   175,   176,   177,   178,   179,    -1,   181,   182,
     183,   184,   185,   186,   187,    -1,   189,   190,    -1,   192,
     193,    -1,   195,   196,    -1,   198,   199,    -1,   201,    -1,
      -1,    -1,   205,   206,   207,   208,   209,    -1,   211,   212,
      -1,    -1,    -1,   216,    -1,    -1,   219,   220,   221,    -1,
      -1,   224,    -1,    -1,   227,   228,    -1,    -1,    -1,    -1,
      -1,    -1,   235,   236,   237,    -1,    -1,   240,   241,    -1,
     243,   244,    -1,    -1,    -1,   248,    -1,   250,    -1,   252,
     253,    -1,   255,    -1,   257,   258,    -1,    -1,   261,    -1,
      -1,    -1,    -1,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,    -1,    -1,    -1,
     293,   294,   295,   296,    -1,    -1,   299,   300,   301,   302,
     303,    -1,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,    -1,   318,   319,   320,    -1,   322,
     323,   324,   325,   326,   327,   328,    -1,   330,   331,    -1,
     333,   334,    -1,   336,    -1,   338,   339,   340,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,    -1,   362,
     363,    -1,   365,    -1,   367,   368,    -1,   370,   371,   372,
     373,   374,   375,   376,   377,   378,    -1,    -1,    -1,   382,
     383,    -1,    -1,   386,   387,   388,    -1,   390,    -1,   392,
     393,   394,   395,   396,    -1,   398,   399,   400,    -1,   402,
     403,    -1,    -1,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,    -1,   418,   419,    -1,    -1,    -1,
     423,   424,   425,    -1,    -1,   428,    -1,    -1,    -1,   432,
     433,   434,   435,    -1,   437,   438,    -1,    -1,    -1,    -1,
      -1,    -1,   445,   446,    -1,   448,    -1,    -1,   451,    -1,
      -1,   454,   455,   456,   457,   458,   459,    -1,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,    -1,
     473,   474,    -1,   476,   477,   478,   479,   480,   481,    -1,
      -1,    -1,    -1,    -1,   487,    -1,   489,   490,   491,   492,
     493,   494,   495,    -1,   497,   498,   499,   500,    -1,   502,
      -1,    -1,   505,   506,   507,    -1,    -1,   510,    -1,    -1,
      -1,   514,   515,    -1,    -1,   518,   519,   520,   521,   522,
     523,    -1,    -1,   526,   527,    -1,   529,   530,   531,    -1,
      -1,    -1,    -1,   536,    -1,   538,   539,    -1,   541,    -1,
     543,    -1,    -1,    -1,    -1,   548,    -1,    -1,    -1,   552,
     553,    -1,    -1,    -1,    -1,   558,    -1,   560,    -1,    -1,
     563,   564,    -1,   566,   567,     5,    -1,     7,     8,     9,
      10,    11,    -1,    -1,    -1,    -1,    -1,    17,    -1,    -1,
      20,    -1,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    -1,    32,    33,    34,    35,    36,    37,    38,    -1,
      40,    41,    -1,    43,    -1,    45,    46,    -1,    -1,    49,
      50,    51,    -1,    53,    54,    55,    56,    -1,    58,    59,
      60,    61,    62,    -1,    64,    65,    -1,    67,    68,    69,
      70,    71,    72,    73,    74,    -1,    -1,    77,    -1,    79,
      -1,    81,    82,    83,    -1,    -1,    86,    87,    88,    -1,
      90,    91,    -1,    93,    94,    95,    96,    97,    -1,    -1,
      -1,    -1,   102,   103,   104,    -1,    -1,   107,   108,   109,
      -1,   111,    -1,    -1,    -1,   115,   116,   117,    -1,   119,
     120,   121,    -1,    -1,    -1,   125,    -1,    -1,   128,   129,
     130,    -1,    -1,   133,   134,    -1,   136,   137,   138,   139,
     140,   141,    -1,    -1,   144,    -1,   146,   147,   148,   149,
      -1,   151,   152,   153,   154,   155,   156,    -1,   158,   159,
     160,   161,   162,    -1,   164,    -1,    -1,   167,    -1,   169,
     170,   171,   172,   173,    -1,   175,   176,   177,   178,   179,
      -1,   181,   182,   183,   184,   185,   186,   187,    -1,   189,
     190,    -1,   192,   193,    -1,   195,   196,    -1,   198,   199,
      -1,   201,    -1,    -1,    -1,   205,   206,   207,   208,   209,
      -1,   211,   212,    -1,    -1,    -1,   216,    -1,    -1,   219,
     220,   221,    -1,    -1,   224,    -1,    -1,   227,   228,    -1,
      -1,    -1,    -1,    -1,    -1,   235,   236,   237,    -1,    -1,
     240,   241,    -1,   243,   244,    -1,    -1,    -1,   248,    -1,
     250,    -1,   252,   253,    -1,   255,    -1,   257,   258,    -1,
      -1,   261,    -1,    -1,    -1,    -1,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
      -1,    -1,    -1,   293,   294,   295,   296,    -1,    -1,   299,
     300,   301,   302,   303,    -1,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,    -1,   318,   319,
     320,    -1,   322,   323,   324,   325,   326,   327,   328,    -1,
     330,   331,    -1,   333,   334,    -1,   336,    -1,   338,   339,
     340,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,    -1,   362,   363,    -1,   365,    -1,   367,   368,    -1,
     370,   371,   372,   373,   374,   375,   376,   377,   378,    -1,
      -1,    -1,   382,   383,    -1,    -1,   386,   387,   388,    -1,
     390,    -1,   392,   393,   394,   395,   396,    -1,   398,   399,
     400,    -1,   402,   403,    -1,    -1,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,    -1,   418,   419,
      -1,    -1,    -1,   423,   424,   425,    -1,    -1,   428,    -1,
      -1,    -1,   432,   433,   434,   435,    -1,   437,   438,    -1,
      -1,    -1,    -1,    -1,    -1,   445,   446,    -1,   448,    -1,
      -1,   451,    -1,    -1,   454,   455,   456,   457,   458,   459,
      -1,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,    -1,   473,   474,    -1,   476,   477,   478,   479,
     480,   481,    -1,    -1,    -1,    -1,    -1,   487,    -1,   489,
     490,   491,   492,   493,   494,   495,    -1,   497,   498,   499,
     500,    -1,   502,    -1,    -1,   505,   506,   507,    -1,    -1,
     510,    -1,    -1,    -1,   514,   515,    -1,    -1,   518,   519,
     520,   521,   522,   523,    -1,    -1,   526,   527,    -1,   529,
     530,   531,    -1,    -1,    -1,    -1,   536,    -1,   538,   539,
      -1,   541,    -1,   543,    -1,    -1,    -1,    -1,   548,    -1,
      -1,    -1,   552,   553,    -1,    -1,    -1,    -1,   558,    -1,
     560,    -1,    -1,   563,   564,    -1,   566,   567,     5,    -1,
       7,     8,     9,    10,    11,    -1,    -1,    -1,    -1,    -1,
      17,    -1,    -1,    20,    -1,    22,    23,    24,    25,    26,
      -1,    28,    29,    30,    -1,    32,    33,    34,    35,    36,
      37,    38,    -1,    40,    41,    -1,    43,    -1,    45,    46,
      -1,    -1,    49,    50,    51,    -1,    53,    54,    55,    56,
      -1,    58,    59,    60,    61,    62,    -1,    64,    65,    -1,
      67,    68,    69,    70,    71,    72,    73,    74,    -1,    -1,
      77,    -1,    79,    -1,    81,    82,    83,    -1,    -1,    86,
      87,    88,    -1,    90,    91,    -1,    93,    94,    95,    96,
      97,    -1,    -1,    -1,    -1,   102,   103,   104,    -1,    -1,
     107,   108,   109,    -1,   111,    -1,    -1,    -1,   115,   116,
     117,    -1,   119,   120,   121,    -1,    -1,    -1,   125,    -1,
      -1,   128,   129,   130,    -1,    -1,   133,   134,    -1,   136,
     137,   138,   139,   140,   141,    -1,    -1,   144,    -1,   146,
     147,   148,   149,    -1,   151,   152,   153,   154,   155,   156,
      -1,   158,   159,   160,   161,   162,    -1,   164,    -1,    -1,
     167,    -1,   169,   170,    -1,   172,   173,    -1,   175,   176,
     177,   178,   179,    -1,   181,   182,   183,   184,   185,   186,
     187,    -1,   189,   190,    -1,   192,   193,    -1,   195,   196,
      -1,   198,   199,    -1,   201,    -1,    -1,    -1,   205,   206,
     207,   208,   209,    -1,   211,   212,    -1,    -1,    -1,   216,
      -1,    -1,   219,   220,   221,    -1,    -1,   224,    -1,    -1,
     227,   228,    -1,    -1,    -1,    -1,    -1,    -1,   235,   236,
     237,    -1,    -1,   240,   241,    -1,   243,   244,    -1,    -1,
      -1,   248,    -1,   250,    -1,   252,   253,    -1,   255,    -1,
     257,   258,    -1,    -1,   261,    -1,    -1,    -1,    -1,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,    -1,    -1,    -1,   293,   294,   295,   296,
      -1,    -1,   299,   300,   301,   302,   303,    -1,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
      -1,   318,   319,   320,    -1,   322,   323,   324,   325,   326,
     327,   328,    -1,   330,   331,    -1,   333,   334,    -1,   336,
      -1,   338,   339,   340,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,    -1,   362,   363,    -1,   365,    -1,
     367,   368,    -1,   370,   371,   372,   373,   374,   375,   376,
     377,   378,    -1,    -1,    -1,   382,   383,    -1,    -1,   386,
     387,   388,    -1,   390,    -1,   392,   393,   394,   395,   396,
      -1,   398,   399,   400,    -1,   402,   403,    -1,    -1,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
      -1,   418,   419,    -1,    -1,    -1,   423,   424,   425,    -1,
      -1,   428,    -1,    -1,    -1,   432,   433,   434,   435,    -1,
     437,   438,    -1,    -1,    -1,    -1,    -1,    -1,   445,   446,
      -1,   448,    -1,    -1,   451,    -1,    -1,   454,   455,   456,
     457,   458,   459,    -1,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,    -1,   473,   474,    -1,   476,
     477,   478,   479,   480,   481,    -1,    -1,    -1,    -1,    -1,
     487,    -1,   489,   490,   491,   492,   493,   494,   495,    -1,
     497,   498,   499,   500,    -1,   502,    -1,    -1,   505,   506,
     507,    -1,    -1,   510,    -1,    -1,    -1,   514,   515,    -1,
      -1,   518,   519,   520,   521,   522,   523,    -1,    -1,   526,
     527,    -1,   529,   530,   531,    -1,    -1,    -1,    -1,   536,
      -1,   538,   539,    -1,   541,    -1,   543,    -1,    -1,    -1,
      -1,   548,    -1,    -1,    -1,   552,   553,    -1,    -1,    -1,
      -1,   558,    -1,   560,    -1,    -1,   563,   564,    -1,   566,
     567,     5,    -1,     7,     8,     9,    10,    11,    12,    -1,
      -1,    -1,    -1,    17,    -1,    -1,    20,    -1,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    32,    33,
      34,    35,    36,    37,    38,    -1,    40,    41,    -1,    43,
      -1,    45,    46,    -1,    -1,    49,    50,    51,    -1,    53,
      54,    55,    56,    -1,    58,    59,    60,    61,    62,    -1,
      64,    65,    -1,    67,    68,    69,    70,    71,    72,    73,
      74,    -1,    -1,    77,    -1,    79,    -1,    81,    82,    83,
      -1,    -1,    86,    87,    88,    -1,    90,    91,    -1,    93,
      94,    95,    96,    97,    -1,    -1,    -1,    -1,   102,   103,
     104,    -1,    -1,   107,   108,   109,    -1,   111,    -1,    -1,
      -1,   115,   116,   117,    -1,   119,   120,   121,    -1,    -1,
      -1,   125,    -1,    -1,   128,   129,   130,    -1,    -1,   133,
     134,    -1,   136,   137,   138,   139,   140,   141,    -1,    -1,
     144,    -1,   146,   147,   148,   149,    -1,   151,   152,   153,
     154,   155,   156,    -1,   158,   159,   160,   161,   162,    -1,
     164,    -1,    -1,   167,    -1,   169,   170,    -1,   172,   173,
      -1,   175,   176,   177,   178,   179,    -1,   181,   182,   183,
     184,   185,   186,   187,    -1,   189,   190,    -1,   192,   193,
      -1,   195,   196,    -1,   198,   199,    -1,   201,    -1,    -1,
      -1,   205,   206,   207,   208,   209,    -1,   211,   212,    -1,
      -1,    -1,   216,    -1,    -1,   219,   220,   221,    -1,    -1,
     224,    -1,    -1,   227,   228,    -1,    -1,    -1,    -1,    -1,
      -1,   235,   236,   237,    -1,    -1,   240,   241,    -1,   243,
     244,    -1,    -1,    -1,   248,    -1,   250,    -1,   252,   253,
      -1,   255,    -1,   257,   258,    -1,    -1,   261,    -1,    -1,
      -1,    -1,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,    -1,    -1,    -1,   293,
     294,   295,   296,    -1,    -1,   299,   300,   301,   302,   303,
      -1,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,    -1,   318,   319,   320,    -1,   322,   323,
     324,   325,    -1,   327,   328,    -1,   330,   331,    -1,   333,
     334,    -1,   336,    -1,   338,   339,   340,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,    -1,   362,   363,
      -1,   365,    -1,   367,   368,    -1,   370,   371,   372,   373,
     374,   375,   376,   377,   378,    -1,    -1,    -1,   382,   383,
      -1,    -1,   386,   387,   388,    -1,   390,    -1,   392,   393,
     394,   395,   396,    -1,   398,   399,   400,    -1,   402,   403,
      -1,    -1,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,    -1,   418,   419,    -1,    -1,    -1,   423,
     424,   425,    -1,    -1,   428,    -1,    -1,    -1,   432,   433,
     434,   435,    -1,   437,   438,    -1,    -1,    -1,    -1,    -1,
      -1,   445,   446,    -1,   448,    -1,    -1,   451,    -1,    -1,
     454,   455,   456,   457,   458,   459,    -1,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,    -1,   473,
     474,    -1,   476,   477,   478,   479,   480,   481,    -1,    -1,
      -1,    -1,    -1,   487,    -1,   489,   490,   491,   492,   493,
     494,   495,    -1,   497,   498,   499,   500,    -1,   502,    -1,
      -1,   505,   506,   507,    -1,    -1,   510,    -1,    -1,    -1,
     514,   515,    -1,    -1,   518,   519,   520,   521,   522,   523,
      -1,    -1,   526,   527,    -1,   529,   530,   531,    -1,    -1,
      -1,    -1,   536,    -1,   538,   539,    -1,   541,    -1,   543,
      -1,    -1,    -1,    -1,   548,    -1,    -1,    -1,   552,   553,
      -1,    -1,    -1,    -1,   558,    -1,   560,    -1,    -1,   563,
     564,    -1,   566,   567,     5,    -1,     7,     8,     9,    10,
      11,    -1,    -1,    -1,    -1,    -1,    17,    -1,    -1,    20,
      -1,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    32,    33,    34,    35,    36,    37,    38,    -1,    40,
      41,    -1,    43,    -1,    45,    46,    -1,    -1,    49,    50,
      51,    -1,    53,    54,    55,    56,    -1,    58,    59,    60,
      61,    62,    -1,    64,    65,    -1,    67,    68,    69,    70,
      71,    72,    73,    74,    -1,    -1,    77,    -1,    79,    -1,
      81,    82,    83,    -1,    -1,    86,    87,    88,    -1,    90,
      91,    -1,    93,    94,    95,    96,    97,    -1,    -1,    -1,
      -1,   102,   103,   104,    -1,    -1,   107,   108,   109,    -1,
     111,    -1,    -1,    -1,   115,   116,   117,    -1,   119,   120,
     121,    -1,    -1,    -1,   125,    -1,    -1,   128,   129,   130,
      -1,    -1,   133,   134,    -1,   136,   137,   138,   139,   140,
     141,    -1,    -1,   144,    -1,   146,   147,   148,   149,    -1,
     151,   152,   153,   154,   155,   156,    -1,   158,   159,   160,
     161,   162,    -1,   164,    -1,    -1,   167,    -1,   169,   170,
      -1,   172,   173,    -1,   175,   176,   177,   178,   179,    -1,
     181,   182,   183,   184,   185,   186,   187,    -1,   189,   190,
      -1,   192,   193,    -1,   195,   196,    -1,   198,   199,    -1,
     201,    -1,    -1,    -1,   205,   206,   207,   208,   209,    -1,
     211,   212,    -1,    -1,    -1,   216,    -1,    -1,   219,   220,
     221,    -1,    -1,   224,    -1,    -1,   227,   228,    -1,    -1,
      -1,    -1,    -1,    -1,   235,   236,   237,    -1,    -1,   240,
     241,    -1,   243,   244,    -1,    -1,    -1,   248,    -1,   250,
      -1,   252,   253,    -1,   255,    -1,   257,   258,    -1,    -1,
     261,    -1,    -1,    -1,    -1,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,    -1,
      -1,    -1,   293,   294,   295,   296,    -1,    -1,   299,   300,
     301,   302,   303,    -1,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,    -1,   318,   319,   320,
      -1,   322,   323,   324,   325,   326,   327,   328,    -1,   330,
     331,    -1,   333,   334,    -1,   336,    -1,   338,   339,   340,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
      -1,   362,   363,    -1,   365,    -1,   367,   368,    -1,   370,
     371,   372,   373,   374,   375,   376,   377,   378,    -1,    -1,
      -1,   382,   383,    -1,    -1,   386,   387,   388,    -1,   390,
      -1,   392,   393,   394,   395,   396,    -1,   398,   399,   400,
      -1,   402,   403,    -1,    -1,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,    -1,   418,   419,    -1,
      -1,    -1,   423,   424,   425,    -1,    -1,   428,    -1,    -1,
      -1,   432,   433,   434,   435,    -1,   437,   438,    -1,    -1,
      -1,    -1,    -1,    -1,   445,   446,    -1,   448,    -1,    -1,
     451,    -1,    -1,   454,   455,   456,   457,   458,   459,    -1,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,    -1,   473,   474,    -1,   476,   477,   478,   479,   480,
     481,    -1,    -1,    -1,    -1,    -1,   487,    -1,   489,   490,
     491,   492,   493,   494,   495,    -1,   497,   498,   499,   500,
      -1,   502,    -1,    -1,   505,   506,   507,    -1,    -1,   510,
      -1,    -1,    -1,   514,   515,    -1,    -1,   518,   519,   520,
     521,   522,   523,    -1,    -1,   526,   527,    -1,   529,   530,
     531,    -1,    -1,    -1,    -1,   536,    -1,   538,   539,    -1,
     541,    -1,   543,    -1,    -1,    -1,    -1,   548,    -1,    -1,
      -1,   552,   553,    -1,    -1,    -1,    -1,   558,    -1,   560,
      -1,    -1,   563,   564,    -1,   566,   567,     5,    -1,     7,
       8,     9,    10,    11,    -1,    -1,    -1,    -1,    -1,    17,
      -1,    -1,    20,    -1,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    32,    33,    34,    35,    36,    37,
      38,    -1,    40,    41,    -1,    43,    -1,    45,    46,    -1,
      -1,    49,    50,    51,    -1,    53,    54,    55,    56,    -1,
      58,    59,    60,    61,    62,    -1,    64,    65,    -1,    67,
      68,    69,    70,    71,    72,    73,    74,    -1,    -1,    77,
      -1,    79,    -1,    81,    82,    83,    -1,    -1,    86,    87,
      88,    -1,    90,    91,    -1,    93,    94,    95,    96,    97,
      -1,    -1,    -1,    -1,   102,   103,   104,    -1,    -1,   107,
     108,   109,    -1,   111,    -1,    -1,    -1,   115,   116,   117,
      -1,   119,   120,   121,    -1,    -1,    -1,   125,    -1,    -1,
     128,   129,   130,    -1,    -1,   133,   134,    -1,   136,   137,
     138,   139,   140,   141,    -1,    -1,   144,    -1,   146,   147,
     148,   149,    -1,   151,   152,   153,   154,   155,   156,    -1,
     158,   159,   160,   161,   162,    -1,   164,    -1,    -1,   167,
      -1,   169,   170,    -1,   172,   173,    -1,   175,   176,   177,
     178,   179,    -1,   181,   182,   183,   184,   185,   186,   187,
      -1,   189,   190,    -1,   192,   193,    -1,   195,   196,    -1,
     198,   199,    -1,   201,    -1,    -1,    -1,   205,   206,   207,
     208,   209,    -1,   211,   212,    -1,    -1,    -1,   216,    -1,
      -1,   219,   220,   221,    -1,    -1,   224,    -1,    -1,   227,
     228,    -1,    -1,    -1,    -1,    -1,    -1,   235,   236,   237,
      -1,    -1,   240,   241,    -1,   243,   244,    -1,    -1,    -1,
     248,    -1,   250,    -1,   252,   253,    -1,   255,    -1,   257,
     258,    -1,    -1,   261,    -1,    -1,    -1,    -1,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,    -1,    -1,    -1,   293,   294,   295,   296,    -1,
      -1,   299,   300,   301,   302,   303,    -1,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,    -1,
     318,   319,   320,    -1,   322,   323,   324,   325,   326,   327,
     328,    -1,   330,   331,    -1,   333,   334,    -1,   336,    -1,
     338,   339,   340,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,    -1,   362,   363,    -1,   365,    -1,   367,
     368,    -1,   370,   371,   372,   373,   374,   375,   376,   377,
     378,    -1,    -1,    -1,   382,   383,    -1,    -1,   386,   387,
     388,    -1,   390,    -1,   392,   393,   394,   395,   396,    -1,
     398,   399,   400,    -1,   402,   403,    -1,    -1,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,    -1,
     418,   419,    -1,    -1,    -1,   423,   424,   425,    -1,    -1,
     428,    -1,    -1,    -1,   432,   433,   434,   435,    -1,   437,
     438,    -1,    -1,    -1,    -1,    -1,    -1,   445,   446,    -1,
     448,    -1,    -1,   451,    -1,    -1,   454,   455,   456,   457,
     458,   459,    -1,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,    -1,   473,   474,    -1,   476,   477,
     478,   479,   480,   481,    -1,    -1,    -1,    -1,    -1,   487,
      -1,   489,   490,   491,   492,   493,   494,   495,    -1,   497,
     498,   499,   500,    -1,   502,    -1,    -1,   505,   506,   507,
      -1,    -1,   510,    -1,    -1,    -1,   514,   515,    -1,    -1,
     518,   519,   520,   521,   522,   523,    -1,    -1,   526,   527,
      -1,   529,   530,   531,    -1,    -1,    -1,    -1,   536,    -1,
     538,   539,    -1,   541,    -1,   543,    -1,    -1,    -1,    -1,
     548,    -1,    -1,    -1,   552,   553,    -1,    -1,    -1,    -1,
     558,    -1,   560,    -1,    -1,   563,   564,    -1,   566,   567,
       5,    -1,     7,     8,     9,    10,    11,    -1,    -1,    -1,
      -1,    -1,    17,    -1,    -1,    20,    -1,    22,    23,    24,
      25,    26,    -1,    28,    29,    30,    -1,    32,    33,    34,
      35,    36,    37,    38,    -1,    40,    41,    -1,    43,    -1,
      45,    46,    -1,    -1,    49,    50,    51,    -1,    53,    54,
      55,    56,    -1,    58,    59,    60,    61,    62,    -1,    64,
      65,    -1,    67,    68,    69,    70,    71,    72,    73,    74,
      -1,    -1,    77,    -1,    79,    -1,    81,    82,    83,    -1,
      -1,    86,    87,    88,    -1,    90,    91,    -1,    93,    94,
      95,    96,    97,    -1,    -1,    -1,    -1,   102,   103,   104,
      -1,    -1,   107,   108,   109,    -1,   111,    -1,    -1,    -1,
     115,   116,   117,    -1,   119,   120,   121,    -1,    -1,    -1,
     125,    -1,    -1,   128,   129,   130,    -1,    -1,   133,   134,
      -1,   136,   137,   138,   139,   140,   141,    -1,    -1,   144,
      -1,   146,   147,   148,   149,    -1,   151,   152,   153,   154,
     155,   156,    -1,   158,   159,   160,   161,   162,    -1,   164,
      -1,    -1,   167,    -1,   169,   170,    -1,   172,   173,    -1,
     175,   176,   177,   178,   179,    -1,   181,   182,   183,   184,
     185,   186,   187,    -1,   189,   190,    -1,   192,   193,    -1,
     195,   196,    -1,   198,   199,    -1,   201,    -1,    -1,    -1,
     205,   206,   207,   208,   209,    -1,   211,   212,    -1,    -1,
      -1,   216,    -1,    -1,   219,   220,   221,    -1,    -1,   224,
      -1,    -1,   227,   228,    -1,    -1,    -1,    -1,    -1,    -1,
     235,   236,   237,    -1,    -1,   240,   241,    -1,   243,   244,
      -1,    -1,    -1,   248,    -1,   250,    -1,   252,   253,    -1,
     255,    -1,   257,   258,    -1,    -1,   261,    -1,    -1,    -1,
      -1,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,    -1,    -1,    -1,   293,   294,
     295,   296,    -1,    -1,   299,   300,   301,   302,   303,    -1,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,    -1,   318,   319,   320,    -1,   322,   323,   324,
     325,   326,   327,   328,    -1,   330,   331,    -1,   333,   334,
      -1,   336,    -1,   338,   339,   340,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,    -1,   362,   363,    -1,
     365,    -1,   367,   368,    -1,   370,   371,   372,   373,   374,
     375,   376,   377,   378,    -1,    -1,    -1,   382,   383,    -1,
      -1,   386,   387,   388,    -1,   390,    -1,   392,   393,   394,
     395,   396,    -1,   398,   399,   400,    -1,   402,   403,    -1,
      -1,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,    -1,   418,   419,    -1,    -1,    -1,   423,   424,
     425,    -1,    -1,   428,    -1,    -1,    -1,   432,   433,   434,
     435,    -1,   437,   438,    -1,    -1,    -1,    -1,    -1,    -1,
     445,   446,    -1,   448,    -1,    -1,   451,    -1,    -1,   454,
     455,   456,   457,   458,   459,    -1,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,    -1,   473,   474,
      -1,   476,   477,   478,   479,   480,   481,    -1,    -1,    -1,
      -1,    -1,   487,    -1,   489,   490,   491,   492,   493,   494,
     495,    -1,   497,   498,   499,   500,    -1,   502,    -1,    -1,
     505,   506,   507,    -1,    -1,   510,    -1,    -1,    -1,   514,
     515,    -1,    -1,   518,   519,   520,   521,   522,   523,    -1,
      -1,   526,   527,    -1,   529,   530,   531,    -1,    -1,    -1,
      -1,   536,    -1,   538,   539,    -1,   541,    -1,   543,    -1,
      -1,    -1,    -1,   548,    -1,    -1,    -1,   552,   553,    -1,
      -1,    -1,    -1,   558,    -1,   560,    -1,    -1,   563,   564,
      -1,   566,   567,     5,    -1,     7,     8,     9,    10,    11,
      -1,    -1,    -1,    -1,    -1,    17,    -1,    -1,    20,    -1,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      32,    33,    34,    35,    36,    37,    38,    -1,    40,    41,
      -1,    43,    -1,    45,    46,    -1,    -1,    49,    50,    51,
      -1,    53,    54,    55,    56,    -1,    58,    59,    60,    61,
      62,    -1,    64,    65,    -1,    67,    68,    69,    70,    71,
      72,    73,    74,    -1,    -1,    77,    -1,    79,    -1,    81,
      82,    83,    -1,    -1,    86,    87,    88,    -1,    90,    91,
      -1,    93,    94,    95,    96,    97,    -1,    -1,    -1,    -1,
     102,   103,   104,    -1,    -1,   107,   108,   109,    -1,   111,
      -1,    -1,    -1,   115,   116,   117,    -1,   119,   120,   121,
      -1,    -1,    -1,   125,    -1,    -1,   128,   129,   130,    -1,
      -1,   133,   134,    -1,   136,   137,   138,   139,   140,   141,
      -1,    -1,   144,    -1,   146,   147,   148,   149,    -1,   151,
     152,   153,   154,   155,   156,    -1,   158,   159,   160,   161,
     162,    -1,   164,    -1,    -1,   167,    -1,   169,   170,    -1,
     172,   173,    -1,   175,   176,   177,   178,   179,    -1,   181,
     182,   183,   184,   185,   186,   187,    -1,   189,   190,    -1,
     192,   193,    -1,   195,   196,    -1,   198,   199,    -1,   201,
      -1,    -1,    -1,   205,   206,   207,   208,   209,    -1,   211,
     212,    -1,    -1,    -1,   216,    -1,    -1,   219,   220,   221,
      -1,    -1,   224,    -1,    -1,   227,   228,    -1,    -1,    -1,
      -1,    -1,    -1,   235,   236,   237,    -1,    -1,   240,   241,
      -1,   243,   244,    -1,    -1,    -1,   248,    -1,   250,    -1,
     252,   253,    -1,   255,    -1,   257,   258,    -1,    -1,   261,
      -1,    -1,    -1,    -1,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,    -1,    -1,
      -1,   293,   294,   295,   296,    -1,    -1,   299,   300,   301,
     302,   303,    -1,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,    -1,   318,   319,   320,    -1,
     322,   323,   324,   325,    -1,   327,   328,    -1,   330,   331,
      -1,   333,   334,    -1,   336,    -1,   338,   339,   340,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,    -1,
     362,   363,    -1,   365,    -1,   367,   368,    -1,   370,   371,
     372,   373,   374,   375,   376,   377,   378,    -1,    -1,    -1,
     382,   383,    -1,    -1,   386,   387,   388,    -1,   390,    -1,
     392,   393,   394,   395,   396,    -1,   398,   399,   400,    -1,
     402,   403,    -1,    -1,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,    -1,   418,   419,    -1,    -1,
      -1,   423,   424,   425,    -1,    -1,   428,    -1,    -1,    -1,
     432,   433,   434,   435,    -1,   437,   438,    -1,    -1,    -1,
      -1,    -1,    -1,   445,   446,    -1,   448,    -1,    -1,   451,
      -1,    -1,   454,   455,   456,   457,   458,   459,    -1,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
      -1,   473,   474,    -1,   476,   477,   478,   479,   480,   481,
      -1,    -1,    -1,    -1,    -1,   487,    -1,   489,   490,   491,
     492,   493,   494,   495,    -1,   497,   498,   499,   500,    -1,
     502,    -1,    -1,   505,   506,   507,    -1,    -1,   510,    -1,
      -1,    -1,   514,   515,    -1,    -1,   518,   519,   520,   521,
     522,   523,    -1,    -1,   526,   527,    -1,   529,   530,   531,
      -1,    -1,    -1,    -1,   536,    -1,   538,   539,    -1,   541,
      -1,   543,    -1,    -1,    -1,    -1,   548,    -1,    -1,    -1,
     552,   553,    -1,    -1,    -1,    -1,   558,    -1,   560,    -1,
      -1,   563,   564,    -1,   566,   567,     5,    -1,     7,     8,
       9,    10,    11,    -1,    -1,    -1,    -1,    -1,    17,    -1,
      -1,    20,    -1,    -1,    23,    24,    25,    26,    -1,    28,
      -1,    30,    -1,    -1,    33,    -1,    -1,    -1,    37,    -1,
      -1,    40,    41,    -1,    43,    -1,    45,    46,    -1,    -1,
      49,    -1,    51,    -1,    53,    54,    -1,    56,    -1,    58,
      59,    60,    -1,    62,    -1,    64,    65,    -1,    67,    68,
      69,    70,    71,    -1,    -1,    74,    -1,    -1,    77,    78,
      79,    -1,    -1,    -1,    -1,    -1,    -1,    86,    -1,    -1,
      -1,    -1,    -1,    -1,    93,    94,    -1,    -1,    97,    -1,
      -1,    -1,    -1,   102,   103,    -1,    -1,    -1,    -1,    -1,
     109,    -1,   111,    -1,    -1,    -1,    -1,    -1,   117,    -1,
     119,   120,   121,    -1,    -1,    -1,   125,    -1,    -1,   128,
     129,   130,    -1,    -1,    -1,   134,    -1,    -1,    -1,   138,
     139,   140,   141,    -1,    -1,   144,    -1,   146,   147,   148,
      -1,    -1,   151,    -1,   153,    -1,    -1,   156,    -1,    -1,
     159,   160,   161,    -1,    -1,   164,    -1,    -1,    -1,    -1,
     169,   170,    -1,    -1,   173,   174,   175,    -1,    -1,    -1,
      -1,    -1,    -1,   182,   183,    -1,    -1,   186,   187,    -1,
     189,    -1,    -1,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,   201,    -1,    -1,    -1,   205,   206,   207,   208,
      -1,    -1,   211,   212,   213,    -1,    -1,   216,    -1,    -1,
      -1,   220,    -1,    -1,    -1,   224,    -1,    -1,   227,   228,
      -1,    -1,    -1,   232,    -1,    -1,   235,    -1,   237,    -1,
      -1,    -1,   241,    -1,    -1,   244,    -1,   246,    -1,    -1,
      -1,   250,    -1,   252,    -1,    -1,   255,    -1,   257,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   267,   268,
     269,   270,   271,   272,    -1,   274,   275,   276,   277,   278,
     279,   280,   281,   282,    -1,   284,   285,   286,    -1,   288,
     289,    -1,    -1,    -1,   293,   294,   295,   296,    -1,    -1,
     299,   300,    -1,    -1,   303,    -1,   305,    -1,   307,    -1,
      -1,   310,   311,   312,   313,   314,   315,   316,    -1,    -1,
     319,   320,    -1,   322,   323,   324,    -1,    -1,    -1,   328,
      -1,    -1,    -1,    -1,   333,   334,    -1,   336,    -1,   338,
     339,   340,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   351,   352,   353,    -1,   355,    -1,   357,    -1,
     359,    -1,    -1,   362,   363,    -1,   365,    -1,   367,   368,
      -1,   370,   371,   372,   373,   374,   375,   376,   377,    -1,
      -1,    -1,    -1,   382,   383,    -1,    -1,   386,   387,   388,
      -1,   390,    -1,   392,   393,    -1,    -1,   396,    -1,   398,
     399,   400,    -1,   402,   403,    -1,    -1,    -1,   407,   408,
      -1,   410,   411,    -1,   413,   414,   415,   416,    -1,   418,
     419,   420,    -1,    -1,   423,   424,   425,    -1,    -1,   428,
      -1,    -1,    -1,   432,   433,   434,   435,    -1,   437,   438,
     439,    -1,    -1,    -1,    -1,    -1,   445,   446,    -1,   448,
      -1,    -1,   451,    -1,    -1,   454,   455,    -1,    -1,   458,
     459,    -1,   461,   462,   463,    -1,    -1,    -1,   467,   468,
      -1,   470,   471,    -1,   473,   474,    -1,    -1,   477,   478,
     479,   480,   481,    -1,    -1,    -1,    -1,    -1,   487,    -1,
     489,    -1,    -1,   492,   493,   494,   495,    -1,    -1,   498,
     499,    -1,    -1,   502,    -1,    -1,    -1,    -1,   507,    -1,
      -1,   510,    -1,    -1,    -1,   514,   515,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   523,    -1,    -1,   526,    -1,    -1,
     529,   530,   531,    -1,    -1,    -1,    -1,   536,    -1,   538,
     539,    -1,    -1,    -1,   543,    -1,     5,    -1,     7,     8,
       9,    10,    11,    -1,    -1,    -1,    -1,    -1,    17,    -1,
      -1,    20,    -1,    -1,    23,    24,    25,    26,   567,    28,
      -1,    30,    -1,    -1,    33,    -1,    -1,    -1,    37,    -1,
      -1,    40,    41,    -1,    43,    -1,    45,    46,    -1,    -1,
      49,    -1,    51,    -1,    53,    54,    -1,    56,    -1,    58,
      59,    60,    -1,    62,    -1,    64,    65,    -1,    67,    68,
      69,    70,    71,    -1,    -1,    74,    -1,    -1,    77,    78,
      79,    -1,    -1,    -1,    -1,    -1,    -1,    86,    -1,    -1,
      -1,    -1,    -1,    -1,    93,    94,    -1,    -1,    97,    -1,
      -1,    -1,    -1,   102,   103,    -1,    -1,    -1,    -1,    -1,
     109,    -1,   111,    -1,    -1,    -1,    -1,    -1,   117,    -1,
     119,   120,   121,    -1,    -1,    -1,   125,    -1,    -1,   128,
     129,   130,    -1,    -1,    -1,   134,    -1,    -1,    -1,   138,
     139,   140,   141,    -1,    -1,   144,    -1,   146,   147,   148,
      -1,    -1,   151,    -1,   153,    -1,    -1,   156,    -1,    -1,
     159,   160,   161,    -1,    -1,   164,    -1,    -1,    -1,    -1,
     169,   170,    -1,    -1,   173,   174,   175,    -1,    -1,    -1,
      -1,    -1,    -1,   182,   183,    -1,    -1,   186,   187,    -1,
     189,    -1,    -1,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,   201,    -1,    -1,    -1,   205,   206,   207,   208,
      -1,    -1,   211,   212,   213,    -1,    -1,   216,    -1,    -1,
      -1,   220,    -1,    -1,    -1,   224,    -1,    -1,   227,   228,
      -1,    -1,    -1,   232,    -1,    -1,   235,    -1,   237,    -1,
      -1,    -1,   241,    -1,    -1,   244,    -1,    -1,    -1,    -1,
      -1,   250,    -1,   252,    -1,    -1,   255,    -1,   257,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   267,   268,
     269,   270,   271,   272,    -1,   274,   275,   276,   277,   278,
     279,   280,   281,   282,    -1,   284,   285,   286,    -1,   288,
     289,    -1,    -1,    -1,   293,   294,   295,   296,    -1,    -1,
     299,   300,    -1,    -1,   303,    -1,   305,    -1,   307,    -1,
      -1,   310,   311,   312,   313,   314,   315,   316,    -1,    -1,
     319,   320,    -1,   322,   323,   324,    -1,    -1,    -1,   328,
      -1,    -1,    -1,    -1,   333,   334,    -1,   336,    -1,   338,
     339,   340,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   351,   352,   353,    -1,   355,    -1,   357,    -1,
     359,    -1,    -1,   362,   363,    -1,   365,    -1,   367,   368,
      -1,   370,   371,   372,   373,   374,   375,   376,   377,    -1,
      -1,    -1,    -1,   382,   383,    -1,    -1,   386,   387,   388,
      -1,   390,    -1,   392,   393,    -1,    -1,   396,    -1,   398,
     399,   400,    -1,   402,   403,    -1,    -1,    -1,   407,   408,
      -1,   410,   411,    -1,   413,   414,   415,   416,    -1,   418,
     419,    -1,    -1,    -1,   423,   424,   425,    -1,    -1,   428,
      -1,    -1,    -1,   432,   433,   434,   435,    -1,   437,   438,
     439,    -1,    -1,    -1,    -1,    -1,   445,   446,    -1,   448,
      -1,    -1,   451,    -1,    -1,   454,   455,    -1,    -1,   458,
     459,    -1,   461,   462,   463,    -1,    -1,    -1,   467,   468,
      -1,   470,   471,    -1,   473,   474,    -1,    -1,   477,   478,
     479,   480,   481,    -1,    -1,    -1,    -1,    -1,   487,    -1,
     489,    -1,    -1,   492,   493,   494,   495,    -1,    -1,   498,
     499,    -1,    -1,   502,    -1,    -1,    -1,    -1,   507,    -1,
      -1,   510,    -1,    -1,    -1,   514,   515,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   523,    -1,    -1,   526,    -1,    -1,
     529,   530,   531,    -1,    -1,    -1,    -1,   536,    -1,   538,
     539,    -1,    -1,    -1,   543,    -1,     5,    -1,     7,     8,
       9,    10,    11,    -1,    -1,    -1,    -1,    -1,    17,    -1,
      -1,    20,    -1,    -1,    23,    24,    25,    26,   567,    28,
      -1,    30,    -1,    -1,    33,    -1,    -1,    -1,    37,    -1,
      -1,    40,    41,    -1,    43,    -1,    45,    46,    -1,    -1,
      49,    -1,    51,    -1,    53,    54,    -1,    56,    -1,    58,
      59,    60,    -1,    62,    -1,    64,    65,    -1,    67,    68,
      69,    70,    71,    -1,    -1,    74,    -1,    -1,    77,    -1,
      79,    -1,    -1,    -1,    -1,    -1,    -1,    86,    -1,    -1,
      -1,    -1,    -1,    -1,    93,    94,    -1,    -1,    97,    -1,
      -1,    -1,    -1,   102,   103,    -1,    -1,    -1,    -1,    -1,
     109,    -1,   111,    -1,    -1,    -1,    -1,    -1,   117,    -1,
     119,   120,   121,    -1,    -1,    -1,   125,    -1,    -1,   128,
     129,   130,    -1,    -1,    -1,   134,    -1,    -1,    -1,   138,
     139,   140,   141,    -1,    -1,   144,    -1,   146,   147,   148,
      -1,    -1,   151,    -1,   153,    -1,    -1,   156,    -1,    -1,
     159,   160,   161,    -1,    -1,   164,    -1,    -1,    -1,    -1,
     169,   170,    -1,    -1,   173,    -1,   175,    -1,    -1,    -1,
      -1,    -1,    -1,   182,   183,    -1,    -1,   186,   187,    -1,
     189,    -1,    -1,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,   201,    -1,    -1,    -1,   205,   206,   207,   208,
      -1,    -1,   211,   212,    -1,    -1,    -1,   216,    -1,    -1,
      -1,   220,    -1,    -1,    -1,   224,    -1,    -1,   227,   228,
      -1,    -1,    -1,    -1,    -1,    -1,   235,    -1,   237,    -1,
      -1,    -1,   241,    -1,    -1,   244,    -1,    -1,    -1,    -1,
      -1,   250,    -1,   252,    -1,    -1,   255,    -1,   257,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   267,   268,
     269,   270,   271,   272,    -1,   274,   275,   276,   277,   278,
     279,   280,   281,   282,    -1,   284,   285,   286,    -1,   288,
     289,    -1,    -1,    -1,   293,   294,   295,   296,    -1,    -1,
     299,   300,    -1,    -1,   303,    -1,   305,    -1,   307,    -1,
      -1,   310,   311,   312,   313,   314,   315,   316,    -1,    -1,
     319,   320,    -1,   322,   323,   324,    -1,    -1,    -1,   328,
      -1,    -1,    -1,    -1,   333,   334,    -1,   336,    -1,   338,
     339,   340,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   351,   352,   353,    -1,   355,    -1,   357,    -1,
     359,    -1,    -1,   362,   363,    -1,   365,    -1,   367,   368,
      -1,   370,   371,   372,   373,   374,   375,   376,   377,    -1,
      -1,    -1,    -1,   382,   383,    -1,    -1,   386,   387,   388,
      -1,   390,    -1,   392,   393,    -1,    -1,   396,    -1,   398,
     399,   400,    -1,   402,   403,    -1,    -1,    -1,   407,   408,
      -1,   410,   411,    -1,   413,   414,   415,   416,    -1,   418,
     419,   420,    -1,    -1,   423,   424,   425,    -1,    -1,   428,
      -1,    -1,    -1,   432,   433,   434,   435,    -1,   437,   438,
      -1,    -1,    -1,    -1,    -1,    -1,   445,   446,    -1,   448,
      -1,    -1,   451,    -1,    -1,   454,   455,    -1,    -1,   458,
     459,    -1,   461,   462,   463,    -1,    -1,    -1,   467,   468,
      -1,   470,   471,    -1,   473,   474,    -1,    -1,   477,   478,
     479,   480,   481,    -1,    -1,    -1,    -1,    -1,   487,    -1,
     489,    -1,    -1,   492,   493,   494,   495,    -1,    -1,   498,
     499,    -1,    -1,   502,    -1,    -1,    -1,    -1,   507,    -1,
      -1,   510,    -1,    -1,    -1,   514,   515,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   523,    -1,    -1,   526,    -1,    -1,
     529,   530,   531,    -1,    -1,    -1,    -1,   536,    -1,   538,
     539,    -1,    -1,    -1,   543,    -1,     5,    -1,     7,     8,
       9,    10,    11,    -1,    -1,    -1,    -1,    -1,    17,    -1,
      -1,    20,   561,    -1,    23,    24,    25,    26,   567,    28,
      -1,    30,    -1,    -1,    33,    -1,    -1,    -1,    37,    -1,
      -1,    40,    41,    -1,    43,    -1,    45,    46,    -1,    -1,
      49,    -1,    51,    -1,    53,    54,    -1,    56,    -1,    58,
      59,    60,    -1,    62,    -1,    64,    65,    -1,    67,    68,
      69,    70,    71,    -1,    -1,    74,    -1,    -1,    77,    -1,
      79,    -1,    -1,    -1,    -1,    -1,    -1,    86,    -1,    -1,
      -1,    -1,    -1,    -1,    93,    94,    -1,    -1,    97,    -1,
      -1,    -1,    -1,   102,   103,    -1,    -1,    -1,    -1,    -1,
     109,    -1,   111,    -1,    -1,    -1,    -1,    -1,   117,    -1,
     119,   120,   121,    -1,    -1,    -1,   125,    -1,    -1,   128,
     129,   130,    -1,    -1,    -1,   134,    -1,    -1,    -1,   138,
     139,   140,   141,    -1,    -1,   144,    -1,   146,   147,   148,
      -1,    -1,   151,    -1,   153,    -1,    -1,   156,    -1,    -1,
     159,   160,   161,    -1,    -1,   164,    -1,    -1,    -1,    -1,
     169,   170,    -1,    -1,   173,    -1,   175,    -1,    -1,    -1,
      -1,    -1,    -1,   182,   183,    -1,    -1,   186,   187,    -1,
     189,    -1,    -1,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,   201,    -1,    -1,    -1,   205,   206,   207,   208,
      -1,    -1,   211,   212,    -1,    -1,    -1,   216,    -1,    -1,
      -1,   220,    -1,    -1,    -1,   224,    -1,    -1,   227,   228,
      -1,    -1,    -1,    -1,    -1,    -1,   235,    -1,   237,    -1,
      -1,    -1,   241,    -1,    -1,   244,    -1,    -1,    -1,    -1,
      -1,   250,    -1,   252,    -1,    -1,   255,    -1,   257,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   267,   268,
     269,   270,   271,   272,    -1,   274,   275,   276,   277,   278,
     279,   280,   281,   282,    -1,   284,   285,   286,    -1,   288,
     289,    -1,    -1,    -1,   293,   294,   295,   296,    -1,    -1,
     299,   300,    -1,    -1,   303,    -1,   305,    -1,   307,    -1,
      -1,   310,   311,   312,   313,   314,   315,   316,    -1,    -1,
     319,   320,    -1,   322,   323,   324,    -1,    -1,    -1,   328,
      -1,    -1,    -1,    -1,   333,   334,    -1,   336,    -1,   338,
     339,   340,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   351,   352,   353,    -1,   355,    -1,   357,    -1,
     359,    -1,    -1,   362,   363,    -1,   365,    -1,   367,   368,
      -1,   370,   371,   372,   373,   374,   375,   376,   377,    -1,
      -1,    -1,    -1,   382,   383,    -1,    -1,   386,   387,   388,
      -1,   390,    -1,   392,   393,    -1,    -1,   396,    -1,   398,
     399,   400,    -1,   402,   403,    -1,    -1,    -1,   407,   408,
      -1,   410,   411,    -1,   413,   414,   415,   416,    -1,   418,
     419,    -1,    -1,    -1,   423,   424,   425,    -1,    -1,   428,
      -1,    -1,    -1,   432,   433,   434,   435,    -1,   437,   438,
      -1,    -1,    -1,    -1,    -1,    -1,   445,   446,    -1,   448,
      -1,    -1,   451,    -1,    -1,   454,   455,    -1,    -1,   458,
     459,    -1,   461,   462,   463,    -1,    -1,    -1,   467,   468,
      -1,   470,   471,    -1,   473,   474,    -1,    -1,   477,   478,
     479,   480,   481,    -1,    -1,    -1,    -1,    -1,   487,    -1,
     489,    -1,    -1,   492,   493,   494,   495,    -1,    -1,   498,
     499,    -1,    -1,   502,    -1,    -1,    -1,    -1,   507,    -1,
      -1,   510,    -1,    -1,    -1,   514,   515,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   523,    -1,    -1,   526,    -1,    -1,
     529,   530,   531,    -1,    -1,    -1,    -1,   536,    -1,   538,
     539,    -1,    -1,    -1,   543,    -1,    -1,    -1,    -1,    -1,
      -1,     5,    -1,     7,     8,     9,    10,    11,    -1,    -1,
      -1,    -1,   561,    17,    -1,    -1,    20,   566,   567,    23,
      24,    25,    26,    -1,    28,    -1,    30,    -1,    -1,    33,
      -1,    -1,    -1,    37,    -1,    -1,    40,    41,    -1,    43,
      -1,    45,    46,    -1,    -1,    49,    -1,    51,    -1,    53,
      54,    -1,    56,    -1,    58,    59,    60,    -1,    62,    -1,
      64,    65,    -1,    67,    68,    69,    70,    71,    -1,    -1,
      74,    -1,    -1,    77,    -1,    79,    -1,    -1,    -1,    -1,
      -1,    -1,    86,    -1,    -1,    -1,    -1,    -1,    -1,    93,
      94,    -1,    -1,    97,    -1,    -1,    -1,    -1,   102,   103,
      -1,    -1,    -1,    -1,    -1,   109,    -1,   111,    -1,    -1,
      -1,    -1,    -1,   117,    -1,   119,   120,   121,    -1,    -1,
      -1,   125,    -1,    -1,   128,   129,   130,    -1,    -1,    -1,
     134,    -1,    -1,    -1,   138,   139,   140,   141,    -1,    -1,
     144,    -1,   146,   147,   148,    -1,    -1,   151,    -1,   153,
      -1,    -1,   156,    -1,    -1,   159,   160,   161,    -1,    -1,
     164,    -1,    -1,    -1,    -1,   169,   170,    -1,    -1,   173,
      -1,   175,    -1,    -1,    -1,    -1,    -1,    -1,   182,   183,
      -1,    -1,   186,   187,    -1,   189,    -1,    -1,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,   201,    -1,    -1,
      -1,   205,   206,   207,   208,    -1,    -1,   211,   212,    -1,
      -1,    -1,   216,    -1,    -1,    -1,   220,    -1,   222,    -1,
     224,    -1,    -1,   227,   228,    -1,    -1,    -1,    -1,    -1,
      -1,   235,    -1,   237,    -1,    -1,    -1,   241,    -1,    -1,
     244,    -1,    -1,    -1,    -1,    -1,   250,    -1,   252,    -1,
      -1,   255,    -1,   257,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   267,   268,   269,   270,   271,   272,    -1,
     274,   275,   276,   277,   278,   279,   280,   281,   282,    -1,
     284,   285,   286,    -1,   288,   289,    -1,    -1,    -1,   293,
     294,   295,   296,    -1,    -1,   299,   300,    -1,    -1,   303,
      -1,   305,    -1,   307,    -1,    -1,   310,   311,   312,   313,
     314,   315,   316,    -1,    -1,   319,   320,    -1,   322,   323,
     324,    -1,    -1,    -1,   328,    -1,    -1,    -1,    -1,   333,
     334,    -1,   336,    -1,   338,   339,   340,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   351,   352,   353,
      -1,   355,    -1,   357,    -1,   359,    -1,    -1,   362,   363,
      -1,   365,    -1,   367,   368,    -1,   370,   371,   372,   373,
     374,   375,   376,   377,    -1,    -1,    -1,    -1,   382,   383,
      -1,    -1,   386,   387,   388,    -1,   390,    -1,   392,   393,
      -1,    -1,   396,    -1,   398,   399,   400,    -1,   402,   403,
      -1,    -1,    -1,   407,   408,    -1,   410,   411,    -1,   413,
     414,   415,   416,    -1,   418,   419,    -1,    -1,    -1,   423,
     424,   425,    -1,    -1,   428,    -1,    -1,    -1,   432,   433,
     434,   435,    -1,   437,   438,    -1,    -1,    -1,    -1,    -1,
      -1,   445,   446,    -1,   448,    -1,    -1,   451,    -1,    -1,
     454,   455,    -1,    -1,   458,   459,    -1,   461,   462,   463,
      -1,    -1,    -1,   467,   468,    -1,   470,   471,    -1,   473,
     474,    -1,    -1,   477,   478,   479,   480,   481,    -1,    -1,
      -1,    -1,    -1,   487,    -1,   489,    -1,    -1,   492,   493,
     494,   495,    -1,    -1,   498,   499,    -1,    -1,   502,    -1,
      -1,    -1,    -1,   507,    -1,    -1,   510,    -1,    -1,    -1,
     514,   515,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   523,
      -1,    -1,   526,    -1,    -1,   529,   530,   531,    -1,    -1,
      -1,    -1,   536,    -1,   538,   539,    -1,    -1,    -1,   543,
      -1,     5,    -1,     7,     8,     9,    10,    11,    -1,    -1,
      -1,    -1,    -1,    17,    -1,    -1,    20,    -1,    -1,    23,
      24,    25,    26,   567,    28,    -1,    30,    -1,    -1,    33,
      -1,    -1,    -1,    37,    -1,    -1,    40,    41,    -1,    43,
      -1,    45,    46,    -1,    -1,    49,    -1,    51,    -1,    53,
      54,    -1,    56,    -1,    58,    59,    60,    -1,    62,    -1,
      64,    65,    -1,    67,    68,    69,    70,    71,    -1,    -1,
      74,    -1,    -1,    77,    -1,    79,    -1,    -1,    -1,    -1,
      -1,    -1,    86,    -1,    -1,    -1,    -1,    -1,    -1,    93,
      94,    -1,    -1,    97,    -1,    -1,    -1,    -1,   102,   103,
      -1,    -1,    -1,    -1,    -1,   109,    -1,   111,    -1,    -1,
      -1,    -1,    -1,   117,    -1,   119,   120,   121,    -1,    -1,
      -1,   125,    -1,    -1,   128,   129,   130,    -1,    -1,    -1,
     134,    -1,    -1,    -1,   138,   139,   140,   141,    -1,    -1,
     144,    -1,   146,   147,   148,    -1,    -1,   151,    -1,   153,
      -1,    -1,   156,    -1,    -1,   159,   160,   161,    -1,    -1,
     164,    -1,    -1,    -1,    -1,   169,   170,    -1,    -1,   173,
      -1,   175,    -1,    -1,    -1,    -1,    -1,    -1,   182,   183,
      -1,    -1,   186,   187,    -1,   189,    -1,    -1,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,   201,    -1,    -1,
      -1,   205,   206,   207,   208,    -1,    -1,   211,   212,    -1,
      -1,    -1,   216,    -1,    -1,    -1,   220,    -1,    -1,    -1,
     224,    -1,    -1,   227,   228,    -1,    -1,    -1,    -1,    -1,
      -1,   235,    -1,   237,    -1,    -1,    -1,   241,    -1,    -1,
     244,    -1,    -1,    -1,    -1,    -1,   250,    -1,   252,    -1,
      -1,   255,    -1,   257,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   267,   268,   269,   270,   271,   272,    -1,
     274,   275,   276,   277,   278,   279,   280,   281,   282,    -1,
     284,   285,   286,    -1,   288,   289,    -1,    -1,    -1,   293,
     294,   295,   296,    -1,    -1,   299,   300,    -1,    -1,   303,
      -1,   305,    -1,   307,    -1,    -1,   310,   311,   312,   313,
     314,   315,   316,    -1,    -1,   319,   320,    -1,   322,   323,
     324,    -1,    -1,    -1,   328,    -1,    -1,    -1,    -1,   333,
     334,    -1,   336,    -1,   338,   339,   340,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   351,   352,   353,
      -1,   355,    -1,   357,    -1,   359,    -1,    -1,   362,   363,
      -1,   365,    -1,   367,   368,    -1,   370,   371,   372,   373,
     374,   375,   376,   377,    -1,    -1,    -1,    -1,   382,   383,
      -1,    -1,   386,   387,   388,    -1,   390,    -1,   392,   393,
      -1,    -1,   396,    -1,   398,   399,   400,    -1,   402,   403,
      -1,    -1,    -1,   407,   408,    -1,   410,   411,    -1,   413,
     414,   415,   416,    -1,   418,   419,    -1,    -1,    -1,   423,
     424,   425,    -1,    -1,   428,    -1,    -1,    -1,   432,   433,
     434,   435,    -1,   437,   438,    -1,    -1,    -1,    -1,    -1,
      -1,   445,   446,    -1,   448,    -1,    -1,   451,    -1,    -1,
     454,   455,    -1,    -1,   458,   459,    -1,   461,   462,   463,
      -1,    -1,    -1,   467,   468,    -1,   470,   471,    -1,   473,
     474,    -1,    -1,   477,   478,   479,   480,   481,    -1,    -1,
      -1,    -1,    -1,   487,    -1,   489,    -1,    -1,   492,   493,
     494,   495,    -1,    -1,   498,   499,    -1,    -1,   502,    -1,
      -1,    -1,    -1,   507,    -1,    -1,   510,    -1,    -1,    -1,
     514,   515,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   523,
      -1,    -1,   526,    -1,    -1,   529,   530,   531,    -1,    -1,
      -1,    -1,   536,    -1,   538,   539,    -1,    -1,    -1,   543,
      -1,     5,    -1,     7,     8,     9,    10,    11,    -1,    -1,
     554,    -1,    -1,    17,    -1,    -1,    20,    -1,    -1,    23,
      24,    25,    26,   567,    28,    -1,    30,    -1,    -1,    33,
      -1,    -1,    -1,    37,    -1,    -1,    40,    41,    -1,    43,
      -1,    45,    46,    -1,    -1,    49,    -1,    51,    -1,    53,
      54,    -1,    56,    -1,    58,    59,    60,    -1,    62,    -1,
      64,    65,    -1,    67,    68,    69,    70,    71,    -1,    -1,
      74,    -1,    -1,    77,    -1,    79,    -1,    -1,    -1,    -1,
      -1,    -1,    86,    -1,    -1,    -1,    -1,    -1,    -1,    93,
      94,    -1,    -1,    97,    -1,    -1,    -1,    -1,   102,   103,
      -1,    -1,    -1,    -1,    -1,   109,    -1,   111,    -1,    -1,
      -1,    -1,    -1,   117,    -1,   119,   120,   121,    -1,    -1,
      -1,   125,    -1,    -1,   128,   129,   130,    -1,    -1,    -1,
     134,    -1,    -1,    -1,   138,   139,   140,   141,    -1,    -1,
     144,    -1,   146,   147,   148,    -1,    -1,   151,    -1,   153,
      -1,    -1,   156,    -1,    -1,   159,   160,   161,    -1,    -1,
     164,    -1,    -1,    -1,    -1,   169,   170,    -1,    -1,   173,
      -1,   175,    -1,    -1,    -1,    -1,    -1,    -1,   182,   183,
      -1,    -1,   186,   187,    -1,   189,    -1,    -1,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,   201,    -1,    -1,
      -1,   205,   206,   207,   208,    -1,    -1,   211,   212,    -1,
      -1,    -1,   216,    -1,    -1,    -1,   220,    -1,    -1,    -1,
     224,    -1,    -1,   227,   228,    -1,    -1,    -1,    -1,    -1,
      -1,   235,    -1,   237,    -1,    -1,    -1,   241,    -1,    -1,
     244,    -1,    -1,    -1,    -1,    -1,   250,    -1,   252,    -1,
      -1,   255,    -1,   257,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   267,   268,   269,   270,   271,   272,    -1,
     274,   275,   276,   277,   278,   279,   280,   281,   282,    -1,
     284,   285,   286,    -1,   288,   289,    -1,    -1,    -1,   293,
     294,   295,   296,    -1,    -1,   299,   300,    -1,    -1,   303,
      -1,   305,    -1,   307,    -1,    -1,   310,   311,   312,   313,
     314,   315,   316,    -1,    -1,   319,   320,    -1,   322,   323,
     324,    -1,    -1,    -1,   328,    -1,    -1,    -1,    -1,   333,
     334,    -1,   336,    -1,   338,   339,   340,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   351,   352,   353,
      -1,   355,    -1,   357,    -1,   359,    -1,    -1,   362,   363,
      -1,   365,    -1,   367,   368,    -1,   370,   371,   372,   373,
     374,   375,   376,   377,    -1,    -1,    -1,    -1,   382,   383,
      -1,    -1,   386,   387,   388,    -1,   390,    -1,   392,   393,
      -1,    -1,   396,    -1,   398,   399,   400,    -1,   402,   403,
      -1,    -1,    -1,   407,   408,    -1,   410,   411,    -1,   413,
     414,   415,   416,    -1,   418,   419,    -1,    -1,    -1,   423,
     424,   425,    -1,    -1,   428,    -1,    -1,    -1,   432,   433,
     434,   435,    -1,   437,   438,    -1,    -1,    -1,    -1,    -1,
      -1,   445,   446,    -1,   448,    -1,    -1,   451,    -1,    -1,
     454,   455,    -1,    -1,   458,   459,    -1,   461,   462,   463,
      -1,    -1,    -1,   467,   468,    -1,   470,   471,    -1,   473,
     474,    -1,    -1,   477,   478,   479,   480,   481,    -1,    -1,
      -1,    -1,    -1,   487,    -1,   489,    -1,    -1,   492,   493,
     494,   495,    -1,    -1,   498,   499,    -1,    -1,   502,    -1,
      -1,    -1,    -1,   507,    -1,    -1,   510,    -1,    -1,    -1,
     514,   515,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   523,
      -1,    -1,   526,    -1,    -1,   529,   530,   531,    -1,    -1,
      -1,    -1,   536,    -1,   538,   539,    -1,    -1,    -1,   543,
      -1,    -1,    -1,    -1,    -1,    -1,     5,    -1,     7,     8,
       9,    10,    11,    -1,    -1,    -1,   560,    -1,    17,    -1,
      -1,    20,    -1,   567,    23,    24,    25,    26,    -1,    28,
      -1,    30,    -1,    -1,    33,    -1,    -1,    -1,    37,    -1,
      -1,    40,    41,    -1,    43,    -1,    45,    46,    -1,    -1,
      49,    -1,    51,    -1,    53,    54,    -1,    56,    -1,    58,
      59,    60,    -1,    62,    -1,    64,    65,    -1,    67,    68,
      69,    70,    71,    -1,    -1,    74,    -1,    -1,    77,    -1,
      79,    -1,    -1,    -1,    -1,    -1,    -1,    86,    -1,    -1,
      -1,    -1,    -1,    -1,    93,    94,    -1,    -1,    97,    -1,
      -1,    -1,    -1,   102,   103,    -1,    -1,    -1,    -1,    -1,
     109,    -1,   111,    -1,    -1,    -1,    -1,    -1,   117,    -1,
     119,   120,   121,    -1,    -1,    -1,   125,    -1,    -1,   128,
     129,   130,    -1,    -1,    -1,   134,    -1,    -1,    -1,   138,
     139,   140,   141,    -1,    -1,   144,    -1,   146,   147,   148,
      -1,    -1,   151,    -1,   153,    -1,    -1,   156,    -1,    -1,
     159,   160,   161,    -1,    -1,   164,    -1,    -1,    -1,    -1,
     169,   170,    -1,    -1,   173,    -1,   175,    -1,    -1,    -1,
      -1,    -1,    -1,   182,   183,    -1,    -1,   186,   187,    -1,
     189,    -1,    -1,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,   201,    -1,    -1,    -1,   205,   206,   207,   208,
      -1,    -1,   211,   212,    -1,    -1,    -1,   216,    -1,    -1,
      -1,   220,    -1,    -1,    -1,   224,    -1,    -1,   227,   228,
      -1,    -1,    -1,    -1,    -1,    -1,   235,    -1,   237,    -1,
      -1,    -1,   241,    -1,    -1,   244,    -1,    -1,    -1,    -1,
      -1,   250,    -1,   252,    -1,    -1,   255,    -1,   257,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   267,   268,
     269,   270,   271,   272,    -1,   274,   275,   276,   277,   278,
     279,   280,   281,   282,    -1,   284,   285,   286,    -1,   288,
     289,    -1,    -1,    -1,   293,   294,   295,   296,    -1,    -1,
     299,   300,    -1,    -1,   303,    -1,   305,    -1,   307,    -1,
      -1,   310,   311,   312,   313,   314,   315,   316,    -1,    -1,
     319,   320,    -1,   322,   323,   324,    -1,    -1,    -1,   328,
      -1,    -1,    -1,    -1,   333,   334,    -1,   336,    -1,   338,
     339,   340,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   351,   352,   353,    -1,   355,    -1,   357,    -1,
     359,    -1,    -1,   362,   363,    -1,   365,    -1,   367,   368,
      -1,   370,   371,   372,   373,   374,   375,   376,   377,    -1,
      -1,    -1,    -1,   382,   383,    -1,    -1,   386,   387,   388,
      -1,   390,    -1,   392,   393,    -1,    -1,   396,    -1,   398,
     399,   400,    -1,   402,   403,    -1,    -1,    -1,   407,   408,
      -1,   410,   411,    -1,   413,   414,   415,   416,    -1,   418,
     419,    -1,    -1,    -1,   423,   424,   425,    -1,    -1,   428,
      -1,    -1,    -1,   432,   433,   434,   435,    -1,   437,   438,
      -1,    -1,    -1,    -1,    -1,    -1,   445,   446,    -1,   448,
      -1,    -1,   451,    -1,    -1,   454,   455,    -1,    -1,   458,
     459,    -1,   461,   462,   463,    -1,    -1,    -1,   467,   468,
      -1,   470,   471,    -1,   473,   474,    -1,    -1,   477,   478,
     479,   480,   481,    -1,    -1,    -1,    -1,    -1,   487,    -1,
     489,    -1,    -1,   492,   493,   494,   495,    -1,    -1,   498,
     499,    -1,    -1,   502,    -1,    -1,    -1,    -1,   507,    -1,
      -1,   510,    -1,    -1,    -1,   514,   515,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   523,    -1,    -1,   526,    -1,    -1,
     529,   530,   531,    -1,    -1,    -1,    -1,   536,    -1,   538,
     539,    -1,    -1,    -1,   543,    -1,    -1,    -1,    -1,    -1,
      -1,     5,    -1,     7,     8,     9,    10,    11,    -1,    -1,
      -1,    -1,    -1,    17,    -1,    -1,    20,   566,   567,    23,
      24,    25,    26,    -1,    28,    -1,    30,    -1,    -1,    33,
      -1,    -1,    -1,    37,    -1,    -1,    40,    41,    -1,    43,
      -1,    45,    46,    -1,    -1,    49,    -1,    51,    -1,    53,
      54,    -1,    56,    -1,    58,    59,    60,    -1,    62,    -1,
      64,    65,    -1,    67,    68,    69,    70,    71,    -1,    -1,
      74,    -1,    -1,    77,    -1,    79,    -1,    -1,    -1,    -1,
      -1,    -1,    86,    -1,    -1,    -1,    -1,    -1,    -1,    93,
      94,    -1,    -1,    97,    -1,    -1,    -1,    -1,   102,   103,
      -1,    -1,    -1,    -1,    -1,   109,    -1,   111,    -1,    -1,
      -1,    -1,    -1,   117,    -1,   119,   120,   121,    -1,    -1,
      -1,   125,    -1,    -1,   128,   129,   130,    -1,    -1,    -1,
     134,    -1,    -1,    -1,   138,   139,   140,   141,    -1,    -1,
     144,    -1,   146,   147,   148,    -1,    -1,   151,    -1,   153,
      -1,    -1,   156,    -1,    -1,   159,   160,   161,    -1,    -1,
     164,    -1,    -1,    -1,    -1,   169,   170,    -1,    -1,   173,
      -1,   175,    -1,    -1,    -1,    -1,    -1,    -1,   182,   183,
      -1,    -1,   186,   187,    -1,   189,    -1,    -1,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,   201,    -1,    -1,
      -1,   205,   206,   207,   208,    -1,    -1,   211,   212,    -1,
      -1,    -1,   216,    -1,    -1,    -1,   220,    -1,    -1,    -1,
     224,    -1,    -1,   227,   228,    -1,    -1,    -1,    -1,    -1,
      -1,   235,    -1,   237,    -1,    -1,    -1,   241,    -1,    -1,
     244,    -1,    -1,    -1,    -1,    -1,   250,    -1,   252,    -1,
      -1,   255,    -1,   257,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   267,   268,   269,   270,   271,   272,    -1,
     274,   275,   276,   277,   278,   279,   280,   281,   282,    -1,
     284,   285,   286,    -1,   288,   289,    -1,    -1,    -1,   293,
     294,   295,   296,    -1,    -1,   299,   300,    -1,    -1,   303,
      -1,   305,    -1,   307,    -1,    -1,   310,   311,   312,   313,
     314,   315,   316,    -1,    -1,   319,   320,    -1,   322,   323,
     324,    -1,    -1,    -1,   328,    -1,    -1,    -1,    -1,   333,
     334,    -1,   336,    -1,   338,   339,   340,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   351,   352,   353,
      -1,   355,    -1,   357,    -1,   359,    -1,    -1,   362,   363,
      -1,   365,    -1,   367,   368,    -1,   370,   371,   372,   373,
     374,   375,   376,   377,    -1,    -1,    -1,    -1,   382,   383,
      -1,    -1,   386,   387,   388,    -1,   390,    -1,   392,   393,
      -1,    -1,   396,    -1,   398,   399,   400,    -1,   402,   403,
      -1,    -1,    -1,   407,   408,    -1,   410,   411,    -1,   413,
     414,   415,   416,    -1,   418,   419,    -1,    -1,    -1,   423,
     424,   425,    -1,    -1,   428,    -1,    -1,    -1,   432,   433,
     434,   435,    -1,   437,   438,    -1,    -1,    -1,    -1,    -1,
      -1,   445,   446,    -1,   448,    -1,    -1,   451,    -1,    -1,
     454,   455,    -1,    -1,   458,   459,    -1,   461,   462,   463,
      -1,    -1,    -1,   467,   468,    -1,   470,   471,    -1,   473,
     474,    -1,    -1,   477,   478,   479,   480,   481,    -1,    -1,
      -1,    -1,    -1,   487,    -1,   489,    -1,    -1,   492,   493,
     494,   495,    -1,    -1,   498,   499,    -1,    -1,   502,    -1,
      -1,    -1,    -1,   507,    -1,    -1,   510,    -1,    -1,    -1,
     514,   515,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   523,
      -1,    -1,   526,    -1,    -1,   529,   530,   531,    -1,    -1,
      -1,    -1,   536,    -1,   538,   539,    -1,    -1,    -1,   543,
      -1,     5,    -1,     7,     8,     9,    10,    11,    -1,    -1,
      -1,    -1,    -1,    17,    -1,    -1,    20,    -1,    -1,    23,
      24,    25,    26,   567,    28,    -1,    30,    -1,    -1,    33,
      -1,    -1,    -1,    37,    -1,    -1,    40,    41,    -1,    43,
      -1,    45,    46,    -1,    -1,    49,    -1,    51,    -1,    53,
      54,    -1,    56,    -1,    58,    59,    60,    -1,    62,    -1,
      64,    65,    -1,    67,    68,    69,    70,    71,    -1,    -1,
      74,    -1,    -1,    77,    -1,    79,    -1,    -1,    -1,    -1,
      -1,    -1,    86,    -1,    -1,    -1,    -1,    -1,    -1,    93,
      94,    -1,    -1,    97,    -1,    -1,    -1,    -1,   102,   103,
      -1,    -1,    -1,    -1,    -1,   109,    -1,   111,    -1,    -1,
      -1,    -1,    -1,   117,    -1,   119,   120,   121,    -1,    -1,
      -1,   125,    -1,    -1,   128,   129,   130,    -1,    -1,    -1,
     134,    -1,    -1,    -1,   138,   139,   140,   141,    -1,    -1,
     144,    -1,   146,   147,   148,    -1,    -1,   151,    -1,   153,
      -1,    -1,   156,    -1,    -1,   159,   160,   161,    -1,    -1,
     164,    -1,    -1,    -1,    -1,   169,   170,    -1,    -1,   173,
      -1,   175,    -1,    -1,    -1,    -1,    -1,    -1,   182,   183,
      -1,    -1,   186,   187,    -1,   189,    -1,    -1,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,   201,    -1,    -1,
      -1,   205,   206,   207,   208,    -1,    -1,   211,   212,    -1,
      -1,    -1,   216,    -1,    -1,    -1,   220,    -1,    -1,    -1,
     224,    -1,    -1,   227,   228,    -1,    -1,    -1,    -1,    -1,
      -1,   235,    -1,   237,    -1,    -1,    -1,   241,    -1,    -1,
     244,    -1,    -1,    -1,    -1,    -1,   250,    -1,   252,    -1,
      -1,   255,    -1,   257,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   267,   268,   269,   270,   271,   272,    -1,
     274,   275,   276,   277,   278,   279,   280,   281,   282,    -1,
     284,   285,   286,    -1,   288,   289,    -1,    -1,    -1,   293,
     294,   295,   296,    -1,    -1,   299,   300,    -1,    -1,   303,
      -1,   305,    -1,   307,    -1,    -1,   310,   311,   312,   313,
     314,   315,   316,    -1,    -1,   319,   320,    -1,   322,   323,
     324,    -1,    -1,    -1,   328,    -1,    -1,    -1,    -1,   333,
     334,    -1,   336,    -1,   338,   339,   340,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   351,   352,   353,
      -1,   355,    -1,   357,    -1,   359,    -1,    -1,   362,   363,
      -1,   365,    -1,   367,   368,    -1,   370,   371,   372,   373,
     374,   375,   376,   377,    -1,    -1,    -1,    -1,   382,   383,
      -1,    -1,   386,   387,   388,    -1,   390,    -1,   392,   393,
      -1,    -1,   396,    -1,   398,   399,   400,    -1,   402,   403,
      -1,    -1,    -1,   407,   408,    -1,   410,   411,    -1,   413,
     414,   415,   416,    -1,   418,   419,    -1,    -1,    -1,   423,
     424,   425,    -1,    -1,   428,    -1,    -1,    -1,   432,   433,
     434,   435,    -1,   437,   438,    -1,    -1,    -1,    -1,    -1,
      -1,   445,   446,    -1,   448,    -1,    -1,   451,    -1,    -1,
     454,   455,    -1,    -1,   458,   459,    -1,   461,   462,   463,
      -1,    -1,    -1,   467,   468,    -1,   470,   471,    -1,   473,
     474,    -1,    -1,   477,   478,   479,   480,   481,    -1,    -1,
      -1,    -1,    -1,   487,    -1,   489,    -1,    -1,   492,   493,
     494,   495,    -1,    -1,   498,   499,    -1,    -1,   502,    -1,
      -1,    -1,    -1,   507,    -1,    -1,   510,    -1,    -1,    -1,
     514,   515,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   523,
      -1,    -1,   526,    -1,    -1,   529,   530,   531,    -1,    -1,
      -1,    -1,   536,    -1,   538,   539,    -1,    -1,    -1,   543,
      -1,     5,    -1,     7,     8,     9,    10,    11,    -1,    -1,
      -1,    -1,    -1,    17,    -1,    -1,    20,    -1,    -1,    23,
      24,    25,    26,   567,    28,    -1,    30,    -1,    -1,    33,
      -1,    -1,    -1,    37,    -1,    -1,    40,    41,    -1,    43,
      -1,    45,    46,    -1,    -1,    49,    -1,    51,    -1,    53,
      54,    -1,    56,    -1,    58,    59,    60,    -1,    62,    -1,
      64,    65,    -1,    67,    68,    69,    70,    71,    -1,    -1,
      74,    -1,    -1,    77,    -1,    79,    -1,    -1,    -1,    -1,
      -1,    -1,    86,    -1,    -1,    -1,    -1,    -1,    -1,    93,
      94,    -1,    -1,    97,    -1,    -1,    -1,    -1,   102,   103,
      -1,    -1,    -1,    -1,    -1,   109,    -1,   111,    -1,    -1,
      -1,    -1,    -1,   117,    -1,   119,   120,   121,    -1,    -1,
      -1,   125,    -1,    -1,   128,   129,   130,    -1,    -1,    -1,
     134,    -1,    -1,    -1,   138,   139,   140,   141,    -1,    -1,
     144,    -1,   146,   147,   148,    -1,    -1,   151,    -1,   153,
      -1,    -1,   156,    -1,    -1,   159,   160,   161,    -1,    -1,
     164,    -1,    -1,    -1,    -1,   169,   170,    -1,    -1,   173,
      -1,   175,    -1,    -1,    -1,    -1,    -1,    -1,   182,   183,
      -1,    -1,   186,   187,    -1,   189,    -1,    -1,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,   201,    -1,    -1,
      -1,   205,   206,   207,   208,    -1,    -1,   211,   212,    -1,
      -1,    -1,   216,    -1,    -1,    -1,   220,    -1,    -1,    -1,
     224,    -1,    -1,   227,   228,    -1,    -1,    -1,    -1,    -1,
      -1,   235,    -1,   237,    -1,    -1,    -1,   241,    -1,    -1,
     244,    -1,    -1,    -1,    -1,    -1,   250,    -1,   252,    -1,
      -1,   255,    -1,   257,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   267,   268,   269,   270,   271,   272,    -1,
     274,   275,   276,   277,   278,   279,   280,   281,   282,    -1,
     284,   285,   286,    -1,   288,   289,    -1,    -1,    -1,   293,
     294,   295,   296,    -1,    -1,   299,   300,    -1,    -1,   303,
      -1,   305,    -1,   307,    -1,    -1,   310,   311,   312,   313,
     314,   315,   316,    -1,    -1,   319,   320,    -1,   322,   323,
     324,    -1,    -1,    -1,   328,    -1,    -1,    -1,    -1,   333,
     334,    -1,   336,    -1,   338,   339,   340,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   351,   352,   353,
      -1,   355,    -1,   357,    -1,   359,    -1,    -1,   362,   363,
      -1,   365,    -1,   367,   368,    -1,   370,   371,   372,   373,
     374,   375,   376,   377,    -1,    -1,    -1,    -1,   382,   383,
      -1,    -1,   386,   387,   388,    -1,   390,    -1,   392,   393,
      -1,    -1,   396,    -1,   398,   399,   400,    -1,   402,   403,
      -1,    -1,    -1,   407,   408,    -1,   410,   411,    -1,   413,
     414,   415,   416,    -1,   418,   419,    -1,    -1,    -1,   423,
     424,   425,    -1,    -1,   428,    -1,    -1,    -1,   432,   433,
     434,   435,    -1,   437,   438,    -1,    -1,    -1,    -1,    -1,
      -1,   445,   446,    -1,   448,    -1,    -1,   451,    -1,    -1,
     454,   455,    -1,    -1,   458,   459,    -1,   461,   462,   463,
      -1,    -1,    -1,   467,   468,    -1,   470,   471,    -1,   473,
     474,    -1,    -1,   477,   478,   479,   480,   481,    -1,    -1,
      -1,    -1,    -1,   487,    -1,   489,    -1,    -1,   492,   493,
     494,   495,    -1,    -1,   498,   499,    -1,    -1,   502,    -1,
      -1,    -1,    -1,   507,    -1,    -1,   510,    -1,    -1,    -1,
     514,   515,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   523,
      -1,    -1,   526,    -1,    -1,   529,   530,   531,    -1,    -1,
      -1,    -1,   536,    -1,   538,   539,    -1,    -1,    -1,   543,
      -1,     5,    -1,     7,     8,     9,    10,    11,    -1,    -1,
      -1,    -1,    -1,    17,    -1,    -1,    20,    -1,    -1,    23,
      24,    25,    26,   567,    28,    -1,    30,    -1,    -1,    33,
      -1,    -1,    -1,    37,    -1,    -1,    40,    41,    -1,    43,
      -1,    45,    46,    -1,    -1,    49,    -1,    51,    -1,    53,
      54,    -1,    56,    -1,    58,    59,    60,    -1,    62,    -1,
      64,    65,    -1,    67,    68,    69,    70,    71,    -1,    -1,
      74,    -1,    -1,    77,    -1,    79,    -1,    -1,    -1,    -1,
      -1,    -1,    86,    -1,    -1,    -1,    -1,    -1,    -1,    93,
      94,    -1,    -1,    97,    -1,    -1,    -1,    -1,   102,   103,
      -1,    -1,    -1,    -1,    -1,   109,    -1,   111,    -1,    -1,
      -1,    -1,    -1,   117,    -1,   119,   120,   121,    -1,    -1,
      -1,   125,    -1,    -1,   128,   129,   130,    -1,    -1,    -1,
     134,    -1,    -1,    -1,   138,   139,   140,   141,    -1,    -1,
     144,    -1,   146,   147,   148,    -1,    -1,   151,    -1,   153,
      -1,    -1,   156,    -1,    -1,   159,   160,   161,    -1,    -1,
     164,    -1,    -1,    -1,    -1,   169,   170,    -1,    -1,   173,
      -1,   175,    -1,    -1,    -1,    -1,    -1,    -1,   182,   183,
      -1,    -1,   186,   187,    -1,   189,    -1,    -1,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,   201,    -1,    -1,
      -1,   205,   206,   207,   208,    -1,    -1,   211,   212,    -1,
      -1,    -1,   216,    -1,    -1,    -1,   220,    -1,    -1,    -1,
     224,    -1,    -1,   227,   228,    -1,    -1,    -1,    -1,    -1,
      -1,   235,    -1,   237,    -1,    -1,    -1,   241,    -1,    -1,
     244,    -1,    -1,    -1,    -1,    -1,   250,    -1,   252,    -1,
      -1,   255,    -1,   257,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   267,   268,   269,   270,   271,   272,    -1,
     274,   275,   276,   277,   278,   279,   280,   281,   282,    -1,
     284,   285,   286,    -1,   288,   289,    -1,    -1,    -1,   293,
     294,   295,   296,    -1,    -1,   299,   300,    -1,    -1,   303,
      -1,   305,    -1,   307,    -1,    -1,   310,   311,   312,   313,
     314,   315,   316,    -1,    -1,   319,   320,    -1,   322,   323,
     324,    -1,    -1,    -1,   328,    -1,    -1,    -1,    -1,   333,
     334,    -1,   336,    -1,   338,   339,   340,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   351,   352,   353,
      -1,   355,    -1,   357,    -1,   359,    -1,    -1,   362,   363,
      -1,   365,    -1,   367,   368,    -1,   370,   371,   372,   373,
     374,   375,   376,   377,    -1,    -1,    -1,    -1,   382,   383,
      -1,    -1,   386,   387,   388,    -1,   390,    -1,   392,   393,
      -1,    -1,   396,    -1,   398,   399,   400,    -1,   402,   403,
      -1,    -1,    -1,   407,   408,    -1,   410,   411,    -1,   413,
     414,   415,   416,    -1,   418,   419,    -1,    -1,    -1,   423,
     424,   425,    -1,    -1,   428,    -1,    -1,    -1,   432,   433,
     434,   435,    -1,   437,   438,    -1,    -1,    -1,    -1,    -1,
      -1,   445,   446,    -1,   448,    -1,    -1,   451,    -1,    -1,
     454,   455,    -1,    -1,   458,   459,    -1,   461,   462,   463,
      -1,    -1,    -1,   467,   468,    -1,   470,   471,    -1,   473,
     474,    -1,    -1,   477,   478,   479,   480,   481,    -1,    -1,
      -1,    -1,    -1,   487,    -1,   489,    -1,    -1,   492,   493,
     494,   495,    -1,    -1,   498,   499,    -1,    -1,   502,    -1,
      -1,    -1,    -1,   507,    -1,    -1,   510,    -1,    -1,    -1,
     514,   515,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   523,
      -1,    -1,   526,    -1,    -1,   529,   530,   531,    -1,    -1,
      -1,    -1,   536,    -1,   538,   539,    -1,    -1,    -1,   543,
      -1,     5,    -1,     7,     8,     9,    10,    11,    -1,    -1,
      -1,    -1,    -1,    17,    -1,    -1,    20,    -1,    -1,    23,
      24,    25,    26,   567,    28,    -1,    30,    -1,    -1,    33,
      -1,    -1,    -1,    37,    -1,    -1,    40,    41,    -1,    43,
      -1,    45,    46,    -1,    -1,    49,    -1,    51,    -1,    53,
      54,    -1,    56,    -1,    58,    59,    60,    -1,    62,    -1,
      64,    65,    -1,    67,    68,    69,    70,    71,    -1,    -1,
      74,    -1,    -1,    77,    -1,    79,    -1,    -1,    -1,    -1,
      -1,    -1,    86,    -1,    -1,    -1,    -1,    -1,    -1,    93,
      94,    -1,    -1,    97,    -1,    -1,    -1,    -1,   102,   103,
      -1,    -1,    -1,    -1,    -1,   109,    -1,   111,    -1,    -1,
      -1,    -1,    -1,   117,    -1,   119,   120,   121,    -1,    -1,
      -1,   125,    -1,    -1,   128,   129,   130,    -1,    -1,    -1,
     134,    -1,    -1,    -1,   138,   139,   140,   141,    -1,    -1,
     144,    -1,   146,   147,   148,    -1,    -1,   151,    -1,   153,
      -1,    -1,   156,    -1,    -1,   159,   160,   161,    -1,    -1,
     164,    -1,    -1,    -1,    -1,   169,   170,    -1,    -1,   173,
      -1,   175,    -1,    -1,    -1,    -1,    -1,    -1,   182,   183,
      -1,    -1,   186,   187,    -1,   189,    -1,    -1,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,   201,    -1,    -1,
      -1,   205,   206,   207,   208,    -1,    -1,   211,   212,    -1,
      -1,    -1,   216,    -1,    -1,    -1,   220,    -1,    -1,    -1,
     224,    -1,    -1,   227,   228,    -1,    -1,    -1,    -1,    -1,
      -1,   235,    -1,   237,    -1,    -1,    -1,   241,    -1,    -1,
     244,   245,    -1,    -1,    -1,    -1,   250,    -1,   252,    -1,
      -1,   255,    -1,   257,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   267,   268,   269,   270,   271,   272,    -1,
     274,   275,   276,   277,   278,   279,   280,   281,   282,    -1,
     284,   285,   286,    -1,   288,   289,    -1,    -1,    -1,   293,
     294,   295,   296,    -1,    -1,   299,   300,    -1,    -1,   303,
      -1,   305,    -1,   307,    -1,    -1,   310,   311,   312,   313,
     314,   315,   316,    -1,    -1,   319,   320,    -1,   322,   323,
     324,    -1,    -1,    -1,   328,    -1,    -1,    -1,    -1,   333,
     334,    -1,   336,    -1,   338,   339,   340,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   351,   352,   353,
      -1,   355,    -1,   357,    -1,   359,    -1,    -1,   362,   363,
      -1,   365,    -1,   367,   368,    -1,   370,   371,   372,   373,
     374,   375,   376,   377,    -1,    -1,    -1,    -1,   382,   383,
      -1,    -1,   386,   387,   388,    -1,   390,    -1,   392,   393,
      -1,    -1,   396,    -1,   398,   399,   400,    -1,   402,   403,
      -1,    -1,    -1,   407,   408,    -1,   410,   411,    -1,   413,
     414,   415,   416,    -1,   418,   419,    -1,    -1,    -1,   423,
     424,   425,    -1,    -1,   428,    -1,    -1,    -1,   432,   433,
     434,   435,    -1,   437,   438,    -1,    -1,    -1,    -1,    -1,
      -1,   445,   446,    -1,   448,    -1,    -1,   451,    -1,    -1,
     454,   455,    -1,    -1,   458,   459,    -1,   461,   462,   463,
      -1,    -1,    -1,   467,   468,    -1,   470,   471,    -1,   473,
     474,    -1,   476,   477,   478,   479,   480,   481,    -1,    -1,
      -1,    -1,    -1,   487,    -1,   489,    -1,    -1,   492,   493,
     494,   495,    -1,    -1,   498,   499,    -1,    -1,   502,    -1,
      -1,    -1,    -1,   507,    -1,    -1,   510,    -1,    -1,    -1,
     514,   515,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   523,
      -1,    -1,   526,    -1,    -1,   529,   530,   531,    -1,    -1,
      -1,    -1,   536,    -1,   538,   539,    -1,    -1,     5,   543,
       7,     8,     9,    10,    11,    -1,    -1,    -1,    -1,    -1,
      17,    -1,    -1,    20,    -1,    -1,    23,    24,    25,    26,
      -1,    28,   566,    30,    -1,    -1,    33,    -1,    -1,    -1,
      37,    -1,    -1,    40,    41,    -1,    43,    -1,    45,    46,
      -1,    -1,    49,    -1,    51,    -1,    53,    54,    -1,    56,
      -1,    58,    59,    60,    -1,    62,    -1,    64,    65,    -1,
      67,    68,    69,    70,    71,    -1,    -1,    74,    -1,    -1,
      77,    -1,    79,    -1,    -1,    -1,    -1,    -1,    -1,    86,
      -1,    -1,    -1,    -1,    -1,    -1,    93,    94,    -1,    -1,
      97,    -1,    -1,    -1,    -1,   102,   103,    -1,    -1,    -1,
      -1,    -1,   109,    -1,   111,    -1,    -1,    -1,    -1,    -1,
     117,    -1,   119,   120,   121,    -1,    -1,    -1,   125,    -1,
      -1,   128,   129,   130,    -1,    -1,    -1,   134,    -1,    -1,
      -1,   138,   139,   140,   141,    -1,    -1,   144,    -1,   146,
     147,   148,    -1,    -1,   151,    -1,   153,    -1,    -1,   156,
      -1,    -1,   159,   160,   161,    -1,    -1,   164,    -1,    -1,
      -1,    -1,   169,   170,    -1,    -1,   173,    -1,   175,    -1,
      -1,    -1,    -1,    -1,    -1,   182,   183,    -1,    -1,   186,
     187,    -1,   189,    -1,    -1,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,   201,    -1,    -1,    -1,   205,   206,
     207,   208,    -1,    -1,   211,   212,    -1,    -1,    -1,   216,
      -1,    -1,    -1,   220,    -1,    -1,    -1,   224,    -1,    -1,
     227,   228,    -1,    -1,    -1,    -1,    -1,    -1,   235,    -1,
     237,    -1,    -1,    -1,   241,    -1,    -1,   244,   245,    -1,
      -1,    -1,    -1,   250,    -1,   252,    -1,    -1,   255,    -1,
     257,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     267,   268,   269,   270,   271,   272,    -1,   274,   275,   276,
     277,   278,   279,   280,   281,   282,    -1,   284,   285,   286,
      -1,   288,   289,    -1,    -1,    -1,   293,   294,   295,   296,
      -1,    -1,   299,   300,    -1,    -1,   303,    -1,   305,    -1,
     307,    -1,    -1,   310,   311,   312,   313,   314,   315,   316,
      -1,    -1,   319,   320,    -1,   322,   323,   324,    -1,    -1,
      -1,   328,    -1,    -1,    -1,    -1,   333,   334,    -1,   336,
      -1,   338,   339,   340,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   351,   352,   353,    -1,   355,    -1,
     357,    -1,   359,    -1,    -1,   362,   363,    -1,   365,    -1,
     367,   368,    -1,   370,   371,   372,   373,   374,   375,   376,
     377,    -1,    -1,    -1,    -1,   382,   383,    -1,    -1,   386,
     387,   388,    -1,   390,    -1,   392,   393,    -1,    -1,   396,
      -1,   398,   399,   400,    -1,   402,   403,    -1,    -1,    -1,
     407,   408,    -1,   410,   411,    -1,   413,   414,   415,   416,
      -1,   418,   419,    -1,    -1,    -1,   423,   424,   425,    -1,
      -1,   428,    -1,    -1,    -1,   432,   433,   434,   435,    -1,
     437,   438,    -1,    -1,    -1,    -1,    -1,    -1,   445,   446,
      -1,   448,    -1,    -1,   451,    -1,    -1,   454,   455,    -1,
      -1,   458,   459,    -1,   461,   462,   463,    -1,    -1,    -1,
     467,   468,    -1,   470,   471,    -1,   473,   474,    -1,   476,
     477,   478,   479,   480,   481,    -1,    -1,    -1,    -1,    -1,
     487,    -1,   489,    -1,    -1,   492,   493,   494,   495,    -1,
      -1,   498,   499,    -1,    -1,   502,    -1,    -1,    -1,    -1,
     507,    -1,    -1,   510,    -1,    -1,    -1,   514,   515,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   523,    -1,    -1,   526,
      -1,    -1,   529,   530,   531,    -1,    -1,    -1,    -1,   536,
      -1,   538,   539,    -1,    -1,     5,   543,     7,     8,     9,
      10,    11,    -1,    -1,    -1,    -1,    -1,    17,    -1,    -1,
      20,    -1,    -1,    23,    24,    25,    26,    -1,    28,   566,
      30,    -1,    -1,    33,    -1,    -1,    -1,    37,    -1,    -1,
      40,    41,    -1,    43,    -1,    45,    46,    -1,    -1,    49,
      -1,    51,    -1,    53,    54,    -1,    56,    -1,    58,    59,
      60,    -1,    62,    -1,    64,    65,    -1,    67,    68,    69,
      70,    71,    -1,    -1,    74,    -1,    -1,    77,    -1,    79,
      -1,    -1,    -1,    -1,    -1,    -1,    86,    -1,    -1,    -1,
      -1,    -1,    -1,    93,    94,    -1,    -1,    97,    -1,    -1,
      -1,    -1,   102,   103,    -1,    -1,    -1,    -1,    -1,   109,
      -1,   111,    -1,    -1,    -1,    -1,    -1,   117,    -1,   119,
     120,   121,    -1,    -1,    -1,   125,    -1,    -1,   128,   129,
     130,    -1,    -1,    -1,   134,    -1,    -1,    -1,   138,   139,
     140,   141,    -1,    -1,   144,    -1,   146,   147,   148,    -1,
      -1,   151,    -1,   153,    -1,    -1,   156,    -1,    -1,   159,
     160,   161,    -1,    -1,   164,    -1,    -1,    -1,    -1,   169,
     170,    -1,    -1,   173,    -1,   175,    -1,    -1,    -1,    -1,
      -1,    -1,   182,   183,    -1,    -1,   186,   187,    -1,   189,
      -1,    -1,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,   201,    -1,    -1,    -1,   205,   206,   207,   208,    -1,
      -1,   211,   212,    -1,    -1,    -1,   216,    -1,    -1,    -1,
     220,    -1,    -1,    -1,   224,    -1,    -1,   227,   228,    -1,
      -1,    -1,    -1,    -1,    -1,   235,    -1,   237,    -1,    -1,
      -1,   241,    -1,    -1,   244,   245,    -1,    -1,    -1,    -1,
     250,    -1,   252,    -1,    -1,   255,    -1,   257,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   267,   268,   269,
     270,   271,   272,    -1,   274,   275,   276,   277,   278,   279,
     280,   281,   282,    -1,   284,   285,   286,    -1,   288,   289,
      -1,    -1,    -1,   293,   294,   295,   296,    -1,    -1,   299,
     300,    -1,    -1,   303,    -1,   305,    -1,   307,    -1,    -1,
     310,   311,   312,   313,   314,   315,   316,    -1,    -1,   319,
     320,    -1,   322,   323,   324,    -1,    -1,    -1,   328,    -1,
      -1,    -1,    -1,   333,   334,    -1,   336,    -1,   338,   339,
     340,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   351,   352,   353,    -1,   355,    -1,   357,    -1,   359,
      -1,    -1,   362,   363,    -1,   365,    -1,   367,   368,    -1,
     370,   371,   372,   373,   374,   375,   376,   377,    -1,    -1,
      -1,    -1,   382,   383,    -1,    -1,   386,   387,   388,    -1,
     390,    -1,   392,   393,    -1,    -1,   396,    -1,   398,   399,
     400,    -1,   402,   403,    -1,    -1,    -1,   407,   408,    -1,
     410,   411,    -1,   413,   414,   415,   416,    -1,   418,   419,
      -1,    -1,    -1,   423,   424,   425,    -1,    -1,   428,    -1,
      -1,    -1,   432,   433,   434,   435,    -1,   437,   438,    -1,
      -1,    -1,    -1,    -1,    -1,   445,   446,    -1,   448,    -1,
      -1,   451,    -1,    -1,   454,   455,    -1,    -1,   458,   459,
      -1,   461,   462,   463,    -1,    -1,    -1,   467,   468,    -1,
     470,   471,    -1,   473,   474,    -1,   476,   477,   478,   479,
     480,   481,    -1,    -1,    -1,    -1,    -1,   487,    -1,   489,
      -1,    -1,   492,   493,   494,   495,    -1,    -1,   498,   499,
      -1,    -1,   502,    -1,    -1,    -1,    -1,   507,    -1,    -1,
     510,    -1,    -1,    -1,   514,   515,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   523,    -1,    -1,   526,    -1,    -1,   529,
     530,   531,    -1,    -1,    -1,    -1,   536,    -1,   538,   539,
      -1,    -1,     5,   543,     7,     8,     9,    10,    11,    -1,
      -1,    -1,    -1,    -1,    17,    -1,    -1,    -1,    -1,    -1,
      23,    24,    25,    -1,    -1,    28,   566,    30,    -1,    -1,
      33,    -1,    -1,    -1,    37,    -1,    -1,    40,    41,    -1,
      43,    -1,    -1,    -1,    -1,    -1,    49,    -1,    51,    -1,
      53,    -1,    -1,    -1,    -1,    58,    59,    60,    -1,    62,
      -1,    64,    65,    -1,    -1,    68,    -1,    70,    71,    -1,
      -1,    74,    -1,    -1,    77,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    86,    -1,    -1,    -1,    -1,    -1,    -1,
      93,    94,    -1,    -1,    97,    -1,    -1,    -1,    -1,   102,
      -1,    -1,    -1,    -1,    -1,    -1,   109,    -1,   111,    -1,
      -1,    -1,    -1,    -1,   117,    -1,   119,   120,   121,    -1,
      -1,    -1,    -1,    -1,    -1,   128,   129,   130,    -1,    -1,
      -1,   134,    -1,    -1,    -1,    -1,   139,   140,   141,    -1,
      -1,   144,    -1,   146,   147,    -1,    -1,    -1,   151,    -1,
     153,    -1,    -1,   156,   157,    -1,   159,   160,   161,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   169,   170,    -1,    -1,
     173,    -1,   175,    -1,    -1,    -1,    -1,    -1,    -1,   182,
     183,    -1,    -1,   186,   187,    -1,   189,    -1,    -1,    -1,
      -1,    -1,    -1,   196,    -1,    -1,    -1,    -1,   201,    -1,
      -1,    -1,   205,   206,   207,   208,   209,    -1,   211,   212,
      -1,    -1,    -1,   216,    -1,    -1,    -1,   220,    -1,    -1,
      -1,   224,    -1,    -1,   227,   228,   229,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   237,    -1,    -1,    -1,   241,   242,
      -1,   244,    -1,    -1,    -1,    -1,    -1,   250,    -1,   252,
      -1,    -1,   255,    -1,   257,    -1,    -1,    -1,    -1,    -1,
     263,    -1,    -1,    -1,   267,   268,   269,   270,   271,   272,
      -1,   274,   275,   276,   277,   278,   279,   280,   281,   282,
      -1,   284,   285,   286,    -1,   288,   289,    -1,    -1,    -1,
     293,   294,   295,   296,    -1,    -1,   299,   300,    -1,    -1,
     303,    -1,   305,    -1,   307,    -1,    -1,   310,   311,   312,
     313,   314,   315,   316,    -1,    -1,   319,   320,    -1,   322,
     323,   324,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     333,   334,    -1,   336,    -1,   338,   339,   340,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   351,   352,
     353,    -1,   355,    -1,   357,    -1,   359,    -1,    -1,    -1,
     363,    -1,   365,    -1,   367,   368,    -1,   370,   371,   372,
     373,   374,   375,   376,   377,    -1,    -1,    -1,    -1,   382,
     383,    -1,    -1,   386,   387,   388,    -1,   390,    -1,    -1,
     393,   394,    -1,   396,    -1,    -1,   399,    -1,    -1,   402,
     403,   404,    -1,    -1,    -1,   408,    -1,   410,   411,    -1,
     413,   414,   415,    -1,    -1,   418,    -1,    -1,    -1,    -1,
     423,   424,   425,    -1,    -1,   428,    -1,    -1,    -1,   432,
      -1,   434,    -1,    -1,   437,   438,    -1,    -1,    -1,    -1,
      -1,    -1,   445,   446,    -1,   448,    -1,    -1,   451,    -1,
      -1,    -1,   455,    -1,    -1,    -1,   459,    -1,   461,   462,
     463,    -1,    -1,    -1,   467,   468,    -1,   470,   471,    -1,
     473,   474,    -1,    -1,   477,   478,   479,   480,   481,    -1,
      -1,    -1,    -1,    -1,   487,    -1,   489,    -1,    -1,    -1,
     493,   494,   495,    -1,    -1,   498,   499,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   507,    -1,    -1,   510,    -1,    -1,
      -1,   514,   515,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     523,    -1,    -1,   526,    -1,    -1,   529,   530,   531,    -1,
      -1,   534,    -1,   536,    -1,   538,    -1,    -1,    -1,    -1,
     543,    -1,    -1,    -1,    -1,   548,     5,    -1,     7,     8,
       9,    10,    11,    -1,    -1,    -1,    -1,    -1,    17,   562,
      -1,    20,    -1,    -1,    23,    24,    25,    26,    -1,    28,
      -1,    30,    -1,    -1,    33,    -1,    -1,    -1,    37,    -1,
      -1,    40,    41,    -1,    43,    -1,    45,    46,    -1,    -1,
      49,    -1,    51,    -1,    53,    54,    -1,    56,    -1,    58,
      59,    60,    -1,    62,    -1,    64,    65,    -1,    67,    68,
      69,    70,    71,    -1,    -1,    74,    -1,    -1,    77,    -1,
      79,    -1,    -1,    -1,    -1,    -1,    -1,    86,    -1,    -1,
      -1,    -1,    -1,    -1,    93,    94,    -1,    -1,    97,    -1,
      -1,    -1,    -1,   102,   103,    -1,    -1,    -1,    -1,    -1,
     109,    -1,   111,    -1,    -1,    -1,    -1,    -1,   117,    -1,
     119,   120,   121,    -1,    -1,    -1,   125,    -1,    -1,   128,
     129,   130,    -1,    -1,    -1,   134,    -1,    -1,    -1,   138,
     139,   140,   141,    -1,    -1,   144,    -1,   146,   147,   148,
      -1,    -1,   151,    -1,   153,    -1,    -1,   156,    -1,    -1,
     159,   160,   161,    -1,    -1,   164,    -1,    -1,    -1,    -1,
     169,   170,    -1,    -1,   173,    -1,   175,    -1,    -1,    -1,
      -1,    -1,    -1,   182,   183,    -1,    -1,   186,   187,    -1,
     189,    -1,    -1,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,   201,    -1,    -1,    -1,   205,   206,   207,   208,
      -1,    -1,   211,   212,    -1,    -1,    -1,   216,    -1,    -1,
      -1,   220,    -1,    -1,    -1,   224,    -1,    -1,   227,   228,
      -1,    -1,    -1,    -1,    -1,    -1,   235,    -1,   237,    -1,
      -1,    -1,   241,    -1,    -1,   244,    -1,    -1,    -1,    -1,
      -1,   250,    -1,   252,    -1,    -1,   255,    -1,   257,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   267,   268,
     269,   270,   271,   272,    -1,   274,   275,   276,   277,   278,
     279,   280,   281,   282,    -1,   284,   285,   286,    -1,   288,
     289,    -1,    -1,    -1,   293,   294,   295,   296,    -1,    -1,
     299,   300,    -1,    -1,   303,    -1,   305,    -1,   307,    -1,
      -1,   310,   311,   312,   313,   314,   315,   316,    -1,    -1,
     319,   320,    -1,   322,   323,   324,    -1,    -1,    -1,   328,
      -1,    -1,    -1,    -1,   333,   334,    -1,   336,    -1,   338,
     339,   340,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   351,   352,   353,    -1,   355,    -1,   357,    -1,
     359,    -1,    -1,   362,   363,    -1,   365,    -1,   367,   368,
      -1,   370,   371,   372,   373,   374,   375,   376,   377,    -1,
      -1,    -1,    -1,   382,   383,    -1,    -1,   386,   387,   388,
      -1,   390,    -1,   392,   393,    -1,    -1,   396,    -1,   398,
     399,   400,    -1,   402,   403,    -1,    -1,    -1,   407,   408,
      -1,   410,   411,    -1,   413,   414,   415,   416,    -1,   418,
     419,    -1,    -1,    -1,   423,   424,   425,    -1,    -1,   428,
      -1,    -1,    -1,   432,   433,   434,   435,    -1,   437,   438,
      -1,    -1,    -1,    -1,    -1,    -1,   445,   446,    -1,   448,
      -1,    -1,   451,    -1,    -1,   454,   455,    -1,    -1,   458,
     459,    -1,   461,   462,   463,    -1,    -1,    -1,   467,   468,
      -1,   470,   471,    -1,   473,   474,    -1,    -1,   477,   478,
     479,   480,   481,    -1,    -1,    -1,    -1,    -1,   487,    -1,
     489,    -1,    -1,   492,   493,   494,   495,    -1,    -1,   498,
     499,    -1,    -1,   502,    -1,    -1,    -1,    -1,   507,    -1,
      -1,   510,    -1,    -1,    -1,   514,   515,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   523,    -1,    -1,   526,    -1,    -1,
     529,   530,   531,    -1,    -1,    -1,    -1,   536,    -1,   538,
     539,    -1,    -1,    -1,   543,     5,    -1,     7,     8,     9,
      10,    11,    -1,    -1,    -1,   554,    -1,    17,    -1,    -1,
      20,    -1,    -1,    23,    24,    25,    26,    -1,    28,    -1,
      30,    -1,    -1,    33,    -1,    -1,    -1,    37,    -1,    -1,
      40,    41,    -1,    43,    -1,    45,    46,    -1,    -1,    49,
      -1,    51,    -1,    53,    54,    -1,    56,    -1,    58,    59,
      60,    -1,    62,    -1,    64,    65,    -1,    67,    68,    69,
      70,    71,    -1,    -1,    74,    -1,    -1,    77,    -1,    79,
      -1,    -1,    -1,    -1,    -1,    -1,    86,    -1,    -1,    -1,
      -1,    -1,    -1,    93,    94,    -1,    -1,    97,    -1,    -1,
      -1,    -1,   102,   103,    -1,    -1,    -1,    -1,    -1,   109,
      -1,   111,    -1,    -1,    -1,    -1,    -1,   117,    -1,   119,
     120,   121,    -1,    -1,    -1,   125,    -1,    -1,   128,   129,
     130,    -1,    -1,    -1,   134,    -1,    -1,    -1,   138,   139,
     140,   141,    -1,    -1,   144,    -1,   146,   147,   148,    -1,
      -1,   151,    -1,   153,    -1,    -1,   156,    -1,    -1,   159,
     160,   161,    -1,    -1,   164,    -1,    -1,    -1,    -1,   169,
     170,    -1,    -1,   173,    -1,   175,    -1,    -1,    -1,    -1,
      -1,    -1,   182,   183,    -1,    -1,   186,   187,    -1,   189,
      -1,    -1,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,   201,    -1,    -1,    -1,   205,   206,   207,   208,    -1,
      -1,   211,   212,    -1,    -1,    -1,   216,    -1,    -1,    -1,
     220,    -1,    -1,    -1,   224,    -1,    -1,   227,   228,    -1,
      -1,    -1,    -1,    -1,    -1,   235,    -1,   237,    -1,    -1,
      -1,   241,    -1,    -1,   244,    -1,    -1,    -1,    -1,    -1,
     250,    -1,   252,    -1,    -1,   255,    -1,   257,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   267,   268,   269,
     270,   271,   272,    -1,   274,   275,   276,   277,   278,   279,
     280,   281,   282,    -1,   284,   285,   286,    -1,   288,   289,
      -1,    -1,    -1,   293,   294,   295,   296,    -1,    -1,   299,
     300,    -1,    -1,   303,    -1,   305,    -1,   307,    -1,    -1,
     310,   311,   312,   313,   314,   315,   316,    -1,    -1,   319,
     320,    -1,   322,   323,   324,    -1,    -1,    -1,   328,    -1,
      -1,    -1,    -1,   333,   334,    -1,   336,    -1,   338,   339,
     340,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   351,   352,   353,    -1,   355,    -1,   357,    -1,   359,
      -1,    -1,   362,   363,    -1,   365,    -1,   367,   368,    -1,
     370,   371,   372,   373,   374,   375,   376,   377,    -1,    -1,
      -1,    -1,   382,   383,    -1,    -1,   386,   387,   388,    -1,
     390,    -1,   392,   393,    -1,    -1,   396,    -1,   398,   399,
     400,    -1,   402,   403,    -1,    -1,    -1,   407,   408,    -1,
     410,   411,    -1,   413,   414,   415,   416,    -1,   418,   419,
      -1,    -1,    -1,   423,   424,   425,    -1,    -1,   428,    -1,
      -1,    -1,   432,   433,   434,   435,    -1,   437,   438,    -1,
      -1,    -1,    -1,    -1,    -1,   445,   446,    -1,   448,    -1,
      -1,   451,    -1,    -1,   454,   455,    -1,    -1,   458,   459,
      -1,   461,   462,   463,    -1,    -1,    -1,   467,   468,    -1,
     470,   471,    -1,   473,   474,    -1,    -1,   477,   478,   479,
     480,   481,    -1,    -1,    -1,    -1,    -1,   487,    -1,   489,
      -1,    -1,   492,   493,   494,   495,    -1,    -1,   498,   499,
      -1,    -1,   502,    -1,    -1,    -1,    -1,   507,    -1,    -1,
     510,    -1,    -1,    -1,   514,   515,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   523,    -1,    -1,   526,    -1,    -1,   529,
     530,   531,    -1,    -1,    -1,    -1,   536,    -1,   538,   539,
      -1,    -1,    -1,   543,     5,    -1,     7,     8,     9,    10,
      11,    -1,    -1,    -1,   554,    -1,    17,    -1,    -1,    20,
      -1,    -1,    23,    24,    25,    26,    -1,    28,    -1,    30,
      -1,    -1,    33,    -1,    -1,    -1,    37,    -1,    -1,    40,
      41,    -1,    43,    -1,    45,    46,    -1,    -1,    49,    -1,
      51,    -1,    53,    54,    -1,    56,    -1,    58,    59,    60,
      -1,    62,    -1,    64,    65,    -1,    67,    68,    69,    70,
      71,    -1,    -1,    74,    -1,    -1,    77,    -1,    79,    -1,
      -1,    -1,    -1,    -1,    -1,    86,    -1,    -1,    -1,    -1,
      -1,    -1,    93,    94,    -1,    -1,    97,    -1,    -1,    -1,
      -1,   102,   103,    -1,    -1,    -1,    -1,    -1,   109,    -1,
     111,    -1,    -1,    -1,    -1,    -1,   117,    -1,   119,   120,
     121,    -1,    -1,    -1,   125,    -1,    -1,   128,   129,   130,
      -1,    -1,    -1,   134,    -1,    -1,    -1,   138,   139,   140,
     141,    -1,    -1,   144,    -1,   146,   147,   148,    -1,    -1,
     151,    -1,   153,    -1,    -1,   156,    -1,    -1,   159,   160,
     161,    -1,    -1,   164,    -1,    -1,    -1,    -1,   169,   170,
      -1,    -1,   173,    -1,   175,    -1,    -1,    -1,    -1,    -1,
      -1,   182,   183,    -1,    -1,   186,   187,    -1,   189,    -1,
      -1,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
     201,    -1,    -1,    -1,   205,   206,   207,   208,    -1,    -1,
     211,   212,    -1,    -1,    -1,   216,    -1,    -1,    -1,   220,
      -1,    -1,    -1,   224,    -1,    -1,   227,   228,    -1,    -1,
      -1,    -1,    -1,    -1,   235,    -1,   237,    -1,    -1,    -1,
     241,    -1,    -1,   244,    -1,    -1,    -1,    -1,    -1,   250,
      -1,   252,    -1,    -1,   255,    -1,   257,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   267,   268,   269,   270,
     271,   272,    -1,   274,   275,   276,   277,   278,   279,   280,
     281,   282,    -1,   284,   285,   286,    -1,   288,   289,    -1,
      -1,    -1,   293,   294,   295,   296,    -1,    -1,   299,   300,
      -1,    -1,   303,    -1,   305,    -1,   307,    -1,    -1,   310,
     311,   312,   313,   314,   315,   316,    -1,    -1,   319,   320,
      -1,   322,   323,   324,    -1,    -1,    -1,   328,    -1,    -1,
      -1,    -1,   333,   334,    -1,   336,    -1,   338,   339,   340,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     351,   352,   353,    -1,   355,    -1,   357,    -1,   359,    -1,
      -1,   362,   363,    -1,   365,    -1,   367,   368,    -1,   370,
     371,   372,   373,   374,   375,   376,   377,    -1,    -1,    -1,
      -1,   382,   383,    -1,    -1,   386,   387,   388,    -1,   390,
      -1,   392,   393,    -1,    -1,   396,    -1,   398,   399,   400,
      -1,   402,   403,    -1,    -1,    -1,   407,   408,    -1,   410,
     411,    -1,   413,   414,   415,   416,    -1,   418,   419,    -1,
      -1,    -1,   423,   424,   425,    -1,    -1,   428,    -1,    -1,
      -1,   432,   433,   434,   435,    -1,   437,   438,    -1,    -1,
      -1,    -1,    -1,    -1,   445,   446,    -1,   448,    -1,    -1,
     451,    -1,    -1,   454,   455,    -1,    -1,   458,   459,    -1,
     461,   462,   463,    -1,    -1,    -1,   467,   468,    -1,   470,
     471,    -1,   473,   474,    -1,    -1,   477,   478,   479,   480,
     481,    -1,    -1,    -1,    -1,    -1,   487,    -1,   489,    -1,
      -1,   492,   493,   494,   495,    -1,    -1,   498,   499,    -1,
      -1,   502,    -1,    -1,    -1,    -1,   507,    -1,    -1,   510,
      -1,    -1,    -1,   514,   515,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   523,    -1,    -1,   526,    -1,    -1,   529,   530,
     531,    -1,    -1,    -1,    -1,   536,    -1,   538,   539,    -1,
      -1,    -1,   543,     5,    -1,     7,     8,     9,    10,    11,
      -1,    -1,    -1,   554,    -1,    17,    -1,    -1,    20,    -1,
      -1,    23,    24,    25,    26,    -1,    28,    -1,    30,    -1,
      -1,    33,    -1,    -1,    -1,    37,    -1,    -1,    40,    41,
      -1,    43,    -1,    45,    46,    -1,    -1,    49,    -1,    51,
      -1,    53,    54,    -1,    56,    -1,    58,    59,    60,    -1,
      62,    -1,    64,    65,    -1,    67,    68,    69,    70,    71,
      -1,    -1,    74,    -1,    -1,    77,    -1,    79,    -1,    -1,
      -1,    -1,    -1,    -1,    86,    -1,    -1,    -1,    -1,    -1,
      -1,    93,    94,    -1,    -1,    97,    -1,    -1,    -1,    -1,
     102,   103,    -1,    -1,    -1,    -1,    -1,   109,    -1,   111,
      -1,    -1,    -1,    -1,    -1,   117,    -1,   119,   120,   121,
      -1,    -1,    -1,   125,    -1,    -1,   128,   129,   130,    -1,
      -1,    -1,   134,    -1,    -1,    -1,   138,   139,   140,   141,
      -1,    -1,   144,    -1,   146,   147,   148,    -1,    -1,   151,
      -1,   153,    -1,    -1,   156,    -1,    -1,   159,   160,   161,
      -1,    -1,   164,    -1,    -1,    -1,    -1,   169,   170,    -1,
      -1,   173,    -1,   175,    -1,    -1,    -1,    -1,    -1,    -1,
     182,   183,    -1,    -1,   186,   187,    -1,   189,    -1,    -1,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,   201,
      -1,    -1,    -1,   205,   206,   207,   208,    -1,    -1,   211,
     212,    -1,    -1,    -1,   216,    -1,    -1,    -1,   220,    -1,
      -1,    -1,   224,    -1,    -1,   227,   228,    -1,    -1,    -1,
      -1,    -1,    -1,   235,    -1,   237,    -1,    -1,    -1,   241,
      -1,    -1,   244,    -1,    -1,    -1,    -1,    -1,   250,    -1,
     252,    -1,    -1,   255,    -1,   257,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   267,   268,   269,   270,   271,
     272,    -1,   274,   275,   276,   277,   278,   279,   280,   281,
     282,    -1,   284,   285,   286,    -1,   288,   289,    -1,    -1,
      -1,   293,   294,   295,   296,    -1,    -1,   299,   300,    -1,
      -1,   303,    -1,   305,    -1,   307,    -1,    -1,   310,   311,
     312,   313,   314,   315,   316,    -1,    -1,   319,   320,    -1,
     322,   323,   324,    -1,    -1,    -1,   328,    -1,    -1,    -1,
      -1,   333,   334,    -1,   336,    -1,   338,   339,   340,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   351,
     352,   353,    -1,   355,    -1,   357,    -1,   359,    -1,    -1,
     362,   363,    -1,   365,    -1,   367,   368,    -1,   370,   371,
     372,   373,   374,   375,   376,   377,    -1,    -1,    -1,    -1,
     382,   383,    -1,    -1,   386,   387,   388,    -1,   390,    -1,
     392,   393,    -1,    -1,   396,    -1,   398,   399,   400,    -1,
     402,   403,    -1,    -1,    -1,   407,   408,    -1,   410,   411,
      -1,   413,   414,   415,   416,    -1,   418,   419,    -1,    -1,
      -1,   423,   424,   425,    -1,    -1,   428,    -1,    -1,    -1,
     432,   433,   434,   435,    -1,   437,   438,    -1,    -1,    -1,
      -1,    -1,    -1,   445,   446,    -1,   448,    -1,    -1,   451,
      -1,    -1,   454,   455,    -1,    -1,   458,   459,    -1,   461,
     462,   463,    -1,    -1,    -1,   467,   468,    -1,   470,   471,
      -1,   473,   474,    -1,    -1,   477,   478,   479,   480,   481,
      -1,    -1,    -1,    -1,    -1,   487,    -1,   489,    -1,    -1,
     492,   493,   494,   495,    -1,    -1,   498,   499,    -1,    -1,
     502,    -1,    -1,    -1,    -1,   507,    -1,    -1,   510,    -1,
      -1,    -1,   514,   515,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   523,    -1,    -1,   526,    -1,    -1,   529,   530,   531,
      -1,    -1,    -1,    -1,   536,    -1,   538,   539,    -1,    -1,
      -1,   543,     5,    -1,     7,     8,     9,    10,    11,    -1,
      -1,    -1,   554,    -1,    17,    -1,    -1,    -1,    -1,    -1,
      23,    24,    25,    -1,    -1,    28,    -1,    30,    -1,    -1,
      33,    -1,    -1,    -1,    37,    -1,    -1,    40,    41,    -1,
      43,    -1,    -1,    -1,    -1,    -1,    49,    -1,    51,    -1,
      53,    -1,    -1,    -1,    -1,    58,    59,    60,    -1,    62,
      -1,    64,    65,    -1,    -1,    68,    -1,    70,    71,    -1,
      -1,    74,    -1,    -1,    77,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    86,    -1,    -1,    -1,    -1,    -1,    -1,
      93,    94,    -1,    -1,    97,    -1,    -1,    -1,    -1,   102,
      -1,    -1,    -1,    -1,    -1,    -1,   109,    -1,   111,    -1,
      -1,    -1,    -1,    -1,   117,    -1,   119,   120,   121,    -1,
      -1,    -1,    -1,    -1,    -1,   128,   129,   130,    -1,   132,
      -1,   134,    -1,    -1,    -1,   138,   139,   140,   141,    -1,
      -1,   144,    -1,   146,   147,    -1,    -1,    -1,   151,    -1,
     153,    -1,    -1,   156,   157,    -1,   159,   160,   161,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   169,   170,    -1,    -1,
     173,    -1,   175,    -1,    -1,    -1,    -1,    -1,    -1,   182,
     183,    -1,    -1,   186,   187,    -1,   189,    -1,    -1,    -1,
      -1,    -1,    -1,   196,    -1,    -1,    -1,    -1,   201,    -1,
      -1,    -1,   205,   206,   207,   208,   209,    -1,   211,   212,
      -1,    -1,    -1,   216,    -1,    -1,    -1,   220,    -1,    -1,
      -1,   224,    -1,    -1,   227,   228,   229,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   237,    -1,    -1,    -1,   241,   242,
      -1,   244,    -1,    -1,    -1,    -1,    -1,   250,    -1,   252,
      -1,    -1,   255,    -1,   257,    -1,    -1,    -1,    -1,    -1,
     263,    -1,    -1,    -1,   267,   268,   269,   270,   271,   272,
      -1,   274,   275,   276,   277,   278,   279,   280,   281,   282,
      -1,   284,   285,   286,    -1,   288,   289,    -1,    -1,    -1,
     293,   294,   295,   296,    -1,    -1,   299,   300,    -1,    -1,
     303,    -1,   305,    -1,   307,    -1,    -1,   310,   311,   312,
     313,   314,   315,   316,    -1,    -1,   319,   320,    -1,   322,
     323,   324,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     333,   334,    -1,   336,    -1,   338,   339,   340,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   351,   352,
     353,    -1,   355,    -1,   357,    -1,   359,    -1,    -1,    -1,
     363,    -1,   365,    -1,   367,   368,    -1,   370,   371,   372,
     373,   374,   375,   376,   377,    -1,    -1,    -1,    -1,   382,
     383,    -1,    -1,   386,   387,   388,    -1,   390,    -1,    -1,
     393,   394,    -1,   396,    -1,    -1,   399,    -1,    -1,   402,
     403,   404,    -1,    -1,    -1,   408,    -1,   410,   411,    -1,
     413,   414,   415,    -1,    -1,   418,    -1,    -1,    -1,    -1,
     423,   424,   425,    -1,    -1,   428,    -1,    -1,    -1,   432,
      -1,   434,    -1,    -1,   437,   438,    -1,    -1,    -1,    -1,
      -1,    -1,   445,   446,    -1,   448,    -1,    -1,   451,    -1,
      -1,    -1,   455,    -1,    -1,    -1,   459,    -1,   461,   462,
     463,    -1,    -1,    -1,   467,   468,    -1,   470,   471,    -1,
     473,   474,    -1,    -1,   477,   478,   479,   480,   481,    -1,
      -1,    -1,    -1,    -1,   487,    -1,   489,    -1,    -1,    -1,
     493,   494,   495,    -1,    -1,   498,   499,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   507,    -1,    -1,   510,    -1,    -1,
      -1,   514,   515,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     523,    -1,    -1,   526,    -1,    -1,   529,   530,   531,    -1,
      -1,   534,    -1,   536,    -1,   538,    -1,    -1,    -1,    -1,
     543,    -1,    -1,   546,     5,   548,     7,     8,     9,    10,
      11,    -1,    -1,    -1,    -1,    -1,    17,    -1,    -1,    -1,
      -1,    -1,    23,    24,    25,    -1,    -1,    28,    -1,    30,
      -1,    -1,    33,    -1,    -1,    -1,    37,    -1,    -1,    40,
      41,    -1,    43,    -1,    -1,    -1,    -1,    -1,    49,    -1,
      51,    -1,    53,    -1,    -1,    -1,    -1,    58,    59,    60,
      -1,    62,    -1,    64,    65,    -1,    -1,    68,    -1,    70,
      71,    -1,    -1,    74,    -1,    -1,    77,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    86,    -1,    -1,    -1,    -1,
      -1,    -1,    93,    94,    -1,    -1,    97,    -1,    -1,    -1,
      -1,   102,    -1,    -1,    -1,    -1,    -1,    -1,   109,    -1,
     111,    -1,    -1,    -1,    -1,    -1,   117,    -1,   119,   120,
     121,    -1,    -1,    -1,    -1,    -1,    -1,   128,   129,   130,
      -1,    -1,    -1,   134,    -1,    -1,    -1,   138,   139,   140,
     141,    -1,    -1,   144,    -1,   146,   147,    -1,    -1,    -1,
     151,    -1,   153,    -1,    -1,   156,   157,    -1,   159,   160,
     161,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   169,   170,
      -1,    -1,   173,    -1,   175,    -1,    -1,    -1,    -1,    -1,
      -1,   182,   183,    -1,    -1,   186,   187,    -1,   189,    -1,
      -1,    -1,    -1,    -1,    -1,   196,    -1,    -1,    -1,    -1,
     201,    -1,    -1,    -1,   205,   206,   207,   208,   209,    -1,
     211,   212,    -1,    -1,    -1,   216,    -1,    -1,    -1,   220,
      -1,    -1,    -1,   224,    -1,    -1,   227,   228,   229,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   237,    -1,    -1,    -1,
     241,   242,    -1,   244,    -1,    -1,    -1,    -1,    -1,   250,
      -1,   252,    -1,    -1,   255,    -1,   257,    -1,    -1,    -1,
      -1,    -1,   263,    -1,    -1,    -1,   267,   268,   269,   270,
     271,   272,    -1,   274,   275,   276,   277,   278,   279,   280,
     281,   282,    -1,   284,   285,   286,    -1,   288,   289,    -1,
      -1,    -1,   293,   294,   295,   296,    -1,    -1,   299,   300,
      -1,    -1,   303,    -1,   305,    -1,   307,    -1,    -1,   310,
     311,   312,   313,   314,   315,   316,    -1,    -1,   319,   320,
      -1,   322,   323,   324,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   333,   334,    -1,   336,    -1,   338,   339,   340,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     351,   352,   353,    -1,   355,    -1,   357,    -1,   359,    -1,
      -1,    -1,   363,    -1,   365,    -1,   367,   368,    -1,   370,
     371,   372,   373,   374,   375,   376,   377,    -1,    -1,    -1,
      -1,   382,   383,    -1,    -1,   386,   387,   388,    -1,   390,
      -1,    -1,   393,   394,    -1,   396,    -1,    -1,   399,    -1,
      -1,   402,   403,   404,    -1,    -1,    -1,   408,    -1,   410,
     411,    -1,   413,   414,   415,    -1,    -1,   418,    -1,    -1,
      -1,    -1,   423,   424,   425,    -1,    -1,   428,    -1,    -1,
      -1,   432,    -1,   434,    -1,    -1,   437,   438,    -1,    -1,
      -1,    -1,    -1,    -1,   445,   446,    -1,   448,    -1,    -1,
     451,    -1,    -1,    -1,   455,    -1,    -1,    -1,   459,    -1,
     461,   462,   463,    -1,    -1,    -1,   467,   468,    -1,   470,
     471,    -1,   473,   474,    -1,    -1,   477,   478,   479,   480,
     481,    -1,    -1,    -1,    -1,    -1,   487,    -1,   489,    -1,
      -1,    -1,   493,   494,   495,    -1,    -1,   498,   499,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   507,    -1,    -1,   510,
      -1,    -1,    -1,   514,   515,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   523,    -1,    -1,   526,    -1,    -1,   529,   530,
     531,   532,    -1,   534,    -1,   536,    -1,   538,    -1,    -1,
      -1,    -1,   543,    -1,    -1,   546,     5,   548,     7,     8,
       9,    10,    11,    -1,    -1,    -1,    -1,    -1,    17,    -1,
      -1,    -1,    -1,    -1,    23,    24,    25,    -1,    -1,    28,
      -1,    30,    -1,    -1,    33,    -1,    -1,    -1,    37,    -1,
      -1,    40,    41,    -1,    43,    -1,    -1,    -1,    -1,    -1,
      49,    -1,    51,    -1,    53,    -1,    -1,    -1,    -1,    58,
      59,    60,    -1,    62,    -1,    64,    65,    -1,    -1,    68,
      -1,    70,    71,    -1,    -1,    74,    -1,    -1,    77,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    86,    -1,    -1,
      -1,    -1,    -1,    -1,    93,    94,    -1,    -1,    97,    -1,
      -1,    -1,    -1,   102,    -1,    -1,    -1,    -1,    -1,    -1,
     109,    -1,   111,    -1,    -1,    -1,    -1,    -1,   117,    -1,
     119,   120,   121,    -1,    -1,    -1,    -1,    -1,    -1,   128,
     129,   130,    -1,    -1,    -1,   134,    -1,    -1,    -1,   138,
     139,   140,   141,    -1,    -1,   144,    -1,   146,   147,    -1,
      -1,    -1,   151,    -1,   153,    -1,    -1,   156,   157,    -1,
     159,   160,   161,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     169,   170,    -1,    -1,   173,    -1,   175,    -1,    -1,    -1,
      -1,    -1,    -1,   182,   183,    -1,    -1,   186,   187,    -1,
     189,    -1,    -1,    -1,    -1,    -1,    -1,   196,    -1,    -1,
      -1,    -1,   201,    -1,    -1,    -1,   205,   206,   207,   208,
     209,    -1,   211,   212,    -1,    -1,    -1,   216,    -1,    -1,
      -1,   220,    -1,    -1,    -1,   224,    -1,    -1,   227,   228,
     229,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   237,    -1,
      -1,    -1,   241,   242,    -1,   244,    -1,    -1,    -1,    -1,
      -1,   250,    -1,   252,    -1,    -1,   255,    -1,   257,    -1,
      -1,    -1,    -1,    -1,   263,    -1,    -1,    -1,   267,   268,
     269,   270,   271,   272,    -1,   274,   275,   276,   277,   278,
     279,   280,   281,   282,    -1,   284,   285,   286,    -1,   288,
     289,    -1,    -1,    -1,   293,   294,   295,   296,    -1,    -1,
     299,   300,    -1,    -1,   303,    -1,   305,    -1,   307,    -1,
      -1,   310,   311,   312,   313,   314,   315,   316,    -1,    -1,
     319,   320,    -1,   322,   323,   324,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   333,   334,    -1,   336,    -1,   338,
     339,   340,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   351,   352,   353,    -1,   355,    -1,   357,    -1,
     359,    -1,    -1,    -1,   363,    -1,   365,    -1,   367,   368,
      -1,   370,   371,   372,   373,   374,   375,   376,   377,    -1,
      -1,    -1,    -1,   382,   383,    -1,    -1,   386,   387,   388,
      -1,   390,    -1,    -1,   393,   394,    -1,   396,    -1,    -1,
     399,    -1,    -1,   402,   403,   404,    -1,    -1,    -1,   408,
      -1,   410,   411,    -1,   413,   414,   415,    -1,    -1,   418,
      -1,    -1,    -1,    -1,   423,   424,   425,    -1,    -1,   428,
      -1,    -1,    -1,   432,    -1,   434,    -1,    -1,   437,   438,
      -1,    -1,    -1,    -1,    -1,    -1,   445,   446,    -1,   448,
      -1,    -1,   451,    -1,    -1,    -1,   455,    -1,    -1,    -1,
     459,    -1,   461,   462,   463,    -1,    -1,    -1,   467,   468,
      -1,   470,   471,    -1,   473,   474,    -1,    -1,   477,   478,
     479,   480,   481,    -1,    -1,    -1,    -1,    -1,   487,    -1,
     489,    -1,    -1,    -1,   493,   494,   495,    -1,    -1,   498,
     499,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   507,    -1,
      -1,   510,    -1,    -1,    -1,   514,   515,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   523,    -1,    -1,   526,    -1,    -1,
     529,   530,   531,    -1,    -1,   534,    -1,   536,    -1,   538,
      -1,    -1,    -1,    -1,   543,    -1,    -1,    -1,     5,   548,
       7,     8,     9,    10,    11,    -1,    -1,    -1,    -1,    -1,
      17,    -1,    -1,    -1,    -1,    -1,    23,    24,    25,    -1,
      -1,    28,    -1,    30,    -1,    -1,    33,    -1,    -1,    -1,
      37,    -1,    -1,    40,    41,    -1,    43,    -1,    -1,    -1,
      -1,    -1,    49,    -1,    51,    -1,    53,    -1,    -1,    -1,
      -1,    58,    59,    60,    -1,    62,    -1,    64,    65,    -1,
      -1,    68,    -1,    70,    71,    -1,    -1,    74,    -1,    -1,
      77,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    86,
      -1,    -1,    -1,    -1,    -1,    -1,    93,    94,    -1,    -1,
      97,    -1,    -1,    -1,    -1,   102,    -1,    -1,    -1,    -1,
      -1,    -1,   109,    -1,   111,    -1,    -1,    -1,    -1,    -1,
     117,    -1,   119,   120,   121,    -1,    -1,    -1,    -1,    -1,
      -1,   128,   129,   130,    -1,    -1,    -1,   134,    -1,    -1,
      -1,   138,   139,   140,   141,    -1,    -1,   144,    -1,   146,
     147,    -1,    -1,    -1,   151,    -1,   153,    -1,    -1,   156,
     157,    -1,   159,   160,   161,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   169,   170,    -1,    -1,   173,    -1,   175,    -1,
      -1,    -1,    -1,    -1,    -1,   182,   183,    -1,    -1,   186,
     187,    -1,   189,    -1,    -1,    -1,    -1,    -1,    -1,   196,
      -1,    -1,    -1,    -1,   201,    -1,    -1,    -1,   205,   206,
     207,   208,   209,    -1,   211,   212,    -1,    -1,    -1,   216,
      -1,    -1,    -1,   220,    -1,    -1,    -1,   224,    -1,    -1,
     227,   228,   229,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     237,    -1,    -1,    -1,   241,   242,    -1,   244,    -1,    -1,
      -1,    -1,    -1,   250,    -1,   252,    -1,    -1,   255,    -1,
     257,    -1,    -1,    -1,    -1,    -1,   263,    -1,    -1,    -1,
     267,   268,   269,   270,   271,   272,    -1,   274,   275,   276,
     277,   278,   279,   280,   281,   282,    -1,   284,   285,   286,
      -1,   288,   289,    -1,    -1,    -1,   293,   294,   295,   296,
      -1,    -1,   299,   300,    -1,    -1,   303,    -1,   305,    -1,
     307,    -1,    -1,   310,   311,   312,   313,   314,   315,   316,
      -1,    -1,   319,   320,    -1,   322,   323,   324,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   333,   334,    -1,   336,
      -1,   338,   339,   340,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   351,   352,   353,    -1,   355,    -1,
     357,    -1,   359,    -1,    -1,    -1,   363,    -1,   365,    -1,
     367,   368,    -1,   370,   371,   372,   373,   374,   375,   376,
     377,    -1,    -1,    -1,    -1,   382,   383,    -1,    -1,   386,
     387,   388,    -1,   390,    -1,    -1,   393,   394,    -1,   396,
      -1,    -1,   399,    -1,    -1,   402,   403,   404,    -1,    -1,
      -1,   408,    -1,   410,   411,    -1,   413,   414,   415,    -1,
      -1,   418,    -1,    -1,    -1,    -1,   423,   424,   425,    -1,
      -1,   428,    -1,    -1,    -1,   432,    -1,   434,    -1,    -1,
     437,   438,    -1,    -1,    -1,    -1,    -1,    -1,   445,   446,
      -1,   448,    -1,    -1,   451,    -1,    -1,    -1,   455,    -1,
      -1,    -1,   459,    -1,   461,   462,   463,    -1,    -1,    -1,
     467,   468,    -1,   470,   471,    -1,   473,   474,    -1,    -1,
     477,   478,   479,   480,   481,    -1,    -1,    -1,    -1,    -1,
     487,    -1,   489,    -1,    -1,    -1,   493,   494,   495,    -1,
      -1,   498,   499,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     507,    -1,    -1,   510,    -1,    -1,    -1,   514,   515,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   523,    -1,    -1,   526,
      -1,    -1,   529,   530,   531,    -1,    -1,   534,    -1,   536,
      -1,   538,    -1,    -1,    -1,    -1,   543,    -1,    -1,    -1,
       5,   548,     7,     8,     9,    10,    11,    -1,    -1,    -1,
      -1,    -1,    17,    -1,    -1,    -1,    -1,    -1,    23,    24,
      25,    -1,    -1,    28,    -1,    30,    -1,    -1,    33,    -1,
      -1,    -1,    37,    -1,    -1,    40,    41,    -1,    43,    -1,
      -1,    -1,    -1,    -1,    49,    -1,    51,    -1,    53,    -1,
      -1,    -1,    -1,    58,    59,    60,    -1,    62,    -1,    64,
      65,    -1,    -1,    68,    -1,    70,    71,    -1,    -1,    74,
      -1,    -1,    77,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    86,    -1,    -1,    -1,    -1,    -1,    -1,    93,    94,
      -1,    -1,    97,    -1,    -1,    -1,    -1,   102,    -1,    -1,
      -1,    -1,    -1,    -1,   109,    -1,   111,    -1,    -1,    -1,
      -1,    -1,   117,    -1,   119,   120,   121,    -1,    -1,    -1,
      -1,    -1,    -1,   128,   129,   130,    -1,    -1,    -1,   134,
      -1,    -1,    -1,   138,   139,   140,   141,    -1,    -1,   144,
      -1,   146,   147,    -1,    -1,    -1,   151,    -1,   153,    -1,
      -1,   156,   157,    -1,   159,   160,   161,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   169,   170,    -1,    -1,   173,    -1,
     175,    -1,    -1,    -1,    -1,    -1,    -1,   182,   183,    -1,
      -1,   186,   187,    -1,   189,    -1,    -1,    -1,    -1,    -1,
      -1,   196,    -1,    -1,    -1,    -1,   201,    -1,    -1,    -1,
     205,   206,   207,   208,   209,    -1,   211,   212,    -1,    -1,
      -1,   216,    -1,    -1,    -1,   220,    -1,    -1,    -1,   224,
      -1,    -1,   227,   228,   229,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   237,    -1,    -1,    -1,   241,   242,    -1,   244,
      -1,    -1,    -1,    -1,    -1,   250,    -1,   252,    -1,    -1,
     255,    -1,   257,    -1,    -1,    -1,    -1,    -1,   263,    -1,
      -1,    -1,   267,   268,   269,   270,   271,   272,    -1,   274,
     275,   276,   277,   278,   279,   280,   281,   282,    -1,   284,
     285,   286,    -1,   288,   289,    -1,    -1,    -1,   293,   294,
     295,   296,    -1,    -1,   299,   300,    -1,    -1,   303,    -1,
     305,    -1,   307,    -1,    -1,   310,   311,   312,   313,   314,
     315,   316,    -1,    -1,   319,   320,    -1,   322,   323,   324,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   333,   334,
      -1,   336,    -1,   338,   339,   340,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   351,   352,   353,    -1,
     355,    -1,   357,    -1,   359,    -1,    -1,    -1,   363,    -1,
     365,    -1,   367,   368,    -1,   370,   371,   372,   373,   374,
     375,   376,   377,    -1,    -1,    -1,    -1,   382,   383,    -1,
      -1,   386,   387,   388,    -1,   390,    -1,    -1,   393,   394,
      -1,   396,    -1,    -1,   399,    -1,    -1,   402,   403,   404,
      -1,    -1,    -1,   408,    -1,   410,   411,    -1,   413,   414,
     415,    -1,    -1,   418,    -1,    -1,    -1,    -1,   423,   424,
     425,    -1,    -1,   428,    -1,    -1,    -1,   432,    -1,   434,
      -1,    -1,   437,   438,    -1,    -1,    -1,    -1,    -1,    -1,
     445,   446,    -1,   448,    -1,    -1,   451,    -1,    -1,    -1,
     455,    -1,    -1,    -1,   459,    -1,   461,   462,   463,    -1,
      -1,    -1,   467,   468,    -1,   470,   471,    -1,   473,   474,
      -1,    -1,   477,   478,   479,   480,   481,    -1,    -1,    -1,
      -1,    -1,   487,    -1,   489,    -1,    -1,    -1,   493,   494,
     495,    -1,    -1,   498,   499,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   507,    -1,    -1,   510,    -1,    -1,    -1,   514,
     515,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   523,    -1,
      -1,   526,    -1,    -1,   529,   530,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,    -1,    -1,    -1,    -1,   543,    -1,
      -1,    -1,     5,   548,     7,     8,     9,    10,    11,    -1,
      -1,    -1,    -1,    -1,    17,    -1,    -1,    -1,    -1,    -1,
      23,    24,    25,    -1,    -1,    28,    -1,    30,    -1,    -1,
      33,    -1,    -1,    -1,    37,    -1,    -1,    40,    41,    -1,
      43,    -1,    -1,    -1,    -1,    -1,    49,    -1,    51,    -1,
      53,    -1,    -1,    -1,    -1,    58,    59,    60,    -1,    62,
      -1,    64,    65,    -1,    -1,    68,    -1,    70,    71,    -1,
      -1,    74,    -1,    -1,    77,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    86,    -1,    -1,    -1,    -1,    -1,    -1,
      93,    94,    -1,    -1,    97,    -1,    -1,    -1,    -1,   102,
      -1,    -1,    -1,    -1,    -1,    -1,   109,    -1,   111,    -1,
      -1,    -1,    -1,    -1,   117,    -1,   119,   120,   121,    -1,
      -1,    -1,    -1,    -1,    -1,   128,   129,   130,    -1,    -1,
      -1,   134,    -1,    -1,    -1,   138,   139,   140,   141,    -1,
      -1,   144,    -1,   146,   147,    -1,    -1,    -1,   151,    -1,
     153,    -1,    -1,   156,   157,    -1,   159,   160,   161,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   169,   170,    -1,    -1,
     173,    -1,   175,    -1,    -1,    -1,    -1,    -1,    -1,   182,
     183,    -1,    -1,   186,   187,    -1,   189,    -1,    -1,    -1,
      -1,    -1,    -1,   196,    -1,    -1,    -1,    -1,   201,    -1,
      -1,    -1,   205,   206,   207,   208,   209,    -1,   211,   212,
      -1,    -1,    -1,   216,    -1,    -1,    -1,   220,    -1,    -1,
      -1,   224,    -1,    -1,   227,   228,   229,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   237,    -1,    -1,    -1,   241,   242,
      -1,   244,    -1,    -1,    -1,    -1,    -1,   250,    -1,   252,
      -1,    -1,   255,    -1,   257,    -1,    -1,    -1,    -1,    -1,
     263,    -1,    -1,    -1,   267,   268,   269,   270,   271,   272,
      -1,   274,   275,   276,   277,   278,   279,   280,   281,   282,
      -1,   284,   285,   286,    -1,   288,   289,    -1,    -1,    -1,
     293,   294,   295,   296,    -1,    -1,   299,   300,    -1,    -1,
     303,    -1,   305,    -1,   307,    -1,    -1,   310,   311,   312,
     313,   314,   315,   316,    -1,    -1,   319,   320,    -1,   322,
     323,   324,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     333,   334,    -1,   336,    -1,   338,   339,   340,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   351,   352,
     353,    -1,   355,    -1,   357,    -1,   359,    -1,    -1,    -1,
     363,    -1,   365,    -1,   367,   368,    -1,   370,   371,   372,
     373,   374,   375,   376,   377,    -1,    -1,    -1,    -1,   382,
     383,    -1,    -1,   386,   387,   388,    -1,   390,    -1,    -1,
     393,   394,    -1,   396,    -1,    -1,   399,    -1,    -1,   402,
     403,   404,    -1,    -1,    -1,   408,    -1,   410,   411,    -1,
     413,   414,   415,    -1,    -1,   418,    -1,    -1,    -1,    -1,
     423,   424,   425,    -1,    -1,   428,    -1,    -1,    -1,   432,
      -1,   434,    -1,    -1,   437,   438,    -1,    -1,    -1,    -1,
      -1,    -1,   445,   446,    -1,   448,    -1,    -1,   451,    -1,
      -1,    -1,   455,    -1,    -1,    -1,   459,    -1,   461,   462,
     463,    -1,    -1,    -1,   467,   468,    -1,   470,   471,    -1,
     473,   474,    -1,    -1,   477,   478,   479,   480,   481,    -1,
      -1,    -1,    -1,    -1,   487,    -1,   489,    -1,    -1,    -1,
     493,   494,   495,    -1,    -1,   498,   499,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   507,    -1,    -1,   510,    -1,    -1,
      -1,   514,   515,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     523,    -1,    -1,   526,    -1,    -1,   529,   530,   531,    -1,
      -1,   534,    -1,   536,    -1,   538,    -1,    -1,    -1,    -1,
     543,    -1,    -1,    -1,     5,   548,     7,     8,     9,    10,
      11,    -1,    -1,    -1,    -1,    -1,    17,    -1,    -1,    -1,
      -1,    -1,    23,    24,    25,    -1,    -1,    28,    -1,    30,
      -1,    -1,    33,    -1,    -1,    -1,    37,    -1,    -1,    40,
      41,    -1,    43,    -1,    -1,    -1,    -1,    -1,    49,    -1,
      51,    -1,    53,    -1,    -1,    -1,    -1,    58,    59,    60,
      -1,    62,    -1,    64,    65,    -1,    -1,    68,    -1,    70,
      71,    -1,    -1,    74,    -1,    -1,    77,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    86,    -1,    -1,    -1,    -1,
      -1,    -1,    93,    94,    -1,    -1,    97,    -1,    -1,    -1,
      -1,   102,    -1,    -1,    -1,    -1,    -1,    -1,   109,    -1,
     111,    -1,    -1,    -1,    -1,    -1,   117,    -1,   119,   120,
     121,    -1,    -1,    -1,    -1,    -1,    -1,   128,   129,   130,
      -1,    -1,    -1,   134,    -1,    -1,    -1,   138,   139,   140,
     141,    -1,    -1,   144,    -1,   146,   147,    -1,    -1,    -1,
     151,    -1,   153,    -1,    -1,   156,   157,    -1,   159,   160,
     161,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   169,   170,
      -1,    -1,   173,    -1,   175,    -1,    -1,    -1,    -1,    -1,
      -1,   182,   183,    -1,    -1,   186,   187,    -1,   189,    -1,
      -1,    -1,    -1,    -1,    -1,   196,    -1,    -1,    -1,    -1,
     201,    -1,    -1,    -1,   205,   206,   207,   208,   209,    -1,
     211,   212,    -1,    -1,    -1,   216,    -1,    -1,    -1,   220,
      -1,    -1,    -1,   224,    -1,    -1,   227,   228,   229,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   237,    -1,    -1,    -1,
     241,   242,    -1,   244,    -1,    -1,    -1,    -1,    -1,   250,
      -1,   252,    -1,    -1,   255,    -1,   257,    -1,    -1,    -1,
      -1,    -1,   263,    -1,    -1,    -1,   267,   268,   269,   270,
     271,   272,    -1,   274,   275,   276,   277,   278,   279,   280,
     281,   282,    -1,   284,   285,   286,    -1,   288,   289,    -1,
      -1,    -1,   293,   294,   295,   296,    -1,    -1,   299,   300,
      -1,    -1,   303,    -1,   305,    -1,   307,    -1,    -1,   310,
     311,   312,   313,   314,   315,   316,    -1,    -1,   319,   320,
      -1,   322,   323,   324,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   333,   334,    -1,   336,    -1,   338,   339,   340,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     351,   352,   353,    -1,   355,    -1,   357,    -1,   359,    -1,
      -1,    -1,   363,    -1,   365,    -1,   367,   368,    -1,   370,
     371,   372,   373,   374,   375,   376,   377,    -1,    -1,    -1,
      -1,   382,   383,    -1,    -1,   386,   387,   388,    -1,   390,
      -1,    -1,   393,   394,    -1,   396,    -1,    -1,   399,    -1,
      -1,   402,   403,   404,    -1,    -1,    -1,   408,    -1,   410,
     411,    -1,   413,   414,   415,    -1,    -1,   418,    -1,    -1,
      -1,    -1,   423,   424,   425,    -1,    -1,   428,    -1,    -1,
      -1,   432,    -1,   434,    -1,    -1,   437,   438,    -1,    -1,
      -1,    -1,    -1,    -1,   445,   446,    -1,   448,    -1,    -1,
     451,    -1,    -1,    -1,   455,    -1,    -1,    -1,   459,    -1,
     461,   462,   463,    -1,    -1,    -1,   467,   468,    -1,   470,
     471,    -1,   473,   474,    -1,    -1,   477,   478,   479,   480,
     481,    -1,    -1,    -1,    -1,    -1,   487,    -1,   489,    -1,
      -1,    -1,   493,   494,   495,    -1,    -1,   498,   499,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   507,    -1,    -1,   510,
      -1,    -1,    -1,   514,   515,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   523,    -1,    -1,   526,    -1,    -1,   529,   530,
     531,    -1,    -1,   534,    -1,   536,    -1,   538,    -1,    -1,
      -1,    -1,   543,    -1,    -1,    -1,     5,   548,     7,     8,
       9,    10,    11,    -1,    -1,    -1,    -1,    -1,    17,    -1,
      -1,    -1,    -1,    -1,    23,    24,    25,    -1,    -1,    28,
      -1,    30,    -1,    -1,    33,    -1,    -1,    -1,    37,    -1,
      -1,    40,    41,    -1,    43,    -1,    -1,    -1,    -1,    -1,
      49,    -1,    51,    -1,    53,    -1,    -1,    -1,    -1,    58,
      59,    60,    -1,    62,    -1,    64,    65,    -1,    -1,    68,
      -1,    70,    71,    -1,    -1,    74,    -1,    -1,    77,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    86,    -1,    -1,
      -1,    -1,    -1,    -1,    93,    94,    -1,    -1,    97,    -1,
      -1,    -1,    -1,   102,    -1,    -1,    -1,    -1,    -1,    -1,
     109,    -1,   111,    -1,    -1,    -1,    -1,    -1,   117,    -1,
     119,   120,   121,    -1,    -1,    -1,    -1,    -1,    -1,   128,
     129,   130,    -1,    -1,    -1,   134,    -1,    -1,    -1,    -1,
     139,   140,   141,    -1,    -1,   144,    -1,   146,   147,    -1,
      -1,    -1,   151,    -1,   153,    -1,    -1,   156,   157,    -1,
     159,   160,   161,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     169,   170,    -1,    -1,   173,    -1,   175,    -1,    -1,    -1,
      -1,    -1,    -1,   182,   183,    -1,    -1,   186,   187,    -1,
     189,    -1,    -1,    -1,    -1,    -1,    -1,   196,    -1,    -1,
      -1,    -1,   201,    -1,    -1,    -1,   205,   206,   207,   208,
     209,    -1,   211,   212,    -1,    -1,    -1,   216,    -1,    -1,
      -1,   220,    -1,    -1,    -1,   224,    -1,    -1,   227,   228,
     229,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   237,    -1,
      -1,    -1,   241,   242,    -1,   244,    -1,    -1,    -1,    -1,
      -1,   250,    -1,   252,    -1,    -1,   255,    -1,   257,    -1,
      -1,    -1,    -1,    -1,   263,    -1,    -1,    -1,   267,   268,
     269,   270,   271,   272,    -1,   274,   275,   276,   277,   278,
     279,   280,   281,   282,    -1,   284,   285,   286,    -1,   288,
     289,    -1,    -1,    -1,   293,   294,   295,   296,    -1,    -1,
     299,   300,    -1,    -1,   303,    -1,   305,    -1,   307,    -1,
      -1,   310,   311,   312,   313,   314,   315,   316,    -1,    -1,
     319,   320,    -1,   322,   323,   324,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   333,   334,    -1,   336,    -1,   338,
     339,   340,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   351,   352,   353,    -1,   355,    -1,   357,    -1,
     359,    -1,    -1,    -1,   363,    -1,   365,    -1,   367,   368,
      -1,   370,   371,   372,   373,   374,   375,   376,   377,    -1,
      -1,    -1,    -1,   382,   383,    -1,    -1,   386,   387,   388,
      -1,   390,    -1,    -1,   393,   394,    -1,   396,    -1,    -1,
     399,    -1,    -1,   402,   403,   404,    -1,    -1,    -1,   408,
      -1,   410,   411,    -1,   413,   414,   415,    -1,    -1,   418,
      -1,    -1,    -1,    -1,   423,   424,   425,    -1,    -1,   428,
      -1,    -1,    -1,   432,    -1,   434,    -1,    -1,   437,   438,
      -1,    -1,    -1,    -1,    -1,    -1,   445,   446,    -1,   448,
      -1,    -1,   451,    -1,    -1,    -1,   455,    -1,    -1,    -1,
     459,    -1,   461,   462,   463,    -1,    -1,    -1,   467,   468,
      -1,   470,   471,    -1,   473,   474,    -1,    -1,   477,   478,
     479,   480,   481,    -1,    -1,    -1,    -1,    -1,   487,    -1,
     489,    -1,    -1,    -1,   493,   494,   495,    -1,    -1,   498,
     499,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   507,    -1,
      -1,   510,    -1,    -1,    -1,   514,   515,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   523,    -1,    -1,   526,    -1,    -1,
     529,   530,   531,    -1,    -1,   534,    -1,   536,    -1,   538,
      -1,    -1,    -1,    -1,   543,    -1,    -1,    -1,     5,   548,
       7,     8,     9,    10,    11,    -1,    -1,    -1,    -1,    -1,
      17,    -1,    -1,    -1,    -1,    -1,    23,    24,    25,    -1,
      -1,    28,    -1,    30,    -1,    -1,    33,    -1,    -1,    -1,
      37,    -1,    -1,    40,    41,    -1,    43,    -1,    -1,    -1,
      -1,    -1,    49,    -1,    51,    -1,    53,    -1,    -1,    -1,
      -1,    58,    59,    60,    -1,    62,    -1,    64,    65,    -1,
      -1,    68,    -1,    70,    71,    -1,    -1,    74,    -1,    -1,
      77,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    86,
      -1,    -1,    -1,    -1,    -1,    -1,    93,    94,    -1,    -1,
      97,    -1,    -1,    -1,    -1,   102,    -1,    -1,    -1,    -1,
      -1,    -1,   109,    -1,   111,    -1,    -1,    -1,    -1,    -1,
     117,    -1,   119,   120,   121,    -1,    -1,    -1,    -1,    -1,
      -1,   128,   129,   130,    -1,    -1,    -1,   134,    -1,    -1,
      -1,    -1,   139,   140,   141,    -1,    -1,   144,    -1,   146,
     147,    -1,    -1,    -1,   151,    -1,   153,    -1,    -1,   156,
     157,    -1,   159,   160,   161,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   169,   170,    -1,    -1,   173,    -1,   175,    -1,
      -1,    -1,    -1,    -1,    -1,   182,   183,    -1,    -1,   186,
     187,    -1,   189,    -1,    -1,    -1,    -1,    -1,    -1,   196,
      -1,    -1,    -1,    -1,   201,    -1,    -1,    -1,   205,   206,
     207,   208,   209,    -1,   211,   212,    -1,    -1,    -1,   216,
      -1,    -1,    -1,   220,    -1,    -1,    -1,   224,    -1,    -1,
     227,   228,   229,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     237,    -1,    -1,    -1,   241,   242,    -1,   244,    -1,    -1,
      -1,    -1,    -1,   250,    -1,   252,    -1,    -1,   255,    -1,
     257,    -1,    -1,    -1,    -1,    -1,   263,    -1,    -1,    -1,
     267,   268,   269,   270,   271,   272,    -1,   274,   275,   276,
     277,   278,   279,   280,   281,   282,    -1,   284,   285,   286,
      -1,   288,   289,    -1,    -1,    -1,   293,   294,   295,   296,
      -1,    -1,   299,   300,    -1,    -1,   303,    -1,   305,    -1,
     307,    -1,    -1,   310,   311,   312,   313,   314,   315,   316,
      -1,    -1,   319,   320,    -1,   322,   323,   324,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   333,   334,    -1,   336,
      -1,   338,   339,   340,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   351,   352,   353,    -1,   355,    -1,
     357,    -1,   359,    -1,    -1,    -1,   363,    -1,   365,    -1,
     367,   368,    -1,   370,   371,   372,   373,   374,   375,   376,
     377,    -1,    -1,    -1,    -1,   382,   383,    -1,    -1,   386,
     387,   388,    -1,   390,    -1,    -1,   393,   394,    -1,   396,
      -1,    -1,   399,    -1,    -1,   402,   403,   404,    -1,    -1,
      -1,   408,    -1,   410,   411,    -1,   413,   414,   415,    -1,
      -1,   418,    -1,    -1,    -1,    -1,   423,   424,   425,    -1,
      -1,   428,    -1,    -1,    -1,   432,    -1,   434,    -1,    -1,
     437,   438,    -1,    -1,    -1,    -1,    -1,    -1,   445,   446,
      -1,   448,    -1,    -1,   451,    -1,    -1,    -1,   455,    -1,
      -1,    -1,   459,    -1,   461,   462,   463,    -1,    -1,    -1,
     467,   468,    -1,   470,   471,    -1,   473,   474,    -1,    -1,
     477,   478,   479,   480,   481,    -1,    -1,    -1,    -1,    -1,
     487,    -1,   489,    -1,    -1,    -1,   493,   494,   495,    -1,
      -1,   498,   499,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     507,    -1,    -1,   510,    -1,    -1,    -1,   514,   515,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   523,    -1,    -1,   526,
      -1,    -1,   529,   530,   531,    -1,    -1,   534,    -1,   536,
      -1,   538,    -1,    -1,    -1,    -1,   543,    -1,    -1,    -1,
       5,   548,     7,     8,     9,    10,    11,    -1,    -1,    -1,
      -1,    -1,    17,    -1,    -1,    20,    -1,    -1,    23,    24,
      25,    26,    -1,    28,    -1,    30,    -1,    -1,    33,    -1,
      -1,    -1,    37,    -1,    -1,    40,    41,    -1,    43,    -1,
      45,    46,    -1,    -1,    49,    -1,    51,    -1,    53,    54,
      -1,    56,    -1,    58,    59,    60,    -1,    62,    -1,    64,
      65,    -1,    67,    68,    69,    70,    71,    -1,    -1,    74,
      -1,    -1,    77,    -1,    79,    -1,    -1,    -1,    -1,    -1,
      -1,    86,    -1,    -1,    -1,    -1,    -1,    -1,    93,    94,
      -1,    -1,    97,    -1,    -1,    -1,    -1,   102,   103,   104,
      -1,    -1,    -1,    -1,   109,    -1,   111,    -1,    -1,    -1,
      -1,    -1,   117,    -1,   119,   120,   121,    -1,    -1,    -1,
     125,    -1,    -1,   128,   129,   130,    -1,    -1,    -1,   134,
      -1,    -1,    -1,   138,   139,   140,   141,    -1,    -1,   144,
      -1,   146,   147,   148,    -1,    -1,   151,    -1,   153,    -1,
      -1,   156,    -1,    -1,   159,   160,   161,   162,    -1,   164,
      -1,    -1,    -1,    -1,   169,   170,    -1,    -1,   173,    -1,
     175,    -1,    -1,    -1,    -1,    -1,    -1,   182,   183,    -1,
      -1,   186,   187,    -1,   189,    -1,    -1,    -1,    -1,    -1,
     195,   196,    -1,   198,   199,    -1,   201,    -1,    -1,    -1,
     205,   206,   207,   208,    -1,    -1,   211,   212,    -1,    -1,
      -1,   216,    -1,    -1,    -1,   220,    -1,    -1,    -1,   224,
      -1,    -1,   227,   228,    -1,    -1,    -1,    -1,    -1,    -1,
     235,    -1,   237,    -1,    -1,    -1,   241,    -1,    -1,   244,
      -1,    -1,    -1,    -1,    -1,   250,    -1,   252,    -1,    -1,
     255,    -1,   257,    -1,    -1,    -1,   261,    -1,    -1,    -1,
      -1,    -1,   267,   268,   269,   270,   271,   272,    -1,   274,
     275,   276,   277,   278,   279,   280,   281,   282,    -1,   284,
     285,   286,    -1,   288,   289,    -1,    -1,    -1,   293,   294,
     295,   296,    -1,    -1,   299,   300,    -1,    -1,   303,    -1,
     305,    -1,   307,    -1,    -1,   310,   311,   312,   313,   314,
     315,   316,    -1,    -1,   319,   320,    -1,   322,   323,   324,
     325,   326,    -1,   328,    -1,    -1,   331,    -1,   333,   334,
      -1,   336,    -1,   338,   339,   340,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   351,   352,   353,    -1,
     355,    -1,   357,    -1,   359,    -1,    -1,   362,   363,    -1,
     365,    -1,   367,   368,    -1,   370,   371,   372,   373,   374,
     375,   376,   377,    -1,    -1,    -1,    -1,   382,   383,    -1,
      -1,   386,   387,   388,    -1,   390,    -1,   392,   393,    -1,
      -1,   396,    -1,   398,   399,   400,    -1,   402,   403,    -1,
      -1,    -1,   407,   408,    -1,   410,   411,    -1,   413,   414,
     415,   416,    -1,   418,   419,    -1,    -1,    -1,   423,   424,
     425,    -1,    -1,   428,    -1,    -1,    -1,   432,   433,   434,
     435,    -1,   437,   438,    -1,    -1,   441,   442,   443,    -1,
     445,   446,    -1,   448,    -1,    -1,   451,    -1,    -1,   454,
     455,    -1,    -1,   458,   459,    -1,   461,   462,   463,    -1,
      -1,    -1,   467,   468,    -1,   470,   471,    -1,   473,   474,
      -1,    -1,   477,   478,   479,   480,   481,    -1,    -1,    -1,
      -1,    -1,   487,    -1,   489,    -1,    -1,   492,   493,   494,
     495,    -1,   497,   498,   499,    -1,    -1,   502,    -1,    -1,
      -1,    -1,   507,    -1,    -1,   510,    -1,    -1,    -1,   514,
     515,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   523,    -1,
      -1,   526,    -1,    -1,   529,   530,   531,    -1,    -1,    -1,
      -1,   536,    -1,   538,   539,    -1,    -1,     5,   543,     7,
       8,     9,    10,    11,    -1,    -1,    -1,    -1,    -1,    17,
      -1,    -1,    20,    -1,    -1,    23,    24,    25,    26,    -1,
      28,    -1,    30,    -1,    32,    33,    -1,    -1,    -1,    37,
      -1,    -1,    40,    41,    -1,    43,    -1,    45,    46,    -1,
      -1,    49,    -1,    51,    -1,    53,    54,    -1,    56,    -1,
      58,    59,    60,    -1,    62,    -1,    64,    65,    -1,    67,
      68,    69,    70,    71,    -1,    -1,    74,    -1,    -1,    77,
      -1,    79,    -1,    -1,    -1,    -1,    -1,    -1,    86,    -1,
      -1,    -1,    -1,    -1,    -1,    93,    94,    -1,    -1,    97,
      -1,    -1,    -1,    -1,   102,   103,    -1,    -1,    -1,    -1,
     108,   109,    -1,   111,    -1,    -1,    -1,    -1,    -1,   117,
      -1,   119,   120,   121,    -1,    -1,    -1,   125,    -1,    -1,
     128,   129,   130,    -1,    -1,    -1,   134,    -1,    -1,    -1,
     138,   139,   140,   141,   142,    -1,   144,    -1,   146,   147,
     148,    -1,    -1,   151,    -1,   153,    -1,    -1,   156,    -1,
      -1,   159,   160,   161,    -1,    -1,   164,    -1,    -1,    -1,
      -1,   169,   170,    -1,    -1,   173,    -1,   175,    -1,    -1,
      -1,    -1,    -1,    -1,   182,   183,    -1,    -1,   186,   187,
      -1,   189,    -1,    -1,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,   201,    -1,    -1,    -1,   205,   206,   207,
     208,    -1,    -1,   211,   212,    -1,    -1,    -1,   216,    -1,
      -1,    -1,   220,    -1,    -1,    -1,   224,    -1,    -1,   227,
     228,    -1,    -1,    -1,    -1,    -1,    -1,   235,    -1,   237,
      -1,    -1,    -1,   241,    -1,    -1,   244,   245,    -1,    -1,
      -1,    -1,   250,    -1,   252,    -1,    -1,   255,    -1,   257,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   267,
     268,   269,   270,   271,   272,    -1,   274,   275,   276,   277,
     278,   279,   280,   281,   282,    -1,   284,   285,   286,    -1,
     288,   289,    -1,    -1,    -1,   293,   294,   295,   296,    -1,
      -1,   299,   300,    -1,    -1,   303,    -1,   305,    -1,   307,
      -1,    -1,   310,   311,   312,   313,   314,   315,   316,    -1,
      -1,   319,   320,    -1,   322,   323,   324,    -1,    -1,    -1,
     328,    -1,    -1,    -1,    -1,   333,   334,    -1,   336,    -1,
     338,   339,   340,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   351,   352,   353,    -1,   355,    -1,   357,
      -1,   359,    -1,    -1,   362,   363,    -1,   365,    -1,   367,
     368,    -1,   370,   371,   372,   373,   374,   375,   376,   377,
      -1,    -1,    -1,    -1,   382,   383,    -1,    -1,   386,   387,
     388,    -1,   390,    -1,   392,   393,    -1,    -1,   396,    -1,
     398,   399,   400,    -1,   402,   403,    -1,    -1,    -1,   407,
     408,    -1,   410,   411,    -1,   413,   414,   415,   416,    -1,
     418,   419,    -1,    -1,    -1,   423,   424,   425,    -1,   427,
     428,    -1,    -1,    -1,   432,   433,   434,   435,    -1,   437,
     438,    -1,    -1,    -1,    -1,    -1,    -1,   445,   446,    -1,
     448,    -1,    -1,   451,    -1,    -1,   454,   455,    -1,    -1,
     458,   459,    -1,   461,   462,   463,    -1,    -1,    -1,   467,
     468,    -1,   470,   471,    -1,   473,   474,    -1,   476,   477,
     478,   479,   480,   481,    -1,    -1,    -1,    -1,    -1,   487,
      -1,   489,    -1,    -1,   492,   493,   494,   495,    -1,    -1,
     498,   499,    -1,    -1,   502,    -1,    -1,    -1,    -1,   507,
      -1,    -1,   510,    -1,    -1,    -1,   514,   515,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   523,    -1,    -1,   526,    -1,
      -1,   529,   530,   531,    -1,    -1,    -1,    -1,   536,    -1,
     538,   539,    -1,    -1,     5,   543,     7,     8,     9,    10,
      11,    -1,    -1,    -1,    -1,    -1,    17,    -1,    -1,    20,
      -1,    -1,    23,    24,    25,    26,    -1,    28,    -1,    30,
      -1,    32,    33,    -1,    -1,    -1,    37,    -1,    -1,    40,
      41,    -1,    43,    -1,    45,    46,    -1,    -1,    49,    -1,
      51,    -1,    53,    54,    -1,    56,    -1,    58,    59,    60,
      -1,    62,    -1,    64,    65,    -1,    67,    68,    69,    70,
      71,    -1,    -1,    74,    -1,    -1,    77,    -1,    79,    -1,
      -1,    -1,    -1,    -1,    -1,    86,    -1,    -1,    -1,    -1,
      -1,    -1,    93,    94,    -1,    -1,    97,    -1,    -1,    -1,
      -1,   102,   103,    -1,    -1,    -1,    -1,   108,   109,    -1,
     111,    -1,    -1,    -1,    -1,    -1,   117,    -1,   119,   120,
     121,    -1,    -1,    -1,   125,    -1,    -1,   128,   129,   130,
      -1,    -1,    -1,   134,    -1,    -1,    -1,   138,   139,   140,
     141,    -1,    -1,   144,    -1,   146,   147,   148,    -1,    -1,
     151,    -1,   153,    -1,    -1,   156,    -1,    -1,   159,   160,
     161,    -1,    -1,   164,    -1,    -1,    -1,    -1,   169,   170,
      -1,    -1,   173,    -1,   175,    -1,    -1,    -1,    -1,    -1,
      -1,   182,   183,    -1,    -1,   186,   187,    -1,   189,    -1,
      -1,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
     201,    -1,    -1,    -1,   205,   206,   207,   208,    -1,    -1,
     211,   212,    -1,    -1,    -1,   216,    -1,    -1,    -1,   220,
      -1,    -1,    -1,   224,    -1,    -1,   227,   228,    -1,    -1,
      -1,    -1,    -1,    -1,   235,    -1,   237,    -1,    -1,    -1,
     241,    -1,    -1,   244,   245,    -1,    -1,    -1,    -1,   250,
      -1,   252,    -1,    -1,   255,    -1,   257,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   267,   268,   269,   270,
     271,   272,    -1,   274,   275,   276,   277,   278,   279,   280,
     281,   282,    -1,   284,   285,   286,    -1,   288,   289,    -1,
      -1,    -1,   293,   294,   295,   296,    -1,    -1,   299,   300,
      -1,    -1,   303,    -1,   305,    -1,   307,    -1,    -1,   310,
     311,   312,   313,   314,   315,   316,    -1,    -1,   319,   320,
      -1,   322,   323,   324,    -1,    -1,    -1,   328,    -1,    -1,
      -1,    -1,   333,   334,    -1,   336,    -1,   338,   339,   340,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     351,   352,   353,    -1,   355,    -1,   357,    -1,   359,    -1,
      -1,   362,   363,    -1,   365,    -1,   367,   368,    -1,   370,
     371,   372,   373,   374,   375,   376,   377,    -1,    -1,    -1,
      -1,   382,   383,    -1,    -1,   386,   387,   388,    -1,   390,
      -1,   392,   393,    -1,    -1,   396,    -1,   398,   399,   400,
      -1,   402,   403,    -1,    -1,    -1,   407,   408,    -1,   410,
     411,    -1,   413,   414,   415,   416,    -1,   418,   419,    -1,
      -1,    -1,   423,   424,   425,    -1,    -1,   428,    -1,    -1,
      -1,   432,   433,   434,   435,    -1,   437,   438,    -1,    -1,
      -1,    -1,    -1,    -1,   445,   446,    -1,   448,    -1,    -1,
     451,    -1,    -1,   454,   455,    -1,    -1,   458,   459,    -1,
     461,   462,   463,    -1,    -1,    -1,   467,   468,    -1,   470,
     471,    -1,   473,   474,    -1,   476,   477,   478,   479,   480,
     481,    -1,    -1,    -1,    -1,    -1,   487,    -1,   489,    -1,
      -1,   492,   493,   494,   495,    -1,    -1,   498,   499,    -1,
      -1,   502,    -1,    -1,    -1,    -1,   507,    -1,    -1,   510,
      -1,    -1,    -1,   514,   515,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   523,    -1,    -1,   526,    -1,    -1,   529,   530,
     531,    -1,    -1,    -1,    -1,   536,    -1,   538,   539,    -1,
      -1,     5,   543,     7,     8,     9,    10,    11,    -1,    -1,
      -1,    -1,    -1,    17,    -1,    -1,    20,    -1,    -1,    23,
      24,    25,    26,    -1,    28,    -1,    30,    -1,    32,    33,
      -1,    -1,    -1,    37,    -1,    -1,    40,    41,    -1,    43,
      -1,    45,    46,    -1,    -1,    49,    -1,    51,    -1,    53,
      54,    -1,    56,    -1,    58,    59,    60,    -1,    62,    -1,
      64,    65,    -1,    67,    68,    69,    70,    71,    -1,    -1,
      74,    -1,    -1,    77,    -1,    79,    -1,    -1,    -1,    -1,
      -1,    -1,    86,    -1,    -1,    -1,    -1,    -1,    -1,    93,
      94,    -1,    -1,    97,    -1,    -1,    -1,    -1,   102,   103,
      -1,    -1,    -1,    -1,   108,   109,    -1,   111,    -1,    -1,
      -1,    -1,    -1,   117,    -1,   119,   120,   121,    -1,    -1,
      -1,   125,    -1,    -1,   128,   129,   130,    -1,    -1,    -1,
     134,    -1,    -1,    -1,   138,   139,   140,   141,    -1,    -1,
     144,    -1,   146,   147,   148,    -1,    -1,   151,    -1,   153,
      -1,    -1,   156,    -1,    -1,   159,   160,   161,    -1,    -1,
     164,    -1,    -1,    -1,    -1,   169,   170,    -1,    -1,   173,
      -1,   175,    -1,    -1,    -1,    -1,    -1,    -1,   182,   183,
      -1,    -1,   186,   187,    -1,   189,    -1,    -1,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,   201,    -1,    -1,
      -1,   205,   206,   207,   208,    -1,    -1,   211,   212,    -1,
      -1,    -1,   216,    -1,    -1,    -1,   220,    -1,    -1,    -1,
     224,    -1,    -1,   227,   228,    -1,    -1,    -1,    -1,    -1,
      -1,   235,    -1,   237,    -1,    -1,    -1,   241,    -1,    -1,
     244,   245,    -1,    -1,    -1,    -1,   250,    -1,   252,    -1,
      -1,   255,    -1,   257,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   267,   268,   269,   270,   271,   272,    -1,
     274,   275,   276,   277,   278,   279,   280,   281,   282,    -1,
     284,   285,   286,    -1,   288,   289,    -1,    -1,    -1,   293,
     294,   295,   296,    -1,    -1,   299,   300,    -1,    -1,   303,
      -1,   305,    -1,   307,    -1,    -1,   310,   311,   312,   313,
     314,   315,   316,    -1,    -1,   319,   320,    -1,   322,   323,
     324,    -1,    -1,    -1,   328,    -1,    -1,    -1,    -1,   333,
     334,    -1,   336,    -1,   338,   339,   340,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   351,   352,   353,
      -1,   355,    -1,   357,    -1,   359,    -1,    -1,   362,   363,
      -1,   365,    -1,   367,   368,    -1,   370,   371,   372,   373,
     374,   375,   376,   377,    -1,    -1,    -1,    -1,   382,   383,
      -1,    -1,   386,   387,   388,    -1,   390,    -1,   392,   393,
      -1,    -1,   396,    -1,   398,   399,   400,    -1,   402,   403,
      -1,    -1,    -1,   407,   408,    -1,   410,   411,    -1,   413,
     414,   415,   416,    -1,   418,   419,    -1,    -1,    -1,   423,
     424,   425,    -1,    -1,   428,    -1,    -1,    -1,   432,   433,
     434,   435,    -1,   437,   438,    -1,    -1,    -1,    -1,    -1,
      -1,   445,   446,    -1,   448,    -1,    -1,   451,    -1,    -1,
     454,   455,    -1,    -1,   458,   459,    -1,   461,   462,   463,
      -1,    -1,    -1,   467,   468,    -1,   470,   471,    -1,   473,
     474,    -1,   476,   477,   478,   479,   480,   481,    -1,    -1,
      -1,    -1,    -1,   487,    -1,   489,    -1,    -1,   492,   493,
     494,   495,    -1,    -1,   498,   499,    -1,    -1,   502,    -1,
      -1,    -1,    -1,   507,    -1,    -1,   510,    -1,    -1,    -1,
     514,   515,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   523,
      -1,    -1,   526,    -1,    -1,   529,   530,   531,    -1,    -1,
      -1,    -1,   536,    -1,   538,   539,    -1,    -1,     5,   543,
       7,     8,     9,    10,    11,    -1,    -1,    -1,    -1,    -1,
      17,    -1,    -1,    20,    -1,    -1,    23,    24,    25,    26,
      -1,    28,    -1,    30,    -1,    -1,    33,    -1,    -1,    -1,
      37,    -1,    -1,    40,    41,    -1,    43,    -1,    45,    46,
      -1,    -1,    49,    -1,    51,    -1,    53,    54,    -1,    56,
      -1,    58,    59,    60,    -1,    62,    -1,    64,    65,    -1,
      67,    68,    69,    70,    71,    -1,    -1,    74,    -1,    -1,
      77,    -1,    79,    -1,    -1,    -1,    -1,    -1,    -1,    86,
      -1,    88,    -1,    -1,    -1,    -1,    93,    94,    -1,    -1,
      97,    -1,    -1,    -1,    -1,   102,   103,    -1,    -1,    -1,
      -1,    -1,   109,    -1,   111,    -1,    -1,    -1,    -1,    -1,
     117,    -1,   119,   120,   121,    -1,    -1,    -1,   125,    -1,
      -1,   128,   129,   130,    -1,    -1,    -1,   134,    -1,    -1,
      -1,   138,   139,   140,   141,    -1,    -1,   144,    -1,   146,
     147,   148,    -1,    -1,   151,    -1,   153,    -1,    -1,   156,
      -1,    -1,   159,   160,   161,    -1,    -1,   164,    -1,    -1,
      -1,    -1,   169,   170,    -1,    -1,   173,    -1,   175,    -1,
      -1,    -1,    -1,    -1,    -1,   182,   183,    -1,    -1,   186,
     187,    -1,   189,    -1,    -1,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,   201,    -1,    -1,    -1,   205,   206,
     207,   208,    -1,    -1,   211,   212,    -1,    -1,    -1,   216,
      -1,    -1,    -1,   220,    -1,    -1,    -1,   224,    -1,    -1,
     227,   228,    -1,    -1,    -1,    -1,    -1,    -1,   235,    -1,
     237,    -1,    -1,    -1,   241,    -1,    -1,   244,   245,    -1,
      -1,    -1,    -1,   250,    -1,   252,    -1,    -1,   255,    -1,
     257,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     267,   268,   269,   270,   271,   272,    -1,   274,   275,   276,
     277,   278,   279,   280,   281,   282,    -1,   284,   285,   286,
      -1,   288,   289,    -1,    -1,    -1,   293,   294,   295,   296,
      -1,    -1,   299,   300,    -1,    -1,   303,    -1,   305,    -1,
     307,    -1,    -1,   310,   311,   312,   313,   314,   315,   316,
      -1,    -1,   319,   320,    -1,   322,   323,   324,    -1,    -1,
      -1,   328,    -1,    -1,    -1,    -1,   333,   334,    -1,   336,
      -1,   338,   339,   340,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   351,   352,   353,    -1,   355,    -1,
     357,    -1,   359,    -1,    -1,   362,   363,    -1,   365,    -1,
     367,   368,    -1,   370,   371,   372,   373,   374,   375,   376,
     377,    -1,    -1,    -1,    -1,   382,   383,    -1,    -1,   386,
     387,   388,    -1,   390,    -1,   392,   393,    -1,    -1,   396,
      -1,   398,   399,   400,    -1,   402,   403,    -1,    -1,    -1,
     407,   408,    -1,   410,   411,    -1,   413,   414,   415,   416,
      -1,   418,   419,    -1,    -1,    -1,   423,   424,   425,    -1,
      -1,   428,    -1,    -1,    -1,   432,   433,   434,   435,    -1,
     437,   438,    -1,    -1,    -1,    -1,    -1,    -1,   445,   446,
      -1,   448,    -1,    -1,   451,    -1,    -1,   454,   455,    -1,
      -1,   458,   459,    -1,   461,   462,   463,    -1,    -1,    -1,
     467,   468,    -1,   470,   471,    -1,   473,   474,    -1,   476,
     477,   478,   479,   480,   481,    -1,    -1,    -1,    -1,    -1,
     487,    -1,   489,    -1,    -1,   492,   493,   494,   495,    -1,
      -1,   498,   499,    -1,    -1,   502,    -1,    -1,    -1,    -1,
     507,    -1,    -1,   510,    -1,    -1,    -1,   514,   515,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   523,    -1,    -1,   526,
      -1,    -1,   529,   530,   531,    -1,    -1,    -1,    -1,   536,
      -1,   538,   539,    -1,    -1,     5,   543,     7,     8,     9,
      10,    11,    -1,    -1,    -1,    -1,    -1,    17,    -1,    -1,
      20,    -1,    -1,    23,    24,    25,    26,    -1,    28,    -1,
      30,    -1,    -1,    33,    34,    -1,    -1,    37,    -1,    -1,
      40,    41,    -1,    43,    -1,    45,    46,    -1,    -1,    49,
      -1,    51,    -1,    53,    54,    -1,    56,    -1,    58,    59,
      60,    -1,    62,    -1,    64,    65,    -1,    67,    68,    69,
      70,    71,    -1,    -1,    74,    -1,    -1,    77,    -1,    79,
      -1,    -1,    -1,    -1,    -1,    -1,    86,    -1,    -1,    -1,
      -1,    -1,    -1,    93,    94,    -1,    -1,    97,    -1,    -1,
      -1,    -1,   102,   103,    -1,    -1,    -1,    -1,    -1,   109,
      -1,   111,    -1,    -1,    -1,    -1,    -1,   117,    -1,   119,
     120,   121,    -1,    -1,    -1,   125,    -1,    -1,   128,   129,
     130,    -1,    -1,    -1,   134,    -1,    -1,    -1,   138,   139,
     140,   141,    -1,    -1,   144,    -1,   146,   147,   148,    -1,
      -1,   151,    -1,   153,    -1,    -1,   156,    -1,    -1,   159,
     160,   161,    -1,    -1,   164,    -1,    -1,    -1,    -1,   169,
     170,    -1,    -1,   173,    -1,   175,    -1,    -1,    -1,    -1,
      -1,    -1,   182,   183,    -1,    -1,   186,   187,    -1,   189,
      -1,    -1,    -1,    -1,    -1,   195,   196,    -1,   198,   199,
      -1,   201,    -1,    -1,    -1,   205,   206,   207,   208,    -1,
      -1,   211,   212,    -1,    -1,    -1,   216,    -1,    -1,    -1,
     220,    -1,    -1,    -1,   224,    -1,    -1,   227,   228,    -1,
      -1,    -1,    -1,    -1,    -1,   235,    -1,   237,    -1,    -1,
      -1,   241,    -1,    -1,   244,    -1,    -1,    -1,    -1,    -1,
     250,    -1,   252,    -1,    -1,   255,    -1,   257,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   267,   268,   269,
     270,   271,   272,    -1,   274,   275,   276,   277,   278,   279,
     280,   281,   282,    -1,   284,   285,   286,    -1,   288,   289,
      -1,    -1,    -1,   293,   294,   295,   296,    -1,    -1,   299,
     300,    -1,    -1,   303,    -1,   305,    -1,   307,    -1,    -1,
     310,   311,   312,   313,   314,   315,   316,    -1,    -1,   319,
     320,    -1,   322,   323,   324,    -1,    -1,    -1,   328,    -1,
      -1,    -1,    -1,   333,   334,    -1,   336,    -1,   338,   339,
     340,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   351,   352,   353,    -1,   355,    -1,   357,    -1,   359,
      -1,    -1,   362,   363,    -1,   365,    -1,   367,   368,    -1,
     370,   371,   372,   373,   374,   375,   376,   377,    -1,    -1,
      -1,    -1,   382,   383,    -1,    -1,   386,   387,   388,    -1,
     390,    -1,   392,   393,    -1,    -1,   396,    -1,   398,   399,
     400,    -1,   402,   403,    -1,    -1,    -1,   407,   408,    -1,
     410,   411,    -1,   413,   414,   415,   416,    -1,   418,   419,
      -1,    -1,    -1,   423,   424,   425,    -1,    -1,   428,    -1,
      -1,    -1,   432,   433,   434,   435,    -1,   437,   438,    -1,
      -1,    -1,    -1,    -1,    -1,   445,   446,    -1,   448,    -1,
      -1,   451,    -1,    -1,   454,   455,    -1,    -1,   458,   459,
      -1,   461,   462,   463,    -1,    -1,    -1,   467,   468,    -1,
     470,   471,    -1,   473,   474,    -1,   476,   477,   478,   479,
     480,   481,    -1,    -1,    -1,    -1,    -1,   487,    -1,   489,
      -1,    -1,   492,   493,   494,   495,    -1,    -1,   498,   499,
      -1,    -1,   502,    -1,    -1,    -1,    -1,   507,    -1,    -1,
     510,    -1,    -1,    -1,   514,   515,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   523,    -1,    -1,   526,    -1,    -1,   529,
     530,   531,    -1,    -1,    -1,    -1,   536,    -1,   538,   539,
      -1,    -1,     5,   543,     7,     8,     9,    10,    11,    -1,
      -1,    -1,    -1,    -1,    17,    -1,    -1,    20,    -1,    -1,
      23,    24,    25,    26,    -1,    28,    -1,    30,    -1,    -1,
      33,    -1,    -1,    -1,    37,    -1,    -1,    40,    41,    -1,
      43,    -1,    45,    46,    -1,    -1,    49,    -1,    51,    -1,
      53,    54,    -1,    56,    -1,    58,    59,    60,    -1,    62,
      -1,    64,    65,    -1,    67,    68,    69,    70,    71,    -1,
      -1,    74,    -1,    -1,    77,    -1,    79,    -1,    -1,    -1,
      -1,    -1,    -1,    86,    -1,    -1,    -1,    -1,    -1,    -1,
      93,    94,    -1,    -1,    97,    -1,    -1,    -1,    -1,   102,
     103,    -1,    -1,    -1,    -1,   108,   109,    -1,   111,    -1,
      -1,    -1,    -1,    -1,   117,    -1,   119,   120,   121,    -1,
      -1,    -1,   125,    -1,    -1,   128,   129,   130,    -1,    -1,
      -1,   134,    -1,    -1,    -1,   138,   139,   140,   141,    -1,
      -1,   144,    -1,   146,   147,   148,    -1,    -1,   151,    -1,
     153,    -1,    -1,   156,    -1,    -1,   159,   160,   161,    -1,
      -1,   164,    -1,    -1,    -1,    -1,   169,   170,    -1,    -1,
     173,    -1,   175,    -1,    -1,    -1,    -1,    -1,    -1,   182,
     183,    -1,    -1,   186,   187,    -1,   189,    -1,    -1,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,   201,    -1,
      -1,    -1,   205,   206,   207,   208,    -1,    -1,   211,   212,
      -1,    -1,    -1,   216,    -1,    -1,    -1,   220,    -1,    -1,
      -1,   224,    -1,    -1,   227,   228,    -1,    -1,    -1,    -1,
      -1,    -1,   235,    -1,   237,    -1,    -1,    -1,   241,    -1,
      -1,   244,   245,    -1,    -1,    -1,    -1,   250,    -1,   252,
      -1,    -1,   255,    -1,   257,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   267,   268,   269,   270,   271,   272,
      -1,   274,   275,   276,   277,   278,   279,   280,   281,   282,
      -1,   284,   285,   286,    -1,   288,   289,    -1,    -1,    -1,
     293,   294,   295,   296,    -1,    -1,   299,   300,    -1,    -1,
     303,    -1,   305,    -1,   307,    -1,    -1,   310,   311,   312,
     313,   314,   315,   316,    -1,    -1,   319,   320,    -1,   322,
     323,   324,    -1,    -1,    -1,   328,    -1,    -1,    -1,    -1,
     333,   334,    -1,   336,    -1,   338,   339,   340,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   351,   352,
     353,    -1,   355,    -1,   357,    -1,   359,    -1,    -1,   362,
     363,    -1,   365,    -1,   367,   368,    -1,   370,   371,   372,
     373,   374,   375,   376,   377,    -1,    -1,    -1,    -1,   382,
     383,    -1,    -1,   386,   387,   388,    -1,   390,    -1,   392,
     393,    -1,    -1,   396,    -1,   398,   399,   400,    -1,   402,
     403,    -1,    -1,    -1,   407,   408,    -1,   410,   411,    -1,
     413,   414,   415,   416,    -1,   418,   419,    -1,    -1,    -1,
     423,   424,   425,    -1,    -1,   428,    -1,    -1,    -1,   432,
     433,   434,   435,    -1,   437,   438,    -1,    -1,    -1,    -1,
      -1,    -1,   445,   446,    -1,   448,    -1,    -1,   451,    -1,
      -1,   454,   455,    -1,    -1,   458,   459,    -1,   461,   462,
     463,    -1,    -1,    -1,   467,   468,    -1,   470,   471,    -1,
     473,   474,    -1,   476,   477,   478,   479,   480,   481,    -1,
      -1,    -1,    -1,    -1,   487,    -1,   489,    -1,    -1,   492,
     493,   494,   495,    -1,    -1,   498,   499,    -1,    -1,   502,
      -1,    -1,    -1,    -1,   507,    -1,    -1,   510,    -1,    -1,
      -1,   514,   515,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     523,    -1,    -1,   526,    -1,    -1,   529,   530,   531,    -1,
      -1,    -1,    -1,   536,    -1,   538,   539,    -1,    -1,     5,
     543,     7,     8,     9,    10,    11,    -1,    -1,    -1,    -1,
      -1,    17,    -1,    -1,    20,    -1,    -1,    23,    24,    25,
      26,    -1,    28,    -1,    30,    -1,    32,    33,    -1,    -1,
      -1,    37,    -1,    -1,    40,    41,    -1,    43,    -1,    45,
      46,    -1,    -1,    49,    -1,    51,    -1,    53,    54,    -1,
      56,    -1,    58,    59,    60,    -1,    62,    -1,    64,    65,
      -1,    67,    68,    69,    70,    71,    -1,    -1,    74,    -1,
      -1,    77,    -1,    79,    -1,    -1,    -1,    -1,    -1,    -1,
      86,    -1,    -1,    -1,    -1,    -1,    -1,    93,    94,    -1,
      -1,    97,    -1,    -1,    -1,    -1,   102,   103,    -1,    -1,
      -1,    -1,    -1,   109,    -1,   111,    -1,    -1,    -1,    -1,
      -1,   117,    -1,   119,   120,   121,    -1,    -1,    -1,   125,
      -1,    -1,   128,   129,   130,    -1,    -1,    -1,   134,    -1,
      -1,    -1,   138,   139,   140,   141,    -1,    -1,   144,    -1,
     146,   147,   148,    -1,    -1,   151,    -1,   153,    -1,    -1,
     156,    -1,    -1,   159,   160,   161,    -1,    -1,   164,    -1,
      -1,    -1,    -1,   169,   170,    -1,    -1,   173,    -1,   175,
      -1,    -1,    -1,    -1,    -1,    -1,   182,   183,    -1,    -1,
     186,   187,    -1,   189,    -1,    -1,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,   201,    -1,    -1,    -1,   205,
     206,   207,   208,    -1,    -1,   211,   212,    -1,    -1,    -1,
     216,    -1,    -1,    -1,   220,    -1,    -1,    -1,   224,    -1,
      -1,   227,   228,    -1,    -1,    -1,    -1,    -1,    -1,   235,
      -1,   237,    -1,    -1,    -1,   241,    -1,    -1,   244,   245,
      -1,    -1,    -1,    -1,   250,    -1,   252,    -1,    -1,   255,
      -1,   257,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   267,   268,   269,   270,   271,   272,    -1,   274,   275,
     276,   277,   278,   279,   280,   281,   282,    -1,   284,   285,
     286,    -1,   288,   289,    -1,    -1,    -1,   293,   294,   295,
     296,    -1,    -1,   299,   300,    -1,    -1,   303,    -1,   305,
      -1,   307,    -1,    -1,   310,   311,   312,   313,   314,   315,
     316,    -1,    -1,   319,   320,    -1,   322,   323,   324,    -1,
      -1,    -1,   328,    -1,    -1,    -1,    -1,   333,   334,    -1,
     336,    -1,   338,   339,   340,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   351,   352,   353,    -1,   355,
      -1,   357,    -1,   359,    -1,    -1,   362,   363,    -1,   365,
      -1,   367,   368,    -1,   370,   371,   372,   373,   374,   375,
     376,   377,    -1,    -1,    -1,    -1,   382,   383,    -1,    -1,
     386,   387,   388,    -1,   390,    -1,   392,   393,    -1,    -1,
     396,    -1,   398,   399,   400,    -1,   402,   403,    -1,    -1,
      -1,   407,   408,    -1,   410,   411,    -1,   413,   414,   415,
     416,    -1,   418,   419,    -1,    -1,    -1,   423,   424,   425,
      -1,    -1,   428,    -1,    -1,    -1,   432,   433,   434,   435,
      -1,   437,   438,    -1,    -1,    -1,    -1,    -1,    -1,   445,
     446,    -1,   448,    -1,    -1,   451,    -1,    -1,   454,   455,
      -1,    -1,   458,   459,    -1,   461,   462,   463,    -1,    -1,
      -1,   467,   468,    -1,   470,   471,    -1,   473,   474,    -1,
     476,   477,   478,   479,   480,   481,    -1,    -1,    -1,    -1,
      -1,   487,    -1,   489,    -1,    -1,   492,   493,   494,   495,
      -1,    -1,   498,   499,    -1,    -1,   502,    -1,    -1,    -1,
      -1,   507,    -1,    -1,   510,    -1,    -1,    -1,   514,   515,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   523,    -1,    -1,
     526,    -1,    -1,   529,   530,   531,    -1,    -1,    -1,    -1,
     536,    -1,   538,   539,    -1,    -1,     5,   543,     7,     8,
       9,    10,    11,    -1,    -1,    -1,    -1,    -1,    17,    -1,
      -1,    20,    -1,    -1,    23,    24,    25,    26,    -1,    28,
      -1,    30,    -1,    -1,    33,    -1,    -1,    -1,    37,    -1,
      -1,    40,    41,    -1,    43,    -1,    45,    46,    -1,    -1,
      49,    -1,    51,    -1,    53,    54,    -1,    56,    -1,    58,
      59,    60,    -1,    62,    -1,    64,    65,    -1,    67,    68,
      69,    70,    71,    -1,    -1,    74,    -1,    -1,    77,    -1,
      79,    -1,    -1,    -1,    -1,    -1,    -1,    86,    -1,    -1,
      -1,    -1,    -1,    -1,    93,    94,    -1,    -1,    97,    -1,
      -1,    -1,    -1,   102,   103,    -1,    -1,    -1,    -1,    -1,
     109,    -1,   111,    -1,    -1,    -1,    -1,    -1,   117,    -1,
     119,   120,   121,    -1,    -1,    -1,   125,    -1,    -1,   128,
     129,   130,    -1,    -1,    -1,   134,    -1,    -1,    -1,   138,
     139,   140,   141,    -1,    -1,   144,    -1,   146,   147,   148,
      -1,    -1,   151,    -1,   153,    -1,    -1,   156,    -1,    -1,
     159,   160,   161,    -1,    -1,   164,    -1,    -1,    -1,    -1,
     169,   170,    -1,    -1,   173,    -1,   175,    -1,    -1,    -1,
      -1,    -1,    -1,   182,   183,    -1,    -1,   186,   187,    -1,
     189,    -1,    -1,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,   201,    -1,    -1,    -1,   205,   206,   207,   208,
      -1,    -1,   211,   212,    -1,    -1,    -1,   216,    -1,    -1,
      -1,   220,    -1,    -1,    -1,   224,    -1,    -1,   227,   228,
      -1,    -1,    -1,    -1,    -1,    -1,   235,    -1,   237,    -1,
      -1,    -1,   241,    -1,    -1,   244,   245,    -1,    -1,    -1,
      -1,   250,    -1,   252,    -1,    -1,   255,    -1,   257,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   267,   268,
     269,   270,   271,   272,    -1,   274,   275,   276,   277,   278,
     279,   280,   281,   282,    -1,   284,   285,   286,    -1,   288,
     289,    -1,    -1,    -1,   293,   294,   295,   296,    -1,    -1,
     299,   300,    -1,    -1,   303,    -1,   305,    -1,   307,    -1,
      -1,   310,   311,   312,   313,   314,   315,   316,    -1,    -1,
     319,   320,    -1,   322,   323,   324,    -1,    -1,    -1,   328,
      -1,    -1,    -1,    -1,   333,   334,    -1,   336,    -1,   338,
     339,   340,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   351,   352,   353,    -1,   355,    -1,   357,    -1,
     359,    -1,    -1,   362,   363,    -1,   365,    -1,   367,   368,
      -1,   370,   371,   372,   373,   374,   375,   376,   377,    -1,
      -1,    -1,    -1,   382,   383,    -1,    -1,   386,   387,   388,
      -1,   390,    -1,   392,   393,    -1,    -1,   396,    -1,   398,
     399,   400,    -1,   402,   403,    -1,    -1,    -1,   407,   408,
      -1,   410,   411,    -1,   413,   414,   415,   416,    -1,   418,
     419,    -1,    -1,    -1,   423,   424,   425,    -1,    -1,   428,
      -1,    -1,    -1,   432,   433,   434,   435,    -1,   437,   438,
      -1,    -1,    -1,    -1,    -1,    -1,   445,   446,    -1,   448,
      -1,    -1,   451,    -1,    -1,   454,   455,    -1,    -1,   458,
     459,    -1,   461,   462,   463,    -1,    -1,    -1,   467,   468,
      -1,   470,   471,    -1,   473,   474,    -1,   476,   477,   478,
     479,   480,   481,    -1,    -1,    -1,    -1,    -1,   487,    -1,
     489,    -1,    -1,   492,   493,   494,   495,    -1,    -1,   498,
     499,    -1,    -1,   502,    -1,    -1,    -1,    -1,   507,    -1,
      -1,   510,    -1,    -1,    -1,   514,   515,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   523,    -1,    -1,   526,    -1,    -1,
     529,   530,   531,    -1,    -1,    -1,    -1,   536,    -1,   538,
     539,    -1,    -1,     5,   543,     7,     8,     9,    10,    11,
      -1,    -1,    -1,    -1,    -1,    17,    18,    -1,    20,    -1,
      -1,    23,    24,    25,    26,    -1,    28,    -1,    30,    -1,
      -1,    33,    -1,    -1,    -1,    37,    -1,    -1,    40,    41,
      -1,    43,    -1,    45,    46,    -1,    -1,    49,    -1,    51,
      -1,    53,    54,    -1,    56,    -1,    58,    59,    60,    -1,
      62,    -1,    64,    65,    -1,    67,    68,    69,    70,    71,
      -1,    -1,    74,    -1,    -1,    77,    -1,    79,    -1,    -1,
      -1,    -1,    -1,    -1,    86,    -1,    -1,    -1,    -1,    -1,
      -1,    93,    94,    -1,    -1,    97,    -1,    -1,    -1,    -1,
     102,   103,    -1,    -1,    -1,    -1,    -1,   109,    -1,   111,
      -1,    -1,    -1,    -1,    -1,   117,    -1,   119,   120,   121,
      -1,    -1,    -1,   125,    -1,    -1,   128,   129,   130,    -1,
      -1,    -1,   134,    -1,    -1,    -1,   138,   139,   140,   141,
      -1,    -1,   144,    -1,   146,   147,   148,    -1,    -1,   151,
      -1,   153,    -1,    -1,   156,    -1,    -1,   159,   160,   161,
      -1,    -1,   164,    -1,    -1,    -1,    -1,   169,   170,    -1,
      -1,   173,    -1,   175,    -1,    -1,    -1,    -1,    -1,    -1,
     182,   183,    -1,    -1,   186,   187,    -1,   189,    -1,    -1,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,   201,
      -1,    -1,    -1,   205,   206,   207,   208,    -1,    -1,   211,
     212,    -1,    -1,    -1,   216,    -1,    -1,    -1,   220,    -1,
      -1,    -1,   224,    -1,    -1,   227,   228,    -1,    -1,    -1,
      -1,    -1,    -1,   235,    -1,   237,    -1,    -1,    -1,   241,
      -1,    -1,   244,    -1,    -1,    -1,    -1,    -1,   250,    -1,
     252,    -1,    -1,   255,    -1,   257,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   267,   268,   269,   270,   271,
     272,    -1,   274,   275,   276,   277,   278,   279,   280,   281,
     282,    -1,   284,   285,   286,    -1,   288,   289,    -1,    -1,
      -1,   293,   294,   295,   296,    -1,    -1,   299,   300,    -1,
      -1,   303,    -1,   305,    -1,   307,    -1,    -1,   310,   311,
     312,   313,   314,   315,   316,    -1,    -1,   319,   320,    -1,
     322,   323,   324,    -1,    -1,    -1,   328,    -1,    -1,    -1,
      -1,   333,   334,    -1,   336,    -1,   338,   339,   340,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   351,
     352,   353,    -1,   355,    -1,   357,    -1,   359,    -1,    -1,
     362,   363,    -1,   365,    -1,   367,   368,    -1,   370,   371,
     372,   373,   374,   375,   376,   377,    -1,    -1,    -1,    -1,
     382,   383,    -1,    -1,   386,   387,   388,    -1,   390,    -1,
     392,   393,    -1,    -1,   396,    -1,   398,   399,   400,    -1,
     402,   403,    -1,    -1,    -1,   407,   408,    -1,   410,   411,
      -1,   413,   414,   415,   416,    -1,   418,   419,    -1,    -1,
      -1,   423,   424,   425,    -1,    -1,   428,    -1,    -1,    -1,
     432,   433,   434,   435,    -1,   437,   438,    -1,    -1,    -1,
      -1,    -1,    -1,   445,   446,    -1,   448,    -1,    -1,   451,
      -1,    -1,   454,   455,    -1,    -1,   458,   459,    -1,   461,
     462,   463,    -1,    -1,    -1,   467,   468,    -1,   470,   471,
      -1,   473,   474,    -1,   476,   477,   478,   479,   480,   481,
      -1,    -1,    -1,    -1,    -1,   487,    -1,   489,    -1,    -1,
     492,   493,   494,   495,    -1,    -1,   498,   499,    -1,    -1,
     502,    -1,    -1,    -1,    -1,   507,    -1,    -1,   510,    -1,
      -1,    -1,   514,   515,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   523,    -1,    -1,   526,    -1,    -1,   529,   530,   531,
      -1,    -1,    -1,    -1,   536,    -1,   538,   539,    -1,    -1,
       5,   543,     7,     8,     9,    10,    11,    -1,    -1,    -1,
      -1,    -1,    17,    -1,    -1,    20,    -1,    -1,    23,    24,
      25,    26,    -1,    28,    -1,    30,    -1,    -1,    33,    -1,
      -1,    -1,    37,    -1,    -1,    40,    41,    -1,    43,    -1,
      45,    46,    -1,    -1,    49,    -1,    51,    -1,    53,    54,
      -1,    56,    -1,    58,    59,    60,    -1,    62,    -1,    64,
      65,    -1,    67,    68,    69,    70,    71,    -1,    -1,    74,
      -1,    -1,    77,    -1,    79,    80,    -1,    -1,    -1,    -1,
      -1,    86,    -1,    -1,    -1,    -1,    -1,    -1,    93,    94,
      -1,    -1,    97,    -1,    -1,    -1,    -1,   102,   103,    -1,
      -1,    -1,    -1,    -1,   109,    -1,   111,    -1,    -1,    -1,
      -1,    -1,   117,    -1,   119,   120,   121,    -1,    -1,    -1,
     125,    -1,    -1,   128,   129,   130,    -1,    -1,    -1,   134,
      -1,    -1,    -1,   138,   139,   140,   141,    -1,    -1,   144,
      -1,   146,   147,   148,    -1,   150,   151,    -1,   153,    -1,
      -1,   156,    -1,    -1,   159,   160,   161,    -1,    -1,   164,
      -1,    -1,    -1,    -1,   169,   170,    -1,    -1,   173,    -1,
     175,    -1,    -1,    -1,    -1,    -1,    -1,   182,   183,    -1,
      -1,   186,   187,    -1,   189,    -1,    -1,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,   201,    -1,    -1,    -1,
     205,   206,   207,   208,    -1,    -1,   211,   212,    -1,    -1,
      -1,   216,    -1,    -1,    -1,   220,    -1,    -1,    -1,   224,
      -1,    -1,   227,   228,    -1,    -1,    -1,    -1,    -1,    -1,
     235,    -1,   237,    -1,    -1,    -1,   241,    -1,    -1,   244,
      -1,    -1,    -1,    -1,    -1,   250,    -1,   252,    -1,    -1,
     255,    -1,   257,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   267,   268,   269,   270,   271,   272,    -1,   274,
     275,   276,   277,   278,   279,   280,   281,   282,    -1,   284,
     285,   286,    -1,   288,   289,    -1,    -1,    -1,   293,   294,
     295,   296,    -1,    -1,   299,   300,    -1,    -1,   303,    -1,
     305,    -1,   307,    -1,    -1,   310,   311,   312,   313,   314,
     315,   316,    -1,    -1,   319,   320,    -1,   322,   323,   324,
      -1,    -1,    -1,   328,    -1,    -1,    -1,    -1,   333,   334,
      -1,   336,    -1,   338,   339,   340,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   351,   352,   353,    -1,
     355,    -1,   357,    -1,   359,    -1,    -1,   362,   363,    -1,
     365,    -1,   367,   368,    -1,   370,   371,   372,   373,   374,
     375,   376,   377,    -1,    -1,    -1,    -1,   382,   383,    -1,
      -1,   386,   387,   388,    -1,   390,    -1,   392,   393,    -1,
      -1,   396,    -1,   398,   399,   400,    -1,   402,   403,    -1,
      -1,    -1,   407,   408,    -1,   410,   411,    -1,   413,   414,
     415,   416,    -1,   418,   419,    -1,    -1,    -1,   423,   424,
     425,    -1,    -1,   428,    -1,    -1,    -1,   432,   433,   434,
     435,    -1,   437,   438,    -1,    -1,    -1,    -1,    -1,    -1,
     445,   446,    -1,   448,    -1,    -1,   451,    -1,    -1,   454,
     455,    -1,    -1,   458,   459,    -1,   461,   462,   463,    -1,
      -1,    -1,   467,   468,    -1,   470,   471,    -1,   473,   474,
      -1,    -1,   477,   478,   479,   480,   481,    -1,    -1,    -1,
      -1,    -1,   487,    -1,   489,    -1,    -1,   492,   493,   494,
     495,    -1,    -1,   498,   499,    -1,    -1,   502,    -1,    -1,
      -1,    -1,   507,    -1,    -1,   510,    -1,    -1,    -1,   514,
     515,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   523,    -1,
      -1,   526,    -1,    -1,   529,   530,   531,    -1,    -1,    -1,
      -1,   536,    -1,   538,   539,    -1,    -1,     5,   543,     7,
       8,     9,    10,    11,    -1,    -1,    -1,    -1,    -1,    17,
      -1,    -1,    20,    -1,    -1,    23,    24,    25,    26,    -1,
      28,    -1,    30,    -1,    -1,    33,    -1,    -1,    -1,    37,
      -1,    -1,    40,    41,    -1,    43,    -1,    45,    46,    -1,
      -1,    49,    -1,    51,    -1,    53,    54,    -1,    56,    -1,
      58,    59,    60,    -1,    62,    -1,    64,    65,    -1,    67,
      68,    69,    70,    71,    -1,    -1,    74,    -1,    -1,    77,
      -1,    79,    -1,    -1,    -1,    -1,    -1,    -1,    86,    -1,
      -1,    -1,    -1,    -1,    -1,    93,    94,    -1,    -1,    97,
      -1,    -1,    -1,    -1,   102,   103,    -1,    -1,    -1,    -1,
      -1,   109,    -1,   111,    -1,    -1,    -1,    -1,    -1,   117,
      -1,   119,   120,   121,    -1,    -1,    -1,   125,    -1,    -1,
     128,   129,   130,    -1,    -1,    -1,   134,    -1,    -1,    -1,
     138,   139,   140,   141,    -1,    -1,   144,    -1,   146,   147,
     148,    -1,    -1,   151,    -1,   153,    -1,    -1,   156,    -1,
      -1,   159,   160,   161,    -1,    -1,   164,    -1,    -1,    -1,
      -1,   169,   170,   171,    -1,   173,    -1,   175,    -1,    -1,
      -1,    -1,    -1,    -1,   182,   183,    -1,    -1,   186,   187,
      -1,   189,    -1,    -1,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,   201,    -1,    -1,    -1,   205,   206,   207,
     208,    -1,    -1,   211,   212,    -1,    -1,    -1,   216,    -1,
      -1,    -1,   220,    -1,    -1,    -1,   224,    -1,    -1,   227,
     228,    -1,    -1,    -1,    -1,    -1,    -1,   235,    -1,   237,
      -1,    -1,    -1,   241,    -1,    -1,   244,    -1,    -1,    -1,
      -1,    -1,   250,    -1,   252,    -1,    -1,   255,    -1,   257,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   267,
     268,   269,   270,   271,   272,    -1,   274,   275,   276,   277,
     278,   279,   280,   281,   282,    -1,   284,   285,   286,    -1,
     288,   289,    -1,    -1,    -1,   293,   294,   295,   296,    -1,
      -1,   299,   300,    -1,    -1,   303,    -1,   305,    -1,   307,
      -1,    -1,   310,   311,   312,   313,   314,   315,   316,    -1,
      -1,   319,   320,    -1,   322,   323,   324,    -1,    -1,    -1,
     328,    -1,    -1,    -1,    -1,   333,   334,    -1,   336,    -1,
     338,   339,   340,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   351,   352,   353,    -1,   355,    -1,   357,
      -1,   359,    -1,    -1,   362,   363,    -1,   365,    -1,   367,
     368,    -1,   370,   371,   372,   373,   374,   375,   376,   377,
      -1,    -1,    -1,    -1,   382,   383,    -1,    -1,   386,   387,
     388,    -1,   390,    -1,   392,   393,    -1,    -1,   396,    -1,
     398,   399,   400,    -1,   402,   403,    -1,    -1,    -1,   407,
     408,    -1,   410,   411,    -1,   413,   414,   415,   416,    -1,
     418,   419,    -1,    -1,    -1,   423,   424,   425,    -1,    -1,
     428,    -1,    -1,    -1,   432,   433,   434,   435,    -1,   437,
     438,    -1,    -1,    -1,    -1,    -1,    -1,   445,   446,    -1,
     448,    -1,    -1,   451,    -1,    -1,   454,   455,    -1,    -1,
     458,   459,    -1,   461,   462,   463,    -1,    -1,    -1,   467,
     468,    -1,   470,   471,    -1,   473,   474,    -1,    -1,   477,
     478,   479,   480,   481,    -1,    -1,    -1,    -1,    -1,   487,
      -1,   489,    -1,    -1,   492,   493,   494,   495,    -1,    -1,
     498,   499,    -1,    -1,   502,    -1,    -1,    -1,    -1,   507,
      -1,    -1,   510,    -1,    -1,    -1,   514,   515,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   523,    -1,    -1,   526,    -1,
      -1,   529,   530,   531,    -1,    -1,    -1,    -1,   536,    -1,
     538,   539,    -1,    -1,     5,   543,     7,     8,     9,    10,
      11,    -1,    -1,    -1,    -1,    -1,    17,    -1,    -1,    20,
      -1,    -1,    23,    24,    25,    26,    -1,    28,    -1,    30,
      -1,    -1,    33,    -1,    -1,    -1,    37,    -1,    -1,    40,
      41,    -1,    43,    -1,    45,    46,    -1,    -1,    49,    -1,
      51,    -1,    53,    54,    -1,    56,    -1,    58,    59,    60,
      -1,    62,    -1,    64,    65,    -1,    67,    68,    69,    70,
      71,    -1,    -1,    74,    -1,    -1,    77,    -1,    79,    -1,
      -1,    -1,    -1,    -1,    -1,    86,    -1,    -1,    -1,    -1,
      -1,    -1,    93,    94,    -1,    -1,    97,    -1,    -1,    -1,
      -1,   102,   103,    -1,    -1,    -1,    -1,   108,   109,    -1,
     111,    -1,    -1,    -1,    -1,    -1,   117,    -1,   119,   120,
     121,    -1,    -1,    -1,   125,    -1,    -1,   128,   129,   130,
      -1,    -1,    -1,   134,    -1,    -1,    -1,   138,   139,   140,
     141,    -1,    -1,   144,    -1,   146,   147,   148,    -1,    -1,
     151,    -1,   153,    -1,    -1,   156,    -1,    -1,   159,   160,
     161,    -1,    -1,   164,    -1,    -1,    -1,    -1,   169,   170,
      -1,    -1,   173,    -1,   175,    -1,    -1,    -1,    -1,    -1,
      -1,   182,   183,    -1,    -1,   186,   187,    -1,   189,    -1,
      -1,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
     201,    -1,    -1,    -1,   205,   206,   207,   208,    -1,    -1,
     211,   212,    -1,    -1,    -1,   216,    -1,    -1,    -1,   220,
      -1,    -1,    -1,   224,    -1,    -1,   227,   228,    -1,    -1,
      -1,    -1,    -1,    -1,   235,    -1,   237,    -1,    -1,    -1,
     241,    -1,    -1,   244,    -1,    -1,    -1,    -1,    -1,   250,
      -1,   252,    -1,    -1,   255,    -1,   257,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   267,   268,   269,   270,
     271,   272,    -1,   274,   275,   276,   277,   278,   279,   280,
     281,   282,    -1,   284,   285,   286,    -1,   288,   289,    -1,
      -1,    -1,   293,   294,   295,   296,    -1,    -1,   299,   300,
      -1,    -1,   303,    -1,   305,    -1,   307,    -1,    -1,   310,
     311,   312,   313,   314,   315,   316,    -1,    -1,   319,   320,
      -1,   322,   323,   324,    -1,    -1,    -1,   328,    -1,    -1,
      -1,    -1,   333,   334,    -1,   336,    -1,   338,   339,   340,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     351,   352,   353,    -1,   355,    -1,   357,    -1,   359,    -1,
      -1,   362,   363,    -1,   365,    -1,   367,   368,    -1,   370,
     371,   372,   373,   374,   375,   376,   377,    -1,    -1,    -1,
      -1,   382,   383,    -1,    -1,   386,   387,   388,    -1,   390,
      -1,   392,   393,    -1,    -1,   396,    -1,   398,   399,   400,
      -1,   402,   403,    -1,    -1,    -1,   407,   408,    -1,   410,
     411,    -1,   413,   414,   415,   416,    -1,   418,   419,    -1,
      -1,    -1,   423,   424,   425,    -1,    -1,   428,    -1,    -1,
      -1,   432,   433,   434,   435,    -1,   437,   438,    -1,    -1,
      -1,    -1,    -1,    -1,   445,   446,    -1,   448,    -1,    -1,
     451,    -1,    -1,   454,   455,    -1,    -1,   458,   459,    -1,
     461,   462,   463,    -1,    -1,    -1,   467,   468,    -1,   470,
     471,    -1,   473,   474,    -1,    -1,   477,   478,   479,   480,
     481,    -1,    -1,    -1,    -1,    -1,   487,    -1,   489,    -1,
      -1,   492,   493,   494,   495,    -1,    -1,   498,   499,    -1,
      -1,   502,    -1,    -1,    -1,    -1,   507,    -1,    -1,   510,
      -1,    -1,    -1,   514,   515,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   523,    -1,    -1,   526,    -1,    -1,   529,   530,
     531,    -1,    -1,    -1,    -1,   536,    -1,   538,   539,    -1,
      -1,     5,   543,     7,     8,     9,    10,    11,    -1,    -1,
      -1,    -1,    -1,    17,    -1,    -1,    20,    -1,    -1,    23,
      24,    25,    26,    -1,    28,    -1,    30,    -1,    -1,    33,
      -1,    -1,    -1,    37,    -1,    -1,    40,    41,    -1,    43,
      -1,    45,    46,    -1,    -1,    49,    -1,    51,    -1,    53,
      54,    -1,    56,    -1,    58,    59,    60,    -1,    62,    -1,
      64,    65,    -1,    67,    68,    69,    70,    71,    -1,    -1,
      74,    -1,    -1,    77,    -1,    79,    -1,    -1,    -1,    -1,
      -1,    -1,    86,    -1,    -1,    -1,    -1,    -1,    -1,    93,
      94,    -1,    -1,    97,    -1,    -1,    -1,    -1,   102,   103,
      -1,    -1,    -1,    -1,   108,   109,    -1,   111,    -1,    -1,
      -1,    -1,    -1,   117,    -1,   119,   120,   121,    -1,    -1,
      -1,   125,    -1,    -1,   128,   129,   130,    -1,    -1,    -1,
     134,    -1,    -1,    -1,   138,   139,   140,   141,    -1,    -1,
     144,    -1,   146,   147,   148,    -1,    -1,   151,    -1,   153,
      -1,    -1,   156,    -1,    -1,   159,   160,   161,    -1,    -1,
     164,    -1,    -1,    -1,    -1,   169,   170,    -1,    -1,   173,
      -1,   175,    -1,    -1,    -1,    -1,    -1,    -1,   182,   183,
      -1,    -1,   186,   187,    -1,   189,    -1,    -1,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,   201,    -1,    -1,
      -1,   205,   206,   207,   208,    -1,    -1,   211,   212,    -1,
      -1,    -1,   216,    -1,    -1,    -1,   220,    -1,    -1,    -1,
     224,    -1,    -1,   227,   228,    -1,    -1,    -1,    -1,    -1,
      -1,   235,    -1,   237,    -1,    -1,    -1,   241,    -1,    -1,
     244,    -1,    -1,    -1,    -1,    -1,   250,    -1,   252,    -1,
      -1,   255,    -1,   257,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   267,   268,   269,   270,   271,   272,    -1,
     274,   275,   276,   277,   278,   279,   280,   281,   282,    -1,
     284,   285,   286,    -1,   288,   289,    -1,    -1,    -1,   293,
     294,   295,   296,    -1,    -1,   299,   300,    -1,    -1,   303,
      -1,   305,    -1,   307,    -1,    -1,   310,   311,   312,   313,
     314,   315,   316,    -1,    -1,   319,   320,    -1,   322,   323,
     324,    -1,    -1,    -1,   328,    -1,    -1,    -1,    -1,   333,
     334,    -1,   336,    -1,   338,   339,   340,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   351,   352,   353,
      -1,   355,    -1,   357,    -1,   359,    -1,    -1,   362,   363,
      -1,   365,    -1,   367,   368,    -1,   370,   371,   372,   373,
     374,   375,   376,   377,    -1,    -1,    -1,    -1,   382,   383,
      -1,    -1,   386,   387,   388,    -1,   390,    -1,   392,   393,
      -1,    -1,   396,    -1,   398,   399,   400,    -1,   402,   403,
      -1,    -1,    -1,   407,   408,    -1,   410,   411,    -1,   413,
     414,   415,   416,    -1,   418,   419,    -1,    -1,    -1,   423,
     424,   425,    -1,    -1,   428,    -1,    -1,    -1,   432,   433,
     434,   435,    -1,   437,   438,    -1,    -1,    -1,    -1,    -1,
      -1,   445,   446,    -1,   448,    -1,    -1,   451,    -1,    -1,
     454,   455,    -1,    -1,   458,   459,    -1,   461,   462,   463,
      -1,    -1,    -1,   467,   468,    -1,   470,   471,    -1,   473,
     474,    -1,    -1,   477,   478,   479,   480,   481,    -1,    -1,
      -1,    -1,    -1,   487,    -1,   489,    -1,    -1,   492,   493,
     494,   495,    -1,    -1,   498,   499,    -1,    -1,   502,    -1,
      -1,    -1,    -1,   507,    -1,    -1,   510,    -1,    -1,    -1,
     514,   515,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   523,
      -1,    -1,   526,    -1,    -1,   529,   530,   531,    -1,    -1,
      -1,    -1,   536,    -1,   538,   539,    -1,    -1,     5,   543,
       7,     8,     9,    10,    11,    -1,    -1,    -1,    -1,    -1,
      17,    -1,    -1,    20,    -1,    -1,    23,    24,    25,    26,
      -1,    28,    -1,    30,    -1,    -1,    33,    -1,    -1,    -1,
      37,    -1,    -1,    40,    41,    -1,    43,    -1,    45,    46,
      -1,    -1,    49,    -1,    51,    -1,    53,    54,    -1,    56,
      -1,    58,    59,    60,    -1,    62,    -1,    64,    65,    -1,
      67,    68,    69,    70,    71,    -1,    -1,    74,    -1,    -1,
      77,    -1,    79,    -1,    -1,    -1,    -1,    -1,    -1,    86,
      -1,    -1,    -1,    -1,    -1,    -1,    93,    94,    -1,    -1,
      97,    -1,    -1,    -1,    -1,   102,   103,    -1,    -1,    -1,
      -1,    -1,   109,    -1,   111,    -1,    -1,    -1,    -1,    -1,
     117,    -1,   119,   120,   121,    -1,    -1,    -1,   125,    -1,
      -1,   128,   129,   130,    -1,    -1,    -1,   134,    -1,    -1,
      -1,   138,   139,   140,   141,    -1,    -1,   144,    -1,   146,
     147,   148,    -1,    -1,   151,    -1,   153,    -1,    -1,   156,
      -1,    -1,   159,   160,   161,    -1,    -1,   164,    -1,    -1,
      -1,    -1,   169,   170,    -1,    -1,   173,    -1,   175,    -1,
      -1,    -1,    -1,    -1,    -1,   182,   183,    -1,    -1,   186,
     187,    -1,   189,    -1,    -1,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,   201,    -1,    -1,    -1,   205,   206,
     207,   208,    -1,    -1,   211,   212,    -1,    -1,    -1,   216,
      -1,    -1,    -1,   220,    -1,    -1,    -1,   224,    -1,    -1,
     227,   228,    -1,    -1,    -1,    -1,    -1,    -1,   235,    -1,
     237,    -1,    -1,    -1,   241,    -1,    -1,   244,    -1,    -1,
      -1,    -1,    -1,   250,    -1,   252,    -1,    -1,   255,    -1,
     257,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     267,   268,   269,   270,   271,   272,    -1,   274,   275,   276,
     277,   278,   279,   280,   281,   282,    -1,   284,   285,   286,
      -1,   288,   289,    -1,    -1,    -1,   293,   294,   295,   296,
      -1,    -1,   299,   300,    -1,    -1,   303,    -1,   305,    -1,
     307,    -1,    -1,   310,   311,   312,   313,   314,   315,   316,
      -1,    -1,   319,   320,    -1,   322,   323,   324,    -1,    -1,
      -1,   328,    -1,    -1,    -1,    -1,   333,   334,    -1,   336,
      -1,   338,   339,   340,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   351,   352,   353,    -1,   355,    -1,
     357,    -1,   359,    -1,    -1,   362,   363,   364,   365,    -1,
     367,   368,    -1,   370,   371,   372,   373,   374,   375,   376,
     377,    -1,    -1,    -1,    -1,   382,   383,    -1,    -1,   386,
     387,   388,    -1,   390,    -1,   392,   393,    -1,    -1,   396,
      -1,   398,   399,   400,    -1,   402,   403,    -1,    -1,    -1,
     407,   408,    -1,   410,   411,    -1,   413,   414,   415,   416,
      -1,   418,   419,    -1,    -1,    -1,   423,   424,   425,    -1,
      -1,   428,    -1,    -1,    -1,   432,   433,   434,   435,    -1,
     437,   438,    -1,    -1,    -1,    -1,    -1,    -1,   445,   446,
      -1,   448,    -1,    -1,   451,    -1,    -1,   454,   455,    -1,
      -1,   458,   459,    -1,   461,   462,   463,    -1,    -1,    -1,
     467,   468,    -1,   470,   471,    -1,   473,   474,    -1,    -1,
     477,   478,   479,   480,   481,    -1,    -1,    -1,    -1,    -1,
     487,    -1,   489,    -1,    -1,   492,   493,   494,   495,    -1,
      -1,   498,   499,    -1,    -1,   502,    -1,    -1,    -1,    -1,
     507,    -1,    -1,   510,    -1,    -1,    -1,   514,   515,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   523,    -1,    -1,   526,
      -1,    -1,   529,   530,   531,    -1,    -1,    -1,    -1,   536,
      -1,   538,   539,    -1,    -1,     5,   543,     7,     8,     9,
      10,    11,    -1,    -1,    -1,    -1,    -1,    17,    -1,    -1,
      20,    -1,    -1,    23,    24,    25,    26,    -1,    28,    -1,
      30,    -1,    -1,    33,    -1,    -1,    -1,    37,    -1,    -1,
      40,    41,    -1,    43,    -1,    45,    46,    -1,    -1,    49,
      -1,    51,    -1,    53,    54,    -1,    56,    -1,    58,    59,
      60,    -1,    62,    -1,    64,    65,    -1,    67,    68,    69,
      70,    71,    -1,    -1,    74,    -1,    -1,    77,    -1,    79,
      -1,    -1,    -1,    -1,    -1,    -1,    86,    -1,    -1,    -1,
      -1,    -1,    -1,    93,    94,    -1,    -1,    97,    -1,    -1,
      -1,    -1,   102,   103,    -1,    -1,    -1,    -1,    -1,   109,
      -1,   111,    -1,    -1,    -1,    -1,    -1,   117,    -1,   119,
     120,   121,    -1,    -1,    -1,   125,    -1,    -1,   128,   129,
     130,    -1,    -1,    -1,   134,    -1,    -1,    -1,   138,   139,
     140,   141,    -1,    -1,   144,    -1,   146,   147,   148,    -1,
      -1,   151,    -1,   153,    -1,    -1,   156,    -1,    -1,   159,
     160,   161,    -1,    -1,   164,    -1,    -1,    -1,    -1,   169,
     170,    -1,    -1,   173,    -1,   175,    -1,    -1,    -1,    -1,
      -1,    -1,   182,   183,    -1,    -1,   186,   187,    -1,   189,
      -1,    -1,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,   201,    -1,    -1,    -1,   205,   206,   207,   208,    -1,
      -1,   211,   212,    -1,    -1,    -1,   216,    -1,    -1,    -1,
     220,    -1,    -1,    -1,   224,    -1,    -1,   227,   228,    -1,
      -1,    -1,    -1,    -1,    -1,   235,    -1,   237,    -1,    -1,
      -1,   241,    -1,    -1,   244,    -1,    -1,    -1,    -1,    -1,
     250,    -1,   252,    -1,    -1,   255,    -1,   257,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   267,   268,   269,
     270,   271,   272,    -1,   274,   275,   276,   277,   278,   279,
     280,   281,   282,    -1,   284,   285,   286,    -1,   288,   289,
      -1,    -1,    -1,   293,   294,   295,   296,    -1,    -1,   299,
     300,    -1,    -1,   303,    -1,   305,    -1,   307,    -1,    -1,
     310,   311,   312,   313,   314,   315,   316,    -1,    -1,   319,
     320,    -1,   322,   323,   324,    -1,    -1,    -1,   328,    -1,
      -1,    -1,    -1,   333,   334,    -1,   336,    -1,   338,   339,
     340,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   351,   352,   353,    -1,   355,    -1,   357,    -1,   359,
      -1,    -1,   362,   363,    -1,   365,    -1,   367,   368,    -1,
     370,   371,   372,   373,   374,   375,   376,   377,    -1,    -1,
      -1,    -1,   382,   383,    -1,    -1,   386,   387,   388,    -1,
     390,    -1,   392,   393,    -1,    -1,   396,    -1,   398,   399,
     400,    -1,   402,   403,    -1,    -1,    -1,   407,   408,    -1,
     410,   411,    -1,   413,   414,   415,   416,    -1,   418,   419,
      -1,    -1,    -1,   423,   424,   425,    -1,    -1,   428,    -1,
      -1,    -1,   432,   433,   434,   435,    -1,   437,   438,    -1,
      -1,    -1,    -1,    -1,    -1,   445,   446,    -1,   448,    -1,
      -1,   451,    -1,    -1,   454,   455,    -1,    -1,   458,   459,
      -1,   461,   462,   463,    -1,    -1,    -1,   467,   468,    -1,
     470,   471,    -1,   473,   474,    -1,   476,   477,   478,   479,
     480,   481,    -1,    -1,    -1,    -1,    -1,   487,    -1,   489,
      -1,    -1,   492,   493,   494,   495,    -1,    -1,   498,   499,
      -1,    -1,   502,    -1,    -1,    -1,    -1,   507,    -1,    -1,
     510,    -1,    -1,    -1,   514,   515,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   523,    -1,    -1,   526,    -1,    -1,   529,
     530,   531,    -1,    -1,    -1,    -1,   536,    -1,   538,   539,
      -1,    -1,     5,   543,     7,     8,     9,    10,    11,    -1,
      -1,    -1,    -1,    -1,    17,    -1,    -1,    20,    -1,    -1,
      23,    24,    25,    26,    -1,    28,    -1,    30,    -1,    -1,
      33,    -1,    -1,    -1,    37,    -1,    -1,    40,    41,    -1,
      43,    -1,    45,    46,    -1,    -1,    49,    -1,    51,    -1,
      53,    54,    -1,    56,    -1,    58,    59,    60,    -1,    62,
      -1,    64,    65,    -1,    67,    68,    69,    70,    71,    -1,
      -1,    74,    -1,    -1,    77,    -1,    79,    -1,    -1,    -1,
      -1,    -1,    -1,    86,    -1,    -1,    -1,    -1,    -1,    -1,
      93,    94,    -1,    -1,    97,    -1,    -1,    -1,    -1,   102,
     103,    -1,    -1,    -1,    -1,   108,   109,    -1,   111,    -1,
      -1,    -1,    -1,    -1,   117,    -1,   119,   120,   121,    -1,
      -1,    -1,   125,    -1,    -1,   128,   129,   130,    -1,    -1,
      -1,   134,    -1,    -1,    -1,   138,   139,   140,   141,    -1,
      -1,   144,    -1,   146,   147,   148,    -1,    -1,   151,    -1,
     153,    -1,    -1,   156,    -1,    -1,   159,   160,   161,    -1,
      -1,   164,    -1,    -1,    -1,    -1,   169,   170,    -1,    -1,
     173,    -1,   175,    -1,    -1,    -1,    -1,    -1,    -1,   182,
     183,    -1,    -1,   186,   187,    -1,   189,    -1,    -1,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,   201,    -1,
      -1,    -1,   205,   206,   207,   208,    -1,    -1,   211,   212,
      -1,    -1,    -1,   216,    -1,    -1,    -1,   220,    -1,    -1,
      -1,   224,    -1,    -1,   227,   228,    -1,    -1,    -1,    -1,
      -1,    -1,   235,    -1,   237,    -1,    -1,    -1,   241,    -1,
      -1,   244,    -1,    -1,    -1,    -1,    -1,   250,    -1,   252,
      -1,    -1,   255,    -1,   257,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   267,   268,   269,   270,   271,   272,
      -1,   274,   275,   276,   277,   278,   279,   280,   281,   282,
      -1,   284,   285,   286,    -1,   288,   289,    -1,    -1,    -1,
     293,   294,   295,   296,    -1,    -1,   299,   300,    -1,    -1,
     303,    -1,   305,    -1,   307,    -1,    -1,   310,   311,   312,
     313,   314,   315,   316,    -1,    -1,   319,   320,    -1,   322,
     323,   324,    -1,    -1,    -1,   328,    -1,    -1,    -1,    -1,
     333,   334,    -1,   336,    -1,   338,   339,   340,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   351,   352,
     353,    -1,   355,    -1,   357,    -1,   359,    -1,    -1,   362,
     363,    -1,   365,    -1,   367,   368,    -1,   370,   371,   372,
     373,   374,   375,   376,   377,    -1,    -1,    -1,    -1,   382,
     383,    -1,    -1,   386,   387,   388,    -1,   390,    -1,   392,
     393,    -1,    -1,   396,    -1,   398,   399,   400,    -1,   402,
     403,    -1,    -1,    -1,   407,   408,    -1,   410,   411,    -1,
     413,   414,   415,   416,    -1,   418,   419,    -1,    -1,    -1,
     423,   424,   425,    -1,    -1,   428,    -1,    -1,    -1,   432,
     433,   434,   435,    -1,   437,   438,    -1,    -1,    -1,    -1,
      -1,    -1,   445,   446,    -1,   448,    -1,    -1,   451,    -1,
      -1,   454,   455,    -1,    -1,   458,   459,    -1,   461,   462,
     463,    -1,    -1,    -1,   467,   468,    -1,   470,   471,    -1,
     473,   474,    -1,    -1,   477,   478,   479,   480,   481,    -1,
      -1,    -1,    -1,    -1,   487,    -1,   489,    -1,    -1,   492,
     493,   494,   495,    -1,    -1,   498,   499,    -1,    -1,   502,
      -1,    -1,    -1,    -1,   507,    -1,    -1,   510,    -1,    -1,
      -1,   514,   515,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     523,    -1,    -1,   526,    -1,    -1,   529,   530,   531,    -1,
      -1,    -1,    -1,   536,    -1,   538,   539,    -1,    -1,     5,
     543,     7,     8,     9,    10,    11,    -1,    -1,    -1,    -1,
      -1,    17,    -1,    -1,    20,    -1,    -1,    23,    24,    25,
      26,    -1,    28,    -1,    30,    -1,    -1,    33,    -1,    -1,
      -1,    37,    -1,    -1,    40,    41,    -1,    43,    -1,    45,
      46,    -1,    -1,    49,    -1,    51,    -1,    53,    54,    -1,
      56,    -1,    58,    59,    60,    -1,    62,    -1,    64,    65,
      -1,    67,    68,    69,    70,    71,    -1,    -1,    74,    -1,
      -1,    77,    -1,    79,    -1,    -1,    -1,    -1,    -1,    -1,
      86,    -1,    -1,    -1,    -1,    -1,    -1,    93,    94,    -1,
      -1,    97,    -1,    -1,    -1,    -1,   102,   103,    -1,    -1,
      -1,    -1,    -1,   109,    -1,   111,    -1,    -1,    -1,    -1,
      -1,   117,    -1,   119,   120,   121,    -1,    -1,    -1,   125,
      -1,    -1,   128,   129,   130,    -1,    -1,    -1,   134,    -1,
      -1,    -1,   138,   139,   140,   141,    -1,    -1,   144,    -1,
     146,   147,   148,    -1,    -1,   151,    -1,   153,    -1,    -1,
     156,    -1,    -1,   159,   160,   161,    -1,    -1,   164,    -1,
      -1,    -1,    -1,   169,   170,    -1,    -1,   173,    -1,   175,
      -1,    -1,    -1,    -1,    -1,    -1,   182,   183,    -1,    -1,
     186,   187,    -1,   189,    -1,    -1,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,   201,    -1,    -1,    -1,   205,
     206,   207,   208,    -1,    -1,   211,   212,    -1,    -1,    -1,
     216,    -1,    -1,    -1,   220,    -1,    -1,    -1,   224,    -1,
      -1,   227,   228,    -1,    -1,    -1,    -1,    -1,    -1,   235,
      -1,   237,    -1,    -1,    -1,   241,    -1,    -1,   244,    -1,
      -1,    -1,    -1,    -1,   250,    -1,   252,    -1,    -1,   255,
      -1,   257,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   267,   268,   269,   270,   271,   272,    -1,   274,   275,
     276,   277,   278,   279,   280,   281,   282,    -1,   284,   285,
     286,    -1,   288,   289,    -1,    -1,    -1,   293,   294,   295,
     296,    -1,    -1,   299,   300,    -1,    -1,   303,    -1,   305,
      -1,   307,    -1,    -1,   310,   311,   312,   313,   314,   315,
     316,    -1,    -1,   319,   320,    -1,   322,   323,   324,    -1,
      -1,    -1,   328,    -1,    -1,    -1,    -1,   333,   334,    -1,
     336,    -1,   338,   339,   340,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   351,   352,   353,    -1,   355,
      -1,   357,    -1,   359,    -1,    -1,   362,   363,    -1,   365,
      -1,   367,   368,    -1,   370,   371,   372,   373,   374,   375,
     376,   377,    -1,    -1,    -1,    -1,   382,   383,    -1,    -1,
     386,   387,   388,    -1,   390,    -1,   392,   393,    -1,    -1,
     396,    -1,   398,   399,   400,    -1,   402,   403,    -1,    -1,
      -1,   407,   408,    -1,   410,   411,    -1,   413,   414,   415,
     416,    -1,   418,   419,    -1,    -1,    -1,   423,   424,   425,
      -1,    -1,   428,    -1,    -1,    -1,   432,   433,   434,   435,
      -1,   437,   438,    -1,    -1,    -1,    -1,    -1,    -1,   445,
     446,    -1,   448,    -1,    -1,   451,    -1,    -1,   454,   455,
      -1,    -1,   458,   459,    -1,   461,   462,   463,    -1,    -1,
      -1,   467,   468,    -1,   470,   471,    -1,   473,   474,    -1,
      -1,   477,   478,   479,   480,   481,    -1,    -1,    -1,    -1,
      -1,   487,    -1,   489,    -1,    -1,   492,   493,   494,   495,
      -1,    -1,   498,   499,    -1,    -1,   502,    -1,    -1,    -1,
      -1,   507,    -1,    -1,   510,    -1,    -1,    -1,   514,   515,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   523,    -1,    -1,
     526,    -1,    -1,   529,   530,   531,    -1,    -1,    -1,    -1,
     536,    -1,   538,   539,    -1,    -1,     5,   543,     7,     8,
       9,    10,    11,    -1,    -1,    -1,    -1,    -1,    17,    -1,
      -1,    20,    -1,    -1,    23,    24,    25,    26,    -1,    28,
      -1,    30,    -1,    -1,    33,    -1,    -1,    -1,    37,    -1,
      -1,    40,    41,    -1,    43,    -1,    45,    46,    -1,    -1,
      49,    -1,    51,    -1,    53,    54,    -1,    56,    -1,    58,
      59,    60,    -1,    62,    -1,    64,    65,    -1,    67,    68,
      69,    70,    71,    -1,    -1,    74,    -1,    -1,    77,    -1,
      79,    -1,    -1,    -1,    -1,    -1,    -1,    86,    -1,    -1,
      -1,    -1,    -1,    -1,    93,    94,    -1,    -1,    97,    -1,
      -1,    -1,    -1,   102,   103,    -1,    -1,    -1,    -1,    -1,
     109,    -1,   111,    -1,    -1,    -1,    -1,    -1,   117,    -1,
     119,   120,   121,    -1,    -1,    -1,   125,    -1,    -1,   128,
     129,   130,    -1,    -1,    -1,   134,    -1,    -1,    -1,   138,
     139,   140,   141,    -1,    -1,   144,    -1,   146,   147,   148,
      -1,    -1,   151,    -1,   153,    -1,    -1,   156,    -1,    -1,
     159,   160,   161,    -1,    -1,   164,    -1,    -1,    -1,    -1,
     169,   170,    -1,    -1,   173,    -1,   175,    -1,    -1,    -1,
      -1,    -1,    -1,   182,   183,    -1,    -1,   186,   187,    -1,
     189,    -1,    -1,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,   201,    -1,    -1,    -1,   205,   206,   207,   208,
      -1,    -1,   211,   212,    -1,    -1,    -1,   216,    -1,    -1,
      -1,   220,    -1,    -1,    -1,   224,    -1,    -1,   227,   228,
      -1,    -1,    -1,    -1,    -1,    -1,   235,    -1,   237,    -1,
      -1,    -1,   241,    -1,    -1,   244,    -1,    -1,    -1,    -1,
      -1,   250,    -1,   252,    -1,    -1,   255,    -1,   257,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   267,   268,
     269,   270,   271,   272,    -1,   274,   275,   276,   277,   278,
     279,   280,   281,   282,    -1,   284,   285,   286,    -1,   288,
     289,    -1,    -1,    -1,   293,   294,   295,   296,    -1,    -1,
     299,   300,    -1,    -1,   303,    -1,   305,    -1,   307,    -1,
      -1,   310,   311,   312,   313,   314,   315,   316,    -1,    -1,
     319,   320,    -1,   322,   323,   324,    -1,    -1,    -1,   328,
      -1,    -1,    -1,    -1,   333,   334,    -1,   336,    -1,   338,
     339,   340,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   351,   352,   353,    -1,   355,    -1,   357,    -1,
     359,    -1,    -1,   362,   363,    -1,   365,    -1,   367,   368,
      -1,   370,   371,   372,   373,   374,   375,   376,   377,    -1,
      -1,    -1,    -1,   382,   383,    -1,    -1,   386,   387,   388,
      -1,   390,    -1,   392,   393,    -1,    -1,   396,    -1,   398,
     399,   400,    -1,   402,   403,    -1,    -1,    -1,   407,   408,
      -1,   410,   411,    -1,   413,   414,   415,   416,    -1,   418,
     419,    -1,    -1,    -1,   423,   424,   425,    -1,    -1,   428,
      -1,    -1,    -1,   432,   433,   434,   435,    -1,   437,   438,
      -1,    -1,    -1,    -1,    -1,    -1,   445,   446,    -1,   448,
      -1,    -1,   451,    -1,    -1,   454,   455,    -1,    -1,   458,
     459,    -1,   461,   462,   463,    -1,    -1,    -1,   467,   468,
      -1,   470,   471,    -1,   473,   474,    -1,    -1,   477,   478,
     479,   480,   481,    -1,    -1,    -1,    -1,    -1,   487,    -1,
     489,    -1,    -1,   492,   493,   494,   495,    -1,    -1,   498,
     499,    -1,    -1,   502,    -1,    -1,    -1,    -1,   507,    -1,
      -1,   510,    -1,    -1,    -1,   514,   515,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   523,    -1,    -1,   526,    -1,    -1,
     529,   530,   531,    -1,    -1,    -1,    -1,   536,    -1,   538,
     539,    -1,    -1,     5,   543,     7,     8,     9,    10,    11,
      -1,    -1,    -1,    -1,    -1,    17,    -1,    -1,    -1,    -1,
      -1,    23,    24,    25,    -1,    -1,    -1,    -1,    30,    -1,
      -1,    33,    -1,    -1,    -1,    37,    -1,    -1,    40,    41,
      -1,    43,    -1,    -1,    -1,    -1,    -1,    49,    -1,    51,
      -1,    53,    -1,    -1,    -1,    -1,    58,    59,    -1,    -1,
      62,    -1,    64,    65,    -1,    -1,    68,    -1,    70,    71,
      -1,    -1,    74,    -1,    -1,    77,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    86,    -1,    -1,    -1,    -1,    -1,
      -1,    93,    94,    -1,    -1,    97,    -1,    -1,    -1,    -1,
     102,    -1,    -1,    -1,    -1,    -1,    -1,   109,    -1,   111,
      -1,    -1,    -1,    -1,    -1,   117,    -1,   119,   120,   121,
      -1,    -1,    -1,    -1,    -1,    -1,   128,   129,   130,    -1,
      -1,    -1,   134,    -1,    -1,    -1,    -1,   139,   140,   141,
      -1,    -1,   144,    -1,   146,   147,    -1,    -1,    -1,   151,
      -1,   153,    -1,    -1,   156,    -1,    -1,   159,   160,   161,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   169,   170,    -1,
      -1,   173,    -1,   175,    -1,    -1,    -1,    -1,    -1,    -1,
     182,   183,    -1,    -1,   186,   187,    -1,   189,    -1,    -1,
      -1,    -1,    -1,    -1,   196,    -1,    -1,    -1,    -1,   201,
      -1,    -1,    -1,   205,   206,   207,   208,    -1,    -1,   211,
     212,    -1,    -1,    -1,   216,    -1,    -1,    -1,   220,    -1,
      -1,    -1,   224,    -1,    -1,   227,   228,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   237,    -1,    -1,    -1,   241,
      -1,    -1,   244,    -1,    -1,    -1,    -1,    -1,   250,    -1,
     252,    -1,    -1,   255,    -1,   257,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   267,   268,   269,   270,   271,
     272,    -1,   274,   275,   276,   277,   278,   279,   280,   281,
     282,    -1,   284,   285,   286,    -1,   288,   289,    -1,    -1,
      -1,   293,   294,   295,   296,    -1,    -1,   299,   300,    -1,
      -1,   303,    -1,   305,    -1,   307,    -1,    -1,   310,   311,
     312,   313,   314,   315,   316,    -1,    -1,   319,   320,    -1,
     322,   323,   324,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   333,   334,    -1,   336,    -1,   338,   339,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   351,
     352,   353,    -1,   355,    -1,   357,    -1,   359,    -1,    -1,
      -1,   363,    -1,   365,    -1,   367,   368,    -1,   370,   371,
     372,   373,   374,   375,   376,   377,    -1,    -1,    -1,    -1,
     382,   383,    -1,    -1,   386,   387,   388,    -1,   390,    -1,
      -1,   393,    -1,    -1,   396,    -1,    -1,   399,    -1,    -1,
     402,   403,    -1,    -1,    -1,    -1,   408,    -1,   410,   411,
      -1,   413,   414,   415,    -1,    -1,   418,    -1,    -1,    -1,
      -1,   423,   424,   425,    -1,    -1,   428,    -1,    -1,    -1,
     432,    -1,   434,    -1,    -1,   437,   438,    -1,    -1,    -1,
      -1,    -1,    -1,   445,   446,    -1,   448,    -1,    -1,   451,
      -1,    -1,    -1,   455,    -1,    -1,    -1,   459,    -1,   461,
     462,   463,    -1,    -1,    -1,   467,   468,    -1,   470,   471,
      -1,   473,   474,    -1,    -1,   477,   478,   479,   480,   481,
      -1,    -1,    -1,    -1,    -1,   487,    -1,   489,    -1,    -1,
      -1,   493,   494,   495,    -1,    -1,   498,   499,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   507,    -1,    -1,   510,    -1,
      -1,    -1,   514,   515,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   523,    -1,    -1,   526,    -1,    -1,   529,   530,   531,
      -1,    -1,    -1,    -1,   536,    -1,   538,    -1,    -1,    -1,
      -1,   543
};

/* YYSTOS[STATE-NUM] -- The (internal number of the) accessing
   symbol of state STATE-NUM.  */
static const unsigned short int yystos[] =
{
       0,     3,    13,    14,    26,    28,    46,    47,    52,    56,
      57,    69,    84,   103,   112,   113,   114,   125,   126,   148,
     164,   188,   195,   198,   219,   233,   251,   256,   341,   362,
     369,   389,   391,   392,   395,   398,   400,   405,   407,   416,
     420,   426,   431,   435,   454,   458,   492,   508,   511,   516,
     539,   560,   571,   572,   573,   574,   575,   576,   578,   583,
     585,   590,   608,   761,   779,   782,   790,   792,   794,   797,
     802,   804,   809,   812,   817,   821,   829,   830,   972,   974,
     980,   983,  1008,  1016,  1027,  1029,  1043,  1046,  1049,  1055,
    1059,  1063,  1066,  1067,  1112,  1129,  1135,  1137,  1144,  1146,
    1171,  1177,  1178,  1179,  1180,  1219,    11,    91,   175,   210,
     366,   775,  1202,  1203,   252,   329,   811,   470,   472,  1131,
    1172,   213,     5,     7,     8,     9,    10,    11,    17,    20,
      23,    24,    25,    26,    28,    30,    33,    37,    40,    41,
      43,    45,    46,    49,    51,    53,    54,    56,    58,    59,
      60,    62,    64,    65,    67,    68,    69,    70,    71,    74,
      77,    79,    86,    93,    94,    97,   102,   103,   109,   111,
     117,   119,   120,   121,   125,   128,   129,   130,   134,   138,
     139,   140,   141,   144,   146,   147,   148,   151,   153,   156,
     159,   160,   161,   164,   169,   170,   173,   175,   182,   183,
     186,   187,   189,   195,   196,   198,   201,   205,   206,   207,
     208,   211,   212,   216,   220,   224,   227,   228,   235,   237,
     241,   244,   250,   252,   255,   257,   267,   268,   269,   270,
     271,   272,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   284,   285,   286,   288,   289,   293,   294,   295,   296,
     299,   300,   303,   305,   307,   310,   311,   312,   313,   314,
     315,   316,   319,   320,   322,   323,   324,   328,   333,   334,
     336,   338,   339,   340,   351,   352,   353,   355,   357,   359,
     362,   363,   365,   367,   368,   370,   371,   372,   373,   374,
     375,   376,   377,   382,   383,   386,   387,   388,   390,   392,
     393,   396,   398,   399,   400,   402,   403,   407,   408,   410,
     411,   413,   414,   415,   416,   418,   419,   423,   424,   425,
     428,   432,   433,   434,   435,   437,   438,   445,   446,   448,
     451,   454,   455,   458,   459,   461,   462,   463,   467,   468,
     470,   471,   473,   474,   477,   478,   479,   480,   481,   487,
     489,   492,   493,   494,   495,   498,   499,   502,   507,   510,
     514,   515,   523,   526,   529,   530,   531,   536,   538,   539,
     543,   596,  1102,  1106,  1110,  1111,   281,  1131,  1131,   536,
    1173,    91,   174,   439,   473,   504,   514,   594,   679,   680,
     681,   753,  1017,   973,    91,   175,   213,   366,   473,   488,
     514,   529,   979,  1106,   811,   595,   567,  1100,  1101,  1106,
     584,   981,  1064,    93,   213,   472,  1131,   811,  1106,  1060,
     416,   514,  1131,   811,   984,  1056,  1131,   595,  1173,  1106,
     832,   834,   835,   342,  1114,  1030,   454,   458,   435,   487,
     435,   472,  1028,  1136,  1009,  1106,    28,    69,   138,   362,
     382,   407,   454,  1221,   420,   560,   831,     0,     3,   362,
     153,  1047,  1100,  1106,   142,   767,  1106,   596,   596,   472,
     109,  1199,  1131,   793,  1173,   818,   819,  1100,   609,   567,
     485,   795,   805,    16,  1174,   209,   682,   595,   347,  1197,
    1199,  1200,  1201,  1202,   472,   680,   213,   210,   264,   372,
    1025,  1026,   892,   893,   209,   978,   978,  1106,   978,   596,
     595,   978,  1131,   579,  1050,    12,    13,    84,   112,   126,
     148,   159,   188,   213,   219,   256,   367,   384,   390,   396,
     420,   431,   432,   467,   511,   513,  1147,  1149,  1151,  1152,
    1106,   340,    60,   380,   567,   245,   476,  1103,  1106,  1108,
     110,   200,   264,   986,    76,   371,  1065,  1068,   222,  1100,
    1130,  1131,   171,    32,   281,  1035,  1061,  1106,   595,   813,
    1131,   110,   264,   987,  1015,   281,   371,   435,  1057,  1058,
     791,    12,  1145,  1149,   485,  1174,   833,    12,   122,   200,
     444,   445,   446,   447,   448,   449,   460,   839,   840,   841,
    1113,    30,    33,    54,    55,    64,    66,    83,    84,    92,
     140,   144,   173,   175,   187,   189,   212,   213,   216,   231,
     252,   257,   281,   313,   322,   340,   365,   366,   425,   435,
     459,   472,   530,   727,   752,  1031,  1035,  1036,  1038,  1120,
     784,   785,   784,   784,   535,   783,   784,   977,  1100,  1131,
    1015,    34,   199,   476,  1088,  1104,  1220,  1220,  1220,  1220,
    1220,   834,   831,   561,  1106,  1045,  1044,   294,   474,   499,
     763,   765,   764,  1100,   142,   450,  1204,   803,   976,   977,
     225,   562,   825,   826,   560,  1106,   586,   976,   976,    51,
     328,   328,   389,  1175,   325,   326,   868,  1106,    88,  1108,
    1109,  1162,  1163,   395,    10,   366,   488,   694,  1198,  1204,
    1205,  1211,  1213,  1199,  1202,   682,  1106,   171,  1018,  1022,
    1023,  1106,  1025,     7,    20,    22,    25,    29,    32,    34,
      35,    36,    38,    50,    54,    55,    61,    64,    72,    73,
      79,    81,    82,    83,    87,    88,    90,    91,    95,    96,
      97,   102,   104,   107,   108,   115,   116,   133,   136,   137,
     149,   152,   154,   155,   158,   162,   167,   172,   176,   177,
     178,   179,   181,   182,   184,   185,   186,   190,   192,   193,
     199,   205,   209,   219,   221,   236,   240,   243,   248,   250,
     253,   258,   261,   266,   273,   283,   287,   295,   299,   301,
     302,   306,   307,   308,   309,   310,   311,   312,   318,   325,
     326,   327,   330,   331,   336,   353,   354,   356,   357,   358,
     359,   360,   370,   378,   394,   395,   406,   409,   412,   414,
     418,   456,   457,   462,   464,   465,   466,   469,   478,   479,
     480,   481,   490,   491,   492,   497,   500,   505,   506,   514,
     518,   519,   520,   521,   522,   527,   531,   541,   543,   548,
     552,   553,   558,   560,   563,   564,   566,   567,   850,   853,
     856,   857,   858,   859,   860,   861,   862,   863,   864,   865,
     869,   872,   873,   875,   882,   894,  1087,  1089,  1091,  1092,
    1096,  1098,  1102,  1104,  1106,  1189,  1195,   149,  1106,   596,
     337,   596,  1109,  1161,   976,   978,   517,   580,   117,   201,
     257,   281,   365,   371,   399,   435,   455,   470,  1051,  1052,
    1131,   365,  1150,   410,   410,   473,   514,   529,   342,  1154,
     470,  1156,    59,   435,  1153,    92,   529,  1155,   337,   562,
      18,   142,   937,   938,  1138,  1106,   775,   850,    74,   171,
     264,  1069,  1074,    46,   171,  1100,  1132,  1133,   810,   566,
     577,  1103,   257,   814,  1109,   815,   816,  1100,   798,   222,
     977,   988,   989,    46,   562,   976,  1150,   337,   416,  1176,
    1175,   503,  1181,  1182,   554,   843,   844,   845,   841,  1115,
    1116,  1117,   257,   147,   426,   246,   533,  1042,   493,   560,
      91,   175,   366,   472,   529,  1042,   689,  1108,   247,   953,
     955,    62,   455,   168,   455,   455,   455,   281,   470,    62,
     455,   201,   455,   455,   493,   953,  1042,   171,   225,  1039,
     257,   139,    65,   368,   470,   489,   455,   526,   781,   388,
     451,   786,   787,   780,    77,   775,   562,   339,  1223,   468,
    1224,   230,   402,  1222,   561,  1182,  1184,  1185,  1186,   829,
    1048,  1088,  1106,   108,   676,   677,   678,   687,   688,   735,
     603,   603,   762,  1109,   419,   529,   976,   485,   562,   108,
     820,  1106,   819,   213,   232,   750,   751,   827,   610,   611,
     850,   267,   268,   269,   270,   271,   272,   275,   276,   277,
     278,   279,   280,   282,   386,   387,   587,   588,   589,   153,
     372,   796,    53,   153,   156,   168,   293,   372,   806,   807,
     808,    51,   389,   149,   593,   560,   849,   566,   207,   562,
     845,   845,   845,   529,  1205,  1100,   494,   517,   754,  1022,
    1100,  1106,   562,  1020,   567,  1024,   560,   560,   560,   560,
     560,   873,   560,   560,   560,   560,   560,   560,   560,   560,
     560,   560,   560,   560,   560,   560,   849,   849,   560,   849,
     560,   560,   560,   500,   560,  1087,   560,   560,   560,   560,
     560,   560,   560,   560,   560,  1191,  1195,   560,   560,   560,
     560,   560,   560,   560,   560,   560,   560,   560,   560,   560,
     560,   560,   560,   560,   560,   560,   560,   850,   560,   560,
     560,   560,   560,   560,   560,   560,   560,   560,   895,   896,
     897,   560,   560,   560,   560,   560,   560,   560,   560,   560,
     560,   560,   560,   856,   560,   849,   560,   560,   560,   560,
     560,   560,   560,   560,   560,   560,   560,   560,   560,   560,
     560,   560,   560,   560,   560,   560,   560,   560,   560,   849,
     560,  1087,   560,   560,   560,  1087,   560,   560,    34,   199,
     476,   560,   560,   560,   849,   849,   849,   560,   560,   560,
     560,   560,   560,   850,   899,   873,   873,   873,   420,   850,
    1106,   566,  1108,  1106,   540,   851,   854,   142,   143,   180,
     194,   226,   238,   265,   321,   870,   225,   246,   385,   438,
     549,   550,   868,   551,   429,   430,   552,   553,   123,   306,
     554,   555,   556,   557,   873,    98,    99,   100,   101,   102,
     170,   202,   203,   204,   205,   295,   297,   298,   299,   307,
     370,   417,   418,   531,   542,   543,   934,   935,    63,   346,
     562,  1104,   560,   567,   832,  1190,  1100,   562,    48,   401,
     776,   976,   566,   581,   582,    46,   535,   562,  1053,   470,
     560,  1164,  1164,  1164,  1164,   175,   366,   472,  1148,  1152,
    1106,   160,   323,  1106,  1139,  1140,   988,   281,   252,  1073,
     822,   281,   938,   562,   976,  1108,    27,   485,  1062,   562,
     485,   562,   485,   976,   989,   985,  1058,   171,   562,   175,
     366,  1148,  1106,    12,   122,  1188,   562,   836,   847,   850,
    1094,  1106,   562,   187,   252,   338,   425,  1118,  1119,  1122,
    1123,   225,  1040,  1103,   850,   554,   682,   596,   596,  1100,
    1100,  1032,   261,   331,   497,   956,   957,  1089,   596,  1042,
    1109,   168,  1037,  1039,   596,  1042,  1037,  1100,  1039,  1037,
    1037,  1042,  1042,   510,   788,   562,   788,   437,   420,   560,
     564,   904,   906,   907,   908,   917,   918,   926,  1088,   355,
    1225,   345,   949,   955,  1187,   678,    63,   727,    67,    79,
     235,   304,   328,   379,   450,   605,   607,     6,    13,    23,
      24,    52,    56,    67,    76,    81,    93,   111,   120,   121,
     126,   134,   140,   165,   211,   213,   220,   286,   300,   305,
     351,   353,   374,   375,   377,   391,   413,   494,   503,   684,
     686,   687,   688,   768,   769,   770,   949,   109,   224,  1100,
     806,  1103,   977,   560,   561,   562,   142,   142,   142,   142,
     142,   142,   142,   142,   142,   142,   142,   142,   142,   142,
     142,   562,   512,   807,   676,   561,  1108,    44,  1163,   596,
     596,   175,  1100,   591,    43,   196,   415,   755,   755,   337,
    1021,  1019,   567,  1023,   171,   554,  1106,   938,   850,   850,
     850,    12,   122,   889,   939,   104,   162,   199,   261,   331,
     497,   959,   889,   889,   889,   850,   850,   892,   892,   850,
     892,   850,   850,   850,   850,   122,   889,   939,   850,   561,
     850,   850,   850,   850,   850,  1096,  1106,   850,   850,   850,
     850,   850,   832,  1192,   850,   934,   850,   850,   850,   561,
     850,   850,   850,   850,   892,   850,   850,    94,    97,   478,
     481,   936,   850,   122,   886,  1087,   850,   850,   850,   561,
     850,   850,   850,   850,   892,   850,   850,   850,   850,   896,
       9,   898,  1096,   122,   889,   850,   850,   122,   889,   850,
     850,   850,   850,   850,   892,   892,   892,   850,   850,   850,
     850,   850,   850,   892,   860,   850,   561,   850,   850,   850,
     850,   850,   561,   850,   850,   889,   889,   850,   850,   850,
     122,   889,   850,   850,   935,   935,   850,    42,   239,   486,
     850,   850,  1087,   561,   850,   561,   889,  1097,  1098,  1106,
     889,   850,   850,   850,   532,   561,   562,   850,   187,   252,
     425,  1121,   427,   567,   853,   852,   855,   859,   155,   330,
     491,   507,   868,    12,    17,   859,   871,   560,  1193,  1195,
     873,   860,   246,   860,   861,   225,   246,   385,   549,   862,
     863,   863,   864,   872,   864,   872,   865,   865,   865,   865,
     865,   873,   553,  1108,   873,   850,   874,  1106,   561,  1196,
     975,  1109,   776,  1108,   562,   380,  1052,   976,  1054,  1106,
    1165,  1166,   554,  1100,  1106,  1160,  1160,  1160,   142,   160,
     180,   194,   237,   238,   265,   323,   363,  1141,  1143,   533,
     940,   982,   214,   823,   824,  1100,   264,   380,   537,  1134,
    1133,   806,   850,  1103,  1109,  1109,   816,  1100,   153,   372,
     515,   799,   800,   801,   420,   426,   522,   523,   560,   672,
     990,   993,  1103,   188,  1160,  1160,  1160,  1183,   844,   171,
     222,   837,   838,   948,   949,   970,   846,   567,  1116,   108,
     487,  1106,  1125,   314,   353,   566,   727,  1124,  1103,   171,
    1041,   561,  1106,   257,   455,  1034,   334,   562,   435,  1042,
    1106,  1042,  1037,  1100,  1042,  1042,   589,   789,   787,   925,
    1106,    85,   215,   230,   243,   317,   406,   460,   916,   426,
     562,   905,  1100,   925,   562,   168,  1226,    44,   953,   142,
     427,   999,  1000,  1000,  1103,   450,   450,   450,   450,   450,
     419,    66,    78,   174,   439,   699,   702,   703,   748,   750,
     774,   774,  1000,  1000,   774,  1000,  1000,  1000,   485,   119,
    1000,   231,   471,   166,   364,   750,   774,   231,  1000,   471,
     119,  1000,  1000,  1000,   774,  1000,  1000,  1000,  1000,  1000,
      18,   142,   485,   778,  1000,  1000,  1000,   684,   562,   560,
     567,   698,   704,  1099,  1106,   766,   364,   932,  1106,   850,
     959,  1103,  1103,   104,   162,   261,   331,   497,   960,  1103,
     959,  1103,  1103,  1103,  1103,  1103,   959,  1103,  1103,   959,
     588,   353,   476,  1215,     8,    27,   664,   596,  1206,   246,
     560,   666,   683,   685,   686,  1100,   517,   940,  1106,   906,
     567,  1024,   562,   561,   561,   562,   889,   561,   890,   562,
     561,   561,   561,    18,   561,   517,   561,   561,   561,   561,
     562,   562,   517,   562,   562,   883,   561,   554,   561,   562,
     562,   561,   561,   562,   561,   567,   561,   562,   561,   562,
     562,   562,   561,   562,  1196,   562,   171,   562,   562,   561,
     562,   561,   562,   562,   561,   562,   561,   561,   562,   561,
     562,   562,   562,   885,   562,   561,   562,   562,   561,   562,
     562,   561,   562,   561,   562,   561,   562,   562,   562,   561,
     560,   562,   889,   561,   561,   561,   889,   561,   561,   562,
     562,   561,   561,   562,   561,   562,   561,   561,   561,   561,
     561,   561,   561,   562,   562,   561,   562,   561,   225,   561,
     561,   562,   562,   562,   561,   562,   562,   561,   561,   561,
     562,   171,   562,   562,   889,   561,   561,   561,   562,   562,
     562,   561,   171,   850,   171,   850,   171,   850,   171,   561,
     562,   562,   561,   561,   561,   561,   561,   562,   561,   562,
     561,   901,   902,   892,   565,   567,   567,   567,  1108,   850,
    1106,   344,   347,   866,    15,    16,   867,   155,   330,   491,
     507,  1193,   892,   832,  1194,   146,   944,   860,    16,   560,
    1193,   873,   860,   860,   934,   934,   850,   877,   878,   879,
     560,   567,   582,   256,   561,   562,   567,   567,   485,   485,
     485,  1142,   941,   954,   955,   990,   476,  1105,   562,   825,
     537,   252,   485,   800,   673,   991,   560,   996,  1001,   996,
     561,   672,   992,  1093,  1094,  1097,  1106,   994,   342,   171,
     171,   171,   830,   127,   906,   128,   349,   966,   967,   168,
     256,   842,   970,   954,   838,    18,   848,  1103,  1106,   554,
    1106,   567,   227,   567,   999,    32,   108,   728,   729,   999,
    1108,   168,   999,   566,  1108,    32,   108,   730,   731,  1108,
     960,  1033,   144,   530,   957,   957,   535,   940,  1037,   562,
     920,   925,   904,   230,   230,   348,   927,   230,   243,   406,
     927,   917,   904,  1011,  1012,  1097,   904,   938,   922,   923,
     959,   296,   950,   108,   732,   734,  1108,   729,    93,    93,
     109,   224,   758,  1099,   751,   751,    57,   166,   364,   504,
     701,   749,   700,   701,   758,  1099,   960,   959,  1099,   959,
    1103,  1103,   727,  1000,   959,   232,   232,  1099,  1099,   689,
    1000,   160,   237,   328,   692,   960,   960,  1099,   108,   959,
    1103,   959,   959,   373,   376,   691,   959,  1100,    70,    71,
     108,   130,   161,   383,   690,   689,   560,   770,   696,   697,
     698,   699,  1106,     8,   160,   777,   384,   700,   740,   705,
     567,   560,  1207,   561,   562,   476,   560,   112,   219,   511,
     665,  1214,  1207,  1100,   246,   667,   672,   696,   210,   395,
     669,  1075,   562,   685,   592,   906,   948,   940,   938,   221,
     850,   850,   561,   850,   850,    32,    55,    94,    97,   105,
     319,   433,   481,   509,   891,   728,   892,   850,   728,   891,
     850,   892,   561,   872,   872,  1104,  1106,   850,   850,   892,
    1104,   850,   850,   850,   892,   331,   850,   850,   850,   850,
     850,   850,   850,   892,   892,   331,   850,   850,   892,   850,
     850,   850,   850,   892,   850,   860,  1096,   561,   561,   850,
     850,   850,   850,   850,   850,   850,   850,   850,   850,   850,
     850,   892,   221,   850,   850,   850,   850,   561,   850,   850,
     850,   850,   171,   850,   171,   850,   171,   850,   850,   331,
     850,   850,   546,   900,   850,   903,   561,   567,   759,   853,
     856,   561,  1196,   873,   859,   892,   944,    16,   561,   845,
     880,   881,   877,  1106,  1166,   554,   554,  1162,  1162,  1162,
     560,   850,   337,  1006,  1070,   824,   210,   828,  1109,   839,
     997,   998,  1097,  1002,   562,   560,   993,   561,   561,   562,
     567,  1181,   171,  1162,  1162,  1162,   940,   940,  1105,  1105,
     566,   968,   969,  1108,   511,   225,  1103,  1106,   567,  1106,
     244,  1106,    12,    32,   108,   337,   850,  1128,    63,   733,
     850,  1109,   336,   353,   476,  1127,  1121,   999,   953,   269,
    1042,   589,  1184,   921,   243,   230,   917,   927,   927,   230,
     337,   337,   517,   562,  1010,   999,   165,   210,   516,   928,
     839,   850,   951,  1095,   850,   232,   232,   751,   758,   754,
     126,   426,   771,   729,  1103,   758,   776,  1103,   772,   976,
     561,   562,  1106,  1100,    31,    32,    37,    39,    40,    41,
      55,    94,    97,   105,   124,   141,   161,   163,   182,   183,
     223,   250,   259,   260,   262,   290,   291,   292,   310,   311,
     312,   316,   319,   332,   333,   357,   359,   381,   424,   426,
     436,   477,   478,   481,   482,   483,   484,   524,   525,   543,
     706,   709,   710,   711,   712,   713,   714,   715,  1106,  1106,
    1208,    18,  1106,  1216,   337,   403,   560,   597,    18,  1100,
     561,   561,    18,   675,   685,   560,   940,   247,   958,   850,
     561,   561,   561,   560,   721,   721,   560,   716,   717,   721,
     223,   223,   561,   561,   561,   561,   561,   561,   562,   884,
     934,   934,   561,   561,   561,   561,   561,   561,   562,   561,
     561,   561,   561,   561,   562,   561,   561,   561,   561,   561,
     888,   949,   562,   562,   562,   561,   561,   561,   561,   562,
     561,   561,   561,   562,   225,   535,   876,   561,   561,   561,
     561,   561,   561,   561,   561,   561,   562,   561,   561,   561,
     850,   561,   168,   561,   561,   562,   562,   561,   562,   562,
     561,   850,   561,   850,   561,   850,   561,   561,   562,   561,
     561,   850,   138,   547,   532,  1106,   561,   859,   850,   562,
     561,   397,  1167,  1167,  1167,   108,   850,  1004,  1005,   129,
    1075,   241,   843,   562,   999,  1003,  1004,  1001,   995,   993,
    1093,  1106,  1162,   954,   191,   945,   971,  1108,   562,   428,
     554,   380,   393,   423,  1126,   734,   999,   560,   560,  1125,
     850,   142,   561,   907,   348,   904,   917,   230,   230,   904,
     917,   910,   909,   911,  1012,   940,  1005,   750,   929,   929,
     929,   843,   562,    19,   113,   952,   758,   754,   560,   108,
     108,   704,   733,   706,   561,   697,   741,   560,   560,   721,
     716,   361,   707,   716,   716,    20,    32,    45,   502,   727,
     736,    55,   524,   710,   712,   736,   736,    55,   525,   525,
     528,   716,   708,   721,   721,   736,   560,   721,    23,    63,
      67,   108,   330,   337,   364,   424,   504,   723,   724,   725,
     739,   868,   528,   560,   736,    32,   560,   737,   560,   560,
     721,   560,   717,   722,   567,   561,   562,   420,   560,  1209,
     217,   225,   350,   616,   617,   618,   619,   845,   105,   223,
     381,   461,   695,   598,  1209,   561,   668,   683,   560,   672,
     756,   757,  1106,   957,   934,   331,   736,   331,   850,   561,
     561,   561,   850,   850,   422,   887,   331,   850,   850,   850,
     850,    40,   371,   561,   850,   934,   850,   850,   850,   850,
     850,   561,   561,   561,   331,   850,   850,   846,   881,    58,
     228,   324,   452,   463,   538,  1158,  1159,   535,  1168,  1168,
    1168,   561,   562,  1007,   222,   674,   998,  1005,   561,  1184,
      44,   197,   942,    65,  1076,   969,   303,    68,   498,   380,
    1127,   476,   476,   999,  1103,   938,   230,   337,   913,   917,
     917,   337,   915,   850,   850,   560,   948,   930,   924,  1095,
     560,   560,   756,    97,   478,   481,   552,   553,  1090,  1091,
     777,   723,   283,   337,   560,   742,   744,   745,   746,   331,
     331,   433,   509,   544,   718,   719,   720,   560,   718,   718,
     737,    20,   502,   727,   738,   737,   728,   736,   528,   718,
     560,   736,   331,   718,   732,  1103,   327,   726,  1090,   511,
     108,   232,   725,   232,   330,   331,   331,   331,   331,   718,
     331,   718,  1106,  1106,   845,   845,   535,  1210,   561,   562,
     614,  1100,   496,   612,   613,   615,  1106,  1210,  1184,   669,
     672,   670,   561,   562,   952,   560,   561,   561,   561,   562,
     561,   561,   562,   561,  1088,   561,   562,   561,   562,   561,
     561,   303,   151,   561,   561,   561,   561,   561,   561,   561,
     562,   547,   848,   476,   476,   476,    16,  1157,   188,   284,
     285,   288,   289,  1169,  1170,  1005,   232,  1071,   693,   838,
     954,   946,  1095,   943,   948,   135,   145,   343,   475,  1077,
    1078,   249,  1079,   561,   561,  1128,    16,   904,   912,   517,
     914,   517,   933,  1106,   958,   560,   693,   952,   756,   756,
     561,  1092,  1092,   773,   173,   352,   434,   112,   511,   743,
    1106,   746,   561,   561,   720,   760,  1088,   728,   737,   760,
     561,   849,   327,   523,   561,   561,   561,   561,   832,   831,
      49,    57,   252,  1217,   618,  1106,   168,  1103,   561,   562,
     614,   561,  1181,   757,   331,   331,   850,   889,   850,   892,
     850,  1158,   342,   959,   959,   959,   959,  1170,   511,   472,
     842,   535,   562,   947,   952,   850,   954,    44,    44,   135,
      44,  1078,   453,   475,  1080,  1081,   270,   337,   850,   560,
     850,   560,   561,   562,   931,   932,   561,   561,   777,    48,
     328,   401,   426,   747,   747,   561,   562,   561,   562,   561,
     849,   736,   737,   736,   737,   561,    57,   342,    57,   604,
     706,   845,   599,   615,   706,   671,   952,   561,   561,   561,
     562,   561,   561,   561,  1013,  1014,  1097,  1100,    86,   408,
    1095,   366,   961,  1088,  1088,    44,  1088,    44,    44,  1081,
     142,   919,   933,   933,  1106,   561,   740,     5,   108,   330,
     744,  1106,   736,  1088,   736,  1184,   342,   342,   118,   605,
     606,   868,  1218,   131,   403,  1184,   850,   562,   999,  1072,
     952,  1106,  1088,  1088,  1088,   960,   850,   561,   561,   118,
      60,   157,   209,   229,   242,   340,   404,   548,   635,   636,
     642,   656,  1102,  1107,  1111,   414,   600,   561,  1014,  1005,
    1076,   962,    16,   565,  1106,   171,   323,   644,   638,  1107,
    1107,  1106,   637,   532,   640,   573,    28,   263,   394,   534,
     659,   569,  1212,   706,  1079,   560,   274,   171,  1106,   646,
     647,   850,   639,   850,   660,   621,   635,   621,   661,   657,
     635,   601,   210,  1082,   845,   963,   964,   965,   142,   222,
     138,   850,   651,   652,   532,   622,   138,   635,   568,   510,
     850,   659,   604,   331,   560,  1083,   850,   561,   562,   959,
     643,   209,   547,   138,   850,   641,   106,   620,   623,   263,
     568,   663,   125,   658,  1107,   602,   249,   561,   566,  1084,
    1085,  1097,   426,  1086,   965,   645,  1106,   648,   548,   547,
     651,    80,   150,   628,   633,  1106,   138,   635,   568,   850,
     662,   635,  1108,   561,   562,  1013,   562,   621,   653,   138,
     195,   562,   624,    75,    89,   568,   138,   621,  1085,  1106,
     649,   621,   548,   168,  1106,   706,   168,   168,   394,   138,
     132,   546,   650,   654,   625,   108,   634,   442,   630,   959,
     626,   627,   534,   646,   621,   532,   546,   655,   441,   443,
     629,   630,   632,   868,  1106,   850,   523,   631,   573,   651,
     621,   562,   635,   169,  1104,   632
};

#if ! defined (YYSIZE_T) && defined (__SIZE_TYPE__)
# define YYSIZE_T __SIZE_TYPE__
#endif
#if ! defined (YYSIZE_T) && defined (size_t)
# define YYSIZE_T size_t
#endif
#if ! defined (YYSIZE_T)
# if defined (__STDC__) || defined (__cplusplus)
#  include <stddef.h> /* INFRINGES ON USER NAME SPACE */
#  define YYSIZE_T size_t
# endif
#endif
#if ! defined (YYSIZE_T)
# define YYSIZE_T unsigned int
#endif

#define yyerrok		(yyerrstatus = 0)
#define yyclearin	(yychar = YYEMPTY)
#define YYEMPTY		(-2)
#define YYEOF		0

#define YYACCEPT	goto yyacceptlab
#define YYABORT		goto yyabortlab
#define YYERROR		goto yyerrorlab


/* Like YYERROR except do call yyerror.  This remains here temporarily
   to ease the transition to the new meaning of YYERROR, for GCC.
   Once GCC version 2 has supplanted version 1, this can go.  */

#define YYFAIL		goto yyerrlab

#define YYRECOVERING()  (!!yyerrstatus)

#define YYBACKUP(Token, Value)					\
do								\
  if (yychar == YYEMPTY && yylen == 1)				\
    {								\
      yychar = (Token);						\
      yylval = (Value);						\
      yytoken = YYTRANSLATE (yychar);				\
      YYPOPSTACK;						\
      goto yybackup;						\
    }								\
  else								\
    { 								\
      yyerror ("syntax error: cannot back up");\
      YYERROR;							\
    }								\
while (0)


#define YYTERROR	1
#define YYERRCODE	256


/* YYLLOC_DEFAULT -- Set CURRENT to span from RHS[1] to RHS[N].
   If N is 0, then set CURRENT to the empty location which ends
   the previous symbol: RHS[0] (always defined).  */

#define YYRHSLOC(Rhs, K) ((Rhs)[K])
#ifndef YYLLOC_DEFAULT
# define YYLLOC_DEFAULT(Current, Rhs, N)				\
    do									\
      if (N)								\
	{								\
	  (Current).first_line   = YYRHSLOC (Rhs, 1).first_line;	\
	  (Current).first_column = YYRHSLOC (Rhs, 1).first_column;	\
	  (Current).last_line    = YYRHSLOC (Rhs, N).last_line;		\
	  (Current).last_column  = YYRHSLOC (Rhs, N).last_column;	\
	}								\
      else								\
	{								\
	  (Current).first_line   = (Current).last_line   =		\
	    YYRHSLOC (Rhs, 0).last_line;				\
	  (Current).first_column = (Current).last_column =		\
	    YYRHSLOC (Rhs, 0).last_column;				\
	}								\
    while (0)
#endif


/* YY_LOCATION_PRINT -- Print the location on the stream.
   This macro was not mandated originally: define only if we know
   we won't break user code: when these are the locations we know.  */

#ifndef YY_LOCATION_PRINT
# if YYLTYPE_IS_TRIVIAL
#  define YY_LOCATION_PRINT(File, Loc)			\
     fprintf (File, "%d.%d-%d.%d",			\
              (Loc).first_line, (Loc).first_column,	\
              (Loc).last_line,  (Loc).last_column)
# else
#  define YY_LOCATION_PRINT(File, Loc) ((void) 0)
# endif
#endif


/* YYLEX -- calling `yylex' with the right arguments.  */

#ifdef YYLEX_PARAM
# define YYLEX yylex (&yylval, YYLEX_PARAM)
#else
# define YYLEX yylex (&yylval)
#endif

/* Enable debugging if requested.  */
#if YYDEBUG

# ifndef YYFPRINTF
#  include <stdio.h> /* INFRINGES ON USER NAME SPACE */
#  define YYFPRINTF fprintf
# endif

# define YYDPRINTF(Args)			\
do {						\
  if (yydebug)					\
    YYFPRINTF Args;				\
} while (0)

# define YY_SYMBOL_PRINT(Title, Type, Value, Location)		\
do {								\
  if (yydebug)							\
    {								\
      YYFPRINTF (stderr, "%s ", Title);				\
      yysymprint (stderr, 					\
                  Type, Value);	\
      YYFPRINTF (stderr, "\n");					\
    }								\
} while (0)

/*------------------------------------------------------------------.
| yy_stack_print -- Print the state stack from its BOTTOM up to its |
| TOP (included).                                                   |
`------------------------------------------------------------------*/

#if defined (__STDC__) || defined (__cplusplus)
static void
yy_stack_print (short int *bottom, short int *top)
#else
static void
yy_stack_print (bottom, top)
    short int *bottom;
    short int *top;
#endif
{
  YYFPRINTF (stderr, "Stack now");
  for (/* Nothing. */; bottom <= top; ++bottom)
    YYFPRINTF (stderr, " %d", *bottom);
  YYFPRINTF (stderr, "\n");
}

# define YY_STACK_PRINT(Bottom, Top)				\
do {								\
  if (yydebug)							\
    yy_stack_print ((Bottom), (Top));				\
} while (0)


/*------------------------------------------------.
| Report that the YYRULE is going to be reduced.  |
`------------------------------------------------*/

#if defined (__STDC__) || defined (__cplusplus)
static void
yy_reduce_print (int yyrule)
#else
static void
yy_reduce_print (yyrule)
    int yyrule;
#endif
{
  int yyi;
  unsigned int yylno = yyrline[yyrule];
  YYFPRINTF (stderr, "Reducing stack by rule %d (line %u), ",
             yyrule - 1, yylno);
  /* Print the symbols being reduced, and their result.  */
  for (yyi = yyprhs[yyrule]; 0 <= yyrhs[yyi]; yyi++)
    YYFPRINTF (stderr, "%s ", yytname [yyrhs[yyi]]);
  YYFPRINTF (stderr, "-> %s\n", yytname [yyr1[yyrule]]);
}

# define YY_REDUCE_PRINT(Rule)		\
do {					\
  if (yydebug)				\
    yy_reduce_print (Rule);		\
} while (0)

/* Nonzero means print parse trace.  It is left uninitialized so that
   multiple parsers can coexist.  */
int yydebug;
#else /* !YYDEBUG */
# define YYDPRINTF(Args)
# define YY_SYMBOL_PRINT(Title, Type, Value, Location)
# define YY_STACK_PRINT(Bottom, Top)
# define YY_REDUCE_PRINT(Rule)
#endif /* !YYDEBUG */


/* YYINITDEPTH -- initial size of the parser's stacks.  */
#ifndef	YYINITDEPTH
# define YYINITDEPTH 200
#endif

/* YYMAXDEPTH -- maximum size the stacks can grow to (effective only
   if the built-in stack extension method is used).

   Do not make this value too large; the results are undefined if
   SIZE_MAX < YYSTACK_BYTES (YYMAXDEPTH)
   evaluated with infinite-precision integer arithmetic.  */

#ifndef YYMAXDEPTH
# define YYMAXDEPTH 10000
#endif



#if YYERROR_VERBOSE

# ifndef yystrlen
#  if defined (__GLIBC__) && defined (_STRING_H)
#   define yystrlen strlen
#  else
/* Return the length of YYSTR.  */
static YYSIZE_T
#   if defined (__STDC__) || defined (__cplusplus)
yystrlen (const char *yystr)
#   else
yystrlen (yystr)
     const char *yystr;
#   endif
{
  register const char *yys = yystr;

  while (*yys++ != '\0')
    continue;

  return yys - yystr - 1;
}
#  endif
# endif

# ifndef yystpcpy
#  if defined (__GLIBC__) && defined (_STRING_H) && defined (_GNU_SOURCE)
#   define yystpcpy stpcpy
#  else
/* Copy YYSRC to YYDEST, returning the address of the terminating '\0' in
   YYDEST.  */
static char *
#   if defined (__STDC__) || defined (__cplusplus)
yystpcpy (char *yydest, const char *yysrc)
#   else
yystpcpy (yydest, yysrc)
     char *yydest;
     const char *yysrc;
#   endif
{
  register char *yyd = yydest;
  register const char *yys = yysrc;

  while ((*yyd++ = *yys++) != '\0')
    continue;

  return yyd - 1;
}
#  endif
# endif

#endif /* !YYERROR_VERBOSE */



#if YYDEBUG
/*--------------------------------.
| Print this symbol on YYOUTPUT.  |
`--------------------------------*/

#if defined (__STDC__) || defined (__cplusplus)
static void
yysymprint (FILE *yyoutput, int yytype, YYSTYPE *yyvaluep)
#else
static void
yysymprint (yyoutput, yytype, yyvaluep)
    FILE *yyoutput;
    int yytype;
    YYSTYPE *yyvaluep;
#endif
{
  /* Pacify ``unused variable'' warnings.  */
  (void) yyvaluep;

  if (yytype < YYNTOKENS)
    YYFPRINTF (yyoutput, "token %s (", yytname[yytype]);
  else
    YYFPRINTF (yyoutput, "nterm %s (", yytname[yytype]);


# ifdef YYPRINT
  if (yytype < YYNTOKENS)
    YYPRINT (yyoutput, yytoknum[yytype], *yyvaluep);
# endif
  switch (yytype)
    {
      default:
        break;
    }
  YYFPRINTF (yyoutput, ")");
}

#endif /* ! YYDEBUG */
/*-----------------------------------------------.
| Release the memory associated to this symbol.  |
`-----------------------------------------------*/

#if defined (__STDC__) || defined (__cplusplus)
static void
yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep)
#else
static void
yydestruct (yymsg, yytype, yyvaluep)
    const char *yymsg;
    int yytype;
    YYSTYPE *yyvaluep;
#endif
{
  /* Pacify ``unused variable'' warnings.  */
  (void) yyvaluep;

  if (!yymsg)
    yymsg = "Deleting";
  YY_SYMBOL_PRINT (yymsg, yytype, yyvaluep, yylocationp);

  switch (yytype)
    {

      default:
        break;
    }
}


/* Prevent warnings from -Wmissing-prototypes.  */

#ifdef YYPARSE_PARAM
# if defined (__STDC__) || defined (__cplusplus)
int yyparse (void *YYPARSE_PARAM);
# else
int yyparse ();
# endif
#else /* ! YYPARSE_PARAM */
#if defined (__STDC__) || defined (__cplusplus)
int yyparse (void);
#else
int yyparse ();
#endif
#endif /* ! YYPARSE_PARAM */






/*----------.
| yyparse.  |
`----------*/

#ifdef YYPARSE_PARAM
# if defined (__STDC__) || defined (__cplusplus)
int yyparse (void *YYPARSE_PARAM)
# else
int yyparse (YYPARSE_PARAM)
  void *YYPARSE_PARAM;
# endif
#else /* ! YYPARSE_PARAM */
#if defined (__STDC__) || defined (__cplusplus)
int
yyparse (void)
#else
int
yyparse ()

#endif
#endif
{
  /* The look-ahead symbol.  */
int yychar;

/* The semantic value of the look-ahead symbol.  */
YYSTYPE yylval;

/* Number of syntax errors so far.  */
int yynerrs;

  register int yystate;
  register int yyn;
  int yyresult;
  /* Number of tokens to shift before error messages enabled.  */
  int yyerrstatus;
  /* Look-ahead token as an internal (translated) token number.  */
  int yytoken = 0;

  /* Three stacks and their tools:
     `yyss': related to states,
     `yyvs': related to semantic values,
     `yyls': related to locations.

     Refer to the stacks thru separate pointers, to allow yyoverflow
     to reallocate them elsewhere.  */

  /* The state stack.  */
  short int yyssa[YYINITDEPTH];
  short int *yyss = yyssa;
  register short int *yyssp;

  /* The semantic value stack.  */
  YYSTYPE yyvsa[YYINITDEPTH];
  YYSTYPE *yyvs = yyvsa;
  register YYSTYPE *yyvsp;



#define YYPOPSTACK   (yyvsp--, yyssp--)

  YYSIZE_T yystacksize = YYINITDEPTH;

  /* The variables used to return semantic value and location from the
     action routines.  */
  YYSTYPE yyval;


  /* When reducing, the number of symbols on the RHS of the reduced
     rule.  */
  int yylen;

  YYDPRINTF ((stderr, "Starting parse\n"));

  yystate = 0;
  yyerrstatus = 0;
  yynerrs = 0;
  yychar = YYEMPTY;		/* Cause a token to be read.  */

  /* Initialize stack pointers.
     Waste one element of value and location stack
     so that they stay on the same level as the state stack.
     The wasted elements are never initialized.  */

  yyssp = yyss;
  yyvsp = yyvs;


  yyvsp[0] = yylval;

  goto yysetstate;

/*------------------------------------------------------------.
| yynewstate -- Push a new state, which is found in yystate.  |
`------------------------------------------------------------*/
 yynewstate:
  /* In all cases, when you get here, the value and location stacks
     have just been pushed. so pushing a state here evens the stacks.
     */
  yyssp++;

 yysetstate:
  *yyssp = yystate;

  if (yyss + yystacksize - 1 <= yyssp)
    {
      /* Get the current used size of the three stacks, in elements.  */
      YYSIZE_T yysize = yyssp - yyss + 1;

#ifdef yyoverflow
      {
	/* Give user a chance to reallocate the stack. Use copies of
	   these so that the &'s don't force the real ones into
	   memory.  */
	YYSTYPE *yyvs1 = yyvs;
	short int *yyss1 = yyss;


	/* Each stack pointer address is followed by the size of the
	   data in use in that stack, in bytes.  This used to be a
	   conditional around just the two extra args, but that might
	   be undefined if yyoverflow is a macro.  */
	yyoverflow ("parser stack overflow",
		    &yyss1, yysize * sizeof (*yyssp),
		    &yyvs1, yysize * sizeof (*yyvsp),

		    &yystacksize);

	yyss = yyss1;
	yyvs = yyvs1;
      }
#else /* no yyoverflow */
# ifndef YYSTACK_RELOCATE
      goto yyoverflowlab;
# else
      /* Extend the stack our own way.  */
      if (YYMAXDEPTH <= yystacksize)
	goto yyoverflowlab;
      yystacksize *= 2;
      if (YYMAXDEPTH < yystacksize)
	yystacksize = YYMAXDEPTH;

      {
	short int *yyss1 = yyss;
	union yyalloc *yyptr =
	  (union yyalloc *) YYSTACK_ALLOC (YYSTACK_BYTES (yystacksize));
	if (! yyptr)
	  goto yyoverflowlab;
	YYSTACK_RELOCATE (yyss);
	YYSTACK_RELOCATE (yyvs);

#  undef YYSTACK_RELOCATE
	if (yyss1 != yyssa)
	  YYSTACK_FREE (yyss1);
      }
# endif
#endif /* no yyoverflow */

      yyssp = yyss + yysize - 1;
      yyvsp = yyvs + yysize - 1;


      YYDPRINTF ((stderr, "Stack size increased to %lu\n",
		  (unsigned long int) yystacksize));

      if (yyss + yystacksize - 1 <= yyssp)
	YYABORT;
    }

  YYDPRINTF ((stderr, "Entering state %d\n", yystate));

  goto yybackup;

/*-----------.
| yybackup.  |
`-----------*/
yybackup:

/* Do appropriate processing given the current state.  */
/* Read a look-ahead token if we need one and don't already have one.  */
/* yyresume: */

  /* First try to decide what to do without reference to look-ahead token.  */

  yyn = yypact[yystate];
  if (yyn == YYPACT_NINF)
    goto yydefault;

  /* Not known => get a look-ahead token if don't already have one.  */

  /* YYCHAR is either YYEMPTY or YYEOF or a valid look-ahead symbol.  */
  if (yychar == YYEMPTY)
    {
      YYDPRINTF ((stderr, "Reading a token: "));
      yychar = YYLEX;
    }

  if (yychar <= YYEOF)
    {
      yychar = yytoken = YYEOF;
      YYDPRINTF ((stderr, "Now at end of input.\n"));
    }
  else
    {
      yytoken = YYTRANSLATE (yychar);
      YY_SYMBOL_PRINT ("Next token is", yytoken, &yylval, &yylloc);
    }

  /* If the proper action on seeing token YYTOKEN is to reduce or to
     detect an error, take that action.  */
  yyn += yytoken;
  if (yyn < 0 || YYLAST < yyn || yycheck[yyn] != yytoken)
    goto yydefault;
  yyn = yytable[yyn];
  if (yyn <= 0)
    {
      if (yyn == 0 || yyn == YYTABLE_NINF)
	goto yyerrlab;
      yyn = -yyn;
      goto yyreduce;
    }

  if (yyn == YYFINAL)
    YYACCEPT;

  /* Shift the look-ahead token.  */
  YY_SYMBOL_PRINT ("Shifting", yytoken, &yylval, &yylloc);

  /* Discard the token being shifted unless it is eof.  */
  if (yychar != YYEOF)
    yychar = YYEMPTY;

  *++yyvsp = yylval;


  /* Count tokens shifted since error; after three, turn off error
     status.  */
  if (yyerrstatus)
    yyerrstatus--;

  yystate = yyn;
  goto yynewstate;


/*-----------------------------------------------------------.
| yydefault -- do the default action for the current state.  |
`-----------------------------------------------------------*/
yydefault:
  yyn = yydefact[yystate];
  if (yyn == 0)
    goto yyerrlab;
  goto yyreduce;


/*-----------------------------.
| yyreduce -- Do a reduction.  |
`-----------------------------*/
yyreduce:
  /* yyn is the number of a rule to reduce with.  */
  yylen = yyr2[yyn];

  /* If YYLEN is nonzero, implement the default value of the action:
     `$$ = $1'.

     Otherwise, the following line sets YYVAL to garbage.
     This behavior is undocumented and Bison
     users should not rely upon it.  Assigning to YYVAL
     unconditionally makes the parser a bit smaller, and it avoids a
     GCC warning that YYVAL may be used uninitialized.  */
  yyval = yyvsp[1-yylen];


  YY_REDUCE_PRINT (yyn);
  switch (yyn)
    {
        case 2:
#line 857 "sql_yacc.yy"
    {
	   THD *thd= YYTHD;
	   if (!thd->bootstrap &&
	      (!(thd->lex->select_lex.options & OPTION_FOUND_COMMENT)))
	   {
	     my_message(ER_EMPTY_QUERY, ER(ER_EMPTY_QUERY), MYF(0));
	     YYABORT;
	   }
	   else
	   {
	     thd->lex->sql_command= SQLCOM_EMPTY_QUERY;
	   }
	}
    break;

  case 3:
#line 870 "sql_yacc.yy"
    {}
    break;

  case 53:
#line 930 "sql_yacc.yy"
    {
          THD *thd=YYTHD;
          LEX *lex= thd->lex;
          if (lex->stmt_prepare_mode)
          {
            yyerror(ER(ER_SYNTAX_ERROR));
            YYABORT;
          }
          lex->sql_command= SQLCOM_DEALLOCATE_PREPARE;
          lex->prepared_stmt_name= (yyvsp[0].lex_str);
        }
    break;

  case 56:
#line 950 "sql_yacc.yy"
    {
          THD *thd=YYTHD;
          LEX *lex= thd->lex;
          if (lex->stmt_prepare_mode)
          {
            yyerror(ER(ER_SYNTAX_ERROR));
            YYABORT;
          }
          lex->sql_command= SQLCOM_PREPARE;
          lex->prepared_stmt_name= (yyvsp[-2].lex_str);
        }
    break;

  case 57:
#line 964 "sql_yacc.yy"
    {
          THD *thd=YYTHD;
          LEX *lex= thd->lex;
          lex->prepared_stmt_code= (yyvsp[0].lex_str);
          lex->prepared_stmt_code_is_varref= FALSE;
        }
    break;

  case 58:
#line 971 "sql_yacc.yy"
    {
          THD *thd=YYTHD;
          LEX *lex= thd->lex;
          lex->prepared_stmt_code= (yyvsp[0].lex_str);
          lex->prepared_stmt_code_is_varref= TRUE;
        }
    break;

  case 59:
#line 980 "sql_yacc.yy"
    {
          THD *thd=YYTHD;
          LEX *lex= thd->lex;
          if (lex->stmt_prepare_mode)
          {
            yyerror(ER(ER_SYNTAX_ERROR));
            YYABORT;
          }
          lex->sql_command= SQLCOM_EXECUTE;
          lex->prepared_stmt_name= (yyvsp[0].lex_str);
        }
    break;

  case 60:
#line 992 "sql_yacc.yy"
    {}
    break;

  case 65:
#line 1006 "sql_yacc.yy"
    {
          LEX *lex=Lex;
          LEX_STRING *lexstr= (LEX_STRING*)sql_memdup(&(yyvsp[0].lex_str), sizeof(LEX_STRING));
          if (!lexstr || lex->prepared_stmt_params.push_back(lexstr))
              YYABORT;
        }
    break;

  case 66:
#line 1018 "sql_yacc.yy"
    {
         if (Lex->sphead)
         {
           my_error(ER_SP_BADSTATEMENT, MYF(0), "HELP");
           YYABORT;
         }
       }
    break;

  case 67:
#line 1026 "sql_yacc.yy"
    {
	  LEX *lex= Lex;
	  lex->sql_command= SQLCOM_HELP;
	  lex->help_arg= (yyvsp[0].lex_str).str;
       }
    break;

  case 68:
#line 1036 "sql_yacc.yy"
    {
	  LEX *lex = Lex;
	  lex->sql_command = SQLCOM_CHANGE_MASTER;
	  bzero((char*) &lex->mi, sizeof(lex->mi));
        }
    break;

  case 69:
#line 1042 "sql_yacc.yy"
    {}
    break;

  case 72:
#line 1051 "sql_yacc.yy"
    {
	 Lex->mi.host = (yyvsp[0].lex_str).str;
       }
    break;

  case 73:
#line 1056 "sql_yacc.yy"
    {
	 Lex->mi.user = (yyvsp[0].lex_str).str;
       }
    break;

  case 74:
#line 1061 "sql_yacc.yy"
    {
	 Lex->mi.password = (yyvsp[0].lex_str).str;
       }
    break;

  case 75:
#line 1066 "sql_yacc.yy"
    {
	 Lex->mi.port = (yyvsp[0].ulong_num);
       }
    break;

  case 76:
#line 1071 "sql_yacc.yy"
    {
	 Lex->mi.connect_retry = (yyvsp[0].ulong_num);
       }
    break;

  case 77:
#line 1075 "sql_yacc.yy"
    {
           Lex->mi.ssl= (yyvsp[0].ulong_num) ? 
               LEX_MASTER_INFO::SSL_ENABLE : LEX_MASTER_INFO::SSL_DISABLE;
         }
    break;

  case 78:
#line 1080 "sql_yacc.yy"
    {
           Lex->mi.ssl_ca= (yyvsp[0].lex_str).str;
         }
    break;

  case 79:
#line 1084 "sql_yacc.yy"
    {
           Lex->mi.ssl_capath= (yyvsp[0].lex_str).str;
         }
    break;

  case 80:
#line 1088 "sql_yacc.yy"
    {
           Lex->mi.ssl_cert= (yyvsp[0].lex_str).str;
         }
    break;

  case 81:
#line 1092 "sql_yacc.yy"
    {
           Lex->mi.ssl_cipher= (yyvsp[0].lex_str).str;
         }
    break;

  case 82:
#line 1096 "sql_yacc.yy"
    {
           Lex->mi.ssl_key= (yyvsp[0].lex_str).str;
	 }
    break;

  case 84:
#line 1105 "sql_yacc.yy"
    {
	 Lex->mi.log_file_name = (yyvsp[0].lex_str).str;
       }
    break;

  case 85:
#line 1109 "sql_yacc.yy"
    {
           Lex->mi.pos = (yyvsp[0].ulonglong_number);
           /* 
              If the user specified a value < BIN_LOG_HEADER_SIZE, adjust it
              instead of causing subsequent errors. 
              We need to do it in this file, because only there we know that 
              MASTER_LOG_POS has been explicitely specified. On the contrary
              in change_master() (sql_repl.cc) we cannot distinguish between 0
              (MASTER_LOG_POS explicitely specified as 0) and 0 (unspecified),
              whereas we want to distinguish (specified 0 means "read the binlog
              from 0" (4 in fact), unspecified means "don't change the position
              (keep the preceding value)").
           */
           Lex->mi.pos = max(BIN_LOG_HEADER_SIZE, Lex->mi.pos);
         }
    break;

  case 86:
#line 1125 "sql_yacc.yy"
    {
           Lex->mi.relay_log_name = (yyvsp[0].lex_str).str;
         }
    break;

  case 87:
#line 1129 "sql_yacc.yy"
    {
           Lex->mi.relay_log_pos = (yyvsp[0].ulong_num);
           /* Adjust if < BIN_LOG_HEADER_SIZE (same comment as Lex->mi.pos) */
           Lex->mi.relay_log_pos = max(BIN_LOG_HEADER_SIZE, Lex->mi.relay_log_pos);
         }
    break;

  case 88:
#line 1140 "sql_yacc.yy"
    {
	  THD *thd= YYTHD;
	  LEX *lex=Lex;
	  lex->sql_command= SQLCOM_CREATE_TABLE;
	  if (!lex->select_lex.add_table_to_list(thd, (yyvsp[0].table), NULL,
						 TL_OPTION_UPDATING,
						 (using_update_log ?
						  TL_READ_NO_INSERT:
						  TL_READ)))
	    YYABORT;
	  lex->create_list.empty();
	  lex->key_list.empty();
	  lex->col_list.empty();
	  lex->change=NullS;
	  bzero((char*) &lex->create_info,sizeof(lex->create_info));
	  lex->create_info.options=(yyvsp[-3].num) | (yyvsp[-1].num);
	  lex->create_info.db_type= (enum db_type) lex->thd->variables.table_type;
	  lex->create_info.default_table_charset= NULL;
	  lex->name=0;
	}
    break;

  case 89:
#line 1161 "sql_yacc.yy"
    { Lex->current_select= &Lex->select_lex; }
    break;

  case 90:
#line 1163 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    lex->sql_command= SQLCOM_CREATE_INDEX;
	    if (!lex->current_select->add_table_to_list(lex->thd, (yyvsp[0].table), NULL,
							TL_OPTION_UPDATING))
	      YYABORT;
	    lex->create_list.empty();
	    lex->key_list.empty();
	    lex->col_list.empty();
	    lex->change=NullS;
	  }
    break;

  case 91:
#line 1175 "sql_yacc.yy"
    {
	    LEX *lex=Lex;

	    lex->key_list.push_back(new Key((yyvsp[-9].key_type),(yyvsp[-7].lex_str).str, (yyvsp[-6].key_alg), 0, lex->col_list));
	    lex->col_list.empty();
	  }
    break;

  case 92:
#line 1182 "sql_yacc.yy"
    {
             Lex->create_info.default_table_charset= NULL;
             Lex->create_info.used_fields= 0;
          }
    break;

  case 93:
#line 1187 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    lex->sql_command=SQLCOM_CREATE_DB;
	    lex->name=(yyvsp[-2].lex_str).str;
            lex->create_info.options=(yyvsp[-3].num);
	  }
    break;

  case 94:
#line 1194 "sql_yacc.yy"
    {
            Lex->create_view_mode= VIEW_CREATE_NEW;
            Lex->create_view_algorithm= VIEW_ALGORITHM_UNDEFINED;
            Lex->create_view_suid= TRUE;
	  }
    break;

  case 95:
#line 1200 "sql_yacc.yy"
    {}
    break;

  case 96:
#line 1202 "sql_yacc.yy"
    {
	    Lex->sql_command = SQLCOM_CREATE_USER;
          }
    break;

  case 97:
#line 1209 "sql_yacc.yy"
    {
          LEX *lex=Lex;
          lex->users_list.empty();
          lex->columns.empty();
          lex->grant= lex->grant_tot_col= 0;
	  lex->all_privileges= 0;
          lex->select_lex.db= 0;
          lex->ssl_type= SSL_TYPE_NOT_SPECIFIED;
          lex->ssl_cipher= lex->x509_subject= lex->x509_issuer= 0;
          bzero((char *)&(lex->mqh),sizeof(lex->mqh));
        }
    break;

  case 98:
#line 1224 "sql_yacc.yy"
    {
            if (!(yyvsp[-2].lex_str).str || check_db_name((yyvsp[-2].lex_str).str))
            {
	      my_error(ER_WRONG_DB_NAME, MYF(0), (yyvsp[-2].lex_str).str);
	      YYABORT;
	    }
	    if (check_routine_name((yyvsp[0].lex_str)))
            {
	      my_error(ER_SP_WRONG_NAME, MYF(0), (yyvsp[0].lex_str).str);
	      YYABORT;
	    }
	    (yyval.spname)= new sp_name((yyvsp[-2].lex_str), (yyvsp[0].lex_str));
	    (yyval.spname)->init_qname(YYTHD);
	  }
    break;

  case 99:
#line 1239 "sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX_STRING db;
	    if (check_routine_name((yyvsp[0].lex_str)))
            {
	      my_error(ER_SP_WRONG_NAME, MYF(0), (yyvsp[0].lex_str).str);
	      YYABORT;
	    }
            if (thd->copy_db_to(&db.str, &db.length))
              YYABORT;
	    (yyval.spname)= new sp_name(db, (yyvsp[0].lex_str));
            if ((yyval.spname))
	      (yyval.spname)->init_qname(YYTHD);
	  }
    break;

  case 100:
#line 1257 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    lex->sql_command = SQLCOM_CREATE_FUNCTION;
	    lex->udf.name = lex->spname->m_name;
	    lex->udf.returns=(Item_result) (yyvsp[-2].num);
	    lex->udf.dl=(yyvsp[0].lex_str).str;
	  }
    break;

  case 101:
#line 1265 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    sp_head *sp;

            /* 
              First check if AGGREGATE was used, in that case it's a
              syntax error.
            */
            if (lex->udf.type == UDFTYPE_AGGREGATE)
            {
              my_error(ER_SP_NO_AGGREGATE, MYF(0));
              YYABORT;
            }

	    if (lex->sphead)
	    {
	      my_error(ER_SP_NO_RECURSIVE_CREATE, MYF(0), "FUNCTION");
	      YYABORT;
	    }
	    /* Order is important here: new - reset - init */
	    sp= new sp_head();
	    sp->reset_thd_mem_root(YYTHD);
	    sp->init(lex);

	    sp->m_type= TYPE_ENUM_FUNCTION;
	    lex->sphead= sp;
	    /*
	     * We have to turn of CLIENT_MULTI_QUERIES while parsing a
	     * stored procedure, otherwise yylex will chop it into pieces
	     * at each ';'.
	     */
	    sp->m_old_cmq= YYTHD->client_capabilities & CLIENT_MULTI_QUERIES;
	    YYTHD->client_capabilities &= ~CLIENT_MULTI_QUERIES;
	    lex->sphead->m_param_begin= lex->tok_start+1;
	  }
    break;

  case 102:
#line 1301 "sql_yacc.yy"
    {
	    LEX *lex= Lex;

	    lex->sphead->m_param_end= lex->tok_start;
	  }
    break;

  case 103:
#line 1307 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    lex->charset= NULL;
	    lex->length= lex->dec= NULL;
	    lex->interval_list.empty();
	    lex->type= 0;
	  }
    break;

  case 104:
#line 1315 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    sp_head *sp= lex->sphead;

            if (sp->fill_field_definition(YYTHD, lex,
                                          (enum enum_field_types) (yyvsp[0].num),
                                          &sp->m_return_field_def))
              YYABORT;

	    bzero((char *)&lex->sp_chistics, sizeof(st_sp_chistics));
	  }
    break;

  case 105:
#line 1327 "sql_yacc.yy"
    {
	    LEX *lex= Lex;

	    lex->sphead->m_chistics= &lex->sp_chistics;
	    lex->sphead->m_body_begin= lex->tok_start;
	  }
    break;

  case 106:
#line 1334 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    sp_head *sp= lex->sphead;

            if (sp->is_not_allowed_in_function("function"))
              YYABORT;

	    lex->sql_command= SQLCOM_CREATE_SPFUNCTION;
	    sp->init_strings(YYTHD, lex, lex->spname);
            if (!(sp->m_flags & sp_head::HAS_RETURN))
            {
              my_error(ER_SP_NORETURN, MYF(0), sp->m_qname.str);
              YYABORT;
            }
	    /* Restore flag if it was cleared above */
	    if (sp->m_old_cmq)
	      YYTHD->client_capabilities |= CLIENT_MULTI_QUERIES;
	    sp->restore_thd_mem_root(YYTHD);
	  }
    break;

  case 107:
#line 1356 "sql_yacc.yy"
    {}
    break;

  case 108:
#line 1357 "sql_yacc.yy"
    {}
    break;

  case 109:
#line 1361 "sql_yacc.yy"
    {}
    break;

  case 110:
#line 1362 "sql_yacc.yy"
    {}
    break;

  case 111:
#line 1368 "sql_yacc.yy"
    { Lex->sp_chistics.comment= (yyvsp[0].lex_str); }
    break;

  case 112:
#line 1370 "sql_yacc.yy"
    { /* Just parse it, we only have one language for now. */ }
    break;

  case 113:
#line 1372 "sql_yacc.yy"
    { Lex->sp_chistics.daccess= SP_NO_SQL; }
    break;

  case 114:
#line 1374 "sql_yacc.yy"
    { Lex->sp_chistics.daccess= SP_CONTAINS_SQL; }
    break;

  case 115:
#line 1376 "sql_yacc.yy"
    { Lex->sp_chistics.daccess= SP_READS_SQL_DATA; }
    break;

  case 116:
#line 1378 "sql_yacc.yy"
    { Lex->sp_chistics.daccess= SP_MODIFIES_SQL_DATA; }
    break;

  case 117:
#line 1380 "sql_yacc.yy"
    { }
    break;

  case 118:
#line 1385 "sql_yacc.yy"
    { }
    break;

  case 119:
#line 1386 "sql_yacc.yy"
    { Lex->sp_chistics.detistic= TRUE; }
    break;

  case 120:
#line 1387 "sql_yacc.yy"
    { Lex->sp_chistics.detistic= FALSE; }
    break;

  case 121:
#line 1392 "sql_yacc.yy"
    {
	    Lex->sp_chistics.suid= SP_IS_SUID;
	  }
    break;

  case 122:
#line 1396 "sql_yacc.yy"
    {
	    Lex->sp_chistics.suid= SP_IS_NOT_SUID;
	  }
    break;

  case 123:
#line 1403 "sql_yacc.yy"
    {
	    LEX *lex = Lex;

	    lex->sql_command= SQLCOM_CALL;
	    lex->spname= (yyvsp[0].spname);
	    lex->value_list.empty();
	    sp_add_used_routine(lex, YYTHD, (yyvsp[0].spname), TYPE_ENUM_PROCEDURE);
	  }
    break;

  case 124:
#line 1411 "sql_yacc.yy"
    {}
    break;

  case 127:
#line 1422 "sql_yacc.yy"
    {
	    Lex->value_list.push_back((yyvsp[0].item));
	  }
    break;

  case 128:
#line 1426 "sql_yacc.yy"
    {
	    Lex->value_list.push_back((yyvsp[0].item));
	  }
    break;

  case 133:
#line 1444 "sql_yacc.yy"
    {
	    LEX *lex= Lex;

	    lex->length= 0;
	    lex->dec= 0;
	    lex->type= 0;
	  
	    lex->default_value= 0;
	    lex->on_update_value= 0;
	  
	    lex->comment= null_lex_str;
	    lex->charset= NULL;
	  
	    lex->interval_list.empty();
	    lex->uint_geom_type= 0;
	  }
    break;

  case 134:
#line 1464 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    sp_pcontext *spc= lex->spcont;

	    if (spc->find_variable(&(yyvsp[-2].lex_str), TRUE))
	    {
	      my_error(ER_SP_DUP_PARAM, MYF(0), (yyvsp[-2].lex_str).str);
	      YYABORT;
	    }
            sp_variable_t *spvar= spc->push_variable(&(yyvsp[-2].lex_str),
                                                     (enum enum_field_types)(yyvsp[0].num),
                                                     sp_param_in);

            if (lex->sphead->fill_field_definition(YYTHD, lex,
                                                   (enum enum_field_types) (yyvsp[0].num),
                                                   &spvar->field_def))
            {
              YYABORT;
            }
            spvar->field_def.field_name= spvar->name.str;
            spvar->field_def.pack_flag |= FIELDFLAG_MAYBE_NULL;
	  }
    break;

  case 139:
#line 1501 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    sp_pcontext *spc= lex->spcont;

	    if (spc->find_variable(&(yyvsp[-1].lex_str), TRUE))
	    {
	      my_error(ER_SP_DUP_PARAM, MYF(0), (yyvsp[-1].lex_str).str);
	      YYABORT;
	    }
            sp_variable_t *spvar= spc->push_variable(&(yyvsp[-1].lex_str),
                                                     (enum enum_field_types)(yyvsp[0].num),
                                                     (sp_param_mode_t)(yyvsp[-3].num));

            if (lex->sphead->fill_field_definition(YYTHD, lex,
                                                   (enum enum_field_types) (yyvsp[0].num),
                                                   &spvar->field_def))
            {
              YYABORT;
            }
            spvar->field_def.field_name= spvar->name.str;
            spvar->field_def.pack_flag |= FIELDFLAG_MAYBE_NULL;
	  }
    break;

  case 140:
#line 1526 "sql_yacc.yy"
    { (yyval.num)= sp_param_in; }
    break;

  case 141:
#line 1527 "sql_yacc.yy"
    { (yyval.num)= sp_param_in; }
    break;

  case 142:
#line 1528 "sql_yacc.yy"
    { (yyval.num)= sp_param_out; }
    break;

  case 143:
#line 1529 "sql_yacc.yy"
    { (yyval.num)= sp_param_inout; }
    break;

  case 144:
#line 1533 "sql_yacc.yy"
    {}
    break;

  case 146:
#line 1538 "sql_yacc.yy"
    {}
    break;

  case 148:
#line 1544 "sql_yacc.yy"
    {
	    (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
	  }
    break;

  case 149:
#line 1548 "sql_yacc.yy"
    {
	    /* We check for declarations out of (standard) order this way
	       because letting the grammar rules reflect it caused tricky
	       shift/reduce conflicts with the wrong result. (And we get
	       better error handling this way.) */
	    if (((yyvsp[-1].spblock).vars || (yyvsp[-1].spblock).conds) && ((yyvsp[-2].spblock).curs || (yyvsp[-2].spblock).hndlrs))
	    { /* Variable or condition following cursor or handler */
	      my_message(ER_SP_VARCOND_AFTER_CURSHNDLR,
                         ER(ER_SP_VARCOND_AFTER_CURSHNDLR), MYF(0));
	      YYABORT;
	    }
	    if ((yyvsp[-1].spblock).curs && (yyvsp[-2].spblock).hndlrs)
	    { /* Cursor following handler */
	      my_message(ER_SP_CURSOR_AFTER_HANDLER,
                         ER(ER_SP_CURSOR_AFTER_HANDLER), MYF(0));
	      YYABORT;
	    }
	    (yyval.spblock).vars= (yyvsp[-2].spblock).vars + (yyvsp[-1].spblock).vars;
	    (yyval.spblock).conds= (yyvsp[-2].spblock).conds + (yyvsp[-1].spblock).conds;
	    (yyval.spblock).hndlrs= (yyvsp[-2].spblock).hndlrs + (yyvsp[-1].spblock).hndlrs;
	    (yyval.spblock).curs= (yyvsp[-2].spblock).curs + (yyvsp[-1].spblock).curs;
	  }
    break;

  case 150:
#line 1574 "sql_yacc.yy"
    {
            LEX *lex= Lex;

            lex->sphead->reset_lex(YYTHD);
            lex->spcont->declare_var_boundary((yyvsp[0].num));
          }
    break;

  case 151:
#line 1582 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_pcontext *pctx= lex->spcont;
            uint num_vars= pctx->context_var_count();
            enum enum_field_types var_type= (enum enum_field_types) (yyvsp[-1].num);
            Item *dflt_value_item= (yyvsp[0].item);
            create_field *create_field_op;
            
            if (!dflt_value_item)
            {
              dflt_value_item= new Item_null();
              /* QQ Set to the var_type with null_value? */
            }
            
            for (uint i = num_vars-(yyvsp[-3].num) ; i < num_vars ; i++)
            {
              uint var_idx= pctx->var_context2runtime(i);
              sp_variable_t *spvar= pctx->find_variable(var_idx);
            
              if (!spvar)
                YYABORT;
            
              spvar->type= var_type;
              spvar->dflt= dflt_value_item;
            
              if (lex->sphead->fill_field_definition(YYTHD, lex, var_type,
                                                     &spvar->field_def))
              {
                YYABORT;
              }
            
              spvar->field_def.field_name= spvar->name.str;
              spvar->field_def.pack_flag |= FIELDFLAG_MAYBE_NULL;
            
              /* The last instruction is responsible for freeing LEX. */

              lex->sphead->add_instr(
                new sp_instr_set(lex->sphead->instructions(), pctx, var_idx,
                                 dflt_value_item, var_type, lex,
                                 (i == num_vars - 1)));
            }

            pctx->declare_var_boundary(0);
            lex->sphead->restore_lex(YYTHD);

            (yyval.spblock).vars= (yyvsp[-3].num);
            (yyval.spblock).conds= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
          }
    break;

  case 152:
#line 1631 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    sp_pcontext *spc= lex->spcont;

	    if (spc->find_cond(&(yyvsp[-3].lex_str), TRUE))
	    {
	      my_error(ER_SP_DUP_COND, MYF(0), (yyvsp[-3].lex_str).str);
	      YYABORT;
	    }
	    YYTHD->lex->spcont->push_cond(&(yyvsp[-3].lex_str), (yyvsp[0].spcondtype));
	    (yyval.spblock).vars= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
	    (yyval.spblock).conds= 1;
	  }
    break;

  case 153:
#line 1645 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    sp_head *sp= lex->sphead;
	    sp_pcontext *ctx= lex->spcont;
	    sp_instr_hpush_jump *i=
              new sp_instr_hpush_jump(sp->instructions(), ctx, (yyvsp[-2].num),
	                              ctx->current_var_count());

	    sp->add_instr(i);
	    sp->push_backpatch(i, ctx->push_label((char *)"", 0));
	    sp->m_flags|= sp_head::IN_HANDLER;
	  }
    break;

  case 154:
#line 1658 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    sp_head *sp= lex->sphead;
	    sp_pcontext *ctx= lex->spcont;
	    sp_label_t *hlab= lex->spcont->pop_label(); /* After this hdlr */
	    sp_instr_hreturn *i;

	    if ((yyvsp[-5].num) == SP_HANDLER_CONTINUE)
	    {
	      i= new sp_instr_hreturn(sp->instructions(), ctx,
	                              ctx->current_var_count());
	      sp->add_instr(i);
	    }
	    else
	    {  /* EXIT or UNDO handler, just jump to the end of the block */
	      i= new sp_instr_hreturn(sp->instructions(), ctx, 0);

	      sp->add_instr(i);
	      sp->push_backpatch(i, lex->spcont->last_label()); /* Block end */
	    }
	    lex->sphead->backpatch(hlab);
	    sp->m_flags&= ~sp_head::IN_HANDLER;
	    (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).curs= 0;
	    (yyval.spblock).hndlrs= (yyvsp[-1].num);
	    ctx->add_handlers((yyvsp[-1].num));
	  }
    break;

  case 155:
#line 1685 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    sp_head *sp= lex->sphead;
	    sp_pcontext *ctx= lex->spcont;
	    uint offp;
	    sp_instr_cpush *i;

	    if (ctx->find_cursor(&(yyvsp[-3].lex_str), &offp, TRUE))
	    {
	      my_error(ER_SP_DUP_CURS, MYF(0), (yyvsp[-3].lex_str).str);
	      delete (yyvsp[0].lex);
	      YYABORT;
	    }
            i= new sp_instr_cpush(sp->instructions(), ctx, (yyvsp[0].lex),
                                  ctx->current_cursor_count());
	    sp->add_instr(i);
	    ctx->push_cursor(&(yyvsp[-3].lex_str));
	    (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).hndlrs= 0;
	    (yyval.spblock).curs= 1;
	  }
    break;

  case 156:
#line 1708 "sql_yacc.yy"
    {
	    Lex->sphead->reset_lex(YYTHD);

	    /* We use statement here just be able to get a better
	       error message. Using 'select' works too, but will then
	       result in a generic "syntax error" if a non-select
	       statement is given. */
	  }
    break;

  case 157:
#line 1717 "sql_yacc.yy"
    {
	    LEX *lex= Lex;

	    if (lex->sql_command != SQLCOM_SELECT)
	    {
	      my_message(ER_SP_BAD_CURSOR_QUERY, ER(ER_SP_BAD_CURSOR_QUERY),
                         MYF(0));
	      YYABORT;
	    }
	    if (lex->result)
	    {
	      my_message(ER_SP_BAD_CURSOR_SELECT, ER(ER_SP_BAD_CURSOR_SELECT),
                         MYF(0));
	      YYABORT;
	    }
	    lex->sp_lex_in_use= TRUE;
	    (yyval.lex)= lex;
	    lex->sphead->restore_lex(YYTHD);
	  }
    break;

  case 158:
#line 1739 "sql_yacc.yy"
    { (yyval.num)= SP_HANDLER_EXIT; }
    break;

  case 159:
#line 1740 "sql_yacc.yy"
    { (yyval.num)= SP_HANDLER_CONTINUE; }
    break;

  case 160:
#line 1746 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    sp_head *sp= lex->sphead;
	    sp_pcontext *ctx= lex->spcont;

	    if (ctx->find_handler((yyvsp[0].spcondtype)))
	    {
	      my_message(ER_SP_DUP_HANDLER, ER(ER_SP_DUP_HANDLER), MYF(0));
	      YYABORT;
	    }
	    else
	    {
	      sp_instr_hpush_jump *i=
                (sp_instr_hpush_jump *)sp->last_instruction();

	      i->add_condition((yyvsp[0].spcondtype));
	      ctx->push_handler((yyvsp[0].spcondtype));
	      (yyval.num)= 1;
	    }
	  }
    break;

  case 161:
#line 1767 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    sp_head *sp= lex->sphead;
	    sp_pcontext *ctx= lex->spcont;

	    if (ctx->find_handler((yyvsp[0].spcondtype)))
	    {
	      my_message(ER_SP_DUP_HANDLER, ER(ER_SP_DUP_HANDLER), MYF(0));
	      YYABORT;
	    }
	    else
	    {
	      sp_instr_hpush_jump *i=
	        (sp_instr_hpush_jump *)sp->last_instruction();

	      i->add_condition((yyvsp[0].spcondtype));
	      ctx->push_handler((yyvsp[0].spcondtype));
	      (yyval.num)= (yyvsp[-2].num) + 1;
	    }
	  }
    break;

  case 162:
#line 1791 "sql_yacc.yy"
    {			/* mysql errno */
	    (yyval.spcondtype)= (sp_cond_type_t *)YYTHD->alloc(sizeof(sp_cond_type_t));
	    (yyval.spcondtype)->type= sp_cond_type_t::number;
	    (yyval.spcondtype)->mysqlerr= (yyvsp[0].ulong_num);
	  }
    break;

  case 163:
#line 1797 "sql_yacc.yy"
    {		/* SQLSTATE */
	    if (!sp_cond_check(&(yyvsp[0].lex_str)))
	    {
	      my_error(ER_SP_BAD_SQLSTATE, MYF(0), (yyvsp[0].lex_str).str);
	      YYABORT;
	    }
	    (yyval.spcondtype)= (sp_cond_type_t *)YYTHD->alloc(sizeof(sp_cond_type_t));
	    (yyval.spcondtype)->type= sp_cond_type_t::state;
	    memcpy((yyval.spcondtype)->sqlstate, (yyvsp[0].lex_str).str, 5);
	    (yyval.spcondtype)->sqlstate[5]= '\0';
	  }
    break;

  case 164:
#line 1811 "sql_yacc.yy"
    {}
    break;

  case 165:
#line 1812 "sql_yacc.yy"
    {}
    break;

  case 166:
#line 1817 "sql_yacc.yy"
    {
	    (yyval.spcondtype)= (yyvsp[0].spcondtype);
	  }
    break;

  case 167:
#line 1821 "sql_yacc.yy"
    {
	    (yyval.spcondtype)= Lex->spcont->find_cond(&(yyvsp[0].lex_str));
	    if ((yyval.spcondtype) == NULL)
	    {
	      my_error(ER_SP_COND_MISMATCH, MYF(0), (yyvsp[0].lex_str).str);
	      YYABORT;
	    }
	  }
    break;

  case 168:
#line 1830 "sql_yacc.yy"
    {
	    (yyval.spcondtype)= (sp_cond_type_t *)YYTHD->alloc(sizeof(sp_cond_type_t));
	    (yyval.spcondtype)->type= sp_cond_type_t::warning;
	  }
    break;

  case 169:
#line 1835 "sql_yacc.yy"
    {
	    (yyval.spcondtype)= (sp_cond_type_t *)YYTHD->alloc(sizeof(sp_cond_type_t));
	    (yyval.spcondtype)->type= sp_cond_type_t::notfound;
	  }
    break;

  case 170:
#line 1840 "sql_yacc.yy"
    {
	    (yyval.spcondtype)= (sp_cond_type_t *)YYTHD->alloc(sizeof(sp_cond_type_t));
	    (yyval.spcondtype)->type= sp_cond_type_t::exception;
	  }
    break;

  case 171:
#line 1848 "sql_yacc.yy"
    {
            /* NOTE: field definition is filled in sp_decl section. */

	    LEX *lex= Lex;
	    sp_pcontext *spc= lex->spcont;

	    if (spc->find_variable(&(yyvsp[0].lex_str), TRUE))
	    {
	      my_error(ER_SP_DUP_VAR, MYF(0), (yyvsp[0].lex_str).str);
	      YYABORT;
	    }
	    spc->push_variable(&(yyvsp[0].lex_str), (enum_field_types)0, sp_param_in);
	    (yyval.num)= 1;
	  }
    break;

  case 172:
#line 1863 "sql_yacc.yy"
    {
            /* NOTE: field definition is filled in sp_decl section. */

	    LEX *lex= Lex;
	    sp_pcontext *spc= lex->spcont;

	    if (spc->find_variable(&(yyvsp[0].lex_str), TRUE))
	    {
	      my_error(ER_SP_DUP_VAR, MYF(0), (yyvsp[0].lex_str).str);
	      YYABORT;
	    }
	    spc->push_variable(&(yyvsp[0].lex_str), (enum_field_types)0, sp_param_in);
	    (yyval.num)= (yyvsp[-2].num) + 1;
	  }
    break;

  case 173:
#line 1880 "sql_yacc.yy"
    { (yyval.item) = NULL; }
    break;

  case 174:
#line 1881 "sql_yacc.yy"
    { (yyval.item) = (yyvsp[0].item); }
    break;

  case 175:
#line 1885 "sql_yacc.yy"
    {
	    LEX *lex= Lex;

	    lex->sphead->reset_lex(YYTHD);
	    lex->sphead->m_tmp_query= lex->tok_start;
	  }
    break;

  case 176:
#line 1892 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    sp_head *sp= lex->sphead;

            sp->m_flags|= sp_get_flags_for_command(lex);
	    if (lex->sql_command == SQLCOM_CHANGE_DB)
	    { /* "USE db" doesn't work in a procedure */
	      my_error(ER_SP_BADSTATEMENT, MYF(0), "USE");
	      YYABORT;
	    }
	    /*
              Don't add an instruction for SET statements, since all
              instructions for them were already added during processing
              of "set" rule.
	    */
            DBUG_ASSERT(lex->sql_command != SQLCOM_SET_OPTION ||
                        lex->var_list.is_empty());
            if (lex->sql_command != SQLCOM_SET_OPTION)
	    {
              sp_instr_stmt *i=new sp_instr_stmt(sp->instructions(),
                                                 lex->spcont, lex);

              /* Extract the query statement from the tokenizer:
                 The end is either lex->tok_end or tok->ptr. */
              if (lex->ptr - lex->tok_end > 1)
                i->m_query.length= lex->ptr - sp->m_tmp_query;
              else
                i->m_query.length= lex->tok_end - sp->m_tmp_query;
              i->m_query.str= strmake_root(YYTHD->mem_root,
                                           (char *)sp->m_tmp_query,
                                           i->m_query.length);
              sp->add_instr(i);
            }
	    sp->restore_lex(YYTHD);
          }
    break;

  case 177:
#line 1928 "sql_yacc.yy"
    { Lex->sphead->reset_lex(YYTHD); }
    break;

  case 178:
#line 1930 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    sp_head *sp= lex->sphead;

	    if (sp->m_type != TYPE_ENUM_FUNCTION)
	    {
	      my_message(ER_SP_BADRETURN, ER(ER_SP_BADRETURN), MYF(0));
	      YYABORT;
	    }
	    else
	    {
	      sp_instr_freturn *i;

	      i= new sp_instr_freturn(sp->instructions(), lex->spcont, (yyvsp[0].item),
                                      sp->m_return_field_def.sql_type, lex);
	      sp->add_instr(i);
	      sp->m_flags|= sp_head::HAS_RETURN;
	    }
	    sp->restore_lex(YYTHD);
	  }
    break;

  case 179:
#line 1951 "sql_yacc.yy"
    { Lex->sphead->new_cont_backpatch(NULL); }
    break;

  case 180:
#line 1953 "sql_yacc.yy"
    { Lex->sphead->do_cont_backpatch(); }
    break;

  case 181:
#line 1955 "sql_yacc.yy"
    {
	    Lex->sphead->m_flags&= ~sp_head::IN_SIMPLE_CASE;
            Lex->sphead->new_cont_backpatch(NULL);
	  }
    break;

  case 182:
#line 1959 "sql_yacc.yy"
    { Lex->sphead->do_cont_backpatch(); }
    break;

  case 183:
#line 1961 "sql_yacc.yy"
    {
            Lex->sphead->reset_lex(YYTHD);
            Lex->sphead->new_cont_backpatch(NULL);
          }
    break;

  case 184:
#line 1966 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    sp_head *sp= lex->sphead;
	    sp_pcontext *parsing_ctx= lex->spcont;
	    int case_expr_id= parsing_ctx->register_case_expr();
            sp_instr_set_case_expr *i;
	    
	    if (parsing_ctx->push_case_expr_id(case_expr_id))
              YYABORT;

            i= new sp_instr_set_case_expr(sp->instructions(),
                                          parsing_ctx,
                                          case_expr_id,
                                          (yyvsp[-1].item),
                                          lex);
            sp->add_cont_backpatch(i);
            sp->add_instr(i);
	    sp->m_flags|= sp_head::IN_SIMPLE_CASE;
	    sp->restore_lex(YYTHD);
	  }
    break;

  case 185:
#line 1987 "sql_yacc.yy"
    {
	    Lex->spcont->pop_case_expr_id();
            Lex->sphead->do_cont_backpatch();
	  }
    break;

  case 186:
#line 1992 "sql_yacc.yy"
    {}
    break;

  case 187:
#line 1993 "sql_yacc.yy"
    { /* Unlabeled controls get a secret label. */
	    LEX *lex= Lex;

	    lex->spcont->push_label((char *)"", lex->sphead->instructions());
	  }
    break;

  case 188:
#line 1999 "sql_yacc.yy"
    {
	    LEX *lex= Lex;

	    lex->sphead->backpatch(lex->spcont->pop_label());
	  }
    break;

  case 189:
#line 2005 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    sp_head *sp = lex->sphead;
	    sp_pcontext *ctx= lex->spcont;
	    sp_label_t *lab= ctx->find_label((yyvsp[0].lex_str).str);

	    if (! lab)
	    {
	      my_error(ER_SP_LILABEL_MISMATCH, MYF(0), "LEAVE", (yyvsp[0].lex_str).str);
	      YYABORT;
	    }
	    else
	    {
	      sp_instr_jump *i;
	      uint ip= sp->instructions();
	      uint n;

	      n= ctx->diff_handlers(lab->ctx, TRUE);  /* Exclusive the dest. */
	      if (n)
	        sp->add_instr(new sp_instr_hpop(ip++, ctx, n));
	      n= ctx->diff_cursors(lab->ctx, TRUE);  /* Exclusive the dest. */
	      if (n)
	        sp->add_instr(new sp_instr_cpop(ip++, ctx, n));
	      i= new sp_instr_jump(ip, ctx);
	      sp->push_backpatch(i, lab);  /* Jumping forward */
              sp->add_instr(i);
	    }
	  }
    break;

  case 190:
#line 2034 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    sp_head *sp= lex->sphead;
	    sp_pcontext *ctx= lex->spcont;
	    sp_label_t *lab= ctx->find_label((yyvsp[0].lex_str).str);

	    if (! lab || lab->type != SP_LAB_ITER)
	    {
	      my_error(ER_SP_LILABEL_MISMATCH, MYF(0), "ITERATE", (yyvsp[0].lex_str).str);
	      YYABORT;
	    }
	    else
	    {
	      sp_instr_jump *i;
	      uint ip= sp->instructions();
	      uint n;

	      n= ctx->diff_handlers(lab->ctx, FALSE);  /* Inclusive the dest. */
	      if (n)
	        sp->add_instr(new sp_instr_hpop(ip++, ctx, n));
	      n= ctx->diff_cursors(lab->ctx, FALSE);  /* Inclusive the dest. */
	      if (n)
	        sp->add_instr(new sp_instr_cpop(ip++, ctx, n));
	      i= new sp_instr_jump(ip, ctx, lab->ip); /* Jump back */
              sp->add_instr(i);
	    }
	  }
    break;

  case 191:
#line 2062 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    sp_head *sp= lex->sphead;
	    uint offset;
	    sp_instr_copen *i;

	    if (! lex->spcont->find_cursor(&(yyvsp[0].lex_str), &offset))
	    {
	      my_error(ER_SP_CURSOR_MISMATCH, MYF(0), (yyvsp[0].lex_str).str);
	      YYABORT;
	    }
	    i= new sp_instr_copen(sp->instructions(), lex->spcont, offset);
	    sp->add_instr(i);
	  }
    break;

  case 192:
#line 2077 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    sp_head *sp= lex->sphead;
	    uint offset;
	    sp_instr_cfetch *i;

	    if (! lex->spcont->find_cursor(&(yyvsp[-1].lex_str), &offset))
	    {
	      my_error(ER_SP_CURSOR_MISMATCH, MYF(0), (yyvsp[-1].lex_str).str);
	      YYABORT;
	    }
	    i= new sp_instr_cfetch(sp->instructions(), lex->spcont, offset);
	    sp->add_instr(i);
	  }
    break;

  case 193:
#line 2092 "sql_yacc.yy"
    { }
    break;

  case 194:
#line 2094 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    sp_head *sp= lex->sphead;
	    uint offset;
	    sp_instr_cclose *i;

	    if (! lex->spcont->find_cursor(&(yyvsp[0].lex_str), &offset))
	    {
	      my_error(ER_SP_CURSOR_MISMATCH, MYF(0), (yyvsp[0].lex_str).str);
	      YYABORT;
	    }
	    i= new sp_instr_cclose(sp->instructions(), lex->spcont,  offset);
	    sp->add_instr(i);
	  }
    break;

  case 198:
#line 2118 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    sp_head *sp= lex->sphead;
	    sp_pcontext *spc= lex->spcont;
	    sp_variable_t *spv;

	    if (!spc || !(spv = spc->find_variable(&(yyvsp[0].lex_str))))
	    {
	      my_error(ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[0].lex_str).str);
	      YYABORT;
	    }
	    else
	    {
	      /* An SP local variable */
	      sp_instr_cfetch *i= (sp_instr_cfetch *)sp->last_instruction();

	      i->add_to_varlist(spv);
	    }
	  }
    break;

  case 199:
#line 2139 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    sp_head *sp= lex->sphead;
	    sp_pcontext *spc= lex->spcont;
	    sp_variable_t *spv;

	    if (!spc || !(spv = spc->find_variable(&(yyvsp[0].lex_str))))
	    {
	      my_error(ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[0].lex_str).str);
	      YYABORT;
	    }
	    else
	    {
	      /* An SP local variable */
	      sp_instr_cfetch *i= (sp_instr_cfetch *)sp->last_instruction();

	      i->add_to_varlist(spv);
	    }
	  }
    break;

  case 200:
#line 2161 "sql_yacc.yy"
    { Lex->sphead->reset_lex(YYTHD); }
    break;

  case 201:
#line 2163 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    sp_head *sp= lex->sphead;
	    sp_pcontext *ctx= lex->spcont;
	    uint ip= sp->instructions();
	    sp_instr_jump_if_not *i = new sp_instr_jump_if_not(ip, ctx,
                                                               (yyvsp[-1].item), lex);

	    sp->push_backpatch(i, ctx->push_label((char *)"", 0));
            sp->add_cont_backpatch(i);
            sp->add_instr(i);
            sp->restore_lex(YYTHD);
	  }
    break;

  case 202:
#line 2177 "sql_yacc.yy"
    {
	    sp_head *sp= Lex->sphead;
	    sp_pcontext *ctx= Lex->spcont;
	    uint ip= sp->instructions();
	    sp_instr_jump *i = new sp_instr_jump(ip, ctx);

	    sp->add_instr(i);
	    sp->backpatch(ctx->pop_label());
	    sp->push_backpatch(i, ctx->push_label((char *)"", 0));
	  }
    break;

  case 203:
#line 2188 "sql_yacc.yy"
    {
	    LEX *lex= Lex;

	    lex->sphead->backpatch(lex->spcont->pop_label());
	  }
    break;

  case 207:
#line 2202 "sql_yacc.yy"
    { Lex->sphead->reset_lex(YYTHD); }
    break;

  case 208:
#line 2204 "sql_yacc.yy"
    {
            LEX *lex= Lex;
	    sp_head *sp= lex->sphead;
	    sp_pcontext *ctx= Lex->spcont;
	    uint ip= sp->instructions();
	    sp_instr_jump_if_not *i;

	    if (! (sp->m_flags & sp_head::IN_SIMPLE_CASE))
	      i= new sp_instr_jump_if_not(ip, ctx, (yyvsp[-1].item), lex);
	    else
	    { /* Simple case: <caseval> = <whenval> */

	      Item_case_expr *var;
              Item *expr;

              var= new Item_case_expr(ctx->get_current_case_expr_id());

#ifndef DBUG_OFF
              if (var)
                var->m_sp= sp;
#endif

	      expr= new Item_func_eq(var, (yyvsp[-1].item));

	      i= new sp_instr_jump_if_not(ip, ctx, expr, lex);
	    }
	    sp->push_backpatch(i, ctx->push_label((char *)"", 0));
            sp->add_cont_backpatch(i);
            sp->add_instr(i);
            sp->restore_lex(YYTHD);
	  }
    break;

  case 209:
#line 2236 "sql_yacc.yy"
    {
	    sp_head *sp= Lex->sphead;
	    sp_pcontext *ctx= Lex->spcont;
	    uint ip= sp->instructions();
	    sp_instr_jump *i = new sp_instr_jump(ip, ctx);

	    sp->add_instr(i);
	    sp->backpatch(ctx->pop_label());
	    sp->push_backpatch(i, ctx->push_label((char *)"", 0));
	  }
    break;

  case 210:
#line 2247 "sql_yacc.yy"
    {
	    LEX *lex= Lex;

	    lex->sphead->backpatch(lex->spcont->pop_label());
	  }
    break;

  case 211:
#line 2256 "sql_yacc.yy"
    {
	    sp_head *sp= Lex->sphead;
	    uint ip= sp->instructions();
	    sp_instr_error *i= new sp_instr_error(ip, Lex->spcont,
						  ER_SP_CASE_NOT_FOUND);

	    sp->add_instr(i);
	  }
    break;

  case 212:
#line 2264 "sql_yacc.yy"
    {}
    break;

  case 213:
#line 2265 "sql_yacc.yy"
    {}
    break;

  case 214:
#line 2270 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    sp_pcontext *ctx= lex->spcont;
	    sp_label_t *lab= ctx->find_label((yyvsp[-1].lex_str).str);

	    if (lab)
	    {
	      my_error(ER_SP_LABEL_REDEFINE, MYF(0), (yyvsp[-1].lex_str).str);
	      YYABORT;
	    }
	    else
	    {
	      lab= lex->spcont->push_label((yyvsp[-1].lex_str).str,
	                                   lex->sphead->instructions());
	      lab->type= SP_LAB_ITER;
	    }
	  }
    break;

  case 215:
#line 2288 "sql_yacc.yy"
    {
	    LEX *lex= Lex;

	    if ((yyvsp[0].lex_str).str)
	    {
	      sp_label_t *lab= lex->spcont->find_label((yyvsp[0].lex_str).str);

	      if (!lab ||
	          my_strcasecmp(system_charset_info, (yyvsp[0].lex_str).str, lab->name) != 0)
	      {
	        my_error(ER_SP_LABEL_MISMATCH, MYF(0), (yyvsp[0].lex_str).str);
	        YYABORT;
	      }
	    }
	    lex->sphead->backpatch(lex->spcont->pop_label());
	  }
    break;

  case 216:
#line 2307 "sql_yacc.yy"
    { (yyval.lex_str)= null_lex_str; }
    break;

  case 217:
#line 2308 "sql_yacc.yy"
    { (yyval.lex_str)= (yyvsp[0].lex_str); }
    break;

  case 218:
#line 2313 "sql_yacc.yy"
    { /* QQ This is just a dummy for grouping declarations and statements
	       together. No [[NOT] ATOMIC] yet, and we need to figure out how
	       make it coexist with the existing BEGIN COMMIT/ROLLBACK. */
	    LEX *lex= Lex;
	    sp_label_t *lab= lex->spcont->last_label();

	    lab->type= SP_LAB_BEGIN;
	    lex->spcont= lex->spcont->push_context();
	  }
    break;

  case 219:
#line 2325 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    sp_head *sp= lex->sphead;
	    sp_pcontext *ctx= lex->spcont;

  	    sp->backpatch(ctx->last_label());	/* We always have a label */
	    if ((yyvsp[-2].spblock).hndlrs)
	      sp->add_instr(new sp_instr_hpop(sp->instructions(), ctx,
					      (yyvsp[-2].spblock).hndlrs));
	    if ((yyvsp[-2].spblock).curs)
	      sp->add_instr(new sp_instr_cpop(sp->instructions(), ctx,
					      (yyvsp[-2].spblock).curs));
	    lex->spcont= ctx->pop_context();
	  }
    break;

  case 220:
#line 2341 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    uint ip= lex->sphead->instructions();
	    sp_label_t *lab= lex->spcont->last_label();  /* Jumping back */
	    sp_instr_jump *i = new sp_instr_jump(ip, lex->spcont, lab->ip);

	    lex->sphead->add_instr(i);
	  }
    break;

  case 221:
#line 2350 "sql_yacc.yy"
    { Lex->sphead->reset_lex(YYTHD); }
    break;

  case 222:
#line 2352 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    sp_head *sp= lex->sphead;
	    uint ip= sp->instructions();
	    sp_instr_jump_if_not *i = new sp_instr_jump_if_not(ip, lex->spcont,
							       (yyvsp[-1].item), lex);

	    /* Jumping forward */
	    sp->push_backpatch(i, lex->spcont->last_label());
            sp->new_cont_backpatch(i);
            sp->add_instr(i);
            sp->restore_lex(YYTHD);
	  }
    break;

  case 223:
#line 2366 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    uint ip= lex->sphead->instructions();
	    sp_label_t *lab= lex->spcont->last_label();  /* Jumping back */
	    sp_instr_jump *i = new sp_instr_jump(ip, lex->spcont, lab->ip);

	    lex->sphead->add_instr(i);
            lex->sphead->do_cont_backpatch();
	  }
    break;

  case 224:
#line 2376 "sql_yacc.yy"
    { Lex->sphead->reset_lex(YYTHD); }
    break;

  case 225:
#line 2378 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    uint ip= lex->sphead->instructions();
	    sp_label_t *lab= lex->spcont->last_label();  /* Jumping back */
	    sp_instr_jump_if_not *i = new sp_instr_jump_if_not(ip, lex->spcont,
                                                               (yyvsp[-2].item), lab->ip,
                                                               lex);
            lex->sphead->add_instr(i);
            lex->sphead->restore_lex(YYTHD);
            /* We can shortcut the cont_backpatch here */
            i->m_cont_dest= ip+1;
	  }
    break;

  case 226:
#line 2394 "sql_yacc.yy"
    { Lex->trg_chistics.action_time= TRG_ACTION_BEFORE; }
    break;

  case 227:
#line 2396 "sql_yacc.yy"
    { Lex->trg_chistics.action_time= TRG_ACTION_AFTER; }
    break;

  case 228:
#line 2401 "sql_yacc.yy"
    { Lex->trg_chistics.event= TRG_EVENT_INSERT; }
    break;

  case 229:
#line 2403 "sql_yacc.yy"
    { Lex->trg_chistics.event= TRG_EVENT_UPDATE; }
    break;

  case 230:
#line 2405 "sql_yacc.yy"
    { Lex->trg_chistics.event= TRG_EVENT_DELETE; }
    break;

  case 231:
#line 2409 "sql_yacc.yy"
    {}
    break;

  case 232:
#line 2410 "sql_yacc.yy"
    {}
    break;

  case 233:
#line 2412 "sql_yacc.yy"
    {
            LEX *lex=Lex;
            THD *thd= lex->thd;
            if (!(lex->name= (char *)(yyvsp[0].table)))
              YYABORT;
            if ((yyvsp[0].table)->db.str == NULL &&
                thd->copy_db_to(&((yyvsp[0].table)->db.str), &((yyvsp[0].table)->db.length)))
            {
              YYABORT;
            }
          }
    break;

  case 234:
#line 2424 "sql_yacc.yy"
    {
            LEX *lex=Lex;
            THD *thd= lex->thd;
            if (!(lex->name= (char *)(yyvsp[-1].table)))
              YYABORT;
            if ((yyvsp[-1].table)->db.str == NULL &&
                thd->copy_db_to(&((yyvsp[-1].table)->db.str), &((yyvsp[-1].table)->db.length)))
            {
              YYABORT;
            }
          }
    break;

  case 235:
#line 2438 "sql_yacc.yy"
    {}
    break;

  case 236:
#line 2439 "sql_yacc.yy"
    { Select->set_braces(1);}
    break;

  case 237:
#line 2439 "sql_yacc.yy"
    {}
    break;

  case 238:
#line 2443 "sql_yacc.yy"
    {}
    break;

  case 239:
#line 2445 "sql_yacc.yy"
    { Select->set_braces(0);}
    break;

  case 240:
#line 2445 "sql_yacc.yy"
    {}
    break;

  case 241:
#line 2447 "sql_yacc.yy"
    { Select->set_braces(1);}
    break;

  case 242:
#line 2447 "sql_yacc.yy"
    {}
    break;

  case 243:
#line 2452 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    lex->lock_option= using_update_log ? TL_READ_NO_INSERT : TL_READ;
	    if (lex->sql_command == SQLCOM_INSERT)
	      lex->sql_command= SQLCOM_INSERT_SELECT;
	    else if (lex->sql_command == SQLCOM_REPLACE)
	      lex->sql_command= SQLCOM_REPLACE_SELECT;
	    /*
              The following work only with the local list, the global list
              is created correctly in this case
	    */
	    lex->current_select->table_list.save_and_clear(&lex->save_list);
	    mysql_init_select(lex);
	    lex->current_select->parsing_place= SELECT_LIST;
          }
    break;

  case 244:
#line 2468 "sql_yacc.yy"
    {
	    Select->parsing_place= NO_MATTER;
	  }
    break;

  case 245:
#line 2472 "sql_yacc.yy"
    {
	    /*
              The following work only with the local list, the global list
              is created correctly in this case
	    */
	    Lex->current_select->table_list.push_front(&Lex->save_list);
	  }
    break;

  case 246:
#line 2482 "sql_yacc.yy"
    {}
    break;

  case 247:
#line 2483 "sql_yacc.yy"
    {}
    break;

  case 248:
#line 2486 "sql_yacc.yy"
    {}
    break;

  case 249:
#line 2487 "sql_yacc.yy"
    {}
    break;

  case 250:
#line 2490 "sql_yacc.yy"
    {}
    break;

  case 251:
#line 2491 "sql_yacc.yy"
    {}
    break;

  case 252:
#line 2494 "sql_yacc.yy"
    {}
    break;

  case 253:
#line 2495 "sql_yacc.yy"
    {}
    break;

  case 254:
#line 2498 "sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 255:
#line 2499 "sql_yacc.yy"
    { (yyval.num)= (yyvsp[0].num);}
    break;

  case 256:
#line 2502 "sql_yacc.yy"
    { (yyval.num)=(yyvsp[0].num); }
    break;

  case 257:
#line 2503 "sql_yacc.yy"
    { (yyval.num)= (yyvsp[-1].num) | (yyvsp[0].num); }
    break;

  case 258:
#line 2506 "sql_yacc.yy"
    { (yyval.num)=HA_LEX_CREATE_TMP_TABLE; }
    break;

  case 259:
#line 2509 "sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 260:
#line 2510 "sql_yacc.yy"
    { (yyval.num)=HA_LEX_CREATE_IF_NOT_EXISTS; }
    break;

  case 268:
#line 2526 "sql_yacc.yy"
    { Lex->create_info.db_type= (yyvsp[0].db_type); Lex->create_info.used_fields|= HA_CREATE_USED_ENGINE; }
    break;

  case 269:
#line 2527 "sql_yacc.yy"
    { Lex->create_info.db_type= (yyvsp[0].db_type); WARN_DEPRECATED("TYPE=storage_engine","ENGINE=storage_engine");   Lex->create_info.used_fields|= HA_CREATE_USED_ENGINE; }
    break;

  case 270:
#line 2528 "sql_yacc.yy"
    { Lex->create_info.max_rows= (yyvsp[0].ulonglong_number); Lex->create_info.used_fields|= HA_CREATE_USED_MAX_ROWS;}
    break;

  case 271:
#line 2529 "sql_yacc.yy"
    { Lex->create_info.min_rows= (yyvsp[0].ulonglong_number); Lex->create_info.used_fields|= HA_CREATE_USED_MIN_ROWS;}
    break;

  case 272:
#line 2530 "sql_yacc.yy"
    { Lex->create_info.avg_row_length=(yyvsp[0].ulong_num); Lex->create_info.used_fields|= HA_CREATE_USED_AVG_ROW_LENGTH;}
    break;

  case 273:
#line 2531 "sql_yacc.yy"
    { Lex->create_info.password=(yyvsp[0].lex_str).str; Lex->create_info.used_fields|= HA_CREATE_USED_PASSWORD; }
    break;

  case 274:
#line 2532 "sql_yacc.yy"
    { Lex->create_info.comment=(yyvsp[0].lex_str).str; Lex->create_info.used_fields|= HA_CREATE_USED_COMMENT; }
    break;

  case 275:
#line 2533 "sql_yacc.yy"
    { Lex->create_info.auto_increment_value=(yyvsp[0].ulonglong_number); Lex->create_info.used_fields|= HA_CREATE_USED_AUTO;}
    break;

  case 276:
#line 2535 "sql_yacc.yy"
    {
            switch((yyvsp[0].ulong_num)) {
            case 0:
                Lex->create_info.table_options|= HA_OPTION_NO_PACK_KEYS;
                break;
            case 1:
                Lex->create_info.table_options|= HA_OPTION_PACK_KEYS;
                break;
            default:
                yyerror(ER(ER_SYNTAX_ERROR));
                YYABORT;
            }
            Lex->create_info.used_fields|= HA_CREATE_USED_PACK_KEYS;
          }
    break;

  case 277:
#line 2550 "sql_yacc.yy"
    {
            Lex->create_info.table_options&=
              ~(HA_OPTION_PACK_KEYS | HA_OPTION_NO_PACK_KEYS);
            Lex->create_info.used_fields|= HA_CREATE_USED_PACK_KEYS;
          }
    break;

  case 278:
#line 2555 "sql_yacc.yy"
    { Lex->create_info.table_options|= (yyvsp[0].ulong_num) ? HA_OPTION_CHECKSUM : HA_OPTION_NO_CHECKSUM; Lex->create_info.used_fields|= HA_CREATE_USED_CHECKSUM; }
    break;

  case 279:
#line 2556 "sql_yacc.yy"
    { Lex->create_info.table_options|= (yyvsp[0].ulong_num) ? HA_OPTION_DELAY_KEY_WRITE : HA_OPTION_NO_DELAY_KEY_WRITE;  Lex->create_info.used_fields|= HA_CREATE_USED_DELAY_KEY_WRITE; }
    break;

  case 280:
#line 2557 "sql_yacc.yy"
    { Lex->create_info.row_type= (yyvsp[0].row_type);  Lex->create_info.used_fields|= HA_CREATE_USED_ROW_FORMAT; }
    break;

  case 281:
#line 2559 "sql_yacc.yy"
    {
	    my_error(ER_WARN_DEPRECATED_SYNTAX, MYF(0), "RAID_TYPE", "PARTITION");
	    YYABORT;
	  }
    break;

  case 282:
#line 2564 "sql_yacc.yy"
    {
	    my_error(ER_WARN_DEPRECATED_SYNTAX, MYF(0), "RAID_CHUNKS", "PARTITION");
	    YYABORT;
	  }
    break;

  case 283:
#line 2569 "sql_yacc.yy"
    {
	    my_error(ER_WARN_DEPRECATED_SYNTAX, MYF(0), "RAID_CHUNKSIZE", "PARTITION");
	    YYABORT;
	  }
    break;

  case 284:
#line 2574 "sql_yacc.yy"
    {
	    /* Move the union list to the merge_list */
	    LEX *lex=Lex;
	    TABLE_LIST *table_list= lex->select_lex.get_table_list();
	    lex->create_info.merge_list= lex->select_lex.table_list;
	    lex->create_info.merge_list.elements--;
	    lex->create_info.merge_list.first=
	      (byte*) (table_list->next_local);
	    lex->select_lex.table_list.elements=1;
	    lex->select_lex.table_list.next=
	      (byte**) &(table_list->next_local);
	    table_list->next_local= 0;
	    lex->create_info.used_fields|= HA_CREATE_USED_UNION;
	  }
    break;

  case 287:
#line 2590 "sql_yacc.yy"
    { Lex->create_info.merge_insert_method= (yyvsp[0].ulong_num); Lex->create_info.used_fields|= HA_CREATE_USED_INSERT_METHOD;}
    break;

  case 288:
#line 2591 "sql_yacc.yy"
    { Lex->create_info.data_file_name= (yyvsp[0].lex_str).str; Lex->create_info.used_fields|= HA_CREATE_USED_DATADIR; }
    break;

  case 289:
#line 2592 "sql_yacc.yy"
    { Lex->create_info.index_file_name= (yyvsp[0].lex_str).str;  Lex->create_info.used_fields|= HA_CREATE_USED_INDEXDIR; }
    break;

  case 290:
#line 2593 "sql_yacc.yy"
    { Lex->create_info.connect_string.str= (yyvsp[0].lex_str).str; Lex->create_info.connect_string.length= (yyvsp[0].lex_str).length;  Lex->create_info.used_fields|= HA_CREATE_USED_CONNECTION; }
    break;

  case 291:
#line 2598 "sql_yacc.yy"
    {
          HA_CREATE_INFO *cinfo= &Lex->create_info;
          if ((cinfo->used_fields & HA_CREATE_USED_DEFAULT_CHARSET) &&
               cinfo->default_table_charset && (yyvsp[0].charset) &&
               !my_charset_same(cinfo->default_table_charset,(yyvsp[0].charset)))
          {
            my_error(ER_CONFLICTING_DECLARATIONS, MYF(0),
                     "CHARACTER SET ", cinfo->default_table_charset->csname,
                     "CHARACTER SET ", (yyvsp[0].charset)->csname);
            YYABORT;
          }
	  Lex->create_info.default_table_charset= (yyvsp[0].charset);
          Lex->create_info.used_fields|= HA_CREATE_USED_DEFAULT_CHARSET;
        }
    break;

  case 292:
#line 2615 "sql_yacc.yy"
    {
          HA_CREATE_INFO *cinfo= &Lex->create_info;
          if ((cinfo->used_fields & HA_CREATE_USED_DEFAULT_CHARSET) &&
               cinfo->default_table_charset && (yyvsp[0].charset) &&
               !my_charset_same(cinfo->default_table_charset,(yyvsp[0].charset)))
            {
              my_error(ER_COLLATION_CHARSET_MISMATCH, MYF(0),
                       (yyvsp[0].charset)->name, cinfo->default_table_charset->csname);
              YYABORT;
            }
            Lex->create_info.default_table_charset= (yyvsp[0].charset);
            Lex->create_info.used_fields|= HA_CREATE_USED_DEFAULT_CHARSET;
        }
    break;

  case 293:
#line 2631 "sql_yacc.yy"
    {
	  (yyval.db_type) = ha_resolve_by_name((yyvsp[0].lex_str).str,(yyvsp[0].lex_str).length);
	  if ((yyval.db_type) == DB_TYPE_UNKNOWN) {
	    my_error(ER_UNKNOWN_STORAGE_ENGINE, MYF(0), (yyvsp[0].lex_str).str);
	    YYABORT;
	  }
	}
    break;

  case 294:
#line 2640 "sql_yacc.yy"
    { (yyval.row_type)= ROW_TYPE_DEFAULT; }
    break;

  case 295:
#line 2641 "sql_yacc.yy"
    { (yyval.row_type)= ROW_TYPE_FIXED; }
    break;

  case 296:
#line 2642 "sql_yacc.yy"
    { (yyval.row_type)= ROW_TYPE_DYNAMIC; }
    break;

  case 297:
#line 2643 "sql_yacc.yy"
    { (yyval.row_type)= ROW_TYPE_COMPRESSED; }
    break;

  case 298:
#line 2644 "sql_yacc.yy"
    { (yyval.row_type)= ROW_TYPE_REDUNDANT; }
    break;

  case 299:
#line 2645 "sql_yacc.yy"
    { (yyval.row_type)= ROW_TYPE_COMPACT; }
    break;

  case 300:
#line 2648 "sql_yacc.yy"
    { (yyval.ulong_num)= RAID_TYPE_0; }
    break;

  case 301:
#line 2649 "sql_yacc.yy"
    { (yyval.ulong_num)= RAID_TYPE_0; }
    break;

  case 302:
#line 2650 "sql_yacc.yy"
    { (yyval.ulong_num)=(yyvsp[0].ulong_num);}
    break;

  case 303:
#line 2653 "sql_yacc.yy"
    { (yyval.ulong_num)= MERGE_INSERT_DISABLED; }
    break;

  case 304:
#line 2654 "sql_yacc.yy"
    { (yyval.ulong_num)= MERGE_INSERT_TO_FIRST; }
    break;

  case 305:
#line 2655 "sql_yacc.yy"
    { (yyval.ulong_num)= MERGE_INSERT_TO_LAST; }
    break;

  case 306:
#line 2658 "sql_yacc.yy"
    {}
    break;

  case 308:
#line 2662 "sql_yacc.yy"
    { (yyval.udf_type) = UDFTYPE_FUNCTION; }
    break;

  case 309:
#line 2663 "sql_yacc.yy"
    { (yyval.udf_type) = UDFTYPE_AGGREGATE; }
    break;

  case 310:
#line 2666 "sql_yacc.yy"
    {(yyval.num) = (int) STRING_RESULT; }
    break;

  case 311:
#line 2667 "sql_yacc.yy"
    {(yyval.num) = (int) REAL_RESULT; }
    break;

  case 312:
#line 2668 "sql_yacc.yy"
    {(yyval.num) = (int) DECIMAL_RESULT; }
    break;

  case 313:
#line 2669 "sql_yacc.yy"
    {(yyval.num) = (int) INT_RESULT; }
    break;

  case 319:
#line 2684 "sql_yacc.yy"
    {
	    Lex->col_list.empty();		/* Alloced by sql_alloc */
	  }
    break;

  case 320:
#line 2691 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    lex->key_list.push_back(new Key((yyvsp[-5].key_type),(yyvsp[-4].simple_string), (yyvsp[-3].key_alg), 0, lex->col_list));
	    lex->col_list.empty();		/* Alloced by sql_alloc */
	  }
    break;

  case 321:
#line 2697 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    const char *key_name= (yyvsp[-4].simple_string) ? (yyvsp[-4].simple_string):(yyvsp[-6].simple_string);
	    lex->key_list.push_back(new Key((yyvsp[-5].key_type), key_name, (yyvsp[-3].key_alg), 0,
				    lex->col_list));
	    lex->col_list.empty();		/* Alloced by sql_alloc */
	  }
    break;

  case 322:
#line 2705 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    lex->key_list.push_back(new foreign_key((yyvsp[-4].simple_string) ? (yyvsp[-4].simple_string):(yyvsp[-7].simple_string), lex->col_list,
				    (yyvsp[0].table),
				    lex->ref_list,
				    lex->fk_delete_opt,
				    lex->fk_update_opt,
				    lex->fk_match_option));
	    lex->key_list.push_back(new Key(Key::MULTIPLE, (yyvsp[-4].simple_string) ? (yyvsp[-4].simple_string) : (yyvsp[-7].simple_string),
					    HA_KEY_ALG_UNDEF, 1,
					    lex->col_list));
	    lex->col_list.empty();		/* Alloced by sql_alloc */
	  }
    break;

  case 323:
#line 2719 "sql_yacc.yy"
    {
	    Lex->col_list.empty();		/* Alloced by sql_alloc */
	  }
    break;

  case 324:
#line 2723 "sql_yacc.yy"
    {
	    Lex->col_list.empty();		/* Alloced by sql_alloc */
	  }
    break;

  case 328:
#line 2738 "sql_yacc.yy"
    { (yyval.simple_string)=(char*) 0; }
    break;

  case 329:
#line 2739 "sql_yacc.yy"
    { (yyval.simple_string)= (yyvsp[0].simple_string); }
    break;

  case 330:
#line 2743 "sql_yacc.yy"
    { (yyval.simple_string)=(yyvsp[0].simple_string); }
    break;

  case 331:
#line 2748 "sql_yacc.yy"
    {
	   LEX *lex=Lex;
	   lex->length=lex->dec=0; lex->type=0;
	   lex->default_value= lex->on_update_value= 0;
           lex->comment=null_lex_str;
	   lex->charset=NULL;
	 }
    break;

  case 332:
#line 2756 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  if (add_field_to_list(lex->thd, (yyvsp[-3].lex_str).str,
				(enum enum_field_types) (yyvsp[-1].num),
				lex->length,lex->dec,lex->type,
				lex->default_value, lex->on_update_value, 
                                &lex->comment,
				lex->change,&lex->interval_list,lex->charset,
				lex->uint_geom_type))
	    YYABORT;
	}
    break;

  case 333:
#line 2769 "sql_yacc.yy"
    { (yyval.num)=(yyvsp[-2].num); }
    break;

  case 334:
#line 2770 "sql_yacc.yy"
    { (yyval.num)=(yyvsp[-2].num); }
    break;

  case 335:
#line 2771 "sql_yacc.yy"
    { (yyval.num)=FIELD_TYPE_FLOAT; }
    break;

  case 336:
#line 2772 "sql_yacc.yy"
    { Lex->length= (char*) "1";
					  (yyval.num)=FIELD_TYPE_BIT; }
    break;

  case 337:
#line 2774 "sql_yacc.yy"
    { Lex->length= (yyvsp[-1].lex_str).str;
					  (yyval.num)=FIELD_TYPE_BIT; }
    break;

  case 338:
#line 2776 "sql_yacc.yy"
    { Lex->length=(char*) "1";
					  (yyval.num)=FIELD_TYPE_TINY; }
    break;

  case 339:
#line 2778 "sql_yacc.yy"
    { Lex->length=(char*) "1";
					  (yyval.num)=FIELD_TYPE_TINY; }
    break;

  case 340:
#line 2780 "sql_yacc.yy"
    { Lex->length=(yyvsp[-2].lex_str).str;
					  (yyval.num)=FIELD_TYPE_STRING; }
    break;

  case 341:
#line 2782 "sql_yacc.yy"
    { Lex->length=(char*) "1";
					  (yyval.num)=FIELD_TYPE_STRING; }
    break;

  case 342:
#line 2784 "sql_yacc.yy"
    { Lex->length=(yyvsp[-2].lex_str).str;
					  (yyval.num)=FIELD_TYPE_STRING;
					  Lex->charset=national_charset_info; }
    break;

  case 343:
#line 2787 "sql_yacc.yy"
    { Lex->length=(char*) "1";
					  (yyval.num)=FIELD_TYPE_STRING;
					  Lex->charset=national_charset_info; }
    break;

  case 344:
#line 2790 "sql_yacc.yy"
    { Lex->length=(yyvsp[-1].lex_str).str;
					  Lex->charset=&my_charset_bin;
					  (yyval.num)=FIELD_TYPE_STRING; }
    break;

  case 345:
#line 2793 "sql_yacc.yy"
    { Lex->length= (char*) "1";
					  Lex->charset=&my_charset_bin;
					  (yyval.num)=FIELD_TYPE_STRING; }
    break;

  case 346:
#line 2796 "sql_yacc.yy"
    { Lex->length=(yyvsp[-2].lex_str).str;
					  (yyval.num)= MYSQL_TYPE_VARCHAR; }
    break;

  case 347:
#line 2798 "sql_yacc.yy"
    { Lex->length=(yyvsp[-2].lex_str).str;
					  (yyval.num)= MYSQL_TYPE_VARCHAR;
					  Lex->charset=national_charset_info; }
    break;

  case 348:
#line 2801 "sql_yacc.yy"
    { Lex->length=(yyvsp[-1].lex_str).str;
					  Lex->charset=&my_charset_bin;
					  (yyval.num)= MYSQL_TYPE_VARCHAR; }
    break;

  case 349:
#line 2804 "sql_yacc.yy"
    { (yyval.num)=FIELD_TYPE_YEAR; }
    break;

  case 350:
#line 2805 "sql_yacc.yy"
    { (yyval.num)=FIELD_TYPE_DATE; }
    break;

  case 351:
#line 2806 "sql_yacc.yy"
    { (yyval.num)=FIELD_TYPE_TIME; }
    break;

  case 352:
#line 2808 "sql_yacc.yy"
    {
	    if (YYTHD->variables.sql_mode & MODE_MAXDB)
	      (yyval.num)=FIELD_TYPE_DATETIME;
	    else
            {
              /* 
                Unlike other types TIMESTAMP fields are NOT NULL by default.
              */
              Lex->type|= NOT_NULL_FLAG;
	      (yyval.num)=FIELD_TYPE_TIMESTAMP;
            }
	   }
    break;

  case 353:
#line 2820 "sql_yacc.yy"
    { (yyval.num)=FIELD_TYPE_DATETIME; }
    break;

  case 354:
#line 2821 "sql_yacc.yy"
    { Lex->charset=&my_charset_bin;
					  (yyval.num)=FIELD_TYPE_TINY_BLOB; }
    break;

  case 355:
#line 2823 "sql_yacc.yy"
    { Lex->charset=&my_charset_bin;
					  (yyval.num)=FIELD_TYPE_BLOB; }
    break;

  case 356:
#line 2826 "sql_yacc.yy"
    {
#ifdef HAVE_SPATIAL
            Lex->charset=&my_charset_bin;
            Lex->uint_geom_type= (uint)(yyvsp[0].num);
            (yyval.num)=FIELD_TYPE_GEOMETRY;
#else
            my_error(ER_FEATURE_DISABLED, MYF(0),
                     sym_group_geom.name, sym_group_geom.needed_define);
            YYABORT;
#endif
          }
    break;

  case 357:
#line 2837 "sql_yacc.yy"
    { Lex->charset=&my_charset_bin;
					  (yyval.num)=FIELD_TYPE_MEDIUM_BLOB; }
    break;

  case 358:
#line 2839 "sql_yacc.yy"
    { Lex->charset=&my_charset_bin;
					  (yyval.num)=FIELD_TYPE_LONG_BLOB; }
    break;

  case 359:
#line 2841 "sql_yacc.yy"
    { Lex->charset=&my_charset_bin;
					  (yyval.num)=FIELD_TYPE_MEDIUM_BLOB; }
    break;

  case 360:
#line 2843 "sql_yacc.yy"
    { (yyval.num)=FIELD_TYPE_MEDIUM_BLOB; }
    break;

  case 361:
#line 2844 "sql_yacc.yy"
    { (yyval.num)=FIELD_TYPE_TINY_BLOB; }
    break;

  case 362:
#line 2845 "sql_yacc.yy"
    { (yyval.num)=FIELD_TYPE_BLOB; }
    break;

  case 363:
#line 2846 "sql_yacc.yy"
    { (yyval.num)=FIELD_TYPE_MEDIUM_BLOB; }
    break;

  case 364:
#line 2847 "sql_yacc.yy"
    { (yyval.num)=FIELD_TYPE_LONG_BLOB; }
    break;

  case 365:
#line 2849 "sql_yacc.yy"
    { (yyval.num)=FIELD_TYPE_NEWDECIMAL;}
    break;

  case 366:
#line 2851 "sql_yacc.yy"
    { (yyval.num)=FIELD_TYPE_NEWDECIMAL;}
    break;

  case 367:
#line 2853 "sql_yacc.yy"
    { (yyval.num)=FIELD_TYPE_NEWDECIMAL;}
    break;

  case 368:
#line 2854 "sql_yacc.yy"
    {Lex->interval_list.empty();}
    break;

  case 369:
#line 2855 "sql_yacc.yy"
    { (yyval.num)=FIELD_TYPE_ENUM; }
    break;

  case 370:
#line 2856 "sql_yacc.yy"
    { Lex->interval_list.empty();}
    break;

  case 371:
#line 2857 "sql_yacc.yy"
    { (yyval.num)=FIELD_TYPE_SET; }
    break;

  case 372:
#line 2858 "sql_yacc.yy"
    { (yyval.num)=FIELD_TYPE_MEDIUM_BLOB; }
    break;

  case 373:
#line 2860 "sql_yacc.yy"
    {
	    (yyval.num)=FIELD_TYPE_LONGLONG;
	    Lex->type|= (AUTO_INCREMENT_FLAG | NOT_NULL_FLAG | UNSIGNED_FLAG |
		         UNIQUE_FLAG);
	  }
    break;

  case 374:
#line 2868 "sql_yacc.yy"
    { (yyval.num)= Field::GEOM_GEOMETRY; }
    break;

  case 375:
#line 2869 "sql_yacc.yy"
    { (yyval.num)= Field::GEOM_GEOMETRYCOLLECTION; }
    break;

  case 376:
#line 2870 "sql_yacc.yy"
    { Lex->length= (char*)"21";
                                (yyval.num)= Field::GEOM_POINT;
                              }
    break;

  case 377:
#line 2873 "sql_yacc.yy"
    { (yyval.num)= Field::GEOM_MULTIPOINT; }
    break;

  case 378:
#line 2874 "sql_yacc.yy"
    { (yyval.num)= Field::GEOM_LINESTRING; }
    break;

  case 379:
#line 2875 "sql_yacc.yy"
    { (yyval.num)= Field::GEOM_MULTILINESTRING; }
    break;

  case 380:
#line 2876 "sql_yacc.yy"
    { (yyval.num)= Field::GEOM_POLYGON; }
    break;

  case 381:
#line 2877 "sql_yacc.yy"
    { (yyval.num)= Field::GEOM_MULTIPOLYGON; }
    break;

  case 382:
#line 2881 "sql_yacc.yy"
    {}
    break;

  case 383:
#line 2885 "sql_yacc.yy"
    {}
    break;

  case 384:
#line 2886 "sql_yacc.yy"
    {}
    break;

  case 385:
#line 2890 "sql_yacc.yy"
    {}
    break;

  case 386:
#line 2891 "sql_yacc.yy"
    {}
    break;

  case 387:
#line 2895 "sql_yacc.yy"
    {}
    break;

  case 388:
#line 2896 "sql_yacc.yy"
    {}
    break;

  case 389:
#line 2897 "sql_yacc.yy"
    {}
    break;

  case 390:
#line 2898 "sql_yacc.yy"
    {}
    break;

  case 391:
#line 2899 "sql_yacc.yy"
    {}
    break;

  case 392:
#line 2903 "sql_yacc.yy"
    { (yyval.num)=FIELD_TYPE_LONG; }
    break;

  case 393:
#line 2904 "sql_yacc.yy"
    { (yyval.num)=FIELD_TYPE_TINY; }
    break;

  case 394:
#line 2905 "sql_yacc.yy"
    { (yyval.num)=FIELD_TYPE_SHORT; }
    break;

  case 395:
#line 2906 "sql_yacc.yy"
    { (yyval.num)=FIELD_TYPE_INT24; }
    break;

  case 396:
#line 2907 "sql_yacc.yy"
    { (yyval.num)=FIELD_TYPE_LONGLONG; }
    break;

  case 397:
#line 2910 "sql_yacc.yy"
    { (yyval.num)= YYTHD->variables.sql_mode & MODE_REAL_AS_FLOAT ?
			      FIELD_TYPE_FLOAT : FIELD_TYPE_DOUBLE; }
    break;

  case 398:
#line 2912 "sql_yacc.yy"
    { (yyval.num)=FIELD_TYPE_DOUBLE; }
    break;

  case 399:
#line 2913 "sql_yacc.yy"
    { (yyval.num)=FIELD_TYPE_DOUBLE; }
    break;

  case 400:
#line 2917 "sql_yacc.yy"
    { Lex->dec=Lex->length= (char*)0; }
    break;

  case 401:
#line 2918 "sql_yacc.yy"
    { Lex->length=(yyvsp[-1].lex_str).str; Lex->dec= (char*)0; }
    break;

  case 402:
#line 2919 "sql_yacc.yy"
    {}
    break;

  case 403:
#line 2923 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  lex->length=(yyvsp[-3].lex_str).str; lex->dec=(yyvsp[-1].lex_str).str;
	}
    break;

  case 404:
#line 2929 "sql_yacc.yy"
    {}
    break;

  case 405:
#line 2930 "sql_yacc.yy"
    {}
    break;

  case 406:
#line 2933 "sql_yacc.yy"
    {}
    break;

  case 407:
#line 2934 "sql_yacc.yy"
    {}
    break;

  case 408:
#line 2937 "sql_yacc.yy"
    {}
    break;

  case 409:
#line 2938 "sql_yacc.yy"
    { Lex->type|= UNSIGNED_FLAG;}
    break;

  case 410:
#line 2939 "sql_yacc.yy"
    { Lex->type|= UNSIGNED_FLAG | ZEROFILL_FLAG; }
    break;

  case 411:
#line 2942 "sql_yacc.yy"
    { Lex->length=(char*) 0; }
    break;

  case 412:
#line 2943 "sql_yacc.yy"
    { Lex->length= (yyvsp[-1].lex_str).str; }
    break;

  case 413:
#line 2946 "sql_yacc.yy"
    {}
    break;

  case 414:
#line 2947 "sql_yacc.yy"
    {}
    break;

  case 415:
#line 2950 "sql_yacc.yy"
    {}
    break;

  case 416:
#line 2951 "sql_yacc.yy"
    {}
    break;

  case 417:
#line 2954 "sql_yacc.yy"
    {}
    break;

  case 419:
#line 2958 "sql_yacc.yy"
    { Lex->type&= ~ NOT_NULL_FLAG; }
    break;

  case 420:
#line 2959 "sql_yacc.yy"
    { Lex->type|= NOT_NULL_FLAG; }
    break;

  case 421:
#line 2960 "sql_yacc.yy"
    { Lex->default_value=(yyvsp[0].item); }
    break;

  case 422:
#line 2962 "sql_yacc.yy"
    { Lex->on_update_value= new Item_func_now_local(); }
    break;

  case 423:
#line 2963 "sql_yacc.yy"
    { Lex->type|= AUTO_INCREMENT_FLAG | NOT_NULL_FLAG; }
    break;

  case 424:
#line 2965 "sql_yacc.yy"
    { 
	    LEX *lex=Lex;
	    lex->type|= AUTO_INCREMENT_FLAG | NOT_NULL_FLAG | UNIQUE_FLAG; 
	    lex->alter_info.flags|= ALTER_ADD_INDEX; 
	  }
    break;

  case 425:
#line 2971 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    lex->type|= PRI_KEY_FLAG | NOT_NULL_FLAG; 
	    lex->alter_info.flags|= ALTER_ADD_INDEX; 
	  }
    break;

  case 426:
#line 2977 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    lex->type|= UNIQUE_FLAG; 
	    lex->alter_info.flags|= ALTER_ADD_INDEX; 
	  }
    break;

  case 427:
#line 2983 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    lex->type|= UNIQUE_KEY_FLAG; 
	    lex->alter_info.flags|= ALTER_ADD_INDEX; 
	  }
    break;

  case 428:
#line 2988 "sql_yacc.yy"
    { Lex->comment= (yyvsp[0].lex_str); }
    break;

  case 429:
#line 2990 "sql_yacc.yy"
    {
	    if (Lex->charset && !my_charset_same(Lex->charset,(yyvsp[0].charset)))
	    {
	      my_error(ER_COLLATION_CHARSET_MISMATCH, MYF(0),
                       (yyvsp[0].charset)->name,Lex->charset->csname);
	      YYABORT;
	    }
	    else
	    {
	      Lex->charset=(yyvsp[0].charset);
	    }
	  }
    break;

  case 430:
#line 3005 "sql_yacc.yy"
    { (yyval.item)= new Item_func_now_local(); }
    break;

  case 431:
#line 3006 "sql_yacc.yy"
    { (yyval.item)=(yyvsp[0].item); }
    break;

  case 432:
#line 3010 "sql_yacc.yy"
    {}
    break;

  case 433:
#line 3011 "sql_yacc.yy"
    {}
    break;

  case 434:
#line 3016 "sql_yacc.yy"
    {
	  if (!((yyval.charset)=get_charset_by_csname((yyvsp[0].lex_str).str,MY_CS_PRIMARY,MYF(0))))
	  {
	    my_error(ER_UNKNOWN_CHARACTER_SET, MYF(0), (yyvsp[0].lex_str).str);
	    YYABORT;
	  }
	}
    break;

  case 435:
#line 3023 "sql_yacc.yy"
    { (yyval.charset)= &my_charset_bin; }
    break;

  case 436:
#line 3027 "sql_yacc.yy"
    { (yyval.charset)=(yyvsp[0].charset);   }
    break;

  case 437:
#line 3028 "sql_yacc.yy"
    { (yyval.charset)=NULL; }
    break;

  case 438:
#line 3033 "sql_yacc.yy"
    {
	  if (!((yyval.charset)=get_charset_by_csname((yyvsp[0].lex_str).str,MY_CS_PRIMARY,MYF(0))) &&
	      !((yyval.charset)=get_old_charset_by_name((yyvsp[0].lex_str).str)))
	  {
	    my_error(ER_UNKNOWN_CHARACTER_SET, MYF(0), (yyvsp[0].lex_str).str);
	    YYABORT;
	  }
	}
    break;

  case 439:
#line 3041 "sql_yacc.yy"
    { (yyval.charset)= &my_charset_bin; }
    break;

  case 440:
#line 3045 "sql_yacc.yy"
    { (yyval.charset)=(yyvsp[0].charset);   }
    break;

  case 441:
#line 3046 "sql_yacc.yy"
    { (yyval.charset)=NULL; }
    break;

  case 442:
#line 3050 "sql_yacc.yy"
    {
	  if (!((yyval.charset)=get_charset_by_name((yyvsp[0].lex_str).str,MYF(0))))
	  {
	    my_error(ER_UNKNOWN_COLLATION, MYF(0), (yyvsp[0].lex_str).str);
	    YYABORT;
	  }
	}
    break;

  case 443:
#line 3059 "sql_yacc.yy"
    { (yyval.charset)=NULL; }
    break;

  case 444:
#line 3060 "sql_yacc.yy"
    { (yyval.charset)=(yyvsp[0].charset); }
    break;

  case 445:
#line 3064 "sql_yacc.yy"
    { (yyval.charset)=(yyvsp[0].charset);   }
    break;

  case 446:
#line 3065 "sql_yacc.yy"
    { (yyval.charset)=NULL; }
    break;

  case 447:
#line 3068 "sql_yacc.yy"
    {}
    break;

  case 448:
#line 3069 "sql_yacc.yy"
    {}
    break;

  case 449:
#line 3072 "sql_yacc.yy"
    { Lex->charset=NULL; }
    break;

  case 450:
#line 3073 "sql_yacc.yy"
    { Lex->charset=&my_charset_latin1; }
    break;

  case 451:
#line 3074 "sql_yacc.yy"
    { Lex->charset=&my_charset_bin; }
    break;

  case 452:
#line 3076 "sql_yacc.yy"
    {
	  if (!(Lex->charset=get_charset_by_csname("ucs2",
                                                   MY_CS_PRIMARY,MYF(0))))
	  {
	    my_error(ER_UNKNOWN_CHARACTER_SET, MYF(0), "ucs2");
	    YYABORT;
	  }
	}
    break;

  case 453:
#line 3084 "sql_yacc.yy"
    { Lex->charset=(yyvsp[-1].charset); }
    break;

  case 454:
#line 3085 "sql_yacc.yy"
    { Lex->type|= BINCMP_FLAG; }
    break;

  case 455:
#line 3088 "sql_yacc.yy"
    { }
    break;

  case 456:
#line 3089 "sql_yacc.yy"
    { Lex->type|= BINCMP_FLAG; }
    break;

  case 457:
#line 3092 "sql_yacc.yy"
    { }
    break;

  case 458:
#line 3093 "sql_yacc.yy"
    { Lex->charset=&my_charset_latin1; }
    break;

  case 459:
#line 3095 "sql_yacc.yy"
    {
	  if (!(Lex->charset=get_charset_by_csname("ucs2",
                                                   MY_CS_PRIMARY,MYF(0))))
	  {
	    my_error(ER_UNKNOWN_CHARACTER_SET, MYF(0), "ucs2");
	    YYABORT;
	  }
	}
    break;

  case 460:
#line 3103 "sql_yacc.yy"
    { Lex->charset=(yyvsp[0].charset); }
    break;

  case 463:
#line 3112 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  lex->fk_delete_opt= lex->fk_update_opt= lex->fk_match_option= 0;
	  lex->ref_list.empty();
	}
    break;

  case 464:
#line 3118 "sql_yacc.yy"
    {
	  (yyval.table)=(yyvsp[-2].table);
	}
    break;

  case 465:
#line 3123 "sql_yacc.yy"
    {}
    break;

  case 466:
#line 3124 "sql_yacc.yy"
    {}
    break;

  case 467:
#line 3127 "sql_yacc.yy"
    { Lex->ref_list.push_back(new key_part_spec((yyvsp[0].lex_str).str)); }
    break;

  case 468:
#line 3128 "sql_yacc.yy"
    { Lex->ref_list.push_back(new key_part_spec((yyvsp[0].lex_str).str)); }
    break;

  case 469:
#line 3132 "sql_yacc.yy"
    {}
    break;

  case 470:
#line 3133 "sql_yacc.yy"
    {}
    break;

  case 471:
#line 3136 "sql_yacc.yy"
    {}
    break;

  case 472:
#line 3137 "sql_yacc.yy"
    {}
    break;

  case 473:
#line 3140 "sql_yacc.yy"
    { Lex->fk_delete_opt= (yyvsp[0].num); }
    break;

  case 474:
#line 3141 "sql_yacc.yy"
    { Lex->fk_update_opt= (yyvsp[0].num); }
    break;

  case 475:
#line 3142 "sql_yacc.yy"
    { Lex->fk_match_option= foreign_key::FK_MATCH_FULL; }
    break;

  case 476:
#line 3143 "sql_yacc.yy"
    { Lex->fk_match_option= foreign_key::FK_MATCH_PARTIAL; }
    break;

  case 477:
#line 3144 "sql_yacc.yy"
    { Lex->fk_match_option= foreign_key::FK_MATCH_SIMPLE; }
    break;

  case 478:
#line 3147 "sql_yacc.yy"
    { (yyval.num)= (int) foreign_key::FK_OPTION_RESTRICT; }
    break;

  case 479:
#line 3148 "sql_yacc.yy"
    { (yyval.num)= (int) foreign_key::FK_OPTION_CASCADE; }
    break;

  case 480:
#line 3149 "sql_yacc.yy"
    { (yyval.num)= (int) foreign_key::FK_OPTION_SET_NULL; }
    break;

  case 481:
#line 3150 "sql_yacc.yy"
    { (yyval.num)= (int) foreign_key::FK_OPTION_NO_ACTION; }
    break;

  case 482:
#line 3151 "sql_yacc.yy"
    { (yyval.num)= (int) foreign_key::FK_OPTION_DEFAULT;  }
    break;

  case 483:
#line 3154 "sql_yacc.yy"
    { (yyval.key_type)= Key::MULTIPLE; }
    break;

  case 484:
#line 3155 "sql_yacc.yy"
    { (yyval.key_type)= Key::FULLTEXT; }
    break;

  case 485:
#line 3157 "sql_yacc.yy"
    {
#ifdef HAVE_SPATIAL
	    (yyval.key_type)= Key::SPATIAL;
#else
	    my_error(ER_FEATURE_DISABLED, MYF(0),
                     sym_group_geom.name, sym_group_geom.needed_define);
	    YYABORT;
#endif
	  }
    break;

  case 486:
#line 3168 "sql_yacc.yy"
    { (yyval.key_type)= Key::PRIMARY; }
    break;

  case 487:
#line 3169 "sql_yacc.yy"
    { (yyval.key_type)= Key::UNIQUE; }
    break;

  case 488:
#line 3172 "sql_yacc.yy"
    {}
    break;

  case 489:
#line 3173 "sql_yacc.yy"
    {}
    break;

  case 490:
#line 3176 "sql_yacc.yy"
    {}
    break;

  case 492:
#line 3181 "sql_yacc.yy"
    {}
    break;

  case 493:
#line 3182 "sql_yacc.yy"
    {}
    break;

  case 494:
#line 3183 "sql_yacc.yy"
    {}
    break;

  case 495:
#line 3186 "sql_yacc.yy"
    { (yyval.key_type)= Key::MULTIPLE; }
    break;

  case 496:
#line 3187 "sql_yacc.yy"
    { (yyval.key_type)= Key::UNIQUE; }
    break;

  case 497:
#line 3188 "sql_yacc.yy"
    { (yyval.key_type)= Key::FULLTEXT;}
    break;

  case 498:
#line 3190 "sql_yacc.yy"
    {
#ifdef HAVE_SPATIAL
	    (yyval.key_type)= Key::SPATIAL;
#else
            my_error(ER_FEATURE_DISABLED, MYF(0),
                     sym_group_geom.name, sym_group_geom.needed_define);
	    YYABORT;
#endif
	  }
    break;

  case 499:
#line 3202 "sql_yacc.yy"
    { (yyval.key_alg)= HA_KEY_ALG_UNDEF; }
    break;

  case 500:
#line 3203 "sql_yacc.yy"
    { (yyval.key_alg)= (yyvsp[0].key_alg); }
    break;

  case 501:
#line 3204 "sql_yacc.yy"
    { (yyval.key_alg)= (yyvsp[0].key_alg); }
    break;

  case 502:
#line 3207 "sql_yacc.yy"
    { (yyval.key_alg)= HA_KEY_ALG_BTREE; }
    break;

  case 503:
#line 3209 "sql_yacc.yy"
    {
	    (yyval.key_alg)= HA_KEY_ALG_RTREE;
	  }
    break;

  case 504:
#line 3212 "sql_yacc.yy"
    { (yyval.key_alg)= HA_KEY_ALG_HASH; }
    break;

  case 505:
#line 3215 "sql_yacc.yy"
    { Lex->col_list.push_back((yyvsp[-1].key_part)); }
    break;

  case 506:
#line 3216 "sql_yacc.yy"
    { Lex->col_list.push_back((yyvsp[-1].key_part)); }
    break;

  case 507:
#line 3219 "sql_yacc.yy"
    { (yyval.key_part)=new key_part_spec((yyvsp[0].lex_str).str); }
    break;

  case 508:
#line 3221 "sql_yacc.yy"
    {
          int key_part_len= atoi((yyvsp[-1].lex_str).str);
          if (!key_part_len)
          {
            my_error(ER_KEY_PART_0, MYF(0), (yyvsp[-3].lex_str).str);
          }
          (yyval.key_part)=new key_part_spec((yyvsp[-3].lex_str).str,(uint) key_part_len);
        }
    break;

  case 509:
#line 3231 "sql_yacc.yy"
    { (yyval.simple_string)=(char*) 0; }
    break;

  case 510:
#line 3232 "sql_yacc.yy"
    { (yyval.simple_string)=(yyvsp[0].lex_str).str; }
    break;

  case 511:
#line 3235 "sql_yacc.yy"
    { (yyval.lex_str)= null_lex_str; }
    break;

  case 512:
#line 3236 "sql_yacc.yy"
    { (yyval.lex_str)= (yyvsp[0].lex_str); }
    break;

  case 513:
#line 3239 "sql_yacc.yy"
    { Lex->interval_list.push_back((yyvsp[0].string)); }
    break;

  case 514:
#line 3240 "sql_yacc.yy"
    { Lex->interval_list.push_back((yyvsp[0].string)); }
    break;

  case 515:
#line 3248 "sql_yacc.yy"
    {
	  THD *thd= YYTHD;
	  LEX *lex= thd->lex;
	  lex->sql_command= SQLCOM_ALTER_TABLE;
	  lex->name= 0;
	  lex->duplicates= DUP_ERROR; 
	  if (!lex->select_lex.add_table_to_list(thd, (yyvsp[0].table), NULL,
						 TL_OPTION_UPDATING))
	    YYABORT;
	  lex->create_list.empty();
	  lex->key_list.empty();
	  lex->col_list.empty();
          lex->select_lex.init_order();
	  lex->select_lex.db=
            ((TABLE_LIST*) lex->select_lex.table_list.first)->db;
          lex->name=0;
	  bzero((char*) &lex->create_info,sizeof(lex->create_info));
	  lex->create_info.db_type= DB_TYPE_DEFAULT;
	  lex->create_info.default_table_charset= NULL;
	  lex->create_info.row_type= ROW_TYPE_NOT_USED;
	  lex->alter_info.reset();
	  lex->alter_info.flags= 0;
	}
    break;

  case 516:
#line 3272 "sql_yacc.yy"
    {}
    break;

  case 517:
#line 3274 "sql_yacc.yy"
    {
            Lex->create_info.default_table_charset= NULL;
            Lex->create_info.used_fields= 0;
          }
    break;

  case 518:
#line 3279 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
            THD *thd= Lex->thd;
	    lex->sql_command=SQLCOM_ALTER_DB;
	    lex->name= (yyvsp[-2].simple_string);
            if (lex->name == NULL && thd->copy_db_to(&lex->name, NULL))
              YYABORT;
	  }
    break;

  case 519:
#line 3288 "sql_yacc.yy"
    {
	    LEX *lex= Lex;

	    if (lex->sphead)
	    {
	      my_error(ER_SP_NO_DROP_SP, MYF(0), "PROCEDURE");
	      YYABORT;
	    }
	    bzero((char *)&lex->sp_chistics, sizeof(st_sp_chistics));
          }
    break;

  case 520:
#line 3299 "sql_yacc.yy"
    {
	    LEX *lex=Lex;

	    lex->sql_command= SQLCOM_ALTER_PROCEDURE;
	    lex->spname= (yyvsp[-2].spname);
	  }
    break;

  case 521:
#line 3306 "sql_yacc.yy"
    {
	    LEX *lex= Lex;

	    if (lex->sphead)
	    {
	      my_error(ER_SP_NO_DROP_SP, MYF(0), "FUNCTION");
	      YYABORT;
	    }
	    bzero((char *)&lex->sp_chistics, sizeof(st_sp_chistics));
          }
    break;

  case 522:
#line 3317 "sql_yacc.yy"
    {
	    LEX *lex=Lex;

	    lex->sql_command= SQLCOM_ALTER_FUNCTION;
	    lex->spname= (yyvsp[-2].spname);
	  }
    break;

  case 523:
#line 3325 "sql_yacc.yy"
    {
	    THD *thd= YYTHD;
	    LEX *lex= thd->lex;
	    lex->sql_command= SQLCOM_CREATE_VIEW;
	    lex->create_view_mode= VIEW_ALTER;
	    /* first table in list is target VIEW name */
	    lex->select_lex.add_table_to_list(thd, (yyvsp[0].table), NULL, TL_OPTION_UPDATING);
	  }
    break;

  case 524:
#line 3334 "sql_yacc.yy"
    {}
    break;

  case 525:
#line 3338 "sql_yacc.yy"
    { (yyval.simple_string)= 0; }
    break;

  case 526:
#line 3339 "sql_yacc.yy"
    { (yyval.simple_string)= (yyvsp[0].lex_str).str; }
    break;

  case 528:
#line 3342 "sql_yacc.yy"
    { Lex->alter_info.tablespace_op= DISCARD_TABLESPACE; }
    break;

  case 529:
#line 3343 "sql_yacc.yy"
    { Lex->alter_info.tablespace_op= IMPORT_TABLESPACE; }
    break;

  case 532:
#line 3349 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  lex->change=0;
	  lex->alter_info.flags|= ALTER_ADD_COLUMN;
	}
    break;

  case 533:
#line 3356 "sql_yacc.yy"
    { }
    break;

  case 534:
#line 3358 "sql_yacc.yy"
    {
	    Lex->alter_info.flags|= ALTER_ADD_INDEX;
	  }
    break;

  case 535:
#line 3362 "sql_yacc.yy"
    {
	    Lex->alter_info.flags|= ALTER_ADD_COLUMN | ALTER_ADD_INDEX;
          }
    break;

  case 536:
#line 3366 "sql_yacc.yy"
    {
	     LEX *lex=Lex;
	     lex->change= (yyvsp[0].lex_str).str;
	     lex->alter_info.flags|= ALTER_CHANGE_COLUMN;
	  }
    break;

  case 538:
#line 3373 "sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->length=lex->dec=0; lex->type=0;
            lex->default_value= lex->on_update_value= 0;
            lex->comment=null_lex_str;
	    lex->charset= NULL;
	    lex->alter_info.flags|= ALTER_CHANGE_COLUMN;
          }
    break;

  case 539:
#line 3382 "sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (add_field_to_list(lex->thd,(yyvsp[-3].lex_str).str,
                                  (enum enum_field_types) (yyvsp[-1].num),
                                  lex->length,lex->dec,lex->type,
                                  lex->default_value, lex->on_update_value,
                                  &lex->comment,
				  (yyvsp[-3].lex_str).str, &lex->interval_list, lex->charset,
				  lex->uint_geom_type))
	       YYABORT;
          }
    break;

  case 541:
#line 3395 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    lex->alter_info.drop_list.push_back(new Alter_drop(Alter_drop::COLUMN,
                                                               (yyvsp[-1].lex_str).str));
	    lex->alter_info.flags|= ALTER_DROP_COLUMN;
	  }
    break;

  case 542:
#line 3402 "sql_yacc.yy"
    {
	    Lex->alter_info.flags|= ALTER_DROP_INDEX;
          }
    break;

  case 543:
#line 3406 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    lex->alter_info.drop_list.push_back(new Alter_drop(Alter_drop::KEY,
				               primary_key_name));
	    lex->alter_info.flags|= ALTER_DROP_INDEX;
	  }
    break;

  case 544:
#line 3413 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    lex->alter_info.drop_list.push_back(new Alter_drop(Alter_drop::KEY,
					                       (yyvsp[0].lex_str).str));
	    lex->alter_info.flags|= ALTER_DROP_INDEX;
	  }
    break;

  case 545:
#line 3420 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
            lex->alter_info.keys_onoff= DISABLE;
	    lex->alter_info.flags|= ALTER_KEYS_ONOFF;
          }
    break;

  case 546:
#line 3426 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
            lex->alter_info.keys_onoff= ENABLE;
	    lex->alter_info.flags|= ALTER_KEYS_ONOFF;
          }
    break;

  case 547:
#line 3432 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    lex->alter_info.alter_list.push_back(new Alter_column((yyvsp[-3].lex_str).str,(yyvsp[0].item)));
	    lex->alter_info.flags|= ALTER_CHANGE_COLUMN_DEFAULT;
	  }
    break;

  case 548:
#line 3438 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    lex->alter_info.alter_list.push_back(new Alter_column((yyvsp[-2].lex_str).str,
                                                                  (Item*) 0));
	    lex->alter_info.flags|= ALTER_CHANGE_COLUMN_DEFAULT;
	  }
    break;

  case 549:
#line 3445 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
            THD *thd= lex->thd;
	    lex->select_lex.db=(yyvsp[0].table)->db.str;
            if (lex->select_lex.db == NULL &&
                thd->copy_db_to(&lex->select_lex.db, NULL))
            {
              YYABORT;
            }
            if (check_table_name((yyvsp[0].table)->table.str,(yyvsp[0].table)->table.length) ||
                (yyvsp[0].table)->db.str && check_db_name((yyvsp[0].table)->db.str))
            {
              my_error(ER_WRONG_TABLE_NAME, MYF(0), (yyvsp[0].table)->table.str);
              YYABORT;
            }
	    lex->name= (yyvsp[0].table)->table.str;
	    lex->alter_info.flags|= ALTER_RENAME;
	  }
    break;

  case 550:
#line 3464 "sql_yacc.yy"
    {
	    if (!(yyvsp[-1].charset))
	    {
	      THD *thd= YYTHD;
	      (yyvsp[-1].charset)= thd->variables.collation_database;
	    }
	    (yyvsp[0].charset)= (yyvsp[0].charset) ? (yyvsp[0].charset) : (yyvsp[-1].charset);
	    if (!my_charset_same((yyvsp[-1].charset),(yyvsp[0].charset)))
	    {
	      my_error(ER_COLLATION_CHARSET_MISMATCH, MYF(0),
                       (yyvsp[0].charset)->name, (yyvsp[-1].charset)->csname);
	      YYABORT;
	    }
	    LEX *lex= Lex;
	    lex->create_info.table_charset=
	      lex->create_info.default_table_charset= (yyvsp[0].charset);
	    lex->create_info.used_fields|= (HA_CREATE_USED_CHARSET |
					    HA_CREATE_USED_DEFAULT_CHARSET);
	    lex->alter_info.flags|= ALTER_CONVERT;
	  }
    break;

  case 551:
#line 3485 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    lex->alter_info.flags|= ALTER_OPTIONS;
	  }
    break;

  case 552:
#line 3490 "sql_yacc.yy"
    {
	    Lex->alter_info.flags|= ALTER_FORCE;
	   }
    break;

  case 553:
#line 3494 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    lex->alter_info.flags|= ALTER_ORDER;
	  }
    break;

  case 554:
#line 3500 "sql_yacc.yy"
    {}
    break;

  case 555:
#line 3501 "sql_yacc.yy"
    {}
    break;

  case 556:
#line 3504 "sql_yacc.yy"
    { Lex->ignore= 0;}
    break;

  case 557:
#line 3505 "sql_yacc.yy"
    { Lex->ignore= 1;}
    break;

  case 558:
#line 3509 "sql_yacc.yy"
    { Lex->drop_mode= DROP_DEFAULT; }
    break;

  case 559:
#line 3510 "sql_yacc.yy"
    { Lex->drop_mode= DROP_RESTRICT; }
    break;

  case 560:
#line 3511 "sql_yacc.yy"
    { Lex->drop_mode= DROP_CASCADE; }
    break;

  case 561:
#line 3515 "sql_yacc.yy"
    {}
    break;

  case 562:
#line 3516 "sql_yacc.yy"
    { store_position_for_column((yyvsp[0].lex_str).str); }
    break;

  case 563:
#line 3517 "sql_yacc.yy"
    { store_position_for_column(first_keyword); }
    break;

  case 564:
#line 3520 "sql_yacc.yy"
    {}
    break;

  case 565:
#line 3521 "sql_yacc.yy"
    {}
    break;

  case 566:
#line 3522 "sql_yacc.yy"
    {}
    break;

  case 567:
#line 3523 "sql_yacc.yy"
    {}
    break;

  case 568:
#line 3531 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
            lex->sql_command = SQLCOM_SLAVE_START;
	    lex->type = 0;
	    /* We'll use mi structure for UNTIL options */
	    bzero((char*) &lex->mi, sizeof(lex->mi));
            /* If you change this code don't forget to update SLAVE START too */
          }
    break;

  case 569:
#line 3540 "sql_yacc.yy"
    {}
    break;

  case 570:
#line 3542 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
            lex->sql_command = SQLCOM_SLAVE_STOP;
	    lex->type = 0;
            /* If you change this code don't forget to update SLAVE STOP too */
          }
    break;

  case 571:
#line 3549 "sql_yacc.yy"
    {
	   LEX *lex=Lex;
           lex->sql_command = SQLCOM_SLAVE_START;
	   lex->type = 0;
	    /* We'll use mi structure for UNTIL options */
	    bzero((char*) &lex->mi, sizeof(lex->mi));
          }
    break;

  case 572:
#line 3557 "sql_yacc.yy"
    {}
    break;

  case 573:
#line 3559 "sql_yacc.yy"
    {
	   LEX *lex=Lex;
           lex->sql_command = SQLCOM_SLAVE_STOP;
	   lex->type = 0;
         }
    break;

  case 574:
#line 3569 "sql_yacc.yy"
    {
          LEX *lex= Lex;
          lex->sql_command= SQLCOM_BEGIN;
          lex->start_transaction_opt= (yyvsp[0].num);
        }
    break;

  case 575:
#line 3577 "sql_yacc.yy"
    { (yyval.num) = 0; }
    break;

  case 576:
#line 3579 "sql_yacc.yy"
    {
           (yyval.num)= MYSQL_START_TRANS_OPT_WITH_CONS_SNAPSHOT;
        }
    break;

  case 577:
#line 3585 "sql_yacc.yy"
    { Lex->slave_thd_opt= 0; }
    break;

  case 578:
#line 3587 "sql_yacc.yy"
    {}
    break;

  case 581:
#line 3596 "sql_yacc.yy"
    {}
    break;

  case 582:
#line 3597 "sql_yacc.yy"
    { Lex->slave_thd_opt|=SLAVE_SQL; }
    break;

  case 583:
#line 3598 "sql_yacc.yy"
    { Lex->slave_thd_opt|=SLAVE_IO; }
    break;

  case 584:
#line 3602 "sql_yacc.yy"
    {}
    break;

  case 585:
#line 3604 "sql_yacc.yy"
    {
            LEX *lex=Lex;
            if ((lex->mi.log_file_name || lex->mi.pos) &&
                (lex->mi.relay_log_name || lex->mi.relay_log_pos) ||
                !((lex->mi.log_file_name && lex->mi.pos) ||
                  (lex->mi.relay_log_name && lex->mi.relay_log_pos)))
            {
               my_message(ER_BAD_SLAVE_UNTIL_COND,
                          ER(ER_BAD_SLAVE_UNTIL_COND), MYF(0));
               YYABORT;
            }

          }
    break;

  case 588:
#line 3626 "sql_yacc.yy"
    {
	   Lex->sql_command = SQLCOM_RESTORE_TABLE;
	}
    break;

  case 589:
#line 3630 "sql_yacc.yy"
    {
	  Lex->backup_dir = (yyvsp[0].lex_str).str;
        }
    break;

  case 590:
#line 3636 "sql_yacc.yy"
    {
	   Lex->sql_command = SQLCOM_BACKUP_TABLE;
	}
    break;

  case 591:
#line 3640 "sql_yacc.yy"
    {
	  Lex->backup_dir = (yyvsp[0].lex_str).str;
        }
    break;

  case 592:
#line 3646 "sql_yacc.yy"
    {
	   LEX *lex=Lex;
	   lex->sql_command = SQLCOM_CHECKSUM;
	}
    break;

  case 593:
#line 3651 "sql_yacc.yy"
    {}
    break;

  case 594:
#line 3655 "sql_yacc.yy"
    { Lex->check_opt.flags= 0; }
    break;

  case 595:
#line 3656 "sql_yacc.yy"
    { Lex->check_opt.flags= T_QUICK; }
    break;

  case 596:
#line 3657 "sql_yacc.yy"
    { Lex->check_opt.flags= T_EXTEND; }
    break;

  case 597:
#line 3662 "sql_yacc.yy"
    {
	   LEX *lex=Lex;
	   lex->sql_command = SQLCOM_REPAIR;
           lex->no_write_to_binlog= (yyvsp[-1].num);
	   lex->check_opt.init();
	}
    break;

  case 598:
#line 3669 "sql_yacc.yy"
    {}
    break;

  case 599:
#line 3673 "sql_yacc.yy"
    { Lex->check_opt.flags = T_MEDIUM; }
    break;

  case 600:
#line 3674 "sql_yacc.yy"
    {}
    break;

  case 601:
#line 3677 "sql_yacc.yy"
    {}
    break;

  case 602:
#line 3678 "sql_yacc.yy"
    {}
    break;

  case 603:
#line 3681 "sql_yacc.yy"
    { Lex->check_opt.flags|= T_QUICK; }
    break;

  case 604:
#line 3682 "sql_yacc.yy"
    { Lex->check_opt.flags|= T_EXTEND; }
    break;

  case 605:
#line 3683 "sql_yacc.yy"
    { Lex->check_opt.sql_flags|= TT_USEFRM; }
    break;

  case 606:
#line 3687 "sql_yacc.yy"
    {
	   LEX *lex=Lex;
	   lex->sql_command = SQLCOM_ANALYZE;
           lex->no_write_to_binlog= (yyvsp[-1].num);
	   lex->check_opt.init();
	}
    break;

  case 607:
#line 3694 "sql_yacc.yy"
    {}
    break;

  case 608:
#line 3699 "sql_yacc.yy"
    {
	  LEX *lex=Lex;

	  if (lex->sphead)
	  {
	    my_error(ER_SP_BADSTATEMENT, MYF(0), "CHECK");
	    YYABORT;
	  }
	  lex->sql_command = SQLCOM_CHECK;
	  lex->check_opt.init();
	}
    break;

  case 609:
#line 3711 "sql_yacc.yy"
    {}
    break;

  case 610:
#line 3715 "sql_yacc.yy"
    { Lex->check_opt.flags = T_MEDIUM; }
    break;

  case 611:
#line 3716 "sql_yacc.yy"
    {}
    break;

  case 612:
#line 3719 "sql_yacc.yy"
    {}
    break;

  case 613:
#line 3720 "sql_yacc.yy"
    {}
    break;

  case 614:
#line 3723 "sql_yacc.yy"
    { Lex->check_opt.flags|= T_QUICK; }
    break;

  case 615:
#line 3724 "sql_yacc.yy"
    { Lex->check_opt.flags|= T_FAST; }
    break;

  case 616:
#line 3725 "sql_yacc.yy"
    { Lex->check_opt.flags|= T_MEDIUM; }
    break;

  case 617:
#line 3726 "sql_yacc.yy"
    { Lex->check_opt.flags|= T_EXTEND; }
    break;

  case 618:
#line 3727 "sql_yacc.yy"
    { Lex->check_opt.flags|= T_CHECK_ONLY_CHANGED; }
    break;

  case 619:
#line 3728 "sql_yacc.yy"
    { Lex->check_opt.sql_flags|= TT_FOR_UPGRADE; }
    break;

  case 620:
#line 3732 "sql_yacc.yy"
    {
	   LEX *lex=Lex;
	   lex->sql_command = SQLCOM_OPTIMIZE;
           lex->no_write_to_binlog= (yyvsp[-1].num);
	   lex->check_opt.init();
	}
    break;

  case 621:
#line 3739 "sql_yacc.yy"
    {}
    break;

  case 622:
#line 3743 "sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 623:
#line 3744 "sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 624:
#line 3745 "sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 625:
#line 3750 "sql_yacc.yy"
    {
          Lex->sql_command= SQLCOM_RENAME_TABLE;
	}
    break;

  case 626:
#line 3754 "sql_yacc.yy"
    {}
    break;

  case 627:
#line 3756 "sql_yacc.yy"
    {
	    Lex->sql_command = SQLCOM_RENAME_USER;
          }
    break;

  case 628:
#line 3763 "sql_yacc.yy"
    {
          if (Lex->users_list.push_back((yyvsp[-2].lex_user)) || Lex->users_list.push_back((yyvsp[0].lex_user)))
            YYABORT;
        }
    break;

  case 629:
#line 3768 "sql_yacc.yy"
    {
            if (Lex->users_list.push_back((yyvsp[-2].lex_user)) || Lex->users_list.push_back((yyvsp[0].lex_user)))
              YYABORT;
          }
    break;

  case 632:
#line 3780 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  SELECT_LEX *sl= lex->current_select;
	  if (!sl->add_table_to_list(lex->thd, (yyvsp[-2].table),NULL,TL_OPTION_UPDATING,
				     TL_IGNORE) ||
	      !sl->add_table_to_list(lex->thd, (yyvsp[0].table),NULL,TL_OPTION_UPDATING,
				     TL_IGNORE))
	    YYABORT;
	}
    break;

  case 633:
#line 3792 "sql_yacc.yy"
    {
          LEX *lex=Lex;
          lex->sql_command= SQLCOM_ASSIGN_TO_KEYCACHE;
	  lex->ident= (yyvsp[0].lex_str);
        }
    break;

  case 636:
#line 3805 "sql_yacc.yy"
    {
          LEX *lex=Lex;
          SELECT_LEX *sel= &lex->select_lex;
          if (!sel->add_table_to_list(lex->thd, (yyvsp[-1].table), NULL, 0,
                                      TL_READ,
                                      sel->get_use_index(),
                                      (List<String> *)0))
            YYABORT;
        }
    break;

  case 637:
#line 3817 "sql_yacc.yy"
    { (yyval.lex_str)= (yyvsp[0].lex_str); }
    break;

  case 638:
#line 3818 "sql_yacc.yy"
    { (yyval.lex_str) = default_key_cache_base; }
    break;

  case 639:
#line 3823 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  lex->sql_command=SQLCOM_PRELOAD_KEYS;
	}
    break;

  case 640:
#line 3828 "sql_yacc.yy"
    {}
    break;

  case 643:
#line 3837 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  SELECT_LEX *sel= &lex->select_lex;
	  if (!sel->add_table_to_list(lex->thd, (yyvsp[-2].table), NULL, (yyvsp[0].num),
                                      TL_READ,
                                      sel->get_use_index(),
                                      (List<String> *)0))
            YYABORT;
	}
    break;

  case 644:
#line 3849 "sql_yacc.yy"
    { Select->interval_list.empty(); }
    break;

  case 645:
#line 3851 "sql_yacc.yy"
    {
          LEX *lex=Lex;
          SELECT_LEX *sel= &lex->select_lex;
          sel->use_index= sel->interval_list;
        }
    break;

  case 646:
#line 3859 "sql_yacc.yy"
    { Lex->select_lex.use_index_ptr= 0; }
    break;

  case 647:
#line 3861 "sql_yacc.yy"
    {
            SELECT_LEX *sel= &Lex->select_lex;
	    sel->use_index_ptr= &sel->use_index;
	  }
    break;

  case 648:
#line 3869 "sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 649:
#line 3870 "sql_yacc.yy"
    { (yyval.num)= TL_OPTION_IGNORE_LEAVES; }
    break;

  case 650:
#line 3880 "sql_yacc.yy"
    {
	  LEX *lex= Lex;
	  lex->sql_command= SQLCOM_SELECT;
	}
    break;

  case 653:
#line 3894 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
            SELECT_LEX * sel= lex->current_select;
	    if (sel->set_braces(1))
	    {
	      yyerror(ER(ER_SYNTAX_ERROR));
	      YYABORT;
	    }
	  if (sel->linkage == UNION_TYPE &&
	      !sel->master_unit()->first_select()->braces)
	  {
	    yyerror(ER(ER_SYNTAX_ERROR));
	    YYABORT;
	  }
            /* select in braces, can't contain global parameters */
	    if (sel->master_unit()->fake_select_lex)
              sel->master_unit()->global_parameters=
                 sel->master_unit()->fake_select_lex;
          }
    break;

  case 655:
#line 3917 "sql_yacc.yy"
    {
	  LEX *lex= Lex;
          SELECT_LEX * sel= lex->current_select;
          if (lex->current_select->set_braces(0))
	  {
	    yyerror(ER(ER_SYNTAX_ERROR));
	    YYABORT;
	  }
	  if (sel->linkage == UNION_TYPE &&
	      sel->master_unit()->first_select()->braces)
	  {
	    yyerror(ER(ER_SYNTAX_ERROR));
	    YYABORT;
	  }
	}
    break;

  case 657:
#line 3936 "sql_yacc.yy"
    {
	  LEX *lex= Lex;
	  SELECT_LEX *sel= lex->current_select;
	  if (sel->linkage != UNION_TYPE)
	    mysql_init_select(lex);
	  lex->current_select->parsing_place= SELECT_LIST;
	}
    break;

  case 658:
#line 3944 "sql_yacc.yy"
    {
	  Select->parsing_place= NO_MATTER;
	}
    break;

  case 660:
#line 3950 "sql_yacc.yy"
    {}
    break;

  case 668:
#line 3969 "sql_yacc.yy"
    {
	    if (test_all_bits(Select->options, SELECT_ALL | SELECT_DISTINCT))
	    {
	      my_error(ER_WRONG_USAGE, MYF(0), "ALL", "DISTINCT");
              YYABORT;
	    }
          }
    break;

  case 671:
#line 3983 "sql_yacc.yy"
    { Select->options|= SELECT_STRAIGHT_JOIN; }
    break;

  case 672:
#line 3985 "sql_yacc.yy"
    {
	    if (check_simple_select())
	      YYABORT;
	    Lex->lock_option= TL_READ_HIGH_PRIORITY;
	  }
    break;

  case 673:
#line 3990 "sql_yacc.yy"
    { Select->options|= SELECT_DISTINCT; }
    break;

  case 674:
#line 3991 "sql_yacc.yy"
    { Select->options|= SELECT_SMALL_RESULT; }
    break;

  case 675:
#line 3992 "sql_yacc.yy"
    { Select->options|= SELECT_BIG_RESULT; }
    break;

  case 676:
#line 3994 "sql_yacc.yy"
    {
	    if (check_simple_select())
	      YYABORT;
	    Select->options|= OPTION_BUFFER_RESULT;
	  }
    break;

  case 677:
#line 4000 "sql_yacc.yy"
    {
	    if (check_simple_select())
	      YYABORT;
	    Select->options|= OPTION_FOUND_ROWS;
	  }
    break;

  case 678:
#line 4006 "sql_yacc.yy"
    {
            Lex->safe_to_cache_query=0;
	    Lex->select_lex.options&= ~OPTION_TO_QUERY_CACHE;
            Lex->select_lex.sql_cache= SELECT_LEX::SQL_NO_CACHE;
          }
    break;

  case 679:
#line 4012 "sql_yacc.yy"
    {
            /* Honor this flag only if SQL_NO_CACHE wasn't specified. */
            if (Lex->select_lex.sql_cache != SELECT_LEX::SQL_NO_CACHE)
            {
              Lex->safe_to_cache_query=1;
	      Lex->select_lex.options|= OPTION_TO_QUERY_CACHE;
              Lex->select_lex.sql_cache= SELECT_LEX::SQL_CACHE;
            }
	  }
    break;

  case 680:
#line 4021 "sql_yacc.yy"
    { Select->options|= SELECT_ALL; }
    break;

  case 682:
#line 4027 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    lex->current_select->set_lock_for_tables(TL_WRITE);
	    lex->safe_to_cache_query=0;
	  }
    break;

  case 683:
#line 4033 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    lex->current_select->
	      set_lock_for_tables(TL_READ_WITH_SHARED_LOCKS);
	    lex->safe_to_cache_query=0;
	  }
    break;

  case 686:
#line 4045 "sql_yacc.yy"
    {
	    THD *thd= YYTHD;
	    if (add_item_to_list(thd,
                                 new Item_field(&thd->lex->current_select->
                                                context,
                                                NULL, NULL, "*")))
	      YYABORT;
	    (thd->lex->current_select->with_wild)++;
	  }
    break;

  case 687:
#line 4058 "sql_yacc.yy"
    {
	    if (add_item_to_list(YYTHD, (yyvsp[-2].item)))
	      YYABORT;
	    if ((yyvsp[0].lex_str).str)
            {
	      (yyvsp[-2].item)->set_name((yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length, system_charset_info);
              (yyvsp[-2].item)->is_autogenerated_name= FALSE;
            }
	    else if (!(yyvsp[-2].item)->name) {
	      char *str = (yyvsp[-3].simple_string);
	      if (str[-1] == '`')
	        str--;
	      (yyvsp[-2].item)->set_name(str,(uint) ((yyvsp[-1].simple_string) - str), YYTHD->charset());
	    }
	  }
    break;

  case 688:
#line 4075 "sql_yacc.yy"
    { (yyval.simple_string)=(char*) Lex->tok_start; }
    break;

  case 689:
#line 4078 "sql_yacc.yy"
    { (yyval.simple_string)=(char*) Lex->tok_end; }
    break;

  case 690:
#line 4081 "sql_yacc.yy"
    { (yyval.item)=(yyvsp[0].item); }
    break;

  case 691:
#line 4082 "sql_yacc.yy"
    { (yyval.item)=(yyvsp[0].item); }
    break;

  case 692:
#line 4085 "sql_yacc.yy"
    { (yyval.lex_str)=null_lex_str;}
    break;

  case 693:
#line 4086 "sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[0].lex_str); }
    break;

  case 694:
#line 4087 "sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[0].lex_str); }
    break;

  case 695:
#line 4088 "sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[0].lex_str); }
    break;

  case 696:
#line 4089 "sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[0].lex_str); }
    break;

  case 697:
#line 4093 "sql_yacc.yy"
    {}
    break;

  case 698:
#line 4094 "sql_yacc.yy"
    {}
    break;

  case 699:
#line 4098 "sql_yacc.yy"
    { Select->expr_list.push_front(new List<Item>); }
    break;

  case 700:
#line 4100 "sql_yacc.yy"
    {
            List<Item> *list= Select->expr_list.pop();
            if (list->elements)
            {
              list->push_front((yyvsp[-2].item));
              (yyval.item)= new Item_cond_or(*list);
              /* optimize construction of logical OR to reduce
                 amount of objects for complex expressions */
            }
            else
              (yyval.item)= (yyvsp[-2].item);
            delete list;
          }
    break;

  case 702:
#line 4118 "sql_yacc.yy"
    { Select->expr_list.head()->push_back((yyvsp[0].item)); }
    break;

  case 703:
#line 4122 "sql_yacc.yy"
    { (yyval.item)= new Item_cond_xor((yyvsp[-2].item),(yyvsp[0].item)); }
    break;

  case 704:
#line 4123 "sql_yacc.yy"
    { Select->expr_list.push_front(new List<Item>); }
    break;

  case 705:
#line 4125 "sql_yacc.yy"
    {
            List<Item> *list= Select->expr_list.pop();
            if (list->elements)
            {
              list->push_front((yyvsp[-2].item));
              (yyval.item)= new Item_cond_and(*list);
              /* optimize construction of logical AND to reduce
                 amount of objects for complex expressions */
            }
            else
              (yyval.item)= (yyvsp[-2].item);
            delete list;
          }
    break;

  case 707:
#line 4143 "sql_yacc.yy"
    { Select->expr_list.head()->push_back((yyvsp[0].item)); }
    break;

  case 708:
#line 4147 "sql_yacc.yy"
    { (yyval.item)= negate_expression(YYTHD, (yyvsp[0].item)); }
    break;

  case 710:
#line 4151 "sql_yacc.yy"
    { (yyval.item)= is_truth_value((yyvsp[-2].item),1,0); }
    break;

  case 711:
#line 4152 "sql_yacc.yy"
    { (yyval.item)= is_truth_value((yyvsp[-3].item),0,0); }
    break;

  case 712:
#line 4153 "sql_yacc.yy"
    { (yyval.item)= is_truth_value((yyvsp[-2].item),0,1); }
    break;

  case 713:
#line 4154 "sql_yacc.yy"
    { (yyval.item)= is_truth_value((yyvsp[-3].item),1,1); }
    break;

  case 714:
#line 4155 "sql_yacc.yy"
    { (yyval.item)= new Item_func_isnull((yyvsp[-2].item)); }
    break;

  case 715:
#line 4156 "sql_yacc.yy"
    { (yyval.item)= new Item_func_isnotnull((yyvsp[-3].item)); }
    break;

  case 717:
#line 4160 "sql_yacc.yy"
    { (yyval.item)= new Item_func_isnull((yyvsp[-2].item)); }
    break;

  case 718:
#line 4161 "sql_yacc.yy"
    { (yyval.item)= new Item_func_isnotnull((yyvsp[-3].item)); }
    break;

  case 719:
#line 4162 "sql_yacc.yy"
    { (yyval.item)= new Item_func_equal((yyvsp[-2].item),(yyvsp[0].item)); }
    break;

  case 720:
#line 4164 "sql_yacc.yy"
    { (yyval.item)= (*(yyvsp[-1].boolfunc2creator))(0)->create((yyvsp[-2].item),(yyvsp[0].item)); }
    break;

  case 721:
#line 4166 "sql_yacc.yy"
    { (yyval.item)= all_any_subquery_creator((yyvsp[-3].item), (yyvsp[-2].boolfunc2creator), (yyvsp[-1].num), (yyvsp[0].select_lex)); }
    break;

  case 723:
#line 4171 "sql_yacc.yy"
    { 
            if ((yyvsp[-1].item_list)->elements == 1)
              (yyval.item)= new Item_func_eq((yyvsp[-4].item), (yyvsp[-1].item_list)->head());
            else
            {
              (yyvsp[-1].item_list)->push_front((yyvsp[-4].item));
              (yyval.item)= new Item_func_in(*(yyvsp[-1].item_list));
            }
          }
    break;

  case 724:
#line 4181 "sql_yacc.yy"
    {
            if ((yyvsp[-1].item_list)->elements == 1)
              (yyval.item)= new Item_func_ne((yyvsp[-5].item), (yyvsp[-1].item_list)->head());
            else
            {
              (yyvsp[-1].item_list)->push_front((yyvsp[-5].item));
              Item_func_in *item = new Item_func_in(*(yyvsp[-1].item_list));
              item->negate();
              (yyval.item)= item;
            }            
          }
    break;

  case 725:
#line 4193 "sql_yacc.yy"
    { (yyval.item)= new Item_in_subselect((yyvsp[-2].item), (yyvsp[0].select_lex)); }
    break;

  case 726:
#line 4195 "sql_yacc.yy"
    { (yyval.item)= negate_expression(YYTHD, new Item_in_subselect((yyvsp[-3].item), (yyvsp[0].select_lex))); }
    break;

  case 727:
#line 4197 "sql_yacc.yy"
    { (yyval.item)= new Item_func_between((yyvsp[-4].item),(yyvsp[-2].item),(yyvsp[0].item)); }
    break;

  case 728:
#line 4199 "sql_yacc.yy"
    {
      Item_func_between *item= new Item_func_between((yyvsp[-5].item),(yyvsp[-2].item),(yyvsp[0].item));
      item->negate();
      (yyval.item)= item;
    }
    break;

  case 729:
#line 4205 "sql_yacc.yy"
    { (yyval.item)= new Item_func_eq(new Item_func_soundex((yyvsp[-3].item)),
				 new Item_func_soundex((yyvsp[0].item))); }
    break;

  case 730:
#line 4208 "sql_yacc.yy"
    { (yyval.item)= new Item_func_like((yyvsp[-3].item),(yyvsp[-1].item),(yyvsp[0].item),Lex->escape_used); }
    break;

  case 731:
#line 4210 "sql_yacc.yy"
    { (yyval.item)= new Item_func_not(new Item_func_like((yyvsp[-4].item),(yyvsp[-1].item),(yyvsp[0].item), Lex->escape_used)); }
    break;

  case 732:
#line 4211 "sql_yacc.yy"
    { (yyval.item)= new Item_func_regex((yyvsp[-2].item),(yyvsp[0].item)); }
    break;

  case 733:
#line 4213 "sql_yacc.yy"
    { (yyval.item)= negate_expression(YYTHD, new Item_func_regex((yyvsp[-3].item),(yyvsp[0].item))); }
    break;

  case 735:
#line 4217 "sql_yacc.yy"
    { (yyval.item)= new Item_func_bit_or((yyvsp[-2].item),(yyvsp[0].item)); }
    break;

  case 737:
#line 4221 "sql_yacc.yy"
    { (yyval.item)= new Item_func_bit_and((yyvsp[-2].item),(yyvsp[0].item)); }
    break;

  case 739:
#line 4226 "sql_yacc.yy"
    { (yyval.item)= new Item_func_shift_left((yyvsp[-2].item),(yyvsp[0].item)); }
    break;

  case 740:
#line 4228 "sql_yacc.yy"
    { (yyval.item)= new Item_func_shift_right((yyvsp[-2].item),(yyvsp[0].item)); }
    break;

  case 742:
#line 4232 "sql_yacc.yy"
    { (yyval.item)= new Item_func_plus((yyvsp[-2].item),(yyvsp[0].item)); }
    break;

  case 743:
#line 4233 "sql_yacc.yy"
    { (yyval.item)= new Item_func_minus((yyvsp[-2].item),(yyvsp[0].item)); }
    break;

  case 744:
#line 4235 "sql_yacc.yy"
    { (yyval.item)= new Item_date_add_interval((yyvsp[-3].item),(yyvsp[-1].item),(yyvsp[0].interval),0); }
    break;

  case 745:
#line 4237 "sql_yacc.yy"
    { (yyval.item)= new Item_date_add_interval((yyvsp[-3].item),(yyvsp[-1].item),(yyvsp[0].interval),1); }
    break;

  case 747:
#line 4241 "sql_yacc.yy"
    { (yyval.item)= new Item_func_mul((yyvsp[-2].item),(yyvsp[0].item)); }
    break;

  case 748:
#line 4242 "sql_yacc.yy"
    { (yyval.item)= new Item_func_div((yyvsp[-2].item),(yyvsp[0].item)); }
    break;

  case 749:
#line 4243 "sql_yacc.yy"
    { (yyval.item)= new Item_func_mod((yyvsp[-2].item),(yyvsp[0].item)); }
    break;

  case 750:
#line 4244 "sql_yacc.yy"
    { (yyval.item)= new Item_func_int_div((yyvsp[-2].item),(yyvsp[0].item)); }
    break;

  case 751:
#line 4245 "sql_yacc.yy"
    { (yyval.item)= new Item_func_mod((yyvsp[-2].item),(yyvsp[0].item)); }
    break;

  case 753:
#line 4249 "sql_yacc.yy"
    { (yyval.item)= new Item_func_bit_xor((yyvsp[-2].item),(yyvsp[0].item)); }
    break;

  case 763:
#line 4257 "sql_yacc.yy"
    { (yyval.boolfunc2creator) = &comp_eq_creator; }
    break;

  case 764:
#line 4258 "sql_yacc.yy"
    { (yyval.boolfunc2creator) = &comp_ge_creator; }
    break;

  case 765:
#line 4259 "sql_yacc.yy"
    { (yyval.boolfunc2creator) = &comp_gt_creator; }
    break;

  case 766:
#line 4260 "sql_yacc.yy"
    { (yyval.boolfunc2creator) = &comp_le_creator; }
    break;

  case 767:
#line 4261 "sql_yacc.yy"
    { (yyval.boolfunc2creator) = &comp_lt_creator; }
    break;

  case 768:
#line 4262 "sql_yacc.yy"
    { (yyval.boolfunc2creator) = &comp_ne_creator; }
    break;

  case 769:
#line 4265 "sql_yacc.yy"
    { (yyval.num) = 1; }
    break;

  case 770:
#line 4266 "sql_yacc.yy"
    { (yyval.num) = 0; }
    break;

  case 771:
#line 4270 "sql_yacc.yy"
    { (yyval.item)=(yyvsp[0].item); }
    break;

  case 773:
#line 4276 "sql_yacc.yy"
    {
	    (yyval.item)= new Item_func_set_collation((yyvsp[-2].item),
					    new Item_string((yyvsp[0].lex_str).str,
							    (yyvsp[0].lex_str).length,
                                                            YYTHD->charset()));
	  }
    break;

  case 776:
#line 4285 "sql_yacc.yy"
    {
	    (yyval.item)= new Item_func_set_user_var((yyvsp[-2].lex_str),(yyvsp[0].item));
	    LEX *lex= Lex;
	    lex->uncacheable(UNCACHEABLE_RAND);
	    lex->variables_used= 1;
	  }
    break;

  case 777:
#line 4292 "sql_yacc.yy"
    {
	    (yyval.item)= new Item_func_get_user_var((yyvsp[0].lex_str));
	    LEX *lex= Lex;
	    lex->uncacheable(UNCACHEABLE_RAND);
	    lex->variables_used= 1;
	  }
    break;

  case 778:
#line 4299 "sql_yacc.yy"
    {

            if ((yyvsp[-1].lex_str).str && (yyvsp[0].lex_str).str && check_reserved_words(&(yyvsp[-1].lex_str)))
            {
              yyerror(ER(ER_SYNTAX_ERROR));
              YYABORT;
            }
	    if (!((yyval.item)= get_system_var(YYTHD, (yyvsp[-2].var_type), (yyvsp[-1].lex_str), (yyvsp[0].lex_str))))
	      YYABORT;
	    Lex->variables_used= 1;
	  }
    break;

  case 780:
#line 4312 "sql_yacc.yy"
    { (yyval.item)= new Item_func_concat((yyvsp[-2].item), (yyvsp[0].item)); }
    break;

  case 781:
#line 4313 "sql_yacc.yy"
    { (yyval.item)= (yyvsp[0].item); }
    break;

  case 782:
#line 4314 "sql_yacc.yy"
    { (yyval.item)= new Item_func_neg((yyvsp[0].item)); }
    break;

  case 783:
#line 4315 "sql_yacc.yy"
    { (yyval.item)= new Item_func_bit_neg((yyvsp[0].item)); }
    break;

  case 784:
#line 4316 "sql_yacc.yy"
    { (yyval.item)= negate_expression(YYTHD, (yyvsp[0].item)); }
    break;

  case 785:
#line 4317 "sql_yacc.yy"
    { (yyval.item)= (yyvsp[-1].item); }
    break;

  case 786:
#line 4319 "sql_yacc.yy"
    {
	    (yyvsp[-1].item_list)->push_front((yyvsp[-3].item));
	    (yyval.item)= new Item_row(*(yyvsp[-1].item_list));
	  }
    break;

  case 787:
#line 4324 "sql_yacc.yy"
    {
	    (yyvsp[-1].item_list)->push_front((yyvsp[-3].item));
	    (yyval.item)= new Item_row(*(yyvsp[-1].item_list));
	  }
    break;

  case 788:
#line 4328 "sql_yacc.yy"
    { (yyval.item)= (yyvsp[0].item); }
    break;

  case 789:
#line 4329 "sql_yacc.yy"
    { (yyval.item)= (yyvsp[0].item); }
    break;

  case 790:
#line 4330 "sql_yacc.yy"
    { (yyval.item)= (yyvsp[-1].item); }
    break;

  case 791:
#line 4332 "sql_yacc.yy"
    { (yyvsp[-5].item_list)->push_front((yyvsp[-2].item));
            Select->add_ftfunc_to_list((Item_func_match*)
                                        ((yyval.item)=new Item_func_match(*(yyvsp[-5].item_list),(yyvsp[-1].num)))); }
    break;

  case 792:
#line 4335 "sql_yacc.yy"
    { (yyval.item)= new Item_func_ascii((yyvsp[-1].item)); }
    break;

  case 793:
#line 4337 "sql_yacc.yy"
    {
            (yyval.item)= create_func_cast((yyvsp[0].item), ITEM_CAST_CHAR, -1, 0, &my_charset_bin);
	  }
    break;

  case 794:
#line 4341 "sql_yacc.yy"
    {
            LEX *lex= Lex;
	    (yyval.item)= create_func_cast((yyvsp[-3].item), (yyvsp[-1].cast_type),
                                 lex->length ? atoi(lex->length) : -1,
                                 lex->dec ? atoi(lex->dec) : 0,
                                 lex->charset);
	  }
    break;

  case 795:
#line 4349 "sql_yacc.yy"
    { (yyval.item)= new Item_func_case(* (yyvsp[-2].item_list), (yyvsp[-4].item), (yyvsp[-1].item) ); }
    break;

  case 796:
#line 4351 "sql_yacc.yy"
    {
	    (yyval.item)= create_func_cast((yyvsp[-3].item), (yyvsp[-1].cast_type),
				 Lex->length ? atoi(Lex->length) : -1,
                                 Lex->dec ? atoi(Lex->dec) : 0,
				 Lex->charset);
	  }
    break;

  case 797:
#line 4358 "sql_yacc.yy"
    { (yyval.item)= new Item_func_conv_charset((yyvsp[-3].item),(yyvsp[-1].charset)); }
    break;

  case 798:
#line 4360 "sql_yacc.yy"
    {
	    if ((yyvsp[-1].item)->is_splocal())
	    {
	      Item_splocal *il= static_cast<Item_splocal *>((yyvsp[-1].item));

	      my_error(ER_WRONG_COLUMN_NAME, MYF(0), il->my_name()->str);
	      YYABORT;
	    }
	    (yyval.item)= new Item_default_value(Lex->current_context(), (yyvsp[-1].item));
	  }
    break;

  case 799:
#line 4371 "sql_yacc.yy"
    { (yyval.item)= new Item_insert_value(Lex->current_context(), (yyvsp[-1].item)); }
    break;

  case 800:
#line 4373 "sql_yacc.yy"
    {
	    if (!(yyvsp[-2].symbol).symbol->create_func)
	    {
              my_error(ER_FEATURE_DISABLED, MYF(0),
                       (yyvsp[-2].symbol).symbol->group->name,
                       (yyvsp[-2].symbol).symbol->group->needed_define);
	      YYABORT;
	    }
	    (yyval.item)= ((Item*(*)(void))((yyvsp[-2].symbol).symbol->create_func))();
	  }
    break;

  case 801:
#line 4384 "sql_yacc.yy"
    {
	    if (!(yyvsp[-3].symbol).symbol->create_func)
	    {
              my_error(ER_FEATURE_DISABLED, MYF(0),
                       (yyvsp[-3].symbol).symbol->group->name,
                       (yyvsp[-3].symbol).symbol->group->needed_define);
	      YYABORT;
	    }
	    (yyval.item)= ((Item*(*)(Item*))((yyvsp[-3].symbol).symbol->create_func))((yyvsp[-1].item));
	  }
    break;

  case 802:
#line 4395 "sql_yacc.yy"
    {
	    if (!(yyvsp[-5].symbol).symbol->create_func)
	    {
	      my_error(ER_FEATURE_DISABLED, MYF(0),
                       (yyvsp[-5].symbol).symbol->group->name,
                       (yyvsp[-5].symbol).symbol->group->needed_define);
	      YYABORT;
	    }
	    (yyval.item)= ((Item*(*)(Item*,Item*))((yyvsp[-5].symbol).symbol->create_func))((yyvsp[-3].item),(yyvsp[-1].item));
	  }
    break;

  case 803:
#line 4406 "sql_yacc.yy"
    {
	    if (!(yyvsp[-7].symbol).symbol->create_func)
	    {
              my_error(ER_FEATURE_DISABLED, MYF(0),
                       (yyvsp[-7].symbol).symbol->group->name,
                       (yyvsp[-7].symbol).symbol->group->needed_define);
	      YYABORT;
	    }
	    (yyval.item)= ((Item*(*)(Item*,Item*,Item*))((yyvsp[-7].symbol).symbol->create_func))((yyvsp[-5].item),(yyvsp[-3].item),(yyvsp[-1].item));
	  }
    break;

  case 804:
#line 4417 "sql_yacc.yy"
    { (yyval.item)= new Item_date_add_interval((yyvsp[-3].item), (yyvsp[-1].item), INTERVAL_DAY, 0);}
    break;

  case 805:
#line 4419 "sql_yacc.yy"
    { (yyval.item)= new Item_date_add_interval((yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 0); }
    break;

  case 806:
#line 4421 "sql_yacc.yy"
    { (yyval.item)= new Item_func_repeat((yyvsp[-3].item),(yyvsp[-1].item)); }
    break;

  case 807:
#line 4423 "sql_yacc.yy"
    { (yyval.item)= new Item_func_atan((yyvsp[-1].item)); }
    break;

  case 808:
#line 4425 "sql_yacc.yy"
    { (yyval.item)= new Item_func_atan((yyvsp[-3].item),(yyvsp[-1].item)); }
    break;

  case 809:
#line 4427 "sql_yacc.yy"
    { (yyval.item)= new Item_func_char(*(yyvsp[-1].item_list)); }
    break;

  case 810:
#line 4429 "sql_yacc.yy"
    { (yyval.item)= new Item_func_char(*(yyvsp[-3].item_list), (yyvsp[-1].charset)); }
    break;

  case 811:
#line 4431 "sql_yacc.yy"
    { (yyval.item)= new Item_func_charset((yyvsp[-1].item)); }
    break;

  case 812:
#line 4433 "sql_yacc.yy"
    { (yyval.item)= new Item_func_coalesce(* (yyvsp[-1].item_list)); }
    break;

  case 813:
#line 4435 "sql_yacc.yy"
    { (yyval.item)= new Item_func_collation((yyvsp[-1].item)); }
    break;

  case 814:
#line 4437 "sql_yacc.yy"
    { (yyval.item)= new Item_func_concat(* (yyvsp[-1].item_list)); }
    break;

  case 815:
#line 4439 "sql_yacc.yy"
    { (yyvsp[-1].item_list)->push_front((yyvsp[-3].item)); (yyval.item)= new Item_func_concat_ws(*(yyvsp[-1].item_list)); }
    break;

  case 816:
#line 4441 "sql_yacc.yy"
    {
            if (Lex->add_time_zone_tables_to_query_tables(YYTHD))
              YYABORT;
	    (yyval.item)= new Item_func_convert_tz((yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item));
	  }
    break;

  case 817:
#line 4447 "sql_yacc.yy"
    { (yyval.item)= new Item_func_curdate_local(); Lex->safe_to_cache_query=0; }
    break;

  case 818:
#line 4449 "sql_yacc.yy"
    { (yyval.item)= new Item_func_curtime_local(); Lex->safe_to_cache_query=0; }
    break;

  case 819:
#line 4451 "sql_yacc.yy"
    {
	    (yyval.item)= new Item_func_curtime_local((yyvsp[-1].item));
	    Lex->safe_to_cache_query=0;
	  }
    break;

  case 820:
#line 4456 "sql_yacc.yy"
    { (yyval.item)= create_func_current_user(); }
    break;

  case 821:
#line 4458 "sql_yacc.yy"
    { (yyval.item)= new Item_date_add_interval((yyvsp[-4].item),(yyvsp[-2].item),(yyvsp[-1].interval),0); }
    break;

  case 822:
#line 4460 "sql_yacc.yy"
    { (yyval.item)= new Item_date_add_interval((yyvsp[-4].item),(yyvsp[-2].item),(yyvsp[-1].interval),1); }
    break;

  case 823:
#line 4462 "sql_yacc.yy"
    {
	    (yyval.item)= new Item_func_database();
            Lex->safe_to_cache_query=0;
	  }
    break;

  case 824:
#line 4467 "sql_yacc.yy"
    { (yyval.item)= new Item_date_typecast((yyvsp[-1].item)); }
    break;

  case 825:
#line 4469 "sql_yacc.yy"
    { (yyval.item)= new Item_func_dayofmonth((yyvsp[-1].item)); }
    break;

  case 826:
#line 4471 "sql_yacc.yy"
    { (yyvsp[-1].item_list)->push_front((yyvsp[-3].item)); (yyval.item)= new Item_func_elt(*(yyvsp[-1].item_list)); }
    break;

  case 827:
#line 4473 "sql_yacc.yy"
    { (yyval.item)= new Item_func_make_set((yyvsp[-3].item), *(yyvsp[-1].item_list)); }
    break;

  case 828:
#line 4475 "sql_yacc.yy"
    {
	    (yyval.item)= new Item_func_encrypt((yyvsp[-1].item));
	    Lex->uncacheable(UNCACHEABLE_RAND);
	  }
    break;

  case 829:
#line 4479 "sql_yacc.yy"
    { (yyval.item)= new Item_func_encrypt((yyvsp[-3].item),(yyvsp[-1].item)); }
    break;

  case 830:
#line 4481 "sql_yacc.yy"
    { (yyval.item)= new Item_func_decode((yyvsp[-3].item),(yyvsp[-1].lex_str).str); }
    break;

  case 831:
#line 4483 "sql_yacc.yy"
    { (yyval.item)= new Item_func_encode((yyvsp[-3].item),(yyvsp[-1].lex_str).str); }
    break;

  case 832:
#line 4485 "sql_yacc.yy"
    { (yyval.item)= new Item_func_des_decrypt((yyvsp[-1].item)); }
    break;

  case 833:
#line 4487 "sql_yacc.yy"
    { (yyval.item)= new Item_func_des_decrypt((yyvsp[-3].item),(yyvsp[-1].item)); }
    break;

  case 834:
#line 4489 "sql_yacc.yy"
    { (yyval.item)= new Item_func_des_encrypt((yyvsp[-1].item)); }
    break;

  case 835:
#line 4491 "sql_yacc.yy"
    { (yyval.item)= new Item_func_des_encrypt((yyvsp[-3].item),(yyvsp[-1].item)); }
    break;

  case 836:
#line 4493 "sql_yacc.yy"
    { (yyval.item)= new Item_func_export_set((yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item)); }
    break;

  case 837:
#line 4495 "sql_yacc.yy"
    { (yyval.item)= new Item_func_export_set((yyvsp[-7].item), (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item)); }
    break;

  case 838:
#line 4497 "sql_yacc.yy"
    { (yyval.item)= new Item_func_export_set((yyvsp[-9].item), (yyvsp[-7].item), (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item)); }
    break;

  case 839:
#line 4499 "sql_yacc.yy"
    { (yyval.item)= new Item_func_format((yyvsp[-3].item),atoi((yyvsp[-1].lex_str).str)); }
    break;

  case 840:
#line 4501 "sql_yacc.yy"
    { (yyval.item)= new Item_func_from_unixtime((yyvsp[-1].item)); }
    break;

  case 841:
#line 4503 "sql_yacc.yy"
    {
	    (yyval.item)= new Item_func_date_format (new Item_func_from_unixtime((yyvsp[-3].item)),(yyvsp[-1].item),0);
	  }
    break;

  case 842:
#line 4507 "sql_yacc.yy"
    { (yyvsp[-1].item_list)->push_front((yyvsp[-3].item)); (yyval.item)= new Item_func_field(*(yyvsp[-1].item_list)); }
    break;

  case 843:
#line 4509 "sql_yacc.yy"
    {
#ifdef HAVE_SPATIAL
	    (yyval.item)= (yyvsp[0].item);
#else
	    my_error(ER_FEATURE_DISABLED, MYF(0),
                     sym_group_geom.name, sym_group_geom.needed_define);
	    YYABORT;
#endif
	  }
    break;

  case 844:
#line 4519 "sql_yacc.yy"
    { (yyval.item)= new Item_func_get_format((yyvsp[-3].date_time_type), (yyvsp[-1].item)); }
    break;

  case 845:
#line 4521 "sql_yacc.yy"
    { (yyval.item)= new Item_func_hour((yyvsp[-1].item)); }
    break;

  case 846:
#line 4523 "sql_yacc.yy"
    { (yyval.item)= new Item_func_if((yyvsp[-5].item),(yyvsp[-3].item),(yyvsp[-1].item)); }
    break;

  case 847:
#line 4525 "sql_yacc.yy"
    { (yyval.item)= new Item_func_insert((yyvsp[-7].item),(yyvsp[-5].item),(yyvsp[-3].item),(yyvsp[-1].item)); }
    break;

  case 848:
#line 4528 "sql_yacc.yy"
    { (yyval.item)= new Item_date_add_interval((yyvsp[0].item),(yyvsp[-3].item),(yyvsp[-2].interval),0); }
    break;

  case 849:
#line 4530 "sql_yacc.yy"
    {
            if ((yyvsp[0].item)->type() != Item::ROW_ITEM)
            {
              yyerror(ER(ER_SYNTAX_ERROR));
              YYABORT;
            }
            (yyval.item)= new Item_func_interval((Item_row *)(yyvsp[0].item));
          }
    break;

  case 850:
#line 4539 "sql_yacc.yy"
    {
	    (yyval.item)= new Item_func_last_insert_id();
	    Lex->safe_to_cache_query= 0;
	  }
    break;

  case 851:
#line 4544 "sql_yacc.yy"
    {
	    (yyval.item)= new Item_func_last_insert_id((yyvsp[-1].item));
	    Lex->safe_to_cache_query= 0;
	  }
    break;

  case 852:
#line 4549 "sql_yacc.yy"
    { (yyval.item)= new Item_func_left((yyvsp[-3].item),(yyvsp[-1].item)); }
    break;

  case 853:
#line 4551 "sql_yacc.yy"
    { (yyval.item)= new Item_func_locate((yyvsp[-1].item),(yyvsp[-3].item)); }
    break;

  case 854:
#line 4553 "sql_yacc.yy"
    { (yyval.item)= new Item_func_locate((yyvsp[-3].item),(yyvsp[-5].item),(yyvsp[-1].item)); }
    break;

  case 855:
#line 4555 "sql_yacc.yy"
    { (yyvsp[-1].item_list)->push_front((yyvsp[-3].item)); (yyval.item)= new Item_func_max(*(yyvsp[-1].item_list)); }
    break;

  case 856:
#line 4557 "sql_yacc.yy"
    { (yyvsp[-1].item_list)->push_front((yyvsp[-3].item)); (yyval.item)= new Item_func_min(*(yyvsp[-1].item_list)); }
    break;

  case 857:
#line 4559 "sql_yacc.yy"
    { (yyval.item)= new Item_func_log((yyvsp[-1].item)); }
    break;

  case 858:
#line 4561 "sql_yacc.yy"
    { (yyval.item)= new Item_func_log((yyvsp[-3].item), (yyvsp[-1].item)); }
    break;

  case 859:
#line 4563 "sql_yacc.yy"
    {
	    (yyval.item)= new Item_master_pos_wait((yyvsp[-3].item), (yyvsp[-1].item));
	    Lex->safe_to_cache_query=0;
		  }
    break;

  case 860:
#line 4568 "sql_yacc.yy"
    {
	    (yyval.item)= new Item_master_pos_wait((yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item));
	    Lex->safe_to_cache_query=0;
	  }
    break;

  case 861:
#line 4573 "sql_yacc.yy"
    { (yyval.item)= new Item_func_microsecond((yyvsp[-1].item)); }
    break;

  case 862:
#line 4575 "sql_yacc.yy"
    { (yyval.item)= new Item_func_minute((yyvsp[-1].item)); }
    break;

  case 863:
#line 4577 "sql_yacc.yy"
    { (yyval.item) = new Item_func_mod( (yyvsp[-3].item), (yyvsp[-1].item)); }
    break;

  case 864:
#line 4579 "sql_yacc.yy"
    { (yyval.item)= new Item_func_month((yyvsp[-1].item)); }
    break;

  case 865:
#line 4581 "sql_yacc.yy"
    { (yyval.item)= new Item_func_now_local(); Lex->safe_to_cache_query=0;}
    break;

  case 866:
#line 4583 "sql_yacc.yy"
    { (yyval.item)= new Item_func_now_local((yyvsp[-1].item)); Lex->safe_to_cache_query=0;}
    break;

  case 867:
#line 4585 "sql_yacc.yy"
    {
	    (yyval.item)= YYTHD->variables.old_passwords ?
              (Item *) new Item_func_old_password((yyvsp[-1].item)) :
	      (Item *) new Item_func_password((yyvsp[-1].item));
	  }
    break;

  case 868:
#line 4591 "sql_yacc.yy"
    { (yyval.item)=  new Item_func_old_password((yyvsp[-1].item)); }
    break;

  case 869:
#line 4593 "sql_yacc.yy"
    { (yyval.item) = new Item_func_locate((yyvsp[-1].item),(yyvsp[-3].item)); }
    break;

  case 870:
#line 4595 "sql_yacc.yy"
    { (yyval.item) = new Item_func_quarter((yyvsp[-1].item)); }
    break;

  case 871:
#line 4597 "sql_yacc.yy"
    { (yyval.item)= new Item_func_rand((yyvsp[-1].item)); Lex->uncacheable(UNCACHEABLE_RAND);}
    break;

  case 872:
#line 4599 "sql_yacc.yy"
    { (yyval.item)= new Item_func_rand(); Lex->uncacheable(UNCACHEABLE_RAND);}
    break;

  case 873:
#line 4601 "sql_yacc.yy"
    { (yyval.item)= new Item_func_replace((yyvsp[-5].item),(yyvsp[-3].item),(yyvsp[-1].item)); }
    break;

  case 874:
#line 4603 "sql_yacc.yy"
    { (yyval.item)= new Item_func_right((yyvsp[-3].item),(yyvsp[-1].item)); }
    break;

  case 875:
#line 4605 "sql_yacc.yy"
    { (yyval.item)= new Item_func_round((yyvsp[-1].item), new Item_int((char*)"0",0,1),0); }
    break;

  case 876:
#line 4606 "sql_yacc.yy"
    { (yyval.item)= new Item_func_round((yyvsp[-3].item),(yyvsp[-1].item),0); }
    break;

  case 877:
#line 4608 "sql_yacc.yy"
    {
	    (yyval.item)= new Item_func_row_count();
	    Lex->safe_to_cache_query= 0;
	  }
    break;

  case 878:
#line 4613 "sql_yacc.yy"
    { (yyval.item)= new Item_date_add_interval((yyvsp[-3].item), (yyvsp[-1].item), INTERVAL_DAY, 1);}
    break;

  case 879:
#line 4615 "sql_yacc.yy"
    { (yyval.item)= new Item_date_add_interval((yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 1); }
    break;

  case 880:
#line 4617 "sql_yacc.yy"
    { (yyval.item)= new Item_func_second((yyvsp[-1].item)); }
    break;

  case 881:
#line 4619 "sql_yacc.yy"
    { (yyval.item)= new Item_func_substr((yyvsp[-5].item),(yyvsp[-3].item),(yyvsp[-1].item)); }
    break;

  case 882:
#line 4621 "sql_yacc.yy"
    { (yyval.item)= new Item_func_substr((yyvsp[-3].item),(yyvsp[-1].item)); }
    break;

  case 883:
#line 4623 "sql_yacc.yy"
    { (yyval.item)= new Item_func_substr((yyvsp[-5].item),(yyvsp[-3].item),(yyvsp[-1].item)); }
    break;

  case 884:
#line 4625 "sql_yacc.yy"
    { (yyval.item)= new Item_func_substr((yyvsp[-3].item),(yyvsp[-1].item)); }
    break;

  case 885:
#line 4627 "sql_yacc.yy"
    { (yyval.item)= new Item_func_substr_index((yyvsp[-5].item),(yyvsp[-3].item),(yyvsp[-1].item)); }
    break;

  case 886:
#line 4629 "sql_yacc.yy"
    {
            if (global_system_variables.sysdate_is_now == 0)
              (yyval.item)= new Item_func_sysdate_local();
            else (yyval.item)= new Item_func_now_local();
            Lex->safe_to_cache_query=0;
          }
    break;

  case 887:
#line 4636 "sql_yacc.yy"
    {
            if (global_system_variables.sysdate_is_now == 0)
              (yyval.item)= new Item_func_sysdate_local((yyvsp[-1].item));
            else (yyval.item)= new Item_func_now_local((yyvsp[-1].item));
            Lex->safe_to_cache_query=0;
          }
    break;

  case 888:
#line 4643 "sql_yacc.yy"
    { (yyval.item)= new Item_time_typecast((yyvsp[-1].item)); }
    break;

  case 889:
#line 4645 "sql_yacc.yy"
    { (yyval.item)= new Item_datetime_typecast((yyvsp[-1].item)); }
    break;

  case 890:
#line 4647 "sql_yacc.yy"
    { (yyval.item)= new Item_func_add_time((yyvsp[-3].item), (yyvsp[-1].item), 1, 0); }
    break;

  case 891:
#line 4649 "sql_yacc.yy"
    { (yyval.item)= new Item_date_add_interval((yyvsp[-1].item),(yyvsp[-3].item),(yyvsp[-5].interval_time_st),0); }
    break;

  case 892:
#line 4651 "sql_yacc.yy"
    { (yyval.item)= new Item_func_timestamp_diff((yyvsp[-3].item),(yyvsp[-1].item),(yyvsp[-5].interval_time_st)); }
    break;

  case 893:
#line 4653 "sql_yacc.yy"
    { (yyval.item)= new Item_func_trim((yyvsp[-1].item)); }
    break;

  case 894:
#line 4655 "sql_yacc.yy"
    { (yyval.item)= new Item_func_ltrim((yyvsp[-1].item),(yyvsp[-3].item)); }
    break;

  case 895:
#line 4657 "sql_yacc.yy"
    { (yyval.item)= new Item_func_rtrim((yyvsp[-1].item),(yyvsp[-3].item)); }
    break;

  case 896:
#line 4659 "sql_yacc.yy"
    { (yyval.item)= new Item_func_trim((yyvsp[-1].item),(yyvsp[-3].item)); }
    break;

  case 897:
#line 4661 "sql_yacc.yy"
    { (yyval.item)= new Item_func_ltrim((yyvsp[-1].item)); }
    break;

  case 898:
#line 4663 "sql_yacc.yy"
    { (yyval.item)= new Item_func_rtrim((yyvsp[-1].item)); }
    break;

  case 899:
#line 4665 "sql_yacc.yy"
    { (yyval.item)= new Item_func_trim((yyvsp[-1].item)); }
    break;

  case 900:
#line 4667 "sql_yacc.yy"
    { (yyval.item)= new Item_func_trim((yyvsp[-1].item),(yyvsp[-3].item)); }
    break;

  case 901:
#line 4669 "sql_yacc.yy"
    { (yyval.item)= new Item_func_round((yyvsp[-3].item),(yyvsp[-1].item),1); }
    break;

  case 902:
#line 4671 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    sp_name *name= new sp_name((yyvsp[-5].lex_str), (yyvsp[-3].lex_str));

	    name->init_qname(YYTHD);
	    sp_add_used_routine(lex, YYTHD, name, TYPE_ENUM_FUNCTION);
	    if ((yyvsp[-1].item_list))
	      (yyval.item)= new Item_func_sp(Lex->current_context(), name, *(yyvsp[-1].item_list));
	    else
	      (yyval.item)= new Item_func_sp(Lex->current_context(), name);
	    lex->safe_to_cache_query=0;
	  }
    break;

  case 903:
#line 4684 "sql_yacc.yy"
    {
#ifdef HAVE_DLOPEN
            udf_func *udf= 0;
            if (using_udf_functions &&
                (udf= find_udf((yyvsp[-1].lex_str).str, (yyvsp[-1].lex_str).length)) &&
                udf->type == UDFTYPE_AGGREGATE)
            {
              LEX *lex= Lex;
              if (lex->current_select->inc_in_sum_expr())
              {
                yyerror(ER(ER_SYNTAX_ERROR));
                YYABORT;
              }
            }
            (yyval.udf)= udf;
#endif
          }
    break;

  case 904:
#line 4702 "sql_yacc.yy"
    {
#ifdef HAVE_DLOPEN
            udf_func *udf= (yyvsp[-2].udf);
            SELECT_LEX *sel= Select;

            if (udf)
            {
              if (udf->type == UDFTYPE_AGGREGATE)
                Select->in_sum_expr--;

              switch (udf->returns) {
              case STRING_RESULT:
                if (udf->type == UDFTYPE_FUNCTION)
                {
                  if ((yyvsp[-1].item_list) != NULL)
                    (yyval.item) = new Item_func_udf_str(udf, *(yyvsp[-1].item_list));
                  else
                    (yyval.item) = new Item_func_udf_str(udf);
                }
                else
                {
                  if ((yyvsp[-1].item_list) != NULL)
                    (yyval.item) = new Item_sum_udf_str(udf, *(yyvsp[-1].item_list));
                  else
                    (yyval.item) = new Item_sum_udf_str(udf);
                }
                break;
              case REAL_RESULT:
                if (udf->type == UDFTYPE_FUNCTION)
                {
                  if ((yyvsp[-1].item_list) != NULL)
                    (yyval.item) = new Item_func_udf_float(udf, *(yyvsp[-1].item_list));
                  else
                    (yyval.item) = new Item_func_udf_float(udf);
                }
                else
                {
                  if ((yyvsp[-1].item_list) != NULL)
                    (yyval.item) = new Item_sum_udf_float(udf, *(yyvsp[-1].item_list));
                  else
                    (yyval.item) = new Item_sum_udf_float(udf);
                }
                break;
              case INT_RESULT:
                if (udf->type == UDFTYPE_FUNCTION)
                {
                  if ((yyvsp[-1].item_list) != NULL)
                    (yyval.item) = new Item_func_udf_int(udf, *(yyvsp[-1].item_list));
                  else
                    (yyval.item) = new Item_func_udf_int(udf);
                }
                else
                {
                  if ((yyvsp[-1].item_list) != NULL)
                    (yyval.item) = new Item_sum_udf_int(udf, *(yyvsp[-1].item_list));
                  else
                    (yyval.item) = new Item_sum_udf_int(udf);
                }
                break;
              case DECIMAL_RESULT:
                if (udf->type == UDFTYPE_FUNCTION)
                {
                  if ((yyvsp[-1].item_list) != NULL)
                    (yyval.item) = new Item_func_udf_decimal(udf, *(yyvsp[-1].item_list));
                  else
                    (yyval.item) = new Item_func_udf_decimal(udf);
                }
                else
                {
                  if ((yyvsp[-1].item_list) != NULL)
                    (yyval.item) = new Item_sum_udf_decimal(udf, *(yyvsp[-1].item_list));
                  else
                    (yyval.item) = new Item_sum_udf_decimal(udf);
                }
                break;
              default:
                YYABORT;
              }
            }
            else
#endif /* HAVE_DLOPEN */
            {
	      LEX *lex= Lex;
              THD *thd= lex->thd;
              LEX_STRING db;
              if (thd->copy_db_to(&db.str, &db.length))
                YYABORT;
              sp_name *name= new sp_name(db, (yyvsp[-4].lex_str));
              if (name)
                name->init_qname(thd);

              sp_add_used_routine(lex, YYTHD, name, TYPE_ENUM_FUNCTION);
              if ((yyvsp[-1].item_list))
                (yyval.item)= new Item_func_sp(Lex->current_context(), name, *(yyvsp[-1].item_list));
              else
                (yyval.item)= new Item_func_sp(Lex->current_context(), name);
	      lex->safe_to_cache_query=0;
	    }
          }
    break;

  case 905:
#line 4802 "sql_yacc.yy"
    {
            (yyval.item)= new Item_func_unique_users((yyvsp[-7].item),atoi((yyvsp[-5].lex_str).str),atoi((yyvsp[-3].lex_str).str), * (yyvsp[-1].item_list));
	  }
    break;

  case 906:
#line 4806 "sql_yacc.yy"
    {
	    (yyval.item)= new Item_func_unix_timestamp();
	    Lex->safe_to_cache_query=0;
	  }
    break;

  case 907:
#line 4811 "sql_yacc.yy"
    { (yyval.item)= new Item_func_unix_timestamp((yyvsp[-1].item)); }
    break;

  case 908:
#line 4813 "sql_yacc.yy"
    { (yyval.item)= new Item_func_user(FALSE); Lex->safe_to_cache_query=0; }
    break;

  case 909:
#line 4815 "sql_yacc.yy"
    { (yyval.item)= new Item_func_curdate_utc(); Lex->safe_to_cache_query=0;}
    break;

  case 910:
#line 4817 "sql_yacc.yy"
    { (yyval.item)= new Item_func_curtime_utc(); Lex->safe_to_cache_query=0;}
    break;

  case 911:
#line 4819 "sql_yacc.yy"
    { (yyval.item)= new Item_func_now_utc(); Lex->safe_to_cache_query=0;}
    break;

  case 912:
#line 4821 "sql_yacc.yy"
    {
            (yyval.item)= new Item_func_week((yyvsp[-1].item),new Item_int((char*) "0",
				   YYTHD->variables.default_week_format,1));
          }
    break;

  case 913:
#line 4826 "sql_yacc.yy"
    { (yyval.item)= new Item_func_week((yyvsp[-3].item),(yyvsp[-1].item)); }
    break;

  case 914:
#line 4828 "sql_yacc.yy"
    { (yyval.item)= new Item_func_year((yyvsp[-1].item)); }
    break;

  case 915:
#line 4830 "sql_yacc.yy"
    { (yyval.item)= new Item_func_yearweek((yyvsp[-1].item),new Item_int((char*) "0",0,1)); }
    break;

  case 916:
#line 4832 "sql_yacc.yy"
    { (yyval.item)= new Item_func_yearweek((yyvsp[-3].item), (yyvsp[-1].item)); }
    break;

  case 917:
#line 4834 "sql_yacc.yy"
    {
	    (yyval.item)=new Item_func_benchmark((yyvsp[-3].ulong_num),(yyvsp[-1].item));
	    Lex->uncacheable(UNCACHEABLE_SIDEEFFECT);
	  }
    break;

  case 918:
#line 4839 "sql_yacc.yy"
    { (yyval.item)=new Item_extract( (yyvsp[-3].interval), (yyvsp[-1].item)); }
    break;

  case 919:
#line 4843 "sql_yacc.yy"
    { (yyval.item)= GEOM_NEW(Item_func_spatial_rel((yyvsp[-3].item), (yyvsp[-1].item), Item_func::SP_CONTAINS_FUNC)); }
    break;

  case 920:
#line 4845 "sql_yacc.yy"
    { (yyval.item)= GEOM_NEW(Item_func_geometry_from_text((yyvsp[-1].item))); }
    break;

  case 921:
#line 4847 "sql_yacc.yy"
    { (yyval.item)= GEOM_NEW(Item_func_geometry_from_text((yyvsp[-3].item), (yyvsp[-1].item))); }
    break;

  case 922:
#line 4849 "sql_yacc.yy"
    { (yyval.item)= GEOM_NEW(Item_func_geometry_from_wkb((yyvsp[-1].item))); }
    break;

  case 923:
#line 4851 "sql_yacc.yy"
    { (yyval.item)= GEOM_NEW(Item_func_geometry_from_wkb((yyvsp[-3].item), (yyvsp[-1].item))); }
    break;

  case 924:
#line 4853 "sql_yacc.yy"
    { (yyval.item)= GEOM_NEW(Item_func_spatial_collection(* (yyvsp[-1].item_list),
                           Geometry::wkb_geometrycollection,
                           Geometry::wkb_point)); }
    break;

  case 925:
#line 4857 "sql_yacc.yy"
    { (yyval.item)= GEOM_NEW(Item_func_spatial_collection(* (yyvsp[-1].item_list),
                  Geometry::wkb_linestring, Geometry::wkb_point)); }
    break;

  case 926:
#line 4860 "sql_yacc.yy"
    { (yyval.item)= GEOM_NEW( Item_func_spatial_collection(* (yyvsp[-1].item_list),
                   Geometry::wkb_multilinestring, Geometry::wkb_linestring)); }
    break;

  case 927:
#line 4863 "sql_yacc.yy"
    { (yyval.item)= GEOM_NEW(Item_func_geometry_from_text((yyvsp[-1].item))); }
    break;

  case 928:
#line 4865 "sql_yacc.yy"
    { (yyval.item)= GEOM_NEW(Item_func_geometry_from_text((yyvsp[-3].item), (yyvsp[-1].item))); }
    break;

  case 929:
#line 4867 "sql_yacc.yy"
    { (yyval.item)= GEOM_NEW(Item_func_geometry_from_text((yyvsp[-1].item))); }
    break;

  case 930:
#line 4869 "sql_yacc.yy"
    { (yyval.item)= GEOM_NEW(Item_func_geometry_from_text((yyvsp[-3].item), (yyvsp[-1].item))); }
    break;

  case 931:
#line 4871 "sql_yacc.yy"
    { (yyval.item)= GEOM_NEW(Item_func_geometry_from_text((yyvsp[-1].item))); }
    break;

  case 932:
#line 4873 "sql_yacc.yy"
    { (yyval.item)= GEOM_NEW(Item_func_geometry_from_text((yyvsp[-3].item), (yyvsp[-1].item))); }
    break;

  case 933:
#line 4875 "sql_yacc.yy"
    { (yyval.item)= GEOM_NEW(Item_func_spatial_collection(* (yyvsp[-1].item_list),
                  Geometry::wkb_multipoint, Geometry::wkb_point)); }
    break;

  case 934:
#line 4878 "sql_yacc.yy"
    { (yyval.item)= GEOM_NEW(Item_func_spatial_collection(* (yyvsp[-1].item_list),
                  Geometry::wkb_multipolygon, Geometry::wkb_polygon)); }
    break;

  case 935:
#line 4881 "sql_yacc.yy"
    { (yyval.item)= GEOM_NEW(Item_func_point((yyvsp[-3].item),(yyvsp[-1].item))); }
    break;

  case 936:
#line 4883 "sql_yacc.yy"
    { (yyval.item)= GEOM_NEW(Item_func_geometry_from_text((yyvsp[-1].item))); }
    break;

  case 937:
#line 4885 "sql_yacc.yy"
    { (yyval.item)= GEOM_NEW(Item_func_geometry_from_text((yyvsp[-3].item), (yyvsp[-1].item))); }
    break;

  case 938:
#line 4887 "sql_yacc.yy"
    { (yyval.item)= GEOM_NEW(Item_func_geometry_from_text((yyvsp[-1].item))); }
    break;

  case 939:
#line 4889 "sql_yacc.yy"
    { (yyval.item)= GEOM_NEW(Item_func_geometry_from_text((yyvsp[-3].item), (yyvsp[-1].item))); }
    break;

  case 940:
#line 4891 "sql_yacc.yy"
    { (yyval.item)= GEOM_NEW(Item_func_spatial_collection(* (yyvsp[-1].item_list),
	          Geometry::wkb_polygon, Geometry::wkb_linestring)); }
    break;

  case 941:
#line 4894 "sql_yacc.yy"
    { (yyval.item)= GEOM_NEW(Item_func_geometry_from_text((yyvsp[-1].item))); }
    break;

  case 942:
#line 4896 "sql_yacc.yy"
    { (yyval.item)= GEOM_NEW(Item_func_geometry_from_text((yyvsp[-3].item), (yyvsp[-1].item))); }
    break;

  case 943:
#line 4898 "sql_yacc.yy"
    { (yyval.item)= GEOM_NEW(Item_func_geometry_from_text((yyvsp[-1].item))); }
    break;

  case 944:
#line 4900 "sql_yacc.yy"
    { (yyval.item)= GEOM_NEW(Item_func_geometry_from_text((yyvsp[-3].item), (yyvsp[-1].item))); }
    break;

  case 945:
#line 4904 "sql_yacc.yy"
    { (yyval.num)= FT_NL;  }
    break;

  case 946:
#line 4905 "sql_yacc.yy"
    { (yyval.num)= FT_NL | FT_EXPAND; }
    break;

  case 947:
#line 4906 "sql_yacc.yy"
    { (yyval.num)= FT_BOOL; }
    break;

  case 948:
#line 4910 "sql_yacc.yy"
    { (yyval.item_list)= NULL; }
    break;

  case 949:
#line 4911 "sql_yacc.yy"
    { (yyval.item_list)= (yyvsp[0].item_list);}
    break;

  case 950:
#line 4915 "sql_yacc.yy"
    { Select->expr_list.push_front(new List<Item>); }
    break;

  case 951:
#line 4917 "sql_yacc.yy"
    { (yyval.item_list)= Select->expr_list.pop(); }
    break;

  case 952:
#line 4922 "sql_yacc.yy"
    {
	    Select->expr_list.head()->push_back((yyvsp[0].item));
	  }
    break;

  case 953:
#line 4926 "sql_yacc.yy"
    {
	    Select->expr_list.head()->push_back((yyvsp[0].item));
	  }
    break;

  case 954:
#line 4933 "sql_yacc.yy"
    {
	  if ((yyvsp[0].lex_str).str)
          {
	    (yyvsp[-2].item)->set_name((yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length, system_charset_info);
            (yyvsp[-2].item)->is_autogenerated_name= FALSE;
          }
	  else
	    (yyvsp[-2].item)->set_name((yyvsp[-3].simple_string), (uint) ((yyvsp[-1].simple_string) - (yyvsp[-3].simple_string)), YYTHD->charset());
	  (yyval.item)= (yyvsp[-2].item);
	}
    break;

  case 955:
#line 4947 "sql_yacc.yy"
    { (yyval.item)=new Item_sum_avg((yyvsp[-1].item)); }
    break;

  case 956:
#line 4949 "sql_yacc.yy"
    { (yyval.item)=new Item_sum_avg_distinct((yyvsp[-1].item)); }
    break;

  case 957:
#line 4951 "sql_yacc.yy"
    { (yyval.item)=new Item_sum_and((yyvsp[-1].item)); }
    break;

  case 958:
#line 4953 "sql_yacc.yy"
    { (yyval.item)=new Item_sum_or((yyvsp[-1].item)); }
    break;

  case 959:
#line 4955 "sql_yacc.yy"
    { (yyval.item)=new Item_sum_xor((yyvsp[-1].item)); }
    break;

  case 960:
#line 4957 "sql_yacc.yy"
    { (yyval.item)=new Item_sum_count(new Item_int((int32) 0L,1)); }
    break;

  case 961:
#line 4959 "sql_yacc.yy"
    { (yyval.item)=new Item_sum_count((yyvsp[-1].item)); }
    break;

  case 962:
#line 4961 "sql_yacc.yy"
    { Select->in_sum_expr++; }
    break;

  case 963:
#line 4963 "sql_yacc.yy"
    { Select->in_sum_expr--; }
    break;

  case 964:
#line 4965 "sql_yacc.yy"
    { (yyval.item)=new Item_sum_count_distinct(* (yyvsp[-2].item_list)); }
    break;

  case 965:
#line 4967 "sql_yacc.yy"
    { (yyval.item)= new Item_sum_unique_users((yyvsp[-7].item),atoi((yyvsp[-5].lex_str).str),atoi((yyvsp[-3].lex_str).str),(yyvsp[-1].item)); }
    break;

  case 966:
#line 4969 "sql_yacc.yy"
    { (yyval.item)=new Item_sum_min((yyvsp[-1].item)); }
    break;

  case 967:
#line 4976 "sql_yacc.yy"
    { (yyval.item)=new Item_sum_min((yyvsp[-1].item)); }
    break;

  case 968:
#line 4978 "sql_yacc.yy"
    { (yyval.item)=new Item_sum_max((yyvsp[-1].item)); }
    break;

  case 969:
#line 4980 "sql_yacc.yy"
    { (yyval.item)=new Item_sum_max((yyvsp[-1].item)); }
    break;

  case 970:
#line 4982 "sql_yacc.yy"
    { (yyval.item)=new Item_sum_std((yyvsp[-1].item), 0); }
    break;

  case 971:
#line 4984 "sql_yacc.yy"
    { (yyval.item)=new Item_sum_variance((yyvsp[-1].item), 0); }
    break;

  case 972:
#line 4986 "sql_yacc.yy"
    { (yyval.item)=new Item_sum_std((yyvsp[-1].item), 1); }
    break;

  case 973:
#line 4988 "sql_yacc.yy"
    { (yyval.item)=new Item_sum_variance((yyvsp[-1].item), 1); }
    break;

  case 974:
#line 4990 "sql_yacc.yy"
    { (yyval.item)=new Item_sum_sum((yyvsp[-1].item)); }
    break;

  case 975:
#line 4992 "sql_yacc.yy"
    { (yyval.item)=new Item_sum_sum_distinct((yyvsp[-1].item)); }
    break;

  case 976:
#line 4994 "sql_yacc.yy"
    { Select->in_sum_expr++; }
    break;

  case 977:
#line 4998 "sql_yacc.yy"
    {
            SELECT_LEX *sel= Select;
	    sel->in_sum_expr--;
	    (yyval.item)=new Item_func_group_concat(Lex->current_context(), (yyvsp[-5].num), (yyvsp[-3].item_list),
                                          sel->gorder_list, (yyvsp[-1].string));
	    (yyvsp[-3].item_list)->empty();
	  }
    break;

  case 978:
#line 5007 "sql_yacc.yy"
    { (yyval.num) = 0; }
    break;

  case 979:
#line 5008 "sql_yacc.yy"
    { (yyval.num) = 1; }
    break;

  case 980:
#line 5011 "sql_yacc.yy"
    { (yyval.string) = new (YYTHD->mem_root) String(",",1,default_charset_info); }
    break;

  case 981:
#line 5012 "sql_yacc.yy"
    { (yyval.string) = (yyvsp[0].string); }
    break;

  case 982:
#line 5017 "sql_yacc.yy"
    {
            Select->gorder_list = NULL;
	  }
    break;

  case 983:
#line 5021 "sql_yacc.yy"
    {
            SELECT_LEX *select= Select;
            select->gorder_list=
	      (SQL_LIST*) sql_memdup((char*) &select->order_list,
				     sizeof(st_sql_list));
	    select->order_list.empty();
	  }
    break;

  case 984:
#line 5032 "sql_yacc.yy"
    {
	  LEX *lex= Lex;
	  if (lex->current_select->inc_in_sum_expr())
	  {
	    yyerror(ER(ER_SYNTAX_ERROR));
	    YYABORT;
	  }
	}
    break;

  case 985:
#line 5041 "sql_yacc.yy"
    {
	  Select->in_sum_expr--;
	  (yyval.item)= (yyvsp[0].item);
	}
    break;

  case 986:
#line 5047 "sql_yacc.yy"
    { (yyval.cast_type)=ITEM_CAST_CHAR; Lex->charset= &my_charset_bin; Lex->dec= 0; }
    break;

  case 987:
#line 5048 "sql_yacc.yy"
    { (yyval.cast_type)=ITEM_CAST_CHAR; Lex->dec= 0; }
    break;

  case 988:
#line 5049 "sql_yacc.yy"
    { (yyval.cast_type)=ITEM_CAST_CHAR; Lex->charset= national_charset_info; Lex->dec=0; }
    break;

  case 989:
#line 5050 "sql_yacc.yy"
    { (yyval.cast_type)=ITEM_CAST_SIGNED_INT; Lex->charset= NULL; Lex->dec=Lex->length= (char*)0; }
    break;

  case 990:
#line 5051 "sql_yacc.yy"
    { (yyval.cast_type)=ITEM_CAST_SIGNED_INT; Lex->charset= NULL; Lex->dec=Lex->length= (char*)0; }
    break;

  case 991:
#line 5052 "sql_yacc.yy"
    { (yyval.cast_type)=ITEM_CAST_UNSIGNED_INT; Lex->charset= NULL; Lex->dec=Lex->length= (char*)0; }
    break;

  case 992:
#line 5053 "sql_yacc.yy"
    { (yyval.cast_type)=ITEM_CAST_UNSIGNED_INT; Lex->charset= NULL; Lex->dec=Lex->length= (char*)0; }
    break;

  case 993:
#line 5054 "sql_yacc.yy"
    { (yyval.cast_type)=ITEM_CAST_DATE; Lex->charset= NULL; Lex->dec=Lex->length= (char*)0; }
    break;

  case 994:
#line 5055 "sql_yacc.yy"
    { (yyval.cast_type)=ITEM_CAST_TIME; Lex->charset= NULL; Lex->dec=Lex->length= (char*)0; }
    break;

  case 995:
#line 5056 "sql_yacc.yy"
    { (yyval.cast_type)=ITEM_CAST_DATETIME; Lex->charset= NULL; Lex->dec=Lex->length= (char*)0; }
    break;

  case 996:
#line 5057 "sql_yacc.yy"
    { (yyval.cast_type)=ITEM_CAST_DECIMAL; Lex->charset= NULL; }
    break;

  case 997:
#line 5061 "sql_yacc.yy"
    { Select->expr_list.push_front(new List<Item>); }
    break;

  case 998:
#line 5063 "sql_yacc.yy"
    { (yyval.item_list)= Select->expr_list.pop(); }
    break;

  case 999:
#line 5066 "sql_yacc.yy"
    { Select->expr_list.head()->push_back((yyvsp[0].item)); }
    break;

  case 1000:
#line 5067 "sql_yacc.yy"
    { Select->expr_list.head()->push_back((yyvsp[0].item)); }
    break;

  case 1001:
#line 5070 "sql_yacc.yy"
    { (yyval.item_list)= (yyvsp[0].item_list); }
    break;

  case 1002:
#line 5071 "sql_yacc.yy"
    { (yyval.item_list)= (yyvsp[-1].item_list); }
    break;

  case 1003:
#line 5074 "sql_yacc.yy"
    { Select->expr_list.push_front(new List<Item>); }
    break;

  case 1004:
#line 5076 "sql_yacc.yy"
    { (yyval.item_list)= Select->expr_list.pop(); }
    break;

  case 1005:
#line 5079 "sql_yacc.yy"
    { Select->expr_list.head()->push_back((yyvsp[0].item)); }
    break;

  case 1006:
#line 5080 "sql_yacc.yy"
    { Select->expr_list.head()->push_back((yyvsp[0].item)); }
    break;

  case 1007:
#line 5083 "sql_yacc.yy"
    { (yyval.item)= NULL; }
    break;

  case 1008:
#line 5084 "sql_yacc.yy"
    { (yyval.item)= (yyvsp[0].item); }
    break;

  case 1009:
#line 5087 "sql_yacc.yy"
    { (yyval.item)= NULL; }
    break;

  case 1010:
#line 5088 "sql_yacc.yy"
    { (yyval.item)= (yyvsp[0].item); }
    break;

  case 1011:
#line 5091 "sql_yacc.yy"
    { Select->when_list.push_front(new List<Item>); }
    break;

  case 1012:
#line 5093 "sql_yacc.yy"
    { (yyval.item_list)= Select->when_list.pop(); }
    break;

  case 1013:
#line 5097 "sql_yacc.yy"
    {
	    SELECT_LEX *sel=Select;
	    sel->when_list.head()->push_back((yyvsp[-2].item));
	    sel->when_list.head()->push_back((yyvsp[0].item));
	}
    break;

  case 1014:
#line 5103 "sql_yacc.yy"
    {
	    SELECT_LEX *sel=Select;
	    sel->when_list.head()->push_back((yyvsp[-2].item));
	    sel->when_list.head()->push_back((yyvsp[0].item));
	  }
    break;

  case 1015:
#line 5111 "sql_yacc.yy"
    { (yyval.table_list)=(yyvsp[0].table_list); }
    break;

  case 1016:
#line 5112 "sql_yacc.yy"
    { (yyval.table_list)=(yyvsp[0].table_list); }
    break;

  case 1017:
#line 5113 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
            if (!((yyval.table_list)= lex->current_select->nest_last_join(lex->thd)))
              YYABORT;
          }
    break;

  case 1018:
#line 5121 "sql_yacc.yy"
    { YYERROR_UNLESS((yyval.table_list)=(yyvsp[0].table_list)); }
    break;

  case 1019:
#line 5126 "sql_yacc.yy"
    { (yyval.table_list)=(yyvsp[0].table_list); }
    break;

  case 1020:
#line 5128 "sql_yacc.yy"
    {
            YYERROR_UNLESS((yyvsp[-2].table_list) && ((yyval.table_list)=(yyvsp[0].table_list)));
          }
    break;

  case 1021:
#line 5148 "sql_yacc.yy"
    { YYERROR_UNLESS((yyvsp[-2].table_list) && ((yyval.table_list)=(yyvsp[0].table_list))); }
    break;

  case 1022:
#line 5150 "sql_yacc.yy"
    { YYERROR_UNLESS((yyvsp[-2].table_list) && ((yyval.table_list)=(yyvsp[0].table_list))); (yyvsp[0].table_list)->straight=1; }
    break;

  case 1023:
#line 5153 "sql_yacc.yy"
    {
            YYERROR_UNLESS((yyvsp[-3].table_list) && ((yyval.table_list)=(yyvsp[-1].table_list)));
            /* Change the current name resolution context to a local context. */
            if (push_new_name_resolution_context(YYTHD, (yyvsp[-3].table_list), (yyvsp[-1].table_list)))
              YYABORT;
          }
    break;

  case 1024:
#line 5160 "sql_yacc.yy"
    {
            add_join_on((yyvsp[-3].table_list),(yyvsp[0].item));
            Lex->pop_context();
          }
    break;

  case 1025:
#line 5166 "sql_yacc.yy"
    {
            YYERROR_UNLESS((yyvsp[-3].table_list) && ((yyval.table_list)=(yyvsp[-1].table_list)));
            /* Change the current name resolution context to a local context. */
            if (push_new_name_resolution_context(YYTHD, (yyvsp[-3].table_list), (yyvsp[-1].table_list)))
              YYABORT;
          }
    break;

  case 1026:
#line 5173 "sql_yacc.yy"
    {
            (yyvsp[-3].table_list)->straight=1;
            add_join_on((yyvsp[-3].table_list),(yyvsp[0].item));
            Lex->pop_context();
          }
    break;

  case 1027:
#line 5180 "sql_yacc.yy"
    {
	    SELECT_LEX *sel= Select;
            YYERROR_UNLESS((yyvsp[-3].table_list) && (yyvsp[-1].table_list));
	  }
    break;

  case 1028:
#line 5185 "sql_yacc.yy"
    { add_join_natural((yyvsp[-7].table_list),(yyvsp[-5].table_list),(yyvsp[-1].string_list)); (yyval.table_list)=(yyvsp[-5].table_list); }
    break;

  case 1029:
#line 5187 "sql_yacc.yy"
    {
            YYERROR_UNLESS((yyvsp[-3].table_list) && ((yyval.table_list)=(yyvsp[0].table_list)));
            add_join_natural((yyvsp[-3].table_list),(yyvsp[0].table_list),NULL);
          }
    break;

  case 1030:
#line 5195 "sql_yacc.yy"
    {
            YYERROR_UNLESS((yyvsp[-5].table_list) && (yyvsp[-1].table_list));
            /* Change the current name resolution context to a local context. */
            if (push_new_name_resolution_context(YYTHD, (yyvsp[-5].table_list), (yyvsp[-1].table_list)))
              YYABORT;
          }
    break;

  case 1031:
#line 5202 "sql_yacc.yy"
    {
            add_join_on((yyvsp[-3].table_list),(yyvsp[0].item));
            Lex->pop_context();
            (yyvsp[-3].table_list)->outer_join|=JOIN_TYPE_LEFT;
            (yyval.table_list)=(yyvsp[-3].table_list);
          }
    break;

  case 1032:
#line 5209 "sql_yacc.yy"
    {
	    SELECT_LEX *sel= Select;
            YYERROR_UNLESS((yyvsp[-4].table_list) && (yyvsp[0].table_list));
	  }
    break;

  case 1033:
#line 5214 "sql_yacc.yy"
    { add_join_natural((yyvsp[-9].table_list),(yyvsp[-5].table_list),(yyvsp[-1].string_list)); (yyvsp[-5].table_list)->outer_join|=JOIN_TYPE_LEFT; (yyval.table_list)=(yyvsp[-5].table_list); }
    break;

  case 1034:
#line 5216 "sql_yacc.yy"
    {
            YYERROR_UNLESS((yyvsp[-5].table_list) && (yyvsp[0].table_list));
 	    add_join_natural((yyvsp[-5].table_list),(yyvsp[0].table_list),NULL);
	    (yyvsp[0].table_list)->outer_join|=JOIN_TYPE_LEFT;
	    (yyval.table_list)=(yyvsp[0].table_list);
	  }
    break;

  case 1035:
#line 5226 "sql_yacc.yy"
    {
            YYERROR_UNLESS((yyvsp[-5].table_list) && (yyvsp[-1].table_list));
            /* Change the current name resolution context to a local context. */
            if (push_new_name_resolution_context(YYTHD, (yyvsp[-5].table_list), (yyvsp[-1].table_list)))
              YYABORT;
          }
    break;

  case 1036:
#line 5233 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
            if (!((yyval.table_list)= lex->current_select->convert_right_join()))
              YYABORT;
            add_join_on((yyval.table_list), (yyvsp[0].item));
            Lex->pop_context();
          }
    break;

  case 1037:
#line 5241 "sql_yacc.yy"
    {
	    SELECT_LEX *sel= Select;
            YYERROR_UNLESS((yyvsp[-4].table_list) && (yyvsp[0].table_list));
	  }
    break;

  case 1038:
#line 5246 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
            if (!((yyval.table_list)= lex->current_select->convert_right_join()))
              YYABORT;
            add_join_natural((yyval.table_list),(yyvsp[-5].table_list),(yyvsp[-1].string_list));
          }
    break;

  case 1039:
#line 5253 "sql_yacc.yy"
    {
            YYERROR_UNLESS((yyvsp[-5].table_list) && (yyvsp[0].table_list));
	    add_join_natural((yyvsp[0].table_list),(yyvsp[-5].table_list),NULL);
	    LEX *lex= Lex;
            if (!((yyval.table_list)= lex->current_select->convert_right_join()))
              YYABORT;
	  }
    break;

  case 1040:
#line 5262 "sql_yacc.yy"
    {}
    break;

  case 1041:
#line 5263 "sql_yacc.yy"
    {}
    break;

  case 1042:
#line 5264 "sql_yacc.yy"
    {}
    break;

  case 1043:
#line 5269 "sql_yacc.yy"
    {
	  SELECT_LEX *sel= Select;
	  sel->use_index_ptr=sel->ignore_index_ptr=0;
	  sel->table_join_options= 0;
	}
    break;

  case 1044:
#line 5275 "sql_yacc.yy"
    {
	  LEX *lex= Lex;
	  SELECT_LEX *sel= lex->current_select;
	  if (!((yyval.table_list)= sel->add_table_to_list(lex->thd, (yyvsp[-2].table), (yyvsp[-1].lex_str_ptr),
					   sel->get_table_join_options(),
					   lex->lock_option,
					   sel->get_use_index(),
					   sel->get_ignore_index())))
	    YYABORT;
          sel->add_joined_table((yyval.table_list));
	}
    break;

  case 1045:
#line 5288 "sql_yacc.yy"
    {
            /* Change the current name resolution context to a local context. */
            if (push_new_name_resolution_context(YYTHD, (yyvsp[-5].table_list), (yyvsp[-1].table_list)))
              YYABORT;

          }
    break;

  case 1046:
#line 5295 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
            YYERROR_UNLESS((yyvsp[-8].table_list) && (yyvsp[-4].table_list));
            add_join_on((yyvsp[-4].table_list),(yyvsp[-1].item));
            Lex->pop_context();
            (yyvsp[-4].table_list)->outer_join|=JOIN_TYPE_LEFT;
            (yyval.table_list)=(yyvsp[-4].table_list);
            if (!((yyval.table_list)= lex->current_select->nest_last_join(lex->thd)))
              YYABORT;
          }
    break;

  case 1047:
#line 5306 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            SELECT_LEX *sel= lex->current_select;
            if ((yyvsp[-2].num))
            {
	      if (sel->set_braces(1))
	      {
	        yyerror(ER(ER_SYNTAX_ERROR));
	        YYABORT;
	      }
              /* select in braces, can't contain global parameters */
	      if (sel->master_unit()->fake_select_lex)
                sel->master_unit()->global_parameters=
                   sel->master_unit()->fake_select_lex;
            }
            if ((yyvsp[-1].select_lex)->init_nested_join(lex->thd))
              YYABORT;
            (yyval.table_list)= 0;
            /* incomplete derived tables return NULL, we must be
               nested in select_derived rule to be here. */
          }
    break;

  case 1048:
#line 5328 "sql_yacc.yy"
    {
          /* Use $2 instead of Lex->current_select as derived table will
             alter value of Lex->current_select. */

          if (!((yyvsp[-3].table_list) || (yyvsp[0].lex_str_ptr)) && (yyvsp[-4].select_lex)->embedding &&
              !(yyvsp[-4].select_lex)->embedding->nested_join->join_list.elements)
          {
            /* we have a derived table ($3 == NULL) but no alias,
               Since we are nested in further parentheses so we
               can pass NULL to the outer level parentheses
               Permits parsing of "((((select ...))) as xyz)" */
            (yyval.table_list)= 0;
          }
          else
          if (!(yyvsp[-3].table_list))
          {
            /* Handle case of derived table, alias may be NULL if there
               are no outer parentheses, add_table_to_list() will throw
               error in this case */
	    LEX *lex=Lex;
            SELECT_LEX *sel= lex->current_select;
	    SELECT_LEX_UNIT *unit= sel->master_unit();
	    lex->current_select= sel= unit->outer_select();
	    if (!((yyval.table_list)= sel->
                  add_table_to_list(lex->thd, new Table_ident(unit), (yyvsp[0].lex_str_ptr), 0,
				    TL_READ,(List<String> *)0,
	                            (List<String> *)0)))

	      YYABORT;
            sel->add_joined_table((yyval.table_list));
            lex->pop_context();
          }
	  else
          if ((yyvsp[-2].num) || (yyvsp[0].lex_str_ptr))
	  {
            /* simple nested joins cannot have aliases or unions */
            yyerror(ER(ER_SYNTAX_ERROR));
	    YYABORT;
	  }
          else
            (yyval.table_list)= (yyvsp[-3].table_list);
	}
    break;

  case 1049:
#line 5375 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            if ((yyvsp[0].select_lex)->init_nested_join(lex->thd))
              YYABORT;
          }
    break;

  case 1050:
#line 5381 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            /* for normal joins, $3 != NULL and end_nested_join() != NULL,
               for derived tables, both must equal NULL */

            if (!((yyval.table_list)= (yyvsp[-2].select_lex)->end_nested_join(lex->thd)) && (yyvsp[0].table_list))
              YYABORT;
            if (!(yyvsp[0].table_list) && (yyval.table_list))
            {
	      yyerror(ER(ER_SYNTAX_ERROR));
	      YYABORT;
            }
          }
    break;

  case 1051:
#line 5397 "sql_yacc.yy"
    {
	  LEX *lex= Lex;
	  lex->derived_tables|= DERIVED_SUBQUERY;
          if (lex->sql_command == (int)SQLCOM_HA_READ ||
              lex->sql_command == (int)SQLCOM_KILL)
	  {
	    yyerror(ER(ER_SYNTAX_ERROR));
	    YYABORT;
	  }
	  if (lex->current_select->linkage == GLOBAL_OPTIONS_TYPE ||
              mysql_new_select(lex, 1))
	    YYABORT;
	  mysql_init_select(lex);
	  lex->current_select->linkage= DERIVED_TABLE_TYPE;
	  lex->current_select->parsing_place= SELECT_LIST;
	}
    break;

  case 1052:
#line 5414 "sql_yacc.yy"
    {
	  Select->parsing_place= NO_MATTER;
	}
    break;

  case 1054:
#line 5421 "sql_yacc.yy"
    { (yyval.select_lex)= Select; }
    break;

  case 1055:
#line 5426 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            SELECT_LEX *sel= lex->current_select;
            TABLE_LIST *embedding;
            if (!sel->embedding || sel->end_nested_join(lex->thd))
	    {
              /* we are not in parentheses */
              yyerror(ER(ER_SYNTAX_ERROR));
	      YYABORT;
	    }
            embedding= Select->embedding;
            (yyval.num)= embedding &&
                !embedding->nested_join->join_list.elements;
            /* return true if we are deeply nested */
          }
    break;

  case 1056:
#line 5444 "sql_yacc.yy"
    {}
    break;

  case 1057:
#line 5445 "sql_yacc.yy"
    {}
    break;

  case 1058:
#line 5448 "sql_yacc.yy"
    {}
    break;

  case 1059:
#line 5450 "sql_yacc.yy"
    {
	    SELECT_LEX *sel= Select;
	    sel->use_index= *(yyvsp[0].string_list);
	    sel->use_index_ptr= &sel->use_index;
	  }
    break;

  case 1060:
#line 5456 "sql_yacc.yy"
    {
	    SELECT_LEX *sel= Select;
	    sel->use_index= *(yyvsp[0].string_list);
	    sel->use_index_ptr= &sel->use_index;
	    sel->table_join_options|= TL_OPTION_FORCE_INDEX;
	  }
    break;

  case 1061:
#line 5463 "sql_yacc.yy"
    {
	    SELECT_LEX *sel= Select;
	    sel->ignore_index= *(yyvsp[0].string_list);
	    sel->ignore_index_ptr= &sel->ignore_index;
	  }
    break;

  case 1062:
#line 5470 "sql_yacc.yy"
    { Select->interval_list.empty(); }
    break;

  case 1063:
#line 5472 "sql_yacc.yy"
    { (yyval.string_list)= &Select->interval_list; }
    break;

  case 1064:
#line 5476 "sql_yacc.yy"
    {}
    break;

  case 1065:
#line 5477 "sql_yacc.yy"
    {}
    break;

  case 1066:
#line 5482 "sql_yacc.yy"
    { Select->
	    interval_list.push_back(new (YYTHD->mem_root) String((const char*) (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length,
				    system_charset_info)); }
    break;

  case 1067:
#line 5486 "sql_yacc.yy"
    { Select->
	    interval_list.push_back(new (YYTHD->mem_root) String((const char*) (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length,
				    system_charset_info)); }
    break;

  case 1068:
#line 5490 "sql_yacc.yy"
    { Select->
	    interval_list.push_back(new (YYTHD->mem_root) String("PRIMARY", 7,
				    system_charset_info)); }
    break;

  case 1069:
#line 5496 "sql_yacc.yy"
    {
            if (!((yyval.string_list)= new List<String>))
	      YYABORT;
            (yyval.string_list)->push_back(new (YYTHD->mem_root)
                              String((const char *) (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length,
                                      system_charset_info));
	  }
    break;

  case 1070:
#line 5504 "sql_yacc.yy"
    {
            (yyvsp[-2].string_list)->push_back(new (YYTHD->mem_root)
                              String((const char *) (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length,
                                      system_charset_info));
            (yyval.string_list)= (yyvsp[-2].string_list);
	  }
    break;

  case 1071:
#line 5512 "sql_yacc.yy"
    {}
    break;

  case 1072:
#line 5513 "sql_yacc.yy"
    { (yyval.interval)=INTERVAL_DAY_HOUR; }
    break;

  case 1073:
#line 5514 "sql_yacc.yy"
    { (yyval.interval)=INTERVAL_DAY_MICROSECOND; }
    break;

  case 1074:
#line 5515 "sql_yacc.yy"
    { (yyval.interval)=INTERVAL_DAY_MINUTE; }
    break;

  case 1075:
#line 5516 "sql_yacc.yy"
    { (yyval.interval)=INTERVAL_DAY_SECOND; }
    break;

  case 1076:
#line 5517 "sql_yacc.yy"
    { (yyval.interval)=INTERVAL_HOUR_MICROSECOND; }
    break;

  case 1077:
#line 5518 "sql_yacc.yy"
    { (yyval.interval)=INTERVAL_HOUR_MINUTE; }
    break;

  case 1078:
#line 5519 "sql_yacc.yy"
    { (yyval.interval)=INTERVAL_HOUR_SECOND; }
    break;

  case 1079:
#line 5520 "sql_yacc.yy"
    { (yyval.interval)=INTERVAL_MICROSECOND; }
    break;

  case 1080:
#line 5521 "sql_yacc.yy"
    { (yyval.interval)=INTERVAL_MINUTE_MICROSECOND; }
    break;

  case 1081:
#line 5522 "sql_yacc.yy"
    { (yyval.interval)=INTERVAL_MINUTE_SECOND; }
    break;

  case 1082:
#line 5523 "sql_yacc.yy"
    { (yyval.interval)=INTERVAL_SECOND_MICROSECOND; }
    break;

  case 1083:
#line 5524 "sql_yacc.yy"
    { (yyval.interval)=INTERVAL_YEAR_MONTH; }
    break;

  case 1084:
#line 5527 "sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_DAY; }
    break;

  case 1085:
#line 5528 "sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_WEEK; }
    break;

  case 1086:
#line 5529 "sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_HOUR; }
    break;

  case 1087:
#line 5530 "sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_MICROSECOND; }
    break;

  case 1088:
#line 5531 "sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_MINUTE; }
    break;

  case 1089:
#line 5532 "sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_MONTH; }
    break;

  case 1090:
#line 5533 "sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_QUARTER; }
    break;

  case 1091:
#line 5534 "sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_SECOND; }
    break;

  case 1092:
#line 5535 "sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_YEAR; }
    break;

  case 1093:
#line 5539 "sql_yacc.yy"
    {(yyval.date_time_type)=MYSQL_TIMESTAMP_DATE;}
    break;

  case 1094:
#line 5540 "sql_yacc.yy"
    {(yyval.date_time_type)=MYSQL_TIMESTAMP_TIME;}
    break;

  case 1095:
#line 5541 "sql_yacc.yy"
    {(yyval.date_time_type)=MYSQL_TIMESTAMP_DATETIME;}
    break;

  case 1096:
#line 5542 "sql_yacc.yy"
    {(yyval.date_time_type)=MYSQL_TIMESTAMP_DATETIME;}
    break;

  case 1100:
#line 5551 "sql_yacc.yy"
    { (yyval.lex_str_ptr)=0; }
    break;

  case 1101:
#line 5553 "sql_yacc.yy"
    { (yyval.lex_str_ptr)= (LEX_STRING*) sql_memdup(&(yyvsp[0].lex_str),sizeof(LEX_STRING)); }
    break;

  case 1104:
#line 5561 "sql_yacc.yy"
    { Select->where= 0; }
    break;

  case 1105:
#line 5563 "sql_yacc.yy"
    {
            Select->parsing_place= IN_WHERE;
          }
    break;

  case 1106:
#line 5567 "sql_yacc.yy"
    {
            SELECT_LEX *select= Select;
	    select->where= (yyvsp[0].item);
            select->parsing_place= NO_MATTER;
	    if ((yyvsp[0].item))
	      (yyvsp[0].item)->top_level_item();
	  }
    break;

  case 1108:
#line 5579 "sql_yacc.yy"
    {
	    Select->parsing_place= IN_HAVING;
          }
    break;

  case 1109:
#line 5583 "sql_yacc.yy"
    {
	    SELECT_LEX *sel= Select;
	    sel->having= (yyvsp[0].item);
	    sel->parsing_place= NO_MATTER;
	    if ((yyvsp[0].item))
	      (yyvsp[0].item)->top_level_item();
	  }
    break;

  case 1110:
#line 5594 "sql_yacc.yy"
    {
            Lex->escape_used= TRUE;
            (yyval.item)= (yyvsp[0].item);
          }
    break;

  case 1111:
#line 5599 "sql_yacc.yy"
    {
            Lex->escape_used= FALSE;
            (yyval.item)= ((YYTHD->variables.sql_mode & MODE_NO_BACKSLASH_ESCAPES) ?
		 new Item_string("", 0, &my_charset_latin1) :
                 new Item_string("\\", 1, &my_charset_latin1));
          }
    break;

  case 1114:
#line 5618 "sql_yacc.yy"
    { if (add_group_to_list(YYTHD, (yyvsp[-1].item),(bool) (yyvsp[0].num))) YYABORT; }
    break;

  case 1115:
#line 5620 "sql_yacc.yy"
    { if (add_group_to_list(YYTHD, (yyvsp[-1].item),(bool) (yyvsp[0].num))) YYABORT; }
    break;

  case 1116:
#line 5623 "sql_yacc.yy"
    {}
    break;

  case 1117:
#line 5625 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    if (lex->current_select->linkage == GLOBAL_OPTIONS_TYPE)
	    {
	      my_error(ER_WRONG_USAGE, MYF(0), "WITH CUBE",
		       "global union parameters");
	      YYABORT;
	    }
	    lex->current_select->olap= CUBE_TYPE;
	    my_error(ER_NOT_SUPPORTED_YET, MYF(0), "CUBE");
	    YYABORT;	/* To be deleted in 5.1 */
	  }
    break;

  case 1118:
#line 5638 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    if (lex->current_select->linkage == GLOBAL_OPTIONS_TYPE)
	    {
	      my_error(ER_WRONG_USAGE, MYF(0), "WITH ROLLUP",
		       "global union parameters");
	      YYABORT;
	    }
	    lex->current_select->olap= ROLLUP_TYPE;
	  }
    break;

  case 1121:
#line 5660 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
          SELECT_LEX *sel= lex->current_select;
          SELECT_LEX_UNIT *unit= sel-> master_unit();
	  if (sel->linkage != GLOBAL_OPTIONS_TYPE &&
	      sel->olap != UNSPECIFIED_OLAP_TYPE)
	  {
	    my_error(ER_WRONG_USAGE, MYF(0),
                     "CUBE/ROLLUP", "ORDER BY");
	    YYABORT;
	  }
          if (lex->sql_command != SQLCOM_ALTER_TABLE && !unit->fake_select_lex)
          {
            /*
              A query of the of the form (SELECT ...) ORDER BY order_list is
              executed in the same way as the query
              SELECT ... ORDER BY order_list
              unless the SELECT construct contains ORDER BY or LIMIT clauses.
              Otherwise we create a fake SELECT_LEX if it has not been created
              yet.
            */
            SELECT_LEX *first_sl= unit->first_select();
            if (!first_sl->next_select() &&
                (first_sl->order_list.elements || 
                 first_sl->select_limit) &&            
                unit->add_fake_select_lex(lex->thd))
              YYABORT;
          }
	}
    break;

  case 1123:
#line 5692 "sql_yacc.yy"
    { if (add_order_to_list(YYTHD, (yyvsp[-1].item),(bool) (yyvsp[0].num))) YYABORT; }
    break;

  case 1124:
#line 5694 "sql_yacc.yy"
    { if (add_order_to_list(YYTHD, (yyvsp[-1].item),(bool) (yyvsp[0].num))) YYABORT; }
    break;

  case 1125:
#line 5697 "sql_yacc.yy"
    { (yyval.num) =  1; }
    break;

  case 1126:
#line 5698 "sql_yacc.yy"
    { (yyval.num) =1; }
    break;

  case 1127:
#line 5699 "sql_yacc.yy"
    { (yyval.num) =0; }
    break;

  case 1128:
#line 5704 "sql_yacc.yy"
    {
	  LEX *lex= Lex;
	  SELECT_LEX *sel= lex->current_select;
          sel->offset_limit= 0;
          sel->select_limit= 0;
	}
    break;

  case 1129:
#line 5710 "sql_yacc.yy"
    {}
    break;

  case 1130:
#line 5714 "sql_yacc.yy"
    {}
    break;

  case 1131:
#line 5715 "sql_yacc.yy"
    {}
    break;

  case 1132:
#line 5719 "sql_yacc.yy"
    {}
    break;

  case 1133:
#line 5724 "sql_yacc.yy"
    {
            SELECT_LEX *sel= Select;
            sel->select_limit= (yyvsp[0].item);
            sel->offset_limit= 0;
	    sel->explicit_limit= 1;
	  }
    break;

  case 1134:
#line 5731 "sql_yacc.yy"
    {
	    SELECT_LEX *sel= Select;
	    sel->select_limit= (yyvsp[0].item);
	    sel->offset_limit= (yyvsp[-2].item);
	    sel->explicit_limit= 1;
	  }
    break;

  case 1135:
#line 5738 "sql_yacc.yy"
    {
	    SELECT_LEX *sel= Select;
	    sel->select_limit= (yyvsp[-2].item);
	    sel->offset_limit= (yyvsp[0].item);
	    sel->explicit_limit= 1;
	  }
    break;

  case 1137:
#line 5747 "sql_yacc.yy"
    { (yyval.item)= new Item_uint((yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length); }
    break;

  case 1138:
#line 5748 "sql_yacc.yy"
    { (yyval.item)= new Item_uint((yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length); }
    break;

  case 1139:
#line 5749 "sql_yacc.yy"
    { (yyval.item)= new Item_uint((yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length); }
    break;

  case 1140:
#line 5754 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  lex->current_select->select_limit= 0;
	}
    break;

  case 1141:
#line 5759 "sql_yacc.yy"
    {
	  SELECT_LEX *sel= Select;
	  sel->select_limit= (yyvsp[0].item);
	  sel->explicit_limit= 1;
	}
    break;

  case 1142:
#line 5766 "sql_yacc.yy"
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
    break;

  case 1143:
#line 5767 "sql_yacc.yy"
    { (yyval.ulong_num)= (ulong) strtol((yyvsp[0].lex_str).str, (char**) 0, 16); }
    break;

  case 1144:
#line 5768 "sql_yacc.yy"
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
    break;

  case 1145:
#line 5769 "sql_yacc.yy"
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
    break;

  case 1146:
#line 5770 "sql_yacc.yy"
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
    break;

  case 1147:
#line 5771 "sql_yacc.yy"
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
    break;

  case 1148:
#line 5775 "sql_yacc.yy"
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
    break;

  case 1149:
#line 5776 "sql_yacc.yy"
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
    break;

  case 1150:
#line 5777 "sql_yacc.yy"
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
    break;

  case 1151:
#line 5778 "sql_yacc.yy"
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
    break;

  case 1152:
#line 5779 "sql_yacc.yy"
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
    break;

  case 1154:
#line 5785 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    if (&lex->select_lex != lex->current_select)
	    {
	      my_error(ER_WRONG_USAGE, MYF(0), "PROCEDURE", "subquery");
	      YYABORT;
	    }
	    lex->proc_list.elements=0;
	    lex->proc_list.first=0;
	    lex->proc_list.next= (byte**) &lex->proc_list.first;
	    if (add_proc_to_list(lex->thd, new Item_field(&lex->
                                                          current_select->
                                                          context,
                                                          NULL,NULL,(yyvsp[0].lex_str).str)))
	      YYABORT;
	    Lex->uncacheable(UNCACHEABLE_SIDEEFFECT);
	  }
    break;

  case 1156:
#line 5806 "sql_yacc.yy"
    {}
    break;

  case 1157:
#line 5807 "sql_yacc.yy"
    {}
    break;

  case 1160:
#line 5815 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    if (add_proc_to_list(lex->thd, (yyvsp[0].item)))
	      YYABORT;
	    if (!(yyvsp[0].item)->name)
	      (yyvsp[0].item)->set_name((yyvsp[-1].simple_string),(uint) ((char*) lex->tok_end - (yyvsp[-1].simple_string)),
                           YYTHD->charset());
	  }
    break;

  case 1161:
#line 5827 "sql_yacc.yy"
    {
             LEX *lex=Lex;
	     if (!lex->describe && (!(lex->result= new select_dumpvar())))
	        YYABORT;
	   }
    break;

  case 1162:
#line 5833 "sql_yacc.yy"
    {}
    break;

  case 1164:
#line 5838 "sql_yacc.yy"
    {}
    break;

  case 1165:
#line 5843 "sql_yacc.yy"
    {
             LEX *lex=Lex;
	     if (lex->result) 
	       ((select_dumpvar *)lex->result)->var_list.push_back( new my_var((yyvsp[0].lex_str),0,0,(enum_field_types)0));
	     else
               /*
                 The parser won't create select_result instance only
	         if it's an EXPLAIN.
               */
               DBUG_ASSERT(lex->describe);
	   }
    break;

  case 1166:
#line 5855 "sql_yacc.yy"
    {
             LEX *lex=Lex;
	     sp_variable_t *t;

	     if (!lex->spcont || !(t=lex->spcont->find_variable(&(yyvsp[0].lex_str))))
	     {
	       my_error(ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[0].lex_str).str);
	       YYABORT;
	     }
	     if (lex->result)
             {
               my_var *var;
	       ((select_dumpvar *)lex->result)->
                 var_list.push_back(var= new my_var((yyvsp[0].lex_str),1,t->offset,t->type));
#ifndef DBUG_OFF
	       if (var)
		 var->sp= lex->sphead;
#endif
             }
	     else
	     {
               /*
                 The parser won't create select_result instance only
	         if it's an EXPLAIN.
               */
               DBUG_ASSERT(lex->describe);
	     }
	   }
    break;

  case 1167:
#line 5887 "sql_yacc.yy"
    {
          LEX *lex= Lex;
          lex->uncacheable(UNCACHEABLE_SIDEEFFECT);
          if (!(lex->exchange= new sql_exchange((yyvsp[0].lex_str).str, 0)) ||
              !(lex->result= new select_export(lex->exchange)))
            YYABORT;
	}
    break;

  case 1169:
#line 5896 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  if (!lex->describe)
	  {
	    lex->uncacheable(UNCACHEABLE_SIDEEFFECT);
	    if (!(lex->exchange= new sql_exchange((yyvsp[0].lex_str).str,1)))
	      YYABORT;
	    if (!(lex->result= new select_dump(lex->exchange)))
	      YYABORT;
	  }
	}
    break;

  case 1170:
#line 5908 "sql_yacc.yy"
    {
	  Lex->uncacheable(UNCACHEABLE_SIDEEFFECT);
	}
    break;

  case 1171:
#line 5918 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  lex->sql_command = SQLCOM_DO;
	  mysql_init_select(lex);
	}
    break;

  case 1172:
#line 5924 "sql_yacc.yy"
    {
	  Lex->insert_list= (yyvsp[0].item_list);
	}
    break;

  case 1173:
#line 5935 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  lex->sql_command = SQLCOM_DROP_TABLE;
	  lex->drop_temporary= (yyvsp[-4].num);
	  lex->drop_if_exists= (yyvsp[-2].num);
	}
    break;

  case 1174:
#line 5941 "sql_yacc.yy"
    {}
    break;

  case 1175:
#line 5942 "sql_yacc.yy"
    {
	     LEX *lex=Lex;
	     lex->sql_command= SQLCOM_DROP_INDEX;
	     lex->alter_info.drop_list.empty();
	     lex->alter_info.drop_list.push_back(new Alter_drop(Alter_drop::KEY,
                                                                (yyvsp[-3].lex_str).str));
	     if (!lex->current_select->add_table_to_list(lex->thd, (yyvsp[-1].table), NULL,
							TL_OPTION_UPDATING))
	      YYABORT;
	  }
    break;

  case 1176:
#line 5953 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    lex->sql_command= SQLCOM_DROP_DB;
	    lex->drop_if_exists=(yyvsp[-1].num);
	    lex->name=(yyvsp[0].lex_str).str;
	 }
    break;

  case 1177:
#line 5960 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    if (lex->sphead)
	    {
	      my_error(ER_SP_NO_DROP_SP, MYF(0), "FUNCTION");
	      YYABORT;
	    }
	    lex->sql_command = SQLCOM_DROP_FUNCTION;
	    lex->drop_if_exists= (yyvsp[-1].num);
	    lex->spname= (yyvsp[0].spname);
	  }
    break;

  case 1178:
#line 5972 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    if (lex->sphead)
	    {
	      my_error(ER_SP_NO_DROP_SP, MYF(0), "PROCEDURE");
	      YYABORT;
	    }
	    lex->sql_command = SQLCOM_DROP_PROCEDURE;
	    lex->drop_if_exists= (yyvsp[-1].num);
	    lex->spname= (yyvsp[0].spname);
	  }
    break;

  case 1179:
#line 5984 "sql_yacc.yy"
    {
	    Lex->sql_command = SQLCOM_DROP_USER;
          }
    break;

  case 1180:
#line 5988 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    lex->sql_command= SQLCOM_DROP_VIEW;
	    lex->drop_if_exists= (yyvsp[-2].num);
	  }
    break;

  case 1181:
#line 5994 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_DROP_TRIGGER;
            lex->spname= (yyvsp[0].spname);
          }
    break;

  case 1184:
#line 6007 "sql_yacc.yy"
    {
	  if (!Select->add_table_to_list(YYTHD, (yyvsp[0].table), NULL, TL_OPTION_UPDATING))
	    YYABORT;
	}
    break;

  case 1185:
#line 6014 "sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 1186:
#line 6015 "sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 1187:
#line 6019 "sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 1188:
#line 6020 "sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 1189:
#line 6028 "sql_yacc.yy"
    {
	  LEX *lex= Lex;
	  lex->sql_command= SQLCOM_INSERT;
	  lex->duplicates= DUP_ERROR; 
	  mysql_init_select(lex);
	  /* for subselects */
          lex->lock_option= (using_update_log) ? TL_READ_NO_INSERT : TL_READ;
	}
    break;

  case 1190:
#line 6037 "sql_yacc.yy"
    {
	  Select->set_lock_for_tables((yyvsp[-2].lock_type));
	  Lex->current_select= &Lex->select_lex;
	}
    break;

  case 1191:
#line 6042 "sql_yacc.yy"
    {}
    break;

  case 1192:
#line 6047 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  lex->sql_command = SQLCOM_REPLACE;
	  lex->duplicates= DUP_REPLACE;
	  mysql_init_select(lex);
	}
    break;

  case 1193:
#line 6054 "sql_yacc.yy"
    {
	  Select->set_lock_for_tables((yyvsp[-1].lock_type));
	  Lex->current_select= &Lex->select_lex;
	}
    break;

  case 1194:
#line 6059 "sql_yacc.yy"
    {}
    break;

  case 1195:
#line 6064 "sql_yacc.yy"
    {
#ifdef HAVE_QUERY_CACHE
            /*
              If it is SP we do not allow insert optimisation whan result of
              insert visible only after the table unlocking but everyone can
              read table.
            */
            (yyval.lock_type)= (Lex->sphead ? TL_WRITE :TL_WRITE_CONCURRENT_INSERT);
#else
            (yyval.lock_type)= TL_WRITE_CONCURRENT_INSERT;
#endif
          }
    break;

  case 1196:
#line 6076 "sql_yacc.yy"
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
    break;

  case 1197:
#line 6077 "sql_yacc.yy"
    { (yyval.lock_type)= TL_WRITE_DELAYED; }
    break;

  case 1198:
#line 6078 "sql_yacc.yy"
    { (yyval.lock_type)= TL_WRITE; }
    break;

  case 1199:
#line 6082 "sql_yacc.yy"
    { (yyval.lock_type)= (yyvsp[0].lock_type); }
    break;

  case 1200:
#line 6083 "sql_yacc.yy"
    { (yyval.lock_type)= TL_WRITE_DELAYED; }
    break;

  case 1201:
#line 6086 "sql_yacc.yy"
    {}
    break;

  case 1202:
#line 6087 "sql_yacc.yy"
    {}
    break;

  case 1203:
#line 6091 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  lex->field_list.empty();
	  lex->many_values.empty();
	  lex->insert_list=0;
	}
    break;

  case 1204:
#line 6099 "sql_yacc.yy"
    {}
    break;

  case 1205:
#line 6100 "sql_yacc.yy"
    {}
    break;

  case 1206:
#line 6101 "sql_yacc.yy"
    {}
    break;

  case 1207:
#line 6103 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    if (!(lex->insert_list = new List_item) ||
		lex->many_values.push_back(lex->insert_list))
	      YYABORT;
	   }
    break;

  case 1209:
#line 6112 "sql_yacc.yy"
    { Lex->field_list.push_back((yyvsp[0].item)); }
    break;

  case 1210:
#line 6113 "sql_yacc.yy"
    { Lex->field_list.push_back((yyvsp[0].item)); }
    break;

  case 1211:
#line 6116 "sql_yacc.yy"
    {}
    break;

  case 1212:
#line 6117 "sql_yacc.yy"
    {}
    break;

  case 1213:
#line 6118 "sql_yacc.yy"
    { Select->set_braces(0);}
    break;

  case 1214:
#line 6118 "sql_yacc.yy"
    {}
    break;

  case 1215:
#line 6119 "sql_yacc.yy"
    { Select->set_braces(1);}
    break;

  case 1216:
#line 6119 "sql_yacc.yy"
    {}
    break;

  case 1221:
#line 6133 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  if (lex->field_list.push_back((yyvsp[-2].item)) ||
	      lex->insert_list->push_back((yyvsp[0].item)))
	    YYABORT;
	 }
    break;

  case 1222:
#line 6140 "sql_yacc.yy"
    {}
    break;

  case 1223:
#line 6141 "sql_yacc.yy"
    {}
    break;

  case 1224:
#line 6145 "sql_yacc.yy"
    {}
    break;

  case 1225:
#line 6146 "sql_yacc.yy"
    {}
    break;

  case 1226:
#line 6151 "sql_yacc.yy"
    {
	    if (!(Lex->insert_list = new List_item))
	      YYABORT;
	 }
    break;

  case 1227:
#line 6156 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  if (lex->many_values.push_back(lex->insert_list))
	    YYABORT;
	 }
    break;

  case 1228:
#line 6163 "sql_yacc.yy"
    {}
    break;

  case 1230:
#line 6168 "sql_yacc.yy"
    {
	  if (Lex->insert_list->push_back((yyvsp[0].item)))
	    YYABORT;
	}
    break;

  case 1231:
#line 6173 "sql_yacc.yy"
    {
	    if (Lex->insert_list->push_back((yyvsp[0].item)))
	      YYABORT;
	  }
    break;

  case 1232:
#line 6180 "sql_yacc.yy"
    { (yyval.item)= (yyvsp[0].item);}
    break;

  case 1233:
#line 6181 "sql_yacc.yy"
    {(yyval.item)= new Item_default_value(Lex->current_context()); }
    break;

  case 1235:
#line 6186 "sql_yacc.yy"
    { Lex->duplicates= DUP_UPDATE; }
    break;

  case 1237:
#line 6194 "sql_yacc.yy"
    {
	  LEX *lex= Lex;
	  mysql_init_select(lex);
          lex->sql_command= SQLCOM_UPDATE;
	  lex->lock_option= TL_UNLOCK; 	/* Will be set later */
	  lex->duplicates= DUP_ERROR; 
        }
    break;

  case 1238:
#line 6203 "sql_yacc.yy"
    {
	  LEX *lex= Lex;
          if (lex->select_lex.table_list.elements > 1)
            lex->sql_command= SQLCOM_UPDATE_MULTI;
	  else if (lex->select_lex.get_table_list()->derived)
	  {
	    /* it is single table update and it is update of derived table */
	    my_error(ER_NON_UPDATABLE_TABLE, MYF(0),
                     lex->select_lex.get_table_list()->alias, "UPDATE");
	    YYABORT;
	  }
          /*
            In case of multi-update setting write lock for all tables may
            be too pessimistic. We will decrease lock level if possible in
            mysql_multi_update().
          */
          Select->set_lock_for_tables((yyvsp[-4].lock_type));
	}
    break;

  case 1239:
#line 6221 "sql_yacc.yy"
    {}
    break;

  case 1242:
#line 6230 "sql_yacc.yy"
    {
	  if (add_item_to_list(YYTHD, (yyvsp[-2].item)) || add_value_to_list(YYTHD, (yyvsp[0].item)))
	    YYABORT;
	}
    break;

  case 1245:
#line 6241 "sql_yacc.yy"
    {
	  LEX *lex= Lex;
	  if (lex->update_list.push_back((yyvsp[-2].item)) || 
	      lex->value_list.push_back((yyvsp[0].item)))
	      YYABORT;
	  }
    break;

  case 1246:
#line 6249 "sql_yacc.yy"
    { (yyval.lock_type)= YYTHD->update_lock_default; }
    break;

  case 1247:
#line 6250 "sql_yacc.yy"
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
    break;

  case 1248:
#line 6256 "sql_yacc.yy"
    {
	  LEX *lex= Lex;
	  lex->sql_command= SQLCOM_DELETE;
	  mysql_init_select(lex);
	  lex->lock_option= lex->thd->update_lock_default;
	  lex->ignore= 0;
	  lex->select_lex.init_order();
	}
    break;

  case 1249:
#line 6264 "sql_yacc.yy"
    {}
    break;

  case 1250:
#line 6269 "sql_yacc.yy"
    {
	  if (!Select->add_table_to_list(YYTHD, (yyvsp[0].table), NULL, TL_OPTION_UPDATING,
					 Lex->lock_option))
	    YYABORT;
	}
    break;

  case 1251:
#line 6275 "sql_yacc.yy"
    {}
    break;

  case 1252:
#line 6277 "sql_yacc.yy"
    { mysql_init_multi_delete(Lex); }
    break;

  case 1253:
#line 6279 "sql_yacc.yy"
    { 
            if (multi_delete_set_locks_and_link_aux_tables(Lex))
              YYABORT;
          }
    break;

  case 1254:
#line 6284 "sql_yacc.yy"
    { mysql_init_multi_delete(Lex); }
    break;

  case 1255:
#line 6286 "sql_yacc.yy"
    { 
            if (multi_delete_set_locks_and_link_aux_tables(Lex))
              YYABORT;
          }
    break;

  case 1256:
#line 6293 "sql_yacc.yy"
    {}
    break;

  case 1257:
#line 6294 "sql_yacc.yy"
    {}
    break;

  case 1258:
#line 6298 "sql_yacc.yy"
    {
	  if (!Select->add_table_to_list(YYTHD, new Table_ident((yyvsp[-2].lex_str)), (yyvsp[0].lex_str_ptr),
					 TL_OPTION_UPDATING, Lex->lock_option))
	    YYABORT;
        }
    break;

  case 1259:
#line 6304 "sql_yacc.yy"
    {
	    if (!Select->add_table_to_list(YYTHD,
					   new Table_ident(YYTHD, (yyvsp[-4].lex_str), (yyvsp[-2].lex_str), 0),
					   (yyvsp[0].lex_str_ptr), TL_OPTION_UPDATING,
					   Lex->lock_option))
	      YYABORT;
	  }
    break;

  case 1260:
#line 6314 "sql_yacc.yy"
    {}
    break;

  case 1261:
#line 6315 "sql_yacc.yy"
    {}
    break;

  case 1262:
#line 6319 "sql_yacc.yy"
    {}
    break;

  case 1263:
#line 6320 "sql_yacc.yy"
    {}
    break;

  case 1264:
#line 6323 "sql_yacc.yy"
    { Select->options|= OPTION_QUICK; }
    break;

  case 1265:
#line 6324 "sql_yacc.yy"
    { Lex->lock_option= TL_WRITE_LOW_PRIORITY; }
    break;

  case 1266:
#line 6325 "sql_yacc.yy"
    { Lex->ignore= 1; }
    break;

  case 1267:
#line 6329 "sql_yacc.yy"
    {
	  LEX* lex= Lex;
	  lex->sql_command= SQLCOM_TRUNCATE;
	  lex->select_lex.options= 0;
          lex->select_lex.sql_cache= SELECT_LEX::SQL_CACHE_UNSPECIFIED;
	  lex->select_lex.init_order();
	}
    break;

  case 1270:
#line 6345 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  lex->wild=0;
          lex->lock_option= TL_READ;
          mysql_init_select(lex);
          lex->current_select->parsing_place= SELECT_LIST;
	  bzero((char*) &lex->create_info,sizeof(lex->create_info));
	}
    break;

  case 1271:
#line 6354 "sql_yacc.yy"
    {}
    break;

  case 1272:
#line 6359 "sql_yacc.yy"
    {
           LEX *lex= Lex;
           lex->sql_command= SQLCOM_SELECT;
           lex->orig_sql_command= SQLCOM_SHOW_DATABASES;
           if (prepare_schema_table(YYTHD, lex, 0, SCH_SCHEMATA))
             YYABORT;
         }
    break;

  case 1273:
#line 6367 "sql_yacc.yy"
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SELECT;
             lex->orig_sql_command= SQLCOM_SHOW_TABLES;
             lex->select_lex.db= (yyvsp[-1].simple_string);
             if (prepare_schema_table(YYTHD, lex, 0, SCH_TABLE_NAMES))
               YYABORT;
           }
    break;

  case 1274:
#line 6376 "sql_yacc.yy"
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SELECT;
             lex->orig_sql_command= SQLCOM_SHOW_TRIGGERS;
             lex->select_lex.db= (yyvsp[-1].simple_string);
             if (prepare_schema_table(YYTHD, lex, 0, SCH_TRIGGERS))
               YYABORT;
           }
    break;

  case 1275:
#line 6385 "sql_yacc.yy"
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SELECT;
             lex->orig_sql_command= SQLCOM_SHOW_TABLE_STATUS;
             lex->select_lex.db= (yyvsp[-1].simple_string);
             if (prepare_schema_table(YYTHD, lex, 0, SCH_TABLES))
               YYABORT;
           }
    break;

  case 1276:
#line 6394 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
            lex->sql_command= SQLCOM_SELECT;
            lex->orig_sql_command= SQLCOM_SHOW_OPEN_TABLES;
	    lex->select_lex.db= (yyvsp[-1].simple_string);
            if (prepare_schema_table(YYTHD, lex, 0, SCH_OPEN_TABLES))
              YYABORT;
	  }
    break;

  case 1277:
#line 6403 "sql_yacc.yy"
    { Lex->create_info.db_type= (yyvsp[0].db_type); }
    break;

  case 1279:
#line 6406 "sql_yacc.yy"
    {
 	    LEX *lex= Lex;
	    lex->sql_command= SQLCOM_SELECT;
	    lex->orig_sql_command= SQLCOM_SHOW_FIELDS;
	    if ((yyvsp[-1].simple_string))
	      (yyvsp[-2].table)->change_db((yyvsp[-1].simple_string));
	    if (prepare_schema_table(YYTHD, lex, (yyvsp[-2].table), SCH_COLUMNS))
	      YYABORT;
	  }
    break;

  case 1280:
#line 6419 "sql_yacc.yy"
    {
	    Lex->sql_command = SQLCOM_SHOW_NEW_MASTER;
	    Lex->mi.log_file_name = (yyvsp[-8].lex_str).str;
	    Lex->mi.pos = (yyvsp[-4].ulonglong_number);
	    Lex->mi.server_id = (yyvsp[0].ulong_num);
          }
    break;

  case 1281:
#line 6426 "sql_yacc.yy"
    {
	    Lex->sql_command = SQLCOM_SHOW_BINLOGS;
          }
    break;

  case 1282:
#line 6430 "sql_yacc.yy"
    {
	    Lex->sql_command = SQLCOM_SHOW_SLAVE_HOSTS;
          }
    break;

  case 1283:
#line 6434 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    lex->sql_command= SQLCOM_SHOW_BINLOG_EVENTS;
          }
    break;

  case 1285:
#line 6439 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SELECT;
            lex->orig_sql_command= SQLCOM_SHOW_KEYS;
	    if ((yyvsp[-1].simple_string))
	      (yyvsp[-2].table)->change_db((yyvsp[-1].simple_string));
            if (prepare_schema_table(YYTHD, lex, (yyvsp[-2].table), SCH_STATISTICS))
              YYABORT;
	  }
    break;

  case 1286:
#line 6449 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    lex->sql_command= SQLCOM_SHOW_COLUMN_TYPES;
	  }
    break;

  case 1287:
#line 6454 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    lex->sql_command= SQLCOM_SHOW_STORAGE_ENGINES;
	    WARN_DEPRECATED("SHOW TABLE TYPES", "SHOW [STORAGE] ENGINES");
	  }
    break;

  case 1288:
#line 6460 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    lex->sql_command= SQLCOM_SHOW_STORAGE_ENGINES;
	  }
    break;

  case 1289:
#line 6465 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    lex->sql_command= SQLCOM_SHOW_PRIVILEGES;
	  }
    break;

  case 1290:
#line 6470 "sql_yacc.yy"
    { (void) create_select_for_variable("warning_count"); }
    break;

  case 1291:
#line 6472 "sql_yacc.yy"
    { (void) create_select_for_variable("error_count"); }
    break;

  case 1292:
#line 6474 "sql_yacc.yy"
    { Lex->sql_command = SQLCOM_SHOW_WARNS;}
    break;

  case 1293:
#line 6476 "sql_yacc.yy"
    { Lex->sql_command = SQLCOM_SHOW_ERRORS;}
    break;

  case 1294:
#line 6478 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SELECT;
            lex->orig_sql_command= SQLCOM_SHOW_STATUS;
            lex->option_type= (yyvsp[-2].var_type);
            if (prepare_schema_table(YYTHD, lex, 0, SCH_STATUS))
              YYABORT;
	  }
    break;

  case 1295:
#line 6487 "sql_yacc.yy"
    { Lex->sql_command = SQLCOM_SHOW_INNODB_STATUS; WARN_DEPRECATED("SHOW INNODB STATUS", "SHOW ENGINE INNODB STATUS"); }
    break;

  case 1296:
#line 6489 "sql_yacc.yy"
    { Lex->sql_command = SQLCOM_SHOW_MUTEX_STATUS; }
    break;

  case 1297:
#line 6491 "sql_yacc.yy"
    { Lex->sql_command= SQLCOM_SHOW_PROCESSLIST;}
    break;

  case 1298:
#line 6493 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SELECT;
            lex->orig_sql_command= SQLCOM_SHOW_VARIABLES;
            lex->option_type= (yyvsp[-2].var_type);
            if (prepare_schema_table(YYTHD, lex, 0, SCH_VARIABLES))
              YYABORT;
	  }
    break;

  case 1299:
#line 6502 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SELECT;
            lex->orig_sql_command= SQLCOM_SHOW_CHARSETS;
            if (prepare_schema_table(YYTHD, lex, 0, SCH_CHARSETS))
              YYABORT;
          }
    break;

  case 1300:
#line 6510 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SELECT;
            lex->orig_sql_command= SQLCOM_SHOW_COLLATIONS;
            if (prepare_schema_table(YYTHD, lex, 0, SCH_COLLATIONS))
              YYABORT;
          }
    break;

  case 1301:
#line 6518 "sql_yacc.yy"
    { Lex->sql_command= SQLCOM_SHOW_LOGS; WARN_DEPRECATED("SHOW BDB LOGS", "SHOW ENGINE BDB LOGS"); }
    break;

  case 1302:
#line 6520 "sql_yacc.yy"
    { Lex->sql_command= SQLCOM_SHOW_LOGS; WARN_DEPRECATED("SHOW LOGS", "SHOW ENGINE BDB LOGS"); }
    break;

  case 1303:
#line 6522 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    lex->sql_command= SQLCOM_SHOW_GRANTS;
	    THD *thd= lex->thd;
            Security_context *sctx= thd->security_ctx;
	    LEX_USER *curr_user;
            if (!(curr_user= (LEX_USER*) thd->alloc(sizeof(st_lex_user))))
              YYABORT;
            curr_user->user.str= sctx->priv_user;
            curr_user->user.length= strlen(sctx->priv_user);
            if (*sctx->priv_host != 0)
            {
              curr_user->host.str= sctx->priv_host;
              curr_user->host.length= strlen(sctx->priv_host);
            }
            else
            {
              curr_user->host.str= (char *) "%";
              curr_user->host.length= 1;
            }
            curr_user->password=null_lex_str;
	    lex->grant_user= curr_user;
	  }
    break;

  case 1304:
#line 6546 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    lex->sql_command= SQLCOM_SHOW_GRANTS;
	    lex->grant_user=(yyvsp[0].lex_user);
	    lex->grant_user->password=null_lex_str;
	  }
    break;

  case 1305:
#line 6553 "sql_yacc.yy"
    {
	    Lex->sql_command=SQLCOM_SHOW_CREATE_DB;
	    Lex->create_info.options=(yyvsp[-1].num);
	    Lex->name=(yyvsp[0].lex_str).str;
	  }
    break;

  case 1306:
#line 6559 "sql_yacc.yy"
    {
            LEX *lex= Lex;
	    lex->sql_command = SQLCOM_SHOW_CREATE;
	    if (!lex->select_lex.add_table_to_list(YYTHD, (yyvsp[0].table), NULL,0))
	      YYABORT;
            lex->only_view= 0;
	  }
    break;

  case 1307:
#line 6567 "sql_yacc.yy"
    {
            LEX *lex= Lex;
	    lex->sql_command = SQLCOM_SHOW_CREATE;
	    if (!lex->select_lex.add_table_to_list(YYTHD, (yyvsp[0].table), NULL, 0))
	      YYABORT;
            lex->only_view= 1;
	  }
    break;

  case 1308:
#line 6575 "sql_yacc.yy"
    {
	    Lex->sql_command = SQLCOM_SHOW_MASTER_STAT;
          }
    break;

  case 1309:
#line 6579 "sql_yacc.yy"
    {
	    Lex->sql_command = SQLCOM_SHOW_SLAVE_STAT;
          }
    break;

  case 1310:
#line 6583 "sql_yacc.yy"
    {
	    LEX *lex= Lex;

	    lex->sql_command = SQLCOM_SHOW_CREATE_PROC;
	    lex->spname= (yyvsp[0].spname);
	  }
    break;

  case 1311:
#line 6590 "sql_yacc.yy"
    {
	    LEX *lex= Lex;

	    lex->sql_command = SQLCOM_SHOW_CREATE_FUNC;
	    lex->spname= (yyvsp[0].spname);
	  }
    break;

  case 1312:
#line 6597 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SELECT;
            lex->orig_sql_command= SQLCOM_SHOW_STATUS_PROC;
	    if (!sp_add_to_query_tables(YYTHD, lex, "mysql", "proc", TL_READ))
	      YYABORT;
            if (prepare_schema_table(YYTHD, lex, 0, SCH_PROCEDURES))
              YYABORT;
	  }
    break;

  case 1313:
#line 6607 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SELECT;
            lex->orig_sql_command= SQLCOM_SHOW_STATUS_FUNC;
	    if (!sp_add_to_query_tables(YYTHD, lex, "mysql", "proc", TL_READ))
	      YYABORT;
            if (prepare_schema_table(YYTHD, lex, 0, SCH_PROCEDURES))
              YYABORT;
	  }
    break;

  case 1314:
#line 6617 "sql_yacc.yy"
    {
#ifdef DBUG_OFF
            yyerror(ER(ER_SYNTAX_ERROR));
            YYABORT;
#else
            Lex->sql_command= SQLCOM_SHOW_PROC_CODE;
	    Lex->spname= (yyvsp[0].spname);
#endif
          }
    break;

  case 1315:
#line 6627 "sql_yacc.yy"
    {
#ifdef DBUG_OFF
            yyerror(ER(ER_SYNTAX_ERROR));
            YYABORT;
#else
            Lex->sql_command= SQLCOM_SHOW_FUNC_CODE;
	    Lex->spname= (yyvsp[0].spname);
#endif
          }
    break;

  case 1316:
#line 6640 "sql_yacc.yy"
    {
	    switch (Lex->create_info.db_type) {
	    case DB_TYPE_NDBCLUSTER:
	      Lex->sql_command = SQLCOM_SHOW_NDBCLUSTER_STATUS;
	      break;
	    case DB_TYPE_INNODB:
	      Lex->sql_command = SQLCOM_SHOW_INNODB_STATUS;
	      break;
	    default:
	      my_error(ER_NOT_SUPPORTED_YET, MYF(0), "STATUS");
	      YYABORT;
	    }
	  }
    break;

  case 1317:
#line 6654 "sql_yacc.yy"
    {
	    switch (Lex->create_info.db_type) {
	    case DB_TYPE_BERKELEY_DB:
	      Lex->sql_command = SQLCOM_SHOW_LOGS;
	      break;
	    default:
	      my_error(ER_NOT_SUPPORTED_YET, MYF(0), "LOGS");
	      YYABORT;
	    }
	  }
    break;

  case 1322:
#line 6674 "sql_yacc.yy"
    { (yyval.simple_string)= 0; }
    break;

  case 1323:
#line 6675 "sql_yacc.yy"
    { (yyval.simple_string)= (yyvsp[0].lex_str).str; }
    break;

  case 1324:
#line 6678 "sql_yacc.yy"
    { Lex->verbose=0; }
    break;

  case 1325:
#line 6679 "sql_yacc.yy"
    { Lex->verbose=1; }
    break;

  case 1328:
#line 6686 "sql_yacc.yy"
    { Lex->mi.log_file_name = 0; }
    break;

  case 1329:
#line 6687 "sql_yacc.yy"
    { Lex->mi.log_file_name = (yyvsp[0].lex_str).str; }
    break;

  case 1330:
#line 6690 "sql_yacc.yy"
    { Lex->mi.pos = 4; /* skip magic number */ }
    break;

  case 1331:
#line 6691 "sql_yacc.yy"
    { Lex->mi.pos = (yyvsp[0].ulonglong_number); }
    break;

  case 1333:
#line 6696 "sql_yacc.yy"
    { Lex->wild=  new (YYTHD->mem_root) String((yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length,
                                                   system_charset_info); }
    break;

  case 1334:
#line 6699 "sql_yacc.yy"
    {
          Select->where= (yyvsp[0].item);
          if ((yyvsp[0].item))
            (yyvsp[0].item)->top_level_item();
        }
    break;

  case 1335:
#line 6710 "sql_yacc.yy"
    {
          LEX *lex= Lex;
          lex->lock_option= TL_READ;
          mysql_init_select(lex);
          lex->current_select->parsing_place= SELECT_LIST;
          lex->sql_command= SQLCOM_SELECT;
          lex->orig_sql_command= SQLCOM_SHOW_FIELDS;
          lex->select_lex.db= 0;
          lex->verbose= 0;
          if (prepare_schema_table(YYTHD, lex, (yyvsp[0].table), SCH_COLUMNS))
	    YYABORT;
	}
    break;

  case 1336:
#line 6722 "sql_yacc.yy"
    {}
    break;

  case 1337:
#line 6724 "sql_yacc.yy"
    { Lex->describe|= DESCRIBE_NORMAL; }
    break;

  case 1338:
#line 6726 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    lex->select_lex.options|= SELECT_DESCRIBE;
	  }
    break;

  case 1341:
#line 6737 "sql_yacc.yy"
    {}
    break;

  case 1342:
#line 6738 "sql_yacc.yy"
    { Lex->describe|= DESCRIBE_EXTENDED; }
    break;

  case 1343:
#line 6742 "sql_yacc.yy"
    {}
    break;

  case 1344:
#line 6743 "sql_yacc.yy"
    { Lex->wild= (yyvsp[0].string); }
    break;

  case 1345:
#line 6745 "sql_yacc.yy"
    { Lex->wild= new (YYTHD->mem_root) String((const char*) (yyvsp[0].lex_str).str,(yyvsp[0].lex_str).length,system_charset_info); }
    break;

  case 1346:
#line 6752 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  if (lex->sphead && lex->sphead->m_type != TYPE_ENUM_PROCEDURE)
	  {
            /*
              Note that both FLUSH TABLES and FLUSH PRIVILEGES will break
              execution in prelocked mode. So it is better to disable
              FLUSH in stored functions and triggers completely.
            */
            my_error(ER_STMT_NOT_ALLOWED_IN_SF_OR_TRG, MYF(0), "FLUSH");
	    YYABORT;
	  }
	  lex->sql_command= SQLCOM_FLUSH; lex->type=0;
          lex->no_write_to_binlog= (yyvsp[0].num);
	}
    break;

  case 1347:
#line 6768 "sql_yacc.yy"
    {}
    break;

  case 1350:
#line 6776 "sql_yacc.yy"
    { Lex->type|= REFRESH_TABLES; }
    break;

  case 1351:
#line 6776 "sql_yacc.yy"
    {}
    break;

  case 1352:
#line 6777 "sql_yacc.yy"
    { Lex->type|= REFRESH_TABLES | REFRESH_READ_LOCK; }
    break;

  case 1353:
#line 6778 "sql_yacc.yy"
    { Lex->type|= REFRESH_QUERY_CACHE_FREE; }
    break;

  case 1354:
#line 6779 "sql_yacc.yy"
    { Lex->type|= REFRESH_HOSTS; }
    break;

  case 1355:
#line 6780 "sql_yacc.yy"
    { Lex->type|= REFRESH_GRANT; }
    break;

  case 1356:
#line 6781 "sql_yacc.yy"
    { Lex->type|= REFRESH_LOG; }
    break;

  case 1357:
#line 6782 "sql_yacc.yy"
    { Lex->type|= REFRESH_STATUS; }
    break;

  case 1358:
#line 6783 "sql_yacc.yy"
    { Lex->type|= REFRESH_SLAVE; }
    break;

  case 1359:
#line 6784 "sql_yacc.yy"
    { Lex->type|= REFRESH_MASTER; }
    break;

  case 1360:
#line 6785 "sql_yacc.yy"
    { Lex->type|= REFRESH_DES_KEY_FILE; }
    break;

  case 1361:
#line 6786 "sql_yacc.yy"
    { Lex->type|= REFRESH_USER_RESOURCES; }
    break;

  case 1362:
#line 6789 "sql_yacc.yy"
    {;}
    break;

  case 1363:
#line 6790 "sql_yacc.yy"
    {;}
    break;

  case 1364:
#line 6794 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  lex->sql_command= SQLCOM_RESET; lex->type=0;
	}
    break;

  case 1365:
#line 6798 "sql_yacc.yy"
    {}
    break;

  case 1368:
#line 6806 "sql_yacc.yy"
    { Lex->type|= REFRESH_SLAVE; }
    break;

  case 1369:
#line 6807 "sql_yacc.yy"
    { Lex->type|= REFRESH_MASTER; }
    break;

  case 1370:
#line 6808 "sql_yacc.yy"
    { Lex->type|= REFRESH_QUERY_CACHE;}
    break;

  case 1371:
#line 6812 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  lex->type=0;
	}
    break;

  case 1372:
#line 6816 "sql_yacc.yy"
    {}
    break;

  case 1374:
#line 6825 "sql_yacc.yy"
    {
	   Lex->sql_command = SQLCOM_PURGE;
	   Lex->to_log = (yyvsp[0].lex_str).str;
        }
    break;

  case 1375:
#line 6830 "sql_yacc.yy"
    {
	  LEX *lex= Lex;
	  lex->value_list.empty();
	  lex->value_list.push_front((yyvsp[0].item));
	  lex->sql_command= SQLCOM_PURGE_BEFORE;
	}
    break;

  case 1376:
#line 6841 "sql_yacc.yy"
    { Lex->sql_command= SQLCOM_KILL; }
    break;

  case 1377:
#line 6842 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  lex->value_list.empty();
	  lex->value_list.push_front((yyvsp[0].item));
	}
    break;

  case 1378:
#line 6849 "sql_yacc.yy"
    { Lex->type= 0; }
    break;

  case 1379:
#line 6850 "sql_yacc.yy"
    { Lex->type= 0; }
    break;

  case 1380:
#line 6851 "sql_yacc.yy"
    { Lex->type= ONLY_KILL_QUERY; }
    break;

  case 1381:
#line 6857 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  lex->sql_command=SQLCOM_CHANGE_DB;
	  lex->select_lex.db= (yyvsp[0].lex_str).str;
	}
    break;

  case 1382:
#line 6866 "sql_yacc.yy"
    {
          LEX *lex=Lex;
	  if (lex->sphead)
	  {
	    my_error(ER_SP_BADSTATEMENT, MYF(0), "LOAD DATA");
	    YYABORT;
	  }
          lex->fname_start= lex->ptr;
        }
    break;

  case 1383:
#line 6876 "sql_yacc.yy"
    {}
    break;

  case 1384:
#line 6879 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  if (lex->sphead)
	  {
	    my_error(ER_SP_BADSTATEMENT, MYF(0), "LOAD TABLE");
	    YYABORT;
	  }
          lex->sql_command = SQLCOM_LOAD_MASTER_TABLE;
          if (!Select->add_table_to_list(YYTHD, (yyvsp[-2].table), NULL, TL_OPTION_UPDATING))
            YYABORT;
        }
    break;

  case 1385:
#line 6893 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  lex->sql_command= SQLCOM_LOAD;
	  lex->lock_option= (yyvsp[-3].lock_type);
	  lex->local_file=  (yyvsp[-2].num);
	  lex->duplicates= DUP_ERROR;
	  lex->ignore= 0;
	  if (!(lex->exchange= new sql_exchange((yyvsp[0].lex_str).str, 0)))
	    YYABORT;
        }
    break;

  case 1386:
#line 6904 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  lex->fname_end= lex->ptr;
	}
    break;

  case 1387:
#line 6909 "sql_yacc.yy"
    {
          LEX *lex=Lex;
          if (!Select->add_table_to_list(YYTHD, (yyvsp[0].table), NULL, TL_OPTION_UPDATING,
                                         lex->lock_option))
            YYABORT;
          lex->field_list.empty();
          lex->update_list.empty();
          lex->value_list.empty();
        }
    break;

  case 1388:
#line 6920 "sql_yacc.yy"
    {}
    break;

  case 1389:
#line 6923 "sql_yacc.yy"
    {
	  Lex->sql_command = SQLCOM_LOAD_MASTER_DATA;
        }
    break;

  case 1390:
#line 6928 "sql_yacc.yy"
    { (yyval.num)=0;}
    break;

  case 1391:
#line 6929 "sql_yacc.yy"
    { (yyval.num)=1;}
    break;

  case 1392:
#line 6932 "sql_yacc.yy"
    { (yyval.lock_type)= YYTHD->update_lock_default; }
    break;

  case 1393:
#line 6934 "sql_yacc.yy"
    {
#ifdef HAVE_QUERY_CACHE
            /*
              Ignore this option in SP to avoid problem with query cache
            */
            if (Lex->sphead != 0)
#endif
              (yyval.lock_type)= TL_WRITE_CONCURRENT_INSERT;
          }
    break;

  case 1394:
#line 6943 "sql_yacc.yy"
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
    break;

  case 1395:
#line 6947 "sql_yacc.yy"
    { Lex->duplicates=DUP_ERROR; }
    break;

  case 1396:
#line 6948 "sql_yacc.yy"
    { Lex->duplicates=DUP_REPLACE; }
    break;

  case 1397:
#line 6949 "sql_yacc.yy"
    { Lex->ignore= 1; }
    break;

  case 1402:
#line 6961 "sql_yacc.yy"
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->field_term= (yyvsp[0].string);
          }
    break;

  case 1403:
#line 6966 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            DBUG_ASSERT(lex->exchange != 0);
            lex->exchange->enclosed= (yyvsp[0].string);
            lex->exchange->opt_enclosed= 1;
	  }
    break;

  case 1404:
#line 6973 "sql_yacc.yy"
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->enclosed= (yyvsp[0].string);
          }
    break;

  case 1405:
#line 6978 "sql_yacc.yy"
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->escaped= (yyvsp[0].string);
          }
    break;

  case 1410:
#line 6993 "sql_yacc.yy"
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->line_term= (yyvsp[0].string);
          }
    break;

  case 1411:
#line 6998 "sql_yacc.yy"
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->line_start= (yyvsp[0].string);
          }
    break;

  case 1413:
#line 7006 "sql_yacc.yy"
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->skip_lines= atol((yyvsp[-1].lex_str).str);
          }
    break;

  case 1414:
#line 7012 "sql_yacc.yy"
    { }
    break;

  case 1415:
#line 7013 "sql_yacc.yy"
    { }
    break;

  case 1416:
#line 7014 "sql_yacc.yy"
    { }
    break;

  case 1417:
#line 7018 "sql_yacc.yy"
    { Lex->field_list.push_back((yyvsp[0].item)); }
    break;

  case 1418:
#line 7020 "sql_yacc.yy"
    { Lex->field_list.push_back((yyvsp[0].item)); }
    break;

  case 1419:
#line 7024 "sql_yacc.yy"
    {(yyval.item)= (yyvsp[0].item);}
    break;

  case 1420:
#line 7026 "sql_yacc.yy"
    { (yyval.item)= new Item_user_var_as_out_param((yyvsp[0].lex_str)); }
    break;

  case 1421:
#line 7030 "sql_yacc.yy"
    { }
    break;

  case 1422:
#line 7031 "sql_yacc.yy"
    { }
    break;

  case 1423:
#line 7038 "sql_yacc.yy"
    {
	  THD *thd= YYTHD;
	  (yyval.item) = new Item_string((yyvsp[0].lex_str).str,(yyvsp[0].lex_str).length,thd->variables.collation_connection);
	}
    break;

  case 1424:
#line 7043 "sql_yacc.yy"
    { (yyval.item)=  new Item_string((yyvsp[0].lex_str).str,(yyvsp[0].lex_str).length,national_charset_info); }
    break;

  case 1425:
#line 7045 "sql_yacc.yy"
    { (yyval.item) = new Item_string((yyvsp[0].lex_str).str,(yyvsp[0].lex_str).length,Lex->charset); }
    break;

  case 1426:
#line 7047 "sql_yacc.yy"
    { ((Item_string*) (yyvsp[-1].item))->append((yyvsp[0].lex_str).str,(yyvsp[0].lex_str).length); }
    break;

  case 1427:
#line 7052 "sql_yacc.yy"
    { (yyval.string)=  new (YYTHD->mem_root) String((yyvsp[0].lex_str).str,(yyvsp[0].lex_str).length,YYTHD->variables.collation_connection); }
    break;

  case 1428:
#line 7054 "sql_yacc.yy"
    {
	    Item *tmp= new Item_hex_string((yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
	    /*
	      it is OK only emulate fix_fields, because we need only
              value of constant
	    */
	    (yyval.string)= tmp ?
	      tmp->quick_fix_field(), tmp->val_str((String*) 0) :
	      (String*) 0;
	  }
    break;

  case 1429:
#line 7065 "sql_yacc.yy"
    {
	    Item *tmp= new Item_bin_string((yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
	    /*
	      it is OK only emulate fix_fields, because we need only
              value of constant
	    */
	    (yyval.string)= tmp ? tmp->quick_fix_field(), tmp->val_str((String*) 0) :
		      (String*) 0;
          }
    break;

  case 1430:
#line 7078 "sql_yacc.yy"
    {
          THD *thd=YYTHD;
	  LEX *lex= thd->lex;
          Item_param *item= new Item_param((uint) (lex->tok_start -
                                                   (uchar *) thd->query));
          if (!((yyval.item)= item) || lex->param_list.push_back(item))
          {
            my_message(ER_OUT_OF_RESOURCES, ER(ER_OUT_OF_RESOURCES), MYF(0));
            YYABORT;
          }
        }
    break;

  case 1431:
#line 7092 "sql_yacc.yy"
    { (yyval.item) = (yyvsp[0].item); }
    break;

  case 1432:
#line 7093 "sql_yacc.yy"
    { (yyval.item) = (yyvsp[0].item_num); }
    break;

  case 1433:
#line 7095 "sql_yacc.yy"
    {
	    (yyvsp[0].item_num)->max_length++;
	    (yyval.item)= (yyvsp[0].item_num)->neg();
	  }
    break;

  case 1434:
#line 7103 "sql_yacc.yy"
    { (yyval.item) =	(yyvsp[0].item); }
    break;

  case 1435:
#line 7104 "sql_yacc.yy"
    { (yyval.item) = (yyvsp[0].item_num); }
    break;

  case 1436:
#line 7105 "sql_yacc.yy"
    { (yyval.item) =	new Item_null();
			  Lex->next_state=MY_LEX_OPERATOR_OR_IDENT;}
    break;

  case 1437:
#line 7107 "sql_yacc.yy"
    { (yyval.item)= new Item_int((char*) "FALSE",0,1); }
    break;

  case 1438:
#line 7108 "sql_yacc.yy"
    { (yyval.item)= new Item_int((char*) "TRUE",1,1); }
    break;

  case 1439:
#line 7109 "sql_yacc.yy"
    { (yyval.item) =	new Item_hex_string((yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);}
    break;

  case 1440:
#line 7110 "sql_yacc.yy"
    { (yyval.item)= new Item_bin_string((yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length); }
    break;

  case 1441:
#line 7112 "sql_yacc.yy"
    {
	    Item *tmp= new Item_hex_string((yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
	    /*
	      it is OK only emulate fix_fieds, because we need only
              value of constant
	    */
	    String *str= tmp ?
	      tmp->quick_fix_field(), tmp->val_str((String*) 0) :
	      (String*) 0;
	    (yyval.item)= new Item_string(str ? str->ptr() : "",
				str ? str->length() : 0,
				Lex->charset);
	  }
    break;

  case 1442:
#line 7126 "sql_yacc.yy"
    {
	    Item *tmp= new Item_bin_string((yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
	    /*
	      it is OK only emulate fix_fieds, because we need only
              value of constant
	    */
	    String *str= tmp ?
	      tmp->quick_fix_field(), tmp->val_str((String*) 0) :
	      (String*) 0;
	    (yyval.item)= new Item_string(str ? str->ptr() : "",
				str ? str->length() : 0,
				Lex->charset);
          }
    break;

  case 1443:
#line 7139 "sql_yacc.yy"
    { (yyval.item) = (yyvsp[0].item); }
    break;

  case 1444:
#line 7140 "sql_yacc.yy"
    { (yyval.item) = (yyvsp[0].item); }
    break;

  case 1445:
#line 7141 "sql_yacc.yy"
    { (yyval.item) = (yyvsp[0].item); }
    break;

  case 1446:
#line 7144 "sql_yacc.yy"
    { int error; (yyval.item_num) = new Item_int((yyvsp[0].lex_str).str, (longlong) my_strtoll10((yyvsp[0].lex_str).str, NULL, &error), (yyvsp[0].lex_str).length); }
    break;

  case 1447:
#line 7145 "sql_yacc.yy"
    { int error; (yyval.item_num) = new Item_int((yyvsp[0].lex_str).str, (longlong) my_strtoll10((yyvsp[0].lex_str).str, NULL, &error), (yyvsp[0].lex_str).length); }
    break;

  case 1448:
#line 7146 "sql_yacc.yy"
    { (yyval.item_num) =	new Item_uint((yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length); }
    break;

  case 1449:
#line 7148 "sql_yacc.yy"
    {
           (yyval.item_num)= new Item_decimal((yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length, YYTHD->charset());
	   if (YYTHD->net.report_error)
	   {
	     YYABORT;
	   }
	}
    break;

  case 1450:
#line 7156 "sql_yacc.yy"
    {
	   (yyval.item_num) =	new Item_float((yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
	   if (YYTHD->net.report_error)
	   {
	     YYABORT;
	   }
	}
    break;

  case 1451:
#line 7170 "sql_yacc.yy"
    { (yyval.item)=(yyvsp[0].item); }
    break;

  case 1452:
#line 7171 "sql_yacc.yy"
    { (yyval.item)=(yyvsp[0].item); }
    break;

  case 1453:
#line 7175 "sql_yacc.yy"
    {
          SELECT_LEX *sel= Select;
	  (yyval.item) = new Item_field(Lex->current_context(), NullS, (yyvsp[-2].lex_str).str, "*");
	  sel->with_wild++;
	}
    break;

  case 1454:
#line 7181 "sql_yacc.yy"
    {
          SELECT_LEX *sel= Select;
	  (yyval.item) = new Item_field(Lex->current_context(), (YYTHD->client_capabilities &
                             CLIENT_NO_SCHEMA ? NullS : (yyvsp[-4].lex_str).str),
                             (yyvsp[-2].lex_str).str,"*");
	  sel->with_wild++;
	}
    break;

  case 1455:
#line 7191 "sql_yacc.yy"
    { (yyval.item)=(yyvsp[0].item); }
    break;

  case 1456:
#line 7195 "sql_yacc.yy"
    {
	  sp_variable_t *spv;
	  LEX *lex = Lex;
          sp_pcontext *spc = lex->spcont;
	  if (spc && (spv = spc->find_variable(&(yyvsp[0].lex_str))))
	  {
            /* We're compiling a stored procedure and found a variable */
            Item_splocal *splocal;
            splocal= new Item_splocal((yyvsp[0].lex_str), spv->offset, spv->type,
                                      lex->tok_start_prev - 
                                      lex->sphead->m_tmp_query);
#ifndef DBUG_OFF
            if (splocal)
              splocal->m_sp= lex->sphead;
#endif
	    (yyval.item) = (Item*) splocal;
            lex->variables_used= 1;
	    lex->safe_to_cache_query=0;
	  }
	  else
	  {
	    SELECT_LEX *sel=Select;
	    (yyval.item)= (sel->parsing_place != IN_HAVING ||
	         sel->get_in_sum_expr() > 0) ?
                 (Item*) new Item_field(Lex->current_context(), NullS, NullS, (yyvsp[0].lex_str).str) :
	         (Item*) new Item_ref(Lex->current_context(), NullS, NullS, (yyvsp[0].lex_str).str);
	  }
        }
    break;

  case 1457:
#line 7223 "sql_yacc.yy"
    { (yyval.item)= (yyvsp[0].item); }
    break;

  case 1458:
#line 7228 "sql_yacc.yy"
    {
	  SELECT_LEX *sel=Select;
	  (yyval.item)= (sel->parsing_place != IN_HAVING ||
	       sel->get_in_sum_expr() > 0) ?
              (Item*) new Item_field(Lex->current_context(), NullS, NullS, (yyvsp[0].lex_str).str) :
	      (Item*) new Item_ref(Lex->current_context(), NullS, NullS, (yyvsp[0].lex_str).str);
	}
    break;

  case 1459:
#line 7235 "sql_yacc.yy"
    { (yyval.item)= (yyvsp[0].item); }
    break;

  case 1460:
#line 7240 "sql_yacc.yy"
    {
	  THD *thd= YYTHD;
	  LEX *lex= thd->lex;

          /*
            FIXME This will work ok in simple_ident_nospvar case because
            we can't meet simple_ident_nospvar in trigger now. But it
            should be changed in future.
          */
          if (lex->sphead && lex->sphead->m_type == TYPE_ENUM_TRIGGER &&
              (!my_strcasecmp(system_charset_info, (yyvsp[-2].lex_str).str, "NEW") ||
               !my_strcasecmp(system_charset_info, (yyvsp[-2].lex_str).str, "OLD")))
          {
            Item_trigger_field *trg_fld;
            bool new_row= ((yyvsp[-2].lex_str).str[0]=='N' || (yyvsp[-2].lex_str).str[0]=='n');

            if (lex->trg_chistics.event == TRG_EVENT_INSERT &&
                !new_row)
            {
              my_error(ER_TRG_NO_SUCH_ROW_IN_TRG, MYF(0), "OLD", "on INSERT");
              YYABORT;
            }

            if (lex->trg_chistics.event == TRG_EVENT_DELETE &&
                new_row)
            {
              my_error(ER_TRG_NO_SUCH_ROW_IN_TRG, MYF(0), "NEW", "on DELETE");
              YYABORT;
            }

            DBUG_ASSERT(!new_row ||
                        (lex->trg_chistics.event == TRG_EVENT_INSERT ||
                         lex->trg_chistics.event == TRG_EVENT_UPDATE));
            const bool read_only=
              !(new_row && lex->trg_chistics.action_time == TRG_ACTION_BEFORE);
            if (!(trg_fld= new Item_trigger_field(Lex->current_context(),
                                                  new_row ?
                                                  Item_trigger_field::NEW_ROW:
                                                  Item_trigger_field::OLD_ROW,
                                                  (yyvsp[0].lex_str).str,
                                                  SELECT_ACL,
                                                  read_only)))
              YYABORT;

            /*
              Let us add this item to list of all Item_trigger_field objects
              in trigger.
            */
            lex->trg_table_fields.link_in_list((byte *)trg_fld,
              (byte**)&trg_fld->next_trg_field);

            (yyval.item)= (Item *)trg_fld;
          }
          else
          {
	    SELECT_LEX *sel= lex->current_select;
	    if (sel->no_table_names_allowed)
	    {
	      my_error(ER_TABLENAME_NOT_ALLOWED_HERE,
                       MYF(0), (yyvsp[-2].lex_str).str, thd->where);
	    }
	    (yyval.item)= (sel->parsing_place != IN_HAVING ||
	         sel->get_in_sum_expr() > 0) ?
	        (Item*) new Item_field(Lex->current_context(), NullS, (yyvsp[-2].lex_str).str, (yyvsp[0].lex_str).str) :
	        (Item*) new Item_ref(Lex->current_context(), NullS, (yyvsp[-2].lex_str).str, (yyvsp[0].lex_str).str);
          }
        }
    break;

  case 1461:
#line 7308 "sql_yacc.yy"
    {
	  THD *thd= YYTHD;
	  LEX *lex= thd->lex;
	  SELECT_LEX *sel= lex->current_select;
	  if (sel->no_table_names_allowed)
	  {
	    my_error(ER_TABLENAME_NOT_ALLOWED_HERE,
                     MYF(0), (yyvsp[-2].lex_str).str, thd->where);
	  }
	  (yyval.item)= (sel->parsing_place != IN_HAVING ||
	       sel->get_in_sum_expr() > 0) ?
	      (Item*) new Item_field(Lex->current_context(), NullS, (yyvsp[-2].lex_str).str, (yyvsp[0].lex_str).str) :
              (Item*) new Item_ref(Lex->current_context(), NullS, (yyvsp[-2].lex_str).str, (yyvsp[0].lex_str).str);
	}
    break;

  case 1462:
#line 7323 "sql_yacc.yy"
    {
	  THD *thd= YYTHD;
	  LEX *lex= thd->lex;
	  SELECT_LEX *sel= lex->current_select;
	  if (sel->no_table_names_allowed)
	  {
	    my_error(ER_TABLENAME_NOT_ALLOWED_HERE,
                     MYF(0), (yyvsp[-2].lex_str).str, thd->where);
	  }
	  (yyval.item)= (sel->parsing_place != IN_HAVING ||
	       sel->get_in_sum_expr() > 0) ?
	      (Item*) new Item_field(Lex->current_context(),
                                     (YYTHD->client_capabilities &
				      CLIENT_NO_SCHEMA ? NullS : (yyvsp[-4].lex_str).str),
				     (yyvsp[-2].lex_str).str, (yyvsp[0].lex_str).str) :
	      (Item*) new Item_ref(Lex->current_context(),
                                   (YYTHD->client_capabilities &
				    CLIENT_NO_SCHEMA ? NullS : (yyvsp[-4].lex_str).str),
                                   (yyvsp[-2].lex_str).str, (yyvsp[0].lex_str).str);
	}
    break;

  case 1463:
#line 7346 "sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[0].lex_str);}
    break;

  case 1464:
#line 7348 "sql_yacc.yy"
    {
            TABLE_LIST *table= (TABLE_LIST*) Select->table_list.first;
            if (my_strcasecmp(table_alias_charset, (yyvsp[-4].lex_str).str, table->db))
            {
              my_error(ER_WRONG_DB_NAME, MYF(0), (yyvsp[-4].lex_str).str);
              YYABORT;
            }
            if (my_strcasecmp(table_alias_charset, (yyvsp[-2].lex_str).str,
                              table->table_name))
            {
              my_error(ER_WRONG_TABLE_NAME, MYF(0), (yyvsp[-2].lex_str).str);
              YYABORT;
            }
            (yyval.lex_str)=(yyvsp[0].lex_str);
          }
    break;

  case 1465:
#line 7364 "sql_yacc.yy"
    {
            TABLE_LIST *table= (TABLE_LIST*) Select->table_list.first;
            if (my_strcasecmp(table_alias_charset, (yyvsp[-2].lex_str).str, table->alias))
            {
              my_error(ER_WRONG_TABLE_NAME, MYF(0), (yyvsp[-2].lex_str).str);
              YYABORT;
            }
            (yyval.lex_str)=(yyvsp[0].lex_str);
          }
    break;

  case 1466:
#line 7373 "sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[0].lex_str);}
    break;

  case 1467:
#line 7376 "sql_yacc.yy"
    { (yyval.table)=new Table_ident((yyvsp[0].lex_str)); }
    break;

  case 1468:
#line 7377 "sql_yacc.yy"
    { (yyval.table)=new Table_ident(YYTHD, (yyvsp[-2].lex_str),(yyvsp[0].lex_str),0);}
    break;

  case 1469:
#line 7378 "sql_yacc.yy"
    { (yyval.table)=new Table_ident((yyvsp[0].lex_str));}
    break;

  case 1470:
#line 7382 "sql_yacc.yy"
    { LEX_STRING db={(char*) any_db,3}; (yyval.table)=new Table_ident(YYTHD, db,(yyvsp[0].lex_str),0); }
    break;

  case 1471:
#line 7386 "sql_yacc.yy"
    { (yyval.lex_str)= (yyvsp[0].lex_str); }
    break;

  case 1472:
#line 7388 "sql_yacc.yy"
    {
	    THD *thd= YYTHD;
	    if (thd->charset_is_system_charset)
            {
              CHARSET_INFO *cs= system_charset_info;
              int dummy_error;
              uint wlen= cs->cset->well_formed_len(cs, (yyvsp[0].lex_str).str,
                                                   (yyvsp[0].lex_str).str+(yyvsp[0].lex_str).length,
                                                   (yyvsp[0].lex_str).length, &dummy_error);
              if (wlen < (yyvsp[0].lex_str).length)
              {
                my_error(ER_INVALID_CHARACTER_STRING, MYF(0),
                         cs->csname, (yyvsp[0].lex_str).str + wlen);
                YYABORT;
              }
	      (yyval.lex_str)= (yyvsp[0].lex_str);
            }
	    else
	      thd->convert_string(&(yyval.lex_str), system_charset_info,
				  (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length, thd->charset());
	  }
    break;

  case 1473:
#line 7413 "sql_yacc.yy"
    {
	  THD *thd= YYTHD;
	  if (thd->charset_is_system_charset)
	    (yyval.lex_str)= (yyvsp[0].lex_str);
	  else
	    thd->convert_string(&(yyval.lex_str), system_charset_info,
				(yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length, thd->charset());
	}
    break;

  case 1474:
#line 7425 "sql_yacc.yy"
    {
	  THD *thd= YYTHD;
	  if (thd->charset_is_collation_connection)
	    (yyval.lex_str)= (yyvsp[0].lex_str);
	  else
	    thd->convert_string(&(yyval.lex_str), thd->variables.collation_connection,
				(yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length, thd->charset());
	}
    break;

  case 1475:
#line 7438 "sql_yacc.yy"
    {
	  THD *thd= YYTHD;
	  if (thd->charset_is_character_set_filesystem)
	    (yyval.lex_str)= (yyvsp[0].lex_str);
	  else
	    thd->convert_string(&(yyval.lex_str), thd->variables.character_set_filesystem,
				(yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length, thd->charset());
	}
    break;

  case 1476:
#line 7449 "sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[0].lex_str); }
    break;

  case 1477:
#line 7451 "sql_yacc.yy"
    {
	  THD *thd= YYTHD;
	  (yyval.lex_str).str=    thd->strmake((yyvsp[0].symbol).str, (yyvsp[0].symbol).length);
	  (yyval.lex_str).length= (yyvsp[0].symbol).length;
	}
    break;

  case 1478:
#line 7459 "sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[0].lex_str); }
    break;

  case 1479:
#line 7461 "sql_yacc.yy"
    {
	  THD *thd= YYTHD;
	  (yyval.lex_str).str=    thd->strmake((yyvsp[0].symbol).str, (yyvsp[0].symbol).length);
	  (yyval.lex_str).length= (yyvsp[0].symbol).length;
	}
    break;

  case 1480:
#line 7469 "sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[0].lex_str);}
    break;

  case 1481:
#line 7470 "sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[0].lex_str);}
    break;

  case 1482:
#line 7471 "sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[0].lex_str);}
    break;

  case 1483:
#line 7475 "sql_yacc.yy"
    {
	  THD *thd= YYTHD;
	  if (!((yyval.lex_user)=(LEX_USER*) thd->alloc(sizeof(st_lex_user))))
	    YYABORT;
	  (yyval.lex_user)->user = (yyvsp[0].lex_str);
	  (yyval.lex_user)->host.str= (char *) "%";
	  (yyval.lex_user)->host.length= 1;

	  if (check_string_length(&(yyval.lex_user)->user, ER(ER_USERNAME), USERNAME_LENGTH))
	    YYABORT;
	}
    break;

  case 1484:
#line 7487 "sql_yacc.yy"
    {
	    THD *thd= YYTHD;
	    if (!((yyval.lex_user)=(LEX_USER*) thd->alloc(sizeof(st_lex_user))))
	      YYABORT;
	    (yyval.lex_user)->user = (yyvsp[-2].lex_str); (yyval.lex_user)->host=(yyvsp[0].lex_str);

	    if (check_string_length(&(yyval.lex_user)->user, ER(ER_USERNAME), USERNAME_LENGTH) ||
	        check_string_length(&(yyval.lex_user)->host, ER(ER_HOSTNAME),
					       HOSTNAME_LENGTH))
	      YYABORT;
	  }
    break;

  case 1485:
#line 7499 "sql_yacc.yy"
    {
          THD *thd= YYTHD;
          Security_context *sctx= thd->security_ctx;
          if (!((yyval.lex_user)=(LEX_USER*) thd->alloc(sizeof(st_lex_user))))
            YYABORT;
          (yyval.lex_user)->user.str= sctx->priv_user;
          (yyval.lex_user)->user.length= strlen(sctx->priv_user);
          if (*sctx->priv_host != 0)
          {
            (yyval.lex_user)->host.str= sctx->priv_host;
            (yyval.lex_user)->host.length= strlen(sctx->priv_host);
          }
          else
          {
            (yyval.lex_user)->host.str= (char *) "%";
            (yyval.lex_user)->host.length= 1;
          }
	}
    break;

  case 1486:
#line 7520 "sql_yacc.yy"
    {}
    break;

  case 1487:
#line 7521 "sql_yacc.yy"
    {}
    break;

  case 1488:
#line 7522 "sql_yacc.yy"
    {}
    break;

  case 1489:
#line 7523 "sql_yacc.yy"
    {}
    break;

  case 1490:
#line 7524 "sql_yacc.yy"
    {}
    break;

  case 1491:
#line 7525 "sql_yacc.yy"
    {}
    break;

  case 1492:
#line 7526 "sql_yacc.yy"
    {}
    break;

  case 1493:
#line 7527 "sql_yacc.yy"
    {}
    break;

  case 1494:
#line 7528 "sql_yacc.yy"
    {}
    break;

  case 1495:
#line 7529 "sql_yacc.yy"
    {}
    break;

  case 1496:
#line 7530 "sql_yacc.yy"
    {}
    break;

  case 1497:
#line 7531 "sql_yacc.yy"
    {}
    break;

  case 1498:
#line 7532 "sql_yacc.yy"
    {}
    break;

  case 1499:
#line 7533 "sql_yacc.yy"
    {}
    break;

  case 1500:
#line 7534 "sql_yacc.yy"
    {}
    break;

  case 1501:
#line 7535 "sql_yacc.yy"
    {}
    break;

  case 1502:
#line 7536 "sql_yacc.yy"
    {}
    break;

  case 1503:
#line 7537 "sql_yacc.yy"
    {}
    break;

  case 1504:
#line 7538 "sql_yacc.yy"
    {}
    break;

  case 1505:
#line 7539 "sql_yacc.yy"
    {}
    break;

  case 1506:
#line 7540 "sql_yacc.yy"
    {}
    break;

  case 1507:
#line 7541 "sql_yacc.yy"
    {}
    break;

  case 1508:
#line 7542 "sql_yacc.yy"
    {}
    break;

  case 1509:
#line 7543 "sql_yacc.yy"
    {}
    break;

  case 1510:
#line 7544 "sql_yacc.yy"
    {}
    break;

  case 1511:
#line 7545 "sql_yacc.yy"
    {}
    break;

  case 1512:
#line 7546 "sql_yacc.yy"
    {}
    break;

  case 1513:
#line 7547 "sql_yacc.yy"
    {}
    break;

  case 1514:
#line 7548 "sql_yacc.yy"
    {}
    break;

  case 1515:
#line 7549 "sql_yacc.yy"
    {}
    break;

  case 1516:
#line 7550 "sql_yacc.yy"
    {}
    break;

  case 1517:
#line 7551 "sql_yacc.yy"
    {}
    break;

  case 1518:
#line 7552 "sql_yacc.yy"
    {}
    break;

  case 1519:
#line 7553 "sql_yacc.yy"
    {}
    break;

  case 1520:
#line 7554 "sql_yacc.yy"
    {}
    break;

  case 1521:
#line 7555 "sql_yacc.yy"
    {}
    break;

  case 1522:
#line 7565 "sql_yacc.yy"
    {}
    break;

  case 1523:
#line 7566 "sql_yacc.yy"
    {}
    break;

  case 1524:
#line 7567 "sql_yacc.yy"
    {}
    break;

  case 1525:
#line 7568 "sql_yacc.yy"
    {}
    break;

  case 1526:
#line 7569 "sql_yacc.yy"
    {}
    break;

  case 1527:
#line 7570 "sql_yacc.yy"
    {}
    break;

  case 1528:
#line 7571 "sql_yacc.yy"
    {}
    break;

  case 1529:
#line 7572 "sql_yacc.yy"
    {}
    break;

  case 1530:
#line 7573 "sql_yacc.yy"
    {}
    break;

  case 1531:
#line 7574 "sql_yacc.yy"
    {}
    break;

  case 1532:
#line 7575 "sql_yacc.yy"
    {}
    break;

  case 1533:
#line 7576 "sql_yacc.yy"
    {}
    break;

  case 1534:
#line 7577 "sql_yacc.yy"
    {}
    break;

  case 1535:
#line 7578 "sql_yacc.yy"
    {}
    break;

  case 1536:
#line 7579 "sql_yacc.yy"
    {}
    break;

  case 1537:
#line 7580 "sql_yacc.yy"
    {}
    break;

  case 1538:
#line 7581 "sql_yacc.yy"
    {}
    break;

  case 1539:
#line 7582 "sql_yacc.yy"
    {}
    break;

  case 1540:
#line 7583 "sql_yacc.yy"
    {}
    break;

  case 1541:
#line 7584 "sql_yacc.yy"
    {}
    break;

  case 1542:
#line 7585 "sql_yacc.yy"
    {}
    break;

  case 1543:
#line 7586 "sql_yacc.yy"
    {}
    break;

  case 1544:
#line 7587 "sql_yacc.yy"
    {}
    break;

  case 1545:
#line 7588 "sql_yacc.yy"
    {}
    break;

  case 1546:
#line 7589 "sql_yacc.yy"
    {}
    break;

  case 1547:
#line 7590 "sql_yacc.yy"
    {}
    break;

  case 1548:
#line 7591 "sql_yacc.yy"
    {}
    break;

  case 1549:
#line 7592 "sql_yacc.yy"
    {}
    break;

  case 1550:
#line 7593 "sql_yacc.yy"
    {}
    break;

  case 1551:
#line 7594 "sql_yacc.yy"
    {}
    break;

  case 1552:
#line 7595 "sql_yacc.yy"
    {}
    break;

  case 1553:
#line 7596 "sql_yacc.yy"
    {}
    break;

  case 1554:
#line 7597 "sql_yacc.yy"
    {}
    break;

  case 1555:
#line 7598 "sql_yacc.yy"
    {}
    break;

  case 1556:
#line 7599 "sql_yacc.yy"
    {}
    break;

  case 1557:
#line 7600 "sql_yacc.yy"
    {}
    break;

  case 1558:
#line 7601 "sql_yacc.yy"
    {}
    break;

  case 1559:
#line 7602 "sql_yacc.yy"
    {}
    break;

  case 1560:
#line 7603 "sql_yacc.yy"
    {}
    break;

  case 1561:
#line 7604 "sql_yacc.yy"
    {}
    break;

  case 1562:
#line 7605 "sql_yacc.yy"
    {}
    break;

  case 1563:
#line 7606 "sql_yacc.yy"
    {}
    break;

  case 1564:
#line 7607 "sql_yacc.yy"
    {}
    break;

  case 1565:
#line 7608 "sql_yacc.yy"
    {}
    break;

  case 1566:
#line 7609 "sql_yacc.yy"
    {}
    break;

  case 1567:
#line 7610 "sql_yacc.yy"
    {}
    break;

  case 1568:
#line 7611 "sql_yacc.yy"
    {}
    break;

  case 1569:
#line 7612 "sql_yacc.yy"
    {}
    break;

  case 1570:
#line 7613 "sql_yacc.yy"
    {}
    break;

  case 1571:
#line 7614 "sql_yacc.yy"
    {}
    break;

  case 1572:
#line 7615 "sql_yacc.yy"
    {}
    break;

  case 1573:
#line 7616 "sql_yacc.yy"
    {}
    break;

  case 1574:
#line 7617 "sql_yacc.yy"
    {}
    break;

  case 1575:
#line 7618 "sql_yacc.yy"
    {}
    break;

  case 1576:
#line 7619 "sql_yacc.yy"
    {}
    break;

  case 1577:
#line 7620 "sql_yacc.yy"
    {}
    break;

  case 1578:
#line 7621 "sql_yacc.yy"
    {}
    break;

  case 1579:
#line 7622 "sql_yacc.yy"
    {}
    break;

  case 1580:
#line 7623 "sql_yacc.yy"
    {}
    break;

  case 1581:
#line 7624 "sql_yacc.yy"
    {}
    break;

  case 1582:
#line 7625 "sql_yacc.yy"
    {}
    break;

  case 1583:
#line 7626 "sql_yacc.yy"
    {}
    break;

  case 1584:
#line 7627 "sql_yacc.yy"
    {}
    break;

  case 1585:
#line 7628 "sql_yacc.yy"
    {}
    break;

  case 1586:
#line 7629 "sql_yacc.yy"
    {}
    break;

  case 1587:
#line 7630 "sql_yacc.yy"
    {}
    break;

  case 1588:
#line 7631 "sql_yacc.yy"
    {}
    break;

  case 1589:
#line 7632 "sql_yacc.yy"
    {}
    break;

  case 1590:
#line 7633 "sql_yacc.yy"
    {}
    break;

  case 1591:
#line 7634 "sql_yacc.yy"
    {}
    break;

  case 1592:
#line 7635 "sql_yacc.yy"
    {}
    break;

  case 1593:
#line 7636 "sql_yacc.yy"
    {}
    break;

  case 1594:
#line 7637 "sql_yacc.yy"
    {}
    break;

  case 1595:
#line 7638 "sql_yacc.yy"
    {}
    break;

  case 1596:
#line 7639 "sql_yacc.yy"
    {}
    break;

  case 1597:
#line 7640 "sql_yacc.yy"
    {}
    break;

  case 1598:
#line 7641 "sql_yacc.yy"
    {}
    break;

  case 1599:
#line 7642 "sql_yacc.yy"
    {}
    break;

  case 1600:
#line 7643 "sql_yacc.yy"
    {}
    break;

  case 1601:
#line 7644 "sql_yacc.yy"
    {}
    break;

  case 1602:
#line 7645 "sql_yacc.yy"
    {}
    break;

  case 1603:
#line 7646 "sql_yacc.yy"
    {}
    break;

  case 1604:
#line 7647 "sql_yacc.yy"
    {}
    break;

  case 1605:
#line 7648 "sql_yacc.yy"
    {}
    break;

  case 1606:
#line 7649 "sql_yacc.yy"
    {}
    break;

  case 1607:
#line 7650 "sql_yacc.yy"
    {}
    break;

  case 1608:
#line 7651 "sql_yacc.yy"
    {}
    break;

  case 1609:
#line 7652 "sql_yacc.yy"
    {}
    break;

  case 1610:
#line 7653 "sql_yacc.yy"
    {}
    break;

  case 1611:
#line 7654 "sql_yacc.yy"
    {}
    break;

  case 1612:
#line 7655 "sql_yacc.yy"
    {}
    break;

  case 1613:
#line 7656 "sql_yacc.yy"
    {}
    break;

  case 1614:
#line 7657 "sql_yacc.yy"
    {}
    break;

  case 1615:
#line 7658 "sql_yacc.yy"
    {}
    break;

  case 1616:
#line 7659 "sql_yacc.yy"
    {}
    break;

  case 1617:
#line 7660 "sql_yacc.yy"
    {}
    break;

  case 1618:
#line 7661 "sql_yacc.yy"
    {}
    break;

  case 1619:
#line 7662 "sql_yacc.yy"
    {}
    break;

  case 1620:
#line 7663 "sql_yacc.yy"
    {}
    break;

  case 1621:
#line 7664 "sql_yacc.yy"
    {}
    break;

  case 1622:
#line 7665 "sql_yacc.yy"
    {}
    break;

  case 1623:
#line 7666 "sql_yacc.yy"
    {}
    break;

  case 1624:
#line 7667 "sql_yacc.yy"
    {}
    break;

  case 1625:
#line 7668 "sql_yacc.yy"
    {}
    break;

  case 1626:
#line 7669 "sql_yacc.yy"
    {}
    break;

  case 1627:
#line 7670 "sql_yacc.yy"
    {}
    break;

  case 1628:
#line 7671 "sql_yacc.yy"
    {}
    break;

  case 1629:
#line 7672 "sql_yacc.yy"
    {}
    break;

  case 1630:
#line 7673 "sql_yacc.yy"
    {}
    break;

  case 1631:
#line 7674 "sql_yacc.yy"
    {}
    break;

  case 1632:
#line 7675 "sql_yacc.yy"
    {}
    break;

  case 1633:
#line 7676 "sql_yacc.yy"
    {}
    break;

  case 1634:
#line 7677 "sql_yacc.yy"
    {}
    break;

  case 1635:
#line 7678 "sql_yacc.yy"
    {}
    break;

  case 1636:
#line 7679 "sql_yacc.yy"
    {}
    break;

  case 1637:
#line 7680 "sql_yacc.yy"
    {}
    break;

  case 1638:
#line 7681 "sql_yacc.yy"
    {}
    break;

  case 1639:
#line 7682 "sql_yacc.yy"
    {}
    break;

  case 1640:
#line 7683 "sql_yacc.yy"
    {}
    break;

  case 1641:
#line 7684 "sql_yacc.yy"
    {}
    break;

  case 1642:
#line 7685 "sql_yacc.yy"
    {}
    break;

  case 1643:
#line 7686 "sql_yacc.yy"
    {}
    break;

  case 1644:
#line 7687 "sql_yacc.yy"
    {}
    break;

  case 1645:
#line 7688 "sql_yacc.yy"
    {}
    break;

  case 1646:
#line 7689 "sql_yacc.yy"
    {}
    break;

  case 1647:
#line 7690 "sql_yacc.yy"
    {}
    break;

  case 1648:
#line 7691 "sql_yacc.yy"
    {}
    break;

  case 1649:
#line 7692 "sql_yacc.yy"
    {}
    break;

  case 1650:
#line 7693 "sql_yacc.yy"
    {}
    break;

  case 1651:
#line 7694 "sql_yacc.yy"
    {}
    break;

  case 1652:
#line 7695 "sql_yacc.yy"
    {}
    break;

  case 1653:
#line 7696 "sql_yacc.yy"
    {}
    break;

  case 1654:
#line 7697 "sql_yacc.yy"
    {}
    break;

  case 1655:
#line 7698 "sql_yacc.yy"
    {}
    break;

  case 1656:
#line 7699 "sql_yacc.yy"
    {}
    break;

  case 1657:
#line 7700 "sql_yacc.yy"
    {}
    break;

  case 1658:
#line 7701 "sql_yacc.yy"
    {}
    break;

  case 1659:
#line 7702 "sql_yacc.yy"
    {}
    break;

  case 1660:
#line 7703 "sql_yacc.yy"
    {}
    break;

  case 1661:
#line 7704 "sql_yacc.yy"
    {}
    break;

  case 1662:
#line 7705 "sql_yacc.yy"
    {}
    break;

  case 1663:
#line 7706 "sql_yacc.yy"
    {}
    break;

  case 1664:
#line 7707 "sql_yacc.yy"
    {}
    break;

  case 1665:
#line 7708 "sql_yacc.yy"
    {}
    break;

  case 1666:
#line 7709 "sql_yacc.yy"
    {}
    break;

  case 1667:
#line 7710 "sql_yacc.yy"
    {}
    break;

  case 1668:
#line 7711 "sql_yacc.yy"
    {}
    break;

  case 1669:
#line 7712 "sql_yacc.yy"
    {}
    break;

  case 1670:
#line 7713 "sql_yacc.yy"
    {}
    break;

  case 1671:
#line 7714 "sql_yacc.yy"
    {}
    break;

  case 1672:
#line 7715 "sql_yacc.yy"
    {}
    break;

  case 1673:
#line 7716 "sql_yacc.yy"
    {}
    break;

  case 1674:
#line 7717 "sql_yacc.yy"
    {}
    break;

  case 1675:
#line 7718 "sql_yacc.yy"
    {}
    break;

  case 1676:
#line 7719 "sql_yacc.yy"
    {}
    break;

  case 1677:
#line 7720 "sql_yacc.yy"
    {}
    break;

  case 1678:
#line 7721 "sql_yacc.yy"
    {}
    break;

  case 1679:
#line 7722 "sql_yacc.yy"
    {}
    break;

  case 1680:
#line 7723 "sql_yacc.yy"
    {}
    break;

  case 1681:
#line 7724 "sql_yacc.yy"
    {}
    break;

  case 1682:
#line 7725 "sql_yacc.yy"
    {}
    break;

  case 1683:
#line 7726 "sql_yacc.yy"
    {}
    break;

  case 1684:
#line 7727 "sql_yacc.yy"
    {}
    break;

  case 1685:
#line 7728 "sql_yacc.yy"
    {}
    break;

  case 1686:
#line 7729 "sql_yacc.yy"
    {}
    break;

  case 1687:
#line 7730 "sql_yacc.yy"
    {}
    break;

  case 1688:
#line 7731 "sql_yacc.yy"
    {}
    break;

  case 1689:
#line 7732 "sql_yacc.yy"
    {}
    break;

  case 1690:
#line 7733 "sql_yacc.yy"
    {}
    break;

  case 1691:
#line 7734 "sql_yacc.yy"
    {}
    break;

  case 1692:
#line 7735 "sql_yacc.yy"
    {}
    break;

  case 1693:
#line 7736 "sql_yacc.yy"
    {}
    break;

  case 1694:
#line 7737 "sql_yacc.yy"
    {}
    break;

  case 1695:
#line 7738 "sql_yacc.yy"
    {}
    break;

  case 1696:
#line 7739 "sql_yacc.yy"
    {}
    break;

  case 1697:
#line 7740 "sql_yacc.yy"
    {}
    break;

  case 1698:
#line 7741 "sql_yacc.yy"
    {}
    break;

  case 1699:
#line 7742 "sql_yacc.yy"
    {}
    break;

  case 1700:
#line 7743 "sql_yacc.yy"
    {}
    break;

  case 1701:
#line 7744 "sql_yacc.yy"
    {}
    break;

  case 1702:
#line 7745 "sql_yacc.yy"
    {}
    break;

  case 1703:
#line 7746 "sql_yacc.yy"
    {}
    break;

  case 1704:
#line 7747 "sql_yacc.yy"
    {}
    break;

  case 1705:
#line 7748 "sql_yacc.yy"
    {}
    break;

  case 1706:
#line 7749 "sql_yacc.yy"
    {}
    break;

  case 1707:
#line 7750 "sql_yacc.yy"
    {}
    break;

  case 1708:
#line 7751 "sql_yacc.yy"
    {}
    break;

  case 1709:
#line 7752 "sql_yacc.yy"
    {}
    break;

  case 1710:
#line 7753 "sql_yacc.yy"
    {}
    break;

  case 1711:
#line 7754 "sql_yacc.yy"
    {}
    break;

  case 1712:
#line 7755 "sql_yacc.yy"
    {}
    break;

  case 1713:
#line 7756 "sql_yacc.yy"
    {}
    break;

  case 1714:
#line 7757 "sql_yacc.yy"
    {}
    break;

  case 1715:
#line 7758 "sql_yacc.yy"
    {}
    break;

  case 1716:
#line 7759 "sql_yacc.yy"
    {}
    break;

  case 1717:
#line 7760 "sql_yacc.yy"
    {}
    break;

  case 1718:
#line 7761 "sql_yacc.yy"
    {}
    break;

  case 1719:
#line 7762 "sql_yacc.yy"
    {}
    break;

  case 1720:
#line 7763 "sql_yacc.yy"
    {}
    break;

  case 1721:
#line 7764 "sql_yacc.yy"
    {}
    break;

  case 1722:
#line 7765 "sql_yacc.yy"
    {}
    break;

  case 1723:
#line 7766 "sql_yacc.yy"
    {}
    break;

  case 1724:
#line 7767 "sql_yacc.yy"
    {}
    break;

  case 1725:
#line 7768 "sql_yacc.yy"
    {}
    break;

  case 1726:
#line 7769 "sql_yacc.yy"
    {}
    break;

  case 1727:
#line 7770 "sql_yacc.yy"
    {}
    break;

  case 1728:
#line 7771 "sql_yacc.yy"
    {}
    break;

  case 1729:
#line 7772 "sql_yacc.yy"
    {}
    break;

  case 1730:
#line 7773 "sql_yacc.yy"
    {}
    break;

  case 1731:
#line 7774 "sql_yacc.yy"
    {}
    break;

  case 1732:
#line 7775 "sql_yacc.yy"
    {}
    break;

  case 1733:
#line 7776 "sql_yacc.yy"
    {}
    break;

  case 1734:
#line 7783 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  lex->sql_command= SQLCOM_SET_OPTION;
	  mysql_init_select(lex);
	  lex->option_type=OPT_SESSION;
	  lex->var_list.empty();
          lex->one_shot_set= 0;
	}
    break;

  case 1735:
#line 7792 "sql_yacc.yy"
    {}
    break;

  case 1736:
#line 7796 "sql_yacc.yy"
    {}
    break;

  case 1737:
#line 7797 "sql_yacc.yy"
    {}
    break;

  case 1740:
#line 7804 "sql_yacc.yy"
    {
          if (Lex->sphead)
          {
            /*
              If we are in SP we want have own LEX for each assignment.
              This is mostly because it is hard for several sp_instr_set
              and sp_instr_set_trigger instructions share one LEX.
              (Well, it is theoretically possible but adds some extra
               overhead on preparation for execution stage and IMO less
               robust).

              QQ: May be we should simply prohibit group assignments in SP?
            */
            LEX *lex;
            Lex->sphead->reset_lex(YYTHD);
            lex= Lex;

            /* Set new LEX as if we at start of set rule. */
	    lex->sql_command= SQLCOM_SET_OPTION;
	    mysql_init_select(lex);
	    lex->option_type=OPT_SESSION;
	    lex->var_list.empty();
            lex->one_shot_set= 0;
	    lex->sphead->m_tmp_query= lex->tok_start;
          }
        }
    break;

  case 1741:
#line 7831 "sql_yacc.yy"
    {
          LEX *lex= Lex;

          if (lex->sphead)
          {
            sp_head *sp= lex->sphead;

	    if (!lex->var_list.is_empty())
	    {
              /*
                We have assignment to user or system variable or
                option setting, so we should construct sp_instr_stmt
                for it.
              */
              LEX_STRING qbuff;
	      sp_instr_stmt *i;

              if (!(i= new sp_instr_stmt(sp->instructions(), lex->spcont,
                                         lex)))
                YYABORT;

              if (lex->ptr - lex->tok_end > 1)
                qbuff.length= lex->ptr - sp->m_tmp_query;
              else
                qbuff.length= lex->tok_end - sp->m_tmp_query;

              if (!(qbuff.str= alloc_root(YYTHD->mem_root, qbuff.length + 5)))
                YYABORT;

              strmake(strmake(qbuff.str, "SET ", 4), (char *)sp->m_tmp_query,
                      qbuff.length);
              qbuff.length+= 4;
              i->m_query= qbuff;
              sp->add_instr(i);
            }
            lex->sphead->restore_lex(YYTHD);
          }
        }
    break;

  case 1742:
#line 7871 "sql_yacc.yy"
    {}
    break;

  case 1743:
#line 7872 "sql_yacc.yy"
    { (yyval.var_type)=OPT_GLOBAL; }
    break;

  case 1744:
#line 7873 "sql_yacc.yy"
    { (yyval.var_type)=OPT_SESSION; }
    break;

  case 1745:
#line 7874 "sql_yacc.yy"
    { (yyval.var_type)=OPT_SESSION; }
    break;

  case 1746:
#line 7878 "sql_yacc.yy"
    { (yyval.num)= OPT_DEFAULT; }
    break;

  case 1747:
#line 7879 "sql_yacc.yy"
    { Lex->one_shot_set= 1; (yyval.num)= OPT_SESSION; }
    break;

  case 1748:
#line 7883 "sql_yacc.yy"
    { (yyval.var_type)=OPT_SESSION; }
    break;

  case 1749:
#line 7884 "sql_yacc.yy"
    { (yyval.var_type)=OPT_GLOBAL; }
    break;

  case 1750:
#line 7885 "sql_yacc.yy"
    { (yyval.var_type)=OPT_SESSION; }
    break;

  case 1751:
#line 7886 "sql_yacc.yy"
    { (yyval.var_type)=OPT_SESSION; }
    break;

  case 1752:
#line 7890 "sql_yacc.yy"
    { (yyval.var_type)=OPT_DEFAULT; }
    break;

  case 1753:
#line 7891 "sql_yacc.yy"
    { (yyval.var_type)=OPT_GLOBAL; }
    break;

  case 1754:
#line 7892 "sql_yacc.yy"
    { (yyval.var_type)=OPT_SESSION; }
    break;

  case 1755:
#line 7893 "sql_yacc.yy"
    { (yyval.var_type)=OPT_SESSION; }
    break;

  case 1758:
#line 7902 "sql_yacc.yy"
    {
          LEX *lex=Lex;

          if ((yyvsp[-2].variable).var == &trg_new_row_fake_var)
          {
            /* We are in trigger and assigning value to field of new row */
            Item *it;
            Item_trigger_field *trg_fld;
            sp_instr_set_trigger_field *sp_fld;
	    LINT_INIT(sp_fld);
            if ((yyvsp[-3].var_type))
            {
              yyerror(ER(ER_SYNTAX_ERROR));
              YYABORT;
            }
            if ((yyvsp[0].item))
              it= (yyvsp[0].item);
            else
            {
              /* QQ: Shouldn't this be field's default value ? */
              it= new Item_null();
            }

            DBUG_ASSERT(lex->trg_chistics.action_time == TRG_ACTION_BEFORE &&
                        (lex->trg_chistics.event == TRG_EVENT_INSERT ||
                         lex->trg_chistics.event == TRG_EVENT_UPDATE));
            if (!(trg_fld= new Item_trigger_field(Lex->current_context(),
                                                  Item_trigger_field::NEW_ROW,
                                                  (yyvsp[-2].variable).base_name.str,
                                                  UPDATE_ACL, FALSE)) ||
                !(sp_fld= new sp_instr_set_trigger_field(lex->sphead->
                          	                         instructions(),
                                	                 lex->spcont,
							 trg_fld,
                                        	         it, lex)))
              YYABORT;

            /*
              Let us add this item to list of all Item_trigger_field
              objects in trigger.
            */
            lex->trg_table_fields.link_in_list((byte *)trg_fld,
                                    (byte **)&trg_fld->next_trg_field);

            lex->sphead->add_instr(sp_fld);
          }
          else if ((yyvsp[-2].variable).var)
          { /* System variable */
            if ((yyvsp[-3].var_type))
              lex->option_type= (yyvsp[-3].var_type);
            lex->var_list.push_back(new set_var(lex->option_type, (yyvsp[-2].variable).var,
                                    &(yyvsp[-2].variable).base_name, (yyvsp[0].item)));
          }
          else
          {
            /* An SP local variable */
            sp_pcontext *ctx= lex->spcont;
            sp_variable_t *spv;
            sp_instr_set *sp_set;
            Item *it;
            if ((yyvsp[-3].var_type))
            {
              yyerror(ER(ER_SYNTAX_ERROR));
              YYABORT;
            }

            spv= ctx->find_variable(&(yyvsp[-2].variable).base_name);

            if ((yyvsp[0].item))
              it= (yyvsp[0].item);
            else if (spv->dflt)
              it= spv->dflt;
            else
              it= new Item_null();
            sp_set= new sp_instr_set(lex->sphead->instructions(), ctx,
                                     spv->offset, it, spv->type, lex, TRUE);
            lex->sphead->add_instr(sp_set);
          }
        }
    break;

  case 1759:
#line 7982 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
          if ((yyvsp[-4].var_type))
            lex->option_type= (yyvsp[-4].var_type);
	  lex->var_list.push_back(new set_var(lex->option_type,
                                              find_sys_var("tx_isolation"),
                                              &null_lex_str,
                                              new Item_int((int32) (yyvsp[0].tx_isolation))));
	}
    break;

  case 1760:
#line 7995 "sql_yacc.yy"
    {
          Lex->var_list.push_back(new set_var_user(new Item_func_set_user_var((yyvsp[-2].lex_str),(yyvsp[0].item))));
	}
    break;

  case 1761:
#line 7999 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    lex->var_list.push_back(new set_var((yyvsp[-3].var_type), (yyvsp[-2].variable).var, &(yyvsp[-2].variable).base_name, (yyvsp[0].item)));
	  }
    break;

  case 1762:
#line 8004 "sql_yacc.yy"
    {
	  THD *thd= YYTHD;
	  LEX *lex= Lex;
	  (yyvsp[0].charset)= (yyvsp[0].charset) ? (yyvsp[0].charset): global_system_variables.character_set_client;
	  lex->var_list.push_back(new set_var_collation_client((yyvsp[0].charset),thd->variables.collation_database,(yyvsp[0].charset)));
	}
    break;

  case 1763:
#line 8011 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
            sp_pcontext *spc= lex->spcont;
	    LEX_STRING names;

	    names.str= (char *)"names";
	    names.length= 5;
	    if (spc && spc->find_variable(&names))
              my_error(ER_SP_BAD_VAR_SHADOW, MYF(0), names.str);
            else
              yyerror(ER(ER_SYNTAX_ERROR));

	    YYABORT;
	  }
    break;

  case 1764:
#line 8026 "sql_yacc.yy"
    {
	  LEX *lex= Lex;
	  (yyvsp[-1].charset)= (yyvsp[-1].charset) ? (yyvsp[-1].charset) : global_system_variables.character_set_client;
	  (yyvsp[0].charset)= (yyvsp[0].charset) ? (yyvsp[0].charset) : (yyvsp[-1].charset);
	  if (!my_charset_same((yyvsp[-1].charset),(yyvsp[0].charset)))
	  {
	    my_error(ER_COLLATION_CHARSET_MISMATCH, MYF(0),
                     (yyvsp[0].charset)->name, (yyvsp[-1].charset)->csname);
	    YYABORT;
	  }
	  lex->var_list.push_back(new set_var_collation_client((yyvsp[0].charset),(yyvsp[0].charset),(yyvsp[0].charset)));
	}
    break;

  case 1765:
#line 8039 "sql_yacc.yy"
    {
	    THD *thd=YYTHD;
	    LEX_USER *user;
	    LEX *lex= Lex;	    
            sp_pcontext *spc= lex->spcont;
	    LEX_STRING pw;

	    pw.str= (char *)"password";
	    pw.length= 8;
	    if (spc && spc->find_variable(&pw))
	    {
              my_error(ER_SP_BAD_VAR_SHADOW, MYF(0), pw.str);
	      YYABORT;
	    }
	    if (!(user=(LEX_USER*) thd->alloc(sizeof(LEX_USER))))
	      YYABORT;
	    user->host=null_lex_str;
	    user->user.str=thd->security_ctx->priv_user;
	    thd->lex->var_list.push_back(new set_var_password(user, (yyvsp[0].simple_string)));
	  }
    break;

  case 1766:
#line 8060 "sql_yacc.yy"
    {
	    Lex->var_list.push_back(new set_var_password((yyvsp[-2].lex_user),(yyvsp[0].simple_string)));
	  }
    break;

  case 1767:
#line 8067 "sql_yacc.yy"
    {
	  LEX *lex= Lex;
          sp_pcontext *spc= lex->spcont;
	  sp_variable_t *spv;

	  /* We have to lookup here since local vars can shadow sysvars */
	  if (!spc || !(spv = spc->find_variable(&(yyvsp[0].lex_str))))
	  {
            /* Not an SP local variable */
	    sys_var *tmp=find_sys_var((yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
	    if (!tmp)
	      YYABORT;
	    (yyval.variable).var= tmp;
	    (yyval.variable).base_name= null_lex_str;
            /*
              If this is time_zone variable we should open time zone
              describing tables 
            */
            if (tmp == &sys_time_zone &&
                lex->add_time_zone_tables_to_query_tables(YYTHD))
              YYABORT;
            else if (spc && tmp == &sys_autocommit)
            {
              /*
                We don't allow setting AUTOCOMMIT from a stored function
		or trigger.
              */
              lex->sphead->m_flags|= sp_head::HAS_SET_AUTOCOMMIT_STMT;
            }
	  }
	  else
	  {
            /* An SP local variable */
	    (yyval.variable).var= NULL;
	    (yyval.variable).base_name= (yyvsp[0].lex_str);
	  }
	}
    break;

  case 1768:
#line 8105 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (check_reserved_words(&(yyvsp[-2].lex_str)))
            {
	      yyerror(ER(ER_SYNTAX_ERROR));
              YYABORT;
            }
            if (lex->sphead && lex->sphead->m_type == TYPE_ENUM_TRIGGER &&
                (!my_strcasecmp(system_charset_info, (yyvsp[-2].lex_str).str, "NEW") || 
                 !my_strcasecmp(system_charset_info, (yyvsp[-2].lex_str).str, "OLD")))
            {
              if ((yyvsp[-2].lex_str).str[0]=='O' || (yyvsp[-2].lex_str).str[0]=='o')
              {
                my_error(ER_TRG_CANT_CHANGE_ROW, MYF(0), "OLD", "");
                YYABORT;
              }
              if (lex->trg_chistics.event == TRG_EVENT_DELETE)
              {
                my_error(ER_TRG_NO_SUCH_ROW_IN_TRG, MYF(0),
                         "NEW", "on DELETE");
                YYABORT;
              }
              if (lex->trg_chistics.action_time == TRG_ACTION_AFTER)
              {
                my_error(ER_TRG_CANT_CHANGE_ROW, MYF(0), "NEW", "after ");
                YYABORT;
              }
              /* This special combination will denote field of NEW row */
              (yyval.variable).var= &trg_new_row_fake_var;
              (yyval.variable).base_name= (yyvsp[0].lex_str);
            }
            else
            {
              sys_var *tmp=find_sys_var((yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
              if (!tmp)
                YYABORT;
              if (!tmp->is_struct())
                my_error(ER_VARIABLE_IS_NOT_STRUCT, MYF(0), (yyvsp[0].lex_str).str);
              (yyval.variable).var= tmp;
              (yyval.variable).base_name= (yyvsp[-2].lex_str);
            }
	  }
    break;

  case 1769:
#line 8148 "sql_yacc.yy"
    {
	    sys_var *tmp=find_sys_var((yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
	    if (!tmp)
	      YYABORT;
	    if (!tmp->is_struct())
	      my_error(ER_VARIABLE_IS_NOT_STRUCT, MYF(0), (yyvsp[0].lex_str).str);
	    (yyval.variable).var= tmp;
	    (yyval.variable).base_name.str=    (char*) "default";
	    (yyval.variable).base_name.length= 7;
	  }
    break;

  case 1770:
#line 8161 "sql_yacc.yy"
    { (yyval.tx_isolation)= ISO_READ_UNCOMMITTED; }
    break;

  case 1771:
#line 8162 "sql_yacc.yy"
    { (yyval.tx_isolation)= ISO_READ_COMMITTED; }
    break;

  case 1772:
#line 8163 "sql_yacc.yy"
    { (yyval.tx_isolation)= ISO_REPEATABLE_READ; }
    break;

  case 1773:
#line 8164 "sql_yacc.yy"
    { (yyval.tx_isolation)= ISO_SERIALIZABLE; }
    break;

  case 1774:
#line 8168 "sql_yacc.yy"
    { (yyval.simple_string)=(yyvsp[0].lex_str).str;}
    break;

  case 1775:
#line 8170 "sql_yacc.yy"
    {
	    (yyval.simple_string)= (yyvsp[-1].lex_str).length ? YYTHD->variables.old_passwords ?
	        Item_func_old_password::alloc(YYTHD, (yyvsp[-1].lex_str).str) :
	        Item_func_password::alloc(YYTHD, (yyvsp[-1].lex_str).str) :
	      (yyvsp[-1].lex_str).str;
	  }
    break;

  case 1776:
#line 8177 "sql_yacc.yy"
    {
	    (yyval.simple_string)= (yyvsp[-1].lex_str).length ? Item_func_old_password::alloc(YYTHD, (yyvsp[-1].lex_str).str) :
	      (yyvsp[-1].lex_str).str;
	  }
    break;

  case 1777:
#line 8185 "sql_yacc.yy"
    { (yyval.item)=(yyvsp[0].item); }
    break;

  case 1778:
#line 8186 "sql_yacc.yy"
    { (yyval.item)=0; }
    break;

  case 1779:
#line 8187 "sql_yacc.yy"
    { (yyval.item)=new Item_string("ON",  2, system_charset_info); }
    break;

  case 1780:
#line 8188 "sql_yacc.yy"
    { (yyval.item)=new Item_string("ALL", 3, system_charset_info); }
    break;

  case 1781:
#line 8189 "sql_yacc.yy"
    { (yyval.item)=new Item_string("binary", 6, system_charset_info); }
    break;

  case 1782:
#line 8197 "sql_yacc.yy"
    {
	  LEX *lex= Lex;

	  if (lex->sphead)
	  {
	    my_error(ER_SP_BADSTATEMENT, MYF(0), "LOCK");
	    YYABORT;
	  }
	  lex->sql_command= SQLCOM_LOCK_TABLES;
	}
    break;

  case 1783:
#line 8208 "sql_yacc.yy"
    {}
    break;

  case 1788:
#line 8221 "sql_yacc.yy"
    {
	  if (!Select->add_table_to_list(YYTHD, (yyvsp[-2].table), (yyvsp[-1].lex_str_ptr), 0, (thr_lock_type) (yyvsp[0].num)))
	   YYABORT;
	}
    break;

  case 1789:
#line 8228 "sql_yacc.yy"
    { (yyval.num)=TL_READ_NO_INSERT; }
    break;

  case 1790:
#line 8229 "sql_yacc.yy"
    { (yyval.num)=YYTHD->update_lock_default; }
    break;

  case 1791:
#line 8230 "sql_yacc.yy"
    { (yyval.num)=TL_WRITE_LOW_PRIORITY; }
    break;

  case 1792:
#line 8231 "sql_yacc.yy"
    { (yyval.num)= TL_READ; }
    break;

  case 1793:
#line 8236 "sql_yacc.yy"
    {
	  LEX *lex= Lex;

	  if (lex->sphead)
	  {
	    my_error(ER_SP_BADSTATEMENT, MYF(0), "UNLOCK");
	    YYABORT;
	  }
	  lex->sql_command= SQLCOM_UNLOCK_TABLES;
	}
    break;

  case 1794:
#line 8247 "sql_yacc.yy"
    {}
    break;

  case 1795:
#line 8257 "sql_yacc.yy"
    {
	  LEX *lex= Lex;
	  if (lex->sphead)
	  {
	    my_error(ER_SP_BADSTATEMENT, MYF(0), "HANDLER");
	    YYABORT;
	  }
	  lex->sql_command = SQLCOM_HA_OPEN;
	  if (!lex->current_select->add_table_to_list(lex->thd, (yyvsp[-2].table), (yyvsp[0].lex_str_ptr), 0))
	    YYABORT;
	}
    break;

  case 1796:
#line 8269 "sql_yacc.yy"
    {
	  LEX *lex= Lex;
	  if (lex->sphead)
	  {
	    my_error(ER_SP_BADSTATEMENT, MYF(0), "HANDLER");
	    YYABORT;
	  }
	  lex->sql_command = SQLCOM_HA_CLOSE;
	  if (!lex->current_select->add_table_to_list(lex->thd, (yyvsp[-1].table), 0, 0))
	    YYABORT;
	}
    break;

  case 1797:
#line 8281 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  if (lex->sphead)
	  {
	    my_error(ER_SP_BADSTATEMENT, MYF(0), "HANDLER");
	    YYABORT;
	  }
	  lex->sql_command = SQLCOM_HA_READ;
	  lex->ha_rkey_mode= HA_READ_KEY_EXACT;	/* Avoid purify warnings */
	  lex->current_select->select_limit= new Item_int((int32) 1);
	  lex->current_select->offset_limit= 0;
	  if (!lex->current_select->add_table_to_list(lex->thd, (yyvsp[-1].table), 0, 0))
	    YYABORT;
        }
    break;

  case 1798:
#line 8295 "sql_yacc.yy"
    {}
    break;

  case 1799:
#line 8299 "sql_yacc.yy"
    { Lex->ident= null_lex_str; }
    break;

  case 1800:
#line 8300 "sql_yacc.yy"
    { Lex->ident= (yyvsp[-1].lex_str); }
    break;

  case 1801:
#line 8304 "sql_yacc.yy"
    { Lex->ha_read_mode = RFIRST; }
    break;

  case 1802:
#line 8305 "sql_yacc.yy"
    { Lex->ha_read_mode = RNEXT;  }
    break;

  case 1803:
#line 8309 "sql_yacc.yy"
    { Lex->ha_read_mode = RFIRST; }
    break;

  case 1804:
#line 8310 "sql_yacc.yy"
    { Lex->ha_read_mode = RNEXT;  }
    break;

  case 1805:
#line 8311 "sql_yacc.yy"
    { Lex->ha_read_mode = RPREV;  }
    break;

  case 1806:
#line 8312 "sql_yacc.yy"
    { Lex->ha_read_mode = RLAST;  }
    break;

  case 1807:
#line 8314 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  lex->ha_read_mode = RKEY;
	  lex->ha_rkey_mode=(yyvsp[0].ha_rkey_mode);
	  if (!(lex->insert_list = new List_item))
	    YYABORT;
	}
    break;

  case 1808:
#line 8320 "sql_yacc.yy"
    { }
    break;

  case 1809:
#line 8324 "sql_yacc.yy"
    { (yyval.ha_rkey_mode)=HA_READ_KEY_EXACT;   }
    break;

  case 1810:
#line 8325 "sql_yacc.yy"
    { (yyval.ha_rkey_mode)=HA_READ_KEY_OR_NEXT; }
    break;

  case 1811:
#line 8326 "sql_yacc.yy"
    { (yyval.ha_rkey_mode)=HA_READ_KEY_OR_PREV; }
    break;

  case 1812:
#line 8327 "sql_yacc.yy"
    { (yyval.ha_rkey_mode)=HA_READ_AFTER_KEY;   }
    break;

  case 1813:
#line 8328 "sql_yacc.yy"
    { (yyval.ha_rkey_mode)=HA_READ_BEFORE_KEY;  }
    break;

  case 1814:
#line 8335 "sql_yacc.yy"
    {}
    break;

  case 1815:
#line 8340 "sql_yacc.yy"
    {
          LEX *lex= Lex;
	  lex->sql_command= SQLCOM_REVOKE;
          lex->type= 0;
        }
    break;

  case 1816:
#line 8347 "sql_yacc.yy"
    {
          LEX *lex= Lex;
          if (lex->columns.elements)
          {
            yyerror(ER(ER_SYNTAX_ERROR));
	    YYABORT;
          }
	  lex->sql_command= SQLCOM_REVOKE;
          lex->type= TYPE_ENUM_FUNCTION;
          
        }
    break;

  case 1817:
#line 8360 "sql_yacc.yy"
    {
          LEX *lex= Lex;
          if (lex->columns.elements)
          {
            yyerror(ER(ER_SYNTAX_ERROR));
	    YYABORT;
          }
	  lex->sql_command= SQLCOM_REVOKE;
          lex->type= TYPE_ENUM_PROCEDURE;
        }
    break;

  case 1818:
#line 8372 "sql_yacc.yy"
    {
	  Lex->sql_command = SQLCOM_REVOKE_ALL;
	}
    break;

  case 1819:
#line 8379 "sql_yacc.yy"
    {}
    break;

  case 1820:
#line 8385 "sql_yacc.yy"
    {
          LEX *lex= Lex;
          lex->sql_command= SQLCOM_GRANT;
          lex->type= 0;
        }
    break;

  case 1821:
#line 8393 "sql_yacc.yy"
    {
          LEX *lex= Lex;
          if (lex->columns.elements)
          {
            yyerror(ER(ER_SYNTAX_ERROR));
	    YYABORT;
          }
          lex->sql_command= SQLCOM_GRANT;
          lex->type= TYPE_ENUM_FUNCTION;
        }
    break;

  case 1822:
#line 8406 "sql_yacc.yy"
    {
          LEX *lex= Lex;
          if (lex->columns.elements)
          {
            yyerror(ER(ER_SYNTAX_ERROR));
	    YYABORT;
          }
          lex->sql_command= SQLCOM_GRANT;
          lex->type= TYPE_ENUM_PROCEDURE;
        }
    break;

  case 1825:
#line 8423 "sql_yacc.yy"
    { }
    break;

  case 1826:
#line 8425 "sql_yacc.yy"
    { 
          Lex->all_privileges= 1; 
          Lex->grant= GLOBAL_ACLS;
        }
    break;

  case 1831:
#line 8441 "sql_yacc.yy"
    { Lex->which_columns = SELECT_ACL;}
    break;

  case 1832:
#line 8441 "sql_yacc.yy"
    {}
    break;

  case 1833:
#line 8442 "sql_yacc.yy"
    { Lex->which_columns = INSERT_ACL;}
    break;

  case 1834:
#line 8442 "sql_yacc.yy"
    {}
    break;

  case 1835:
#line 8443 "sql_yacc.yy"
    { Lex->which_columns = UPDATE_ACL; }
    break;

  case 1836:
#line 8443 "sql_yacc.yy"
    {}
    break;

  case 1837:
#line 8444 "sql_yacc.yy"
    { Lex->which_columns = REFERENCES_ACL;}
    break;

  case 1838:
#line 8444 "sql_yacc.yy"
    {}
    break;

  case 1839:
#line 8445 "sql_yacc.yy"
    { Lex->grant |= DELETE_ACL;}
    break;

  case 1840:
#line 8446 "sql_yacc.yy"
    {}
    break;

  case 1841:
#line 8447 "sql_yacc.yy"
    { Lex->grant |= INDEX_ACL;}
    break;

  case 1842:
#line 8448 "sql_yacc.yy"
    { Lex->grant |= ALTER_ACL;}
    break;

  case 1843:
#line 8449 "sql_yacc.yy"
    { Lex->grant |= CREATE_ACL;}
    break;

  case 1844:
#line 8450 "sql_yacc.yy"
    { Lex->grant |= DROP_ACL;}
    break;

  case 1845:
#line 8451 "sql_yacc.yy"
    { Lex->grant |= EXECUTE_ACL;}
    break;

  case 1846:
#line 8452 "sql_yacc.yy"
    { Lex->grant |= RELOAD_ACL;}
    break;

  case 1847:
#line 8453 "sql_yacc.yy"
    { Lex->grant |= SHUTDOWN_ACL;}
    break;

  case 1848:
#line 8454 "sql_yacc.yy"
    { Lex->grant |= PROCESS_ACL;}
    break;

  case 1849:
#line 8455 "sql_yacc.yy"
    { Lex->grant |= FILE_ACL;}
    break;

  case 1850:
#line 8456 "sql_yacc.yy"
    { Lex->grant |= GRANT_ACL;}
    break;

  case 1851:
#line 8457 "sql_yacc.yy"
    { Lex->grant |= SHOW_DB_ACL;}
    break;

  case 1852:
#line 8458 "sql_yacc.yy"
    { Lex->grant |= SUPER_ACL;}
    break;

  case 1853:
#line 8459 "sql_yacc.yy"
    { Lex->grant |= CREATE_TMP_ACL;}
    break;

  case 1854:
#line 8460 "sql_yacc.yy"
    { Lex->grant |= LOCK_TABLES_ACL; }
    break;

  case 1855:
#line 8461 "sql_yacc.yy"
    { Lex->grant |= REPL_SLAVE_ACL; }
    break;

  case 1856:
#line 8462 "sql_yacc.yy"
    { Lex->grant |= REPL_CLIENT_ACL; }
    break;

  case 1857:
#line 8463 "sql_yacc.yy"
    { Lex->grant |= CREATE_VIEW_ACL; }
    break;

  case 1858:
#line 8464 "sql_yacc.yy"
    { Lex->grant |= SHOW_VIEW_ACL; }
    break;

  case 1859:
#line 8465 "sql_yacc.yy"
    { Lex->grant |= CREATE_PROC_ACL; }
    break;

  case 1860:
#line 8466 "sql_yacc.yy"
    { Lex->grant |= ALTER_PROC_ACL; }
    break;

  case 1861:
#line 8467 "sql_yacc.yy"
    { Lex->grant |= CREATE_USER_ACL; }
    break;

  case 1862:
#line 8472 "sql_yacc.yy"
    {}
    break;

  case 1863:
#line 8473 "sql_yacc.yy"
    {}
    break;

  case 1866:
#line 8483 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  if (lex->x509_subject)
	  {
	    my_error(ER_DUP_ARGUMENT, MYF(0), "SUBJECT");
	    YYABORT;
	  }
	  lex->x509_subject=(yyvsp[0].lex_str).str;
	}
    break;

  case 1867:
#line 8493 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  if (lex->x509_issuer)
	  {
	    my_error(ER_DUP_ARGUMENT, MYF(0), "ISSUER");
	    YYABORT;
	  }
	  lex->x509_issuer=(yyvsp[0].lex_str).str;
	}
    break;

  case 1868:
#line 8503 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  if (lex->ssl_cipher)
	  {
	    my_error(ER_DUP_ARGUMENT, MYF(0), "CIPHER");
	    YYABORT;
	  }
	  lex->ssl_cipher=(yyvsp[0].lex_str).str;
	}
    break;

  case 1869:
#line 8516 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
            THD *thd= lex->thd;
            if (thd->copy_db_to(&lex->current_select->db, NULL))
              YYABORT;
	    if (lex->grant == GLOBAL_ACLS)
	      lex->grant = DB_ACLS & ~GRANT_ACL;
	    else if (lex->columns.elements)
	    {
	      my_message(ER_ILLEGAL_GRANT_FOR_TABLE,
                         ER(ER_ILLEGAL_GRANT_FOR_TABLE), MYF(0));
	      YYABORT;
	    }
	  }
    break;

  case 1870:
#line 8531 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    lex->current_select->db = (yyvsp[-2].lex_str).str;
	    if (lex->grant == GLOBAL_ACLS)
	      lex->grant = DB_ACLS & ~GRANT_ACL;
	    else if (lex->columns.elements)
	    {
	      my_message(ER_ILLEGAL_GRANT_FOR_TABLE,
                         ER(ER_ILLEGAL_GRANT_FOR_TABLE), MYF(0));
	      YYABORT;
	    }
	  }
    break;

  case 1871:
#line 8544 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    lex->current_select->db = NULL;
	    if (lex->grant == GLOBAL_ACLS)
	      lex->grant= GLOBAL_ACLS & ~GRANT_ACL;
	    else if (lex->columns.elements)
	    {
	      my_message(ER_ILLEGAL_GRANT_FOR_TABLE,
                         ER(ER_ILLEGAL_GRANT_FOR_TABLE), MYF(0));
	      YYABORT;
	    }
	  }
    break;

  case 1872:
#line 8557 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    if (!lex->current_select->add_table_to_list(lex->thd, (yyvsp[0].table),NULL,0))
	      YYABORT;
	    if (lex->grant == GLOBAL_ACLS)
	      lex->grant =  TABLE_ACLS & ~GRANT_ACL;
	  }
    break;

  case 1873:
#line 8568 "sql_yacc.yy"
    { if (Lex->users_list.push_back((yyvsp[0].lex_user))) YYABORT;}
    break;

  case 1874:
#line 8570 "sql_yacc.yy"
    {
	    if (Lex->users_list.push_back((yyvsp[0].lex_user)))
	      YYABORT;
	  }
    break;

  case 1875:
#line 8578 "sql_yacc.yy"
    { if (Lex->users_list.push_back((yyvsp[0].lex_user))) YYABORT;}
    break;

  case 1876:
#line 8580 "sql_yacc.yy"
    {
	    if (Lex->users_list.push_back((yyvsp[0].lex_user)))
	      YYABORT;
	  }
    break;

  case 1877:
#line 8589 "sql_yacc.yy"
    {
	   (yyval.lex_user)=(yyvsp[-3].lex_user); (yyvsp[-3].lex_user)->password=(yyvsp[0].lex_str);
	   if ((yyvsp[0].lex_str).length)
	   {
             if (YYTHD->variables.old_passwords)
             {
               char *buff= 
                 (char *) YYTHD->alloc(SCRAMBLED_PASSWORD_CHAR_LENGTH_323+1);
               if (buff)
                 make_scrambled_password_323(buff, (yyvsp[0].lex_str).str);
               (yyvsp[-3].lex_user)->password.str= buff;
               (yyvsp[-3].lex_user)->password.length= SCRAMBLED_PASSWORD_CHAR_LENGTH_323;
             }
             else
             {
               char *buff= 
                 (char *) YYTHD->alloc(SCRAMBLED_PASSWORD_CHAR_LENGTH+1);
               if (buff)
                 make_scrambled_password(buff, (yyvsp[0].lex_str).str);
               (yyvsp[-3].lex_user)->password.str= buff;
               (yyvsp[-3].lex_user)->password.length= SCRAMBLED_PASSWORD_CHAR_LENGTH;
             }
	  }
	}
    break;

  case 1878:
#line 8614 "sql_yacc.yy"
    { (yyval.lex_user)= (yyvsp[-4].lex_user); (yyvsp[-4].lex_user)->password= (yyvsp[0].lex_str); }
    break;

  case 1879:
#line 8616 "sql_yacc.yy"
    { (yyval.lex_user)= (yyvsp[0].lex_user); (yyvsp[0].lex_user)->password= null_lex_str; }
    break;

  case 1880:
#line 8622 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  lex->grant |= lex->which_columns;
	}
    break;

  case 1884:
#line 8634 "sql_yacc.yy"
    {
	  String *new_str = new (YYTHD->mem_root) String((const char*) (yyvsp[0].lex_str).str,(yyvsp[0].lex_str).length,system_charset_info);
	  List_iterator <LEX_COLUMN> iter(Lex->columns);
	  class LEX_COLUMN *point;
	  LEX *lex=Lex;
	  while ((point=iter++))
	  {
	    if (!my_strcasecmp(system_charset_info,
                               point->column.ptr(), new_str->ptr()))
		break;
	  }
	  lex->grant_tot_col|= lex->which_columns;
	  if (point)
	    point->rights |= lex->which_columns;
	  else
	    lex->columns.push_back(new LEX_COLUMN (*new_str,lex->which_columns));
	}
    break;

  case 1886:
#line 8656 "sql_yacc.yy"
    {
            Lex->ssl_type=SSL_TYPE_SPECIFIED;
          }
    break;

  case 1887:
#line 8660 "sql_yacc.yy"
    {
            Lex->ssl_type=SSL_TYPE_ANY;
          }
    break;

  case 1888:
#line 8664 "sql_yacc.yy"
    {
            Lex->ssl_type=SSL_TYPE_X509;
          }
    break;

  case 1889:
#line 8668 "sql_yacc.yy"
    {
	    Lex->ssl_type=SSL_TYPE_NONE;
	  }
    break;

  case 1890:
#line 8674 "sql_yacc.yy"
    {}
    break;

  case 1892:
#line 8678 "sql_yacc.yy"
    {}
    break;

  case 1893:
#line 8679 "sql_yacc.yy"
    {}
    break;

  case 1894:
#line 8683 "sql_yacc.yy"
    { Lex->grant |= GRANT_ACL;}
    break;

  case 1895:
#line 8685 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  lex->mqh.questions=(yyvsp[0].ulong_num);
	  lex->mqh.specified_limits|= USER_RESOURCES::QUERIES_PER_HOUR;
	}
    break;

  case 1896:
#line 8691 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  lex->mqh.updates=(yyvsp[0].ulong_num);
	  lex->mqh.specified_limits|= USER_RESOURCES::UPDATES_PER_HOUR;
	}
    break;

  case 1897:
#line 8697 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  lex->mqh.conn_per_hour= (yyvsp[0].ulong_num);
	  lex->mqh.specified_limits|= USER_RESOURCES::CONNECTIONS_PER_HOUR;
	}
    break;

  case 1898:
#line 8703 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
          lex->mqh.user_conn= (yyvsp[0].ulong_num);
          lex->mqh.specified_limits|= USER_RESOURCES::USER_CONNECTIONS;
	}
    break;

  case 1899:
#line 8712 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
          lex->sql_command = SQLCOM_BEGIN;
          lex->start_transaction_opt= 0;
        }
    break;

  case 1900:
#line 8717 "sql_yacc.yy"
    {}
    break;

  case 1901:
#line 8721 "sql_yacc.yy"
    {}
    break;

  case 1902:
#line 8722 "sql_yacc.yy"
    {}
    break;

  case 1903:
#line 8726 "sql_yacc.yy"
    { (yyval.num)= (YYTHD->variables.completion_type == 1); }
    break;

  case 1904:
#line 8727 "sql_yacc.yy"
    { (yyval.num)=0; }
    break;

  case 1905:
#line 8728 "sql_yacc.yy"
    { (yyval.num)=1; }
    break;

  case 1906:
#line 8732 "sql_yacc.yy"
    { (yyval.num)= (YYTHD->variables.completion_type == 2); }
    break;

  case 1907:
#line 8733 "sql_yacc.yy"
    { (yyval.num)=1; }
    break;

  case 1908:
#line 8734 "sql_yacc.yy"
    { (yyval.num)=0; }
    break;

  case 1909:
#line 8738 "sql_yacc.yy"
    {}
    break;

  case 1910:
#line 8739 "sql_yacc.yy"
    {}
    break;

  case 1911:
#line 8744 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  lex->sql_command= SQLCOM_COMMIT;
	  lex->tx_chain= (yyvsp[-1].num); 
	  lex->tx_release= (yyvsp[0].num);
	}
    break;

  case 1912:
#line 8754 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  lex->sql_command= SQLCOM_ROLLBACK;
	  lex->tx_chain= (yyvsp[-1].num); 
	  lex->tx_release= (yyvsp[0].num);
	}
    break;

  case 1913:
#line 8762 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  lex->sql_command= SQLCOM_ROLLBACK_TO_SAVEPOINT;
	  lex->ident= (yyvsp[0].lex_str);
	}
    break;

  case 1914:
#line 8771 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  lex->sql_command= SQLCOM_SAVEPOINT;
	  lex->ident= (yyvsp[0].lex_str);
	}
    break;

  case 1915:
#line 8780 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  lex->sql_command= SQLCOM_RELEASE_SAVEPOINT;
	  lex->ident= (yyvsp[0].lex_str);
	}
    break;

  case 1916:
#line 8793 "sql_yacc.yy"
    {}
    break;

  case 1918:
#line 8799 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  if (lex->exchange)
	  {
	    /* Only the last SELECT can have  INTO...... */
	    my_error(ER_WRONG_USAGE, MYF(0), "UNION", "INTO");
	    YYABORT;
	  }
	  if (lex->current_select->linkage == GLOBAL_OPTIONS_TYPE)
	  {
            yyerror(ER(ER_SYNTAX_ERROR));
	    YYABORT;
	  }
          /* This counter shouldn't be incremented for UNION parts */
          Lex->nest_level--;
	  if (mysql_new_select(lex, 0))
	    YYABORT;
          mysql_init_select(lex);
	  lex->current_select->linkage=UNION_TYPE;
          if ((yyvsp[0].num)) /* UNION DISTINCT - remember position */
            lex->current_select->master_unit()->union_distinct=
                                                      lex->current_select;
	}
    break;

  case 1919:
#line 8823 "sql_yacc.yy"
    {
          /*
	    Remove from the name resolution context stack the context of the
            last select in the union.
	  */
          Lex->pop_context();
        }
    break;

  case 1920:
#line 8833 "sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 1921:
#line 8834 "sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 1922:
#line 8835 "sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 1923:
#line 8839 "sql_yacc.yy"
    {
	    THD *thd= YYTHD;
	    LEX *lex= thd->lex;
	    DBUG_ASSERT(lex->current_select->linkage != GLOBAL_OPTIONS_TYPE);
	    SELECT_LEX *sel= lex->current_select;
	    SELECT_LEX_UNIT *unit= sel->master_unit();
	    SELECT_LEX *fake= unit->fake_select_lex;
	    if (fake)
	    {
	      unit->global_parameters= fake;
	      fake->no_table_names_allowed= 1;
	      lex->current_select= fake;
	    }
	    thd->where= "global ORDER clause";
	  }
    break;

  case 1924:
#line 8855 "sql_yacc.yy"
    {
	    THD *thd= YYTHD;
	    thd->lex->current_select->no_table_names_allowed= 0;
	    thd->where= "";
          }
    break;

  case 1927:
#line 8868 "sql_yacc.yy"
    { (yyval.num)=1; }
    break;

  case 1928:
#line 8869 "sql_yacc.yy"
    { (yyval.num)=1; }
    break;

  case 1929:
#line 8870 "sql_yacc.yy"
    { (yyval.num)=0; }
    break;

  case 1930:
#line 8876 "sql_yacc.yy"
    {
	  (yyval.item)= (yyvsp[-1].item);
	}
    break;

  case 1931:
#line 8882 "sql_yacc.yy"
    {
	  (yyval.item)= new Item_singlerow_subselect(Lex->current_select->
					   master_unit()->first_select());
	}
    break;

  case 1932:
#line 8890 "sql_yacc.yy"
    {
	  (yyval.item)= (yyvsp[-1].item);
	}
    break;

  case 1933:
#line 8896 "sql_yacc.yy"
    {
	  (yyval.item)= new Item_exists_subselect(Lex->current_select->master_unit()->
					first_select());
	}
    break;

  case 1934:
#line 8904 "sql_yacc.yy"
    {
    (yyval.select_lex)= (yyvsp[-1].select_lex);
  }
    break;

  case 1935:
#line 8910 "sql_yacc.yy"
    {
    (yyval.select_lex)= Lex->current_select->master_unit()->first_select();
  }
    break;

  case 1936:
#line 8916 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
          if (lex->sql_command == (int)SQLCOM_HA_READ ||
              lex->sql_command == (int)SQLCOM_KILL)
	  {
            yyerror(ER(ER_SYNTAX_ERROR));
	    YYABORT;
	  }
	  if (mysql_new_select(Lex, 1))
	    YYABORT;
	}
    break;

  case 1937:
#line 8930 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
          lex->pop_context();
	  lex->current_select = lex->current_select->return_after_parsing();
          lex->nest_level--;
	}
    break;

  case 1938:
#line 8945 "sql_yacc.yy"
    {}
    break;

  case 1939:
#line 8947 "sql_yacc.yy"
    {}
    break;

  case 1940:
#line 8952 "sql_yacc.yy"
    {}
    break;

  case 1941:
#line 8954 "sql_yacc.yy"
    {}
    break;

  case 1942:
#line 8956 "sql_yacc.yy"
    {}
    break;

  case 1943:
#line 8967 "sql_yacc.yy"
    {
          /*
            We have to distinguish missing DEFINER-clause from case when
            CURRENT_USER specified as definer explicitly in order to properly
            handle CREATE TRIGGER statements which come to replication thread
            from older master servers (i.e. to create non-suid trigger in this
            case).
           */
          YYTHD->lex->definer= 0;
	}
    break;

  case 1944:
#line 8978 "sql_yacc.yy"
    {
          YYTHD->lex->definer= (yyvsp[0].lex_user);
	}
    break;

  case 1945:
#line 8991 "sql_yacc.yy"
    {}
    break;

  case 1946:
#line 8993 "sql_yacc.yy"
    {}
    break;

  case 1947:
#line 8995 "sql_yacc.yy"
    {}
    break;

  case 1948:
#line 9000 "sql_yacc.yy"
    { Lex->create_view_mode= VIEW_CREATE_OR_REPLACE; }
    break;

  case 1949:
#line 9005 "sql_yacc.yy"
    { Lex->create_view_algorithm= VIEW_ALGORITHM_UNDEFINED; }
    break;

  case 1950:
#line 9007 "sql_yacc.yy"
    { Lex->create_view_algorithm= VIEW_ALGORITHM_MERGE; }
    break;

  case 1951:
#line 9009 "sql_yacc.yy"
    { Lex->create_view_algorithm= VIEW_ALGORITHM_TMPTABLE; }
    break;

  case 1952:
#line 9014 "sql_yacc.yy"
    { Lex->create_view_algorithm= VIEW_ALGORITHM_UNDEFINED; }
    break;

  case 1953:
#line 9016 "sql_yacc.yy"
    {}
    break;

  case 1954:
#line 9021 "sql_yacc.yy"
    { Lex->create_view_suid= TRUE; }
    break;

  case 1955:
#line 9023 "sql_yacc.yy"
    { Lex->create_view_suid= TRUE; }
    break;

  case 1956:
#line 9025 "sql_yacc.yy"
    { Lex->create_view_suid= FALSE; }
    break;

  case 1957:
#line 9030 "sql_yacc.yy"
    {
	  THD *thd= YYTHD;
	  LEX *lex= thd->lex;
	  lex->sql_command= SQLCOM_CREATE_VIEW;
	  /* first table in list is target VIEW name */
	  if (!lex->select_lex.add_table_to_list(thd, (yyvsp[0].table), NULL, TL_OPTION_UPDATING))
	    YYABORT;
	}
    break;

  case 1958:
#line 9039 "sql_yacc.yy"
    {}
    break;

  case 1959:
#line 9044 "sql_yacc.yy"
    {}
    break;

  case 1961:
#line 9050 "sql_yacc.yy"
    {
	    Lex->view_list.push_back((LEX_STRING*)
				     sql_memdup(&(yyvsp[0].lex_str), sizeof(LEX_STRING)));
	  }
    break;

  case 1962:
#line 9055 "sql_yacc.yy"
    {
	    Lex->view_list.push_back((LEX_STRING*)
				     sql_memdup(&(yyvsp[0].lex_str), sizeof(LEX_STRING)));
	  }
    break;

  case 1963:
#line 9063 "sql_yacc.yy"
    {
          THD *thd=YYTHD;
          LEX *lex= thd->lex;
          char *stmt_beg= (lex->sphead ?
                           (char *)lex->sphead->m_tmp_query :
                           thd->query);
	  lex->create_view_select_start= (yyvsp[-1].simple_string) - stmt_beg;
	}
    break;

  case 1964:
#line 9072 "sql_yacc.yy"
    {
          THD *thd=YYTHD;
          LEX *lex= thd->lex;
          char *stmt_beg= (lex->sphead ?
                           (char *)lex->sphead->m_tmp_query :
                           thd->query);
	  lex->create_view_select_start= (yyvsp[-3].simple_string) - stmt_beg;
	}
    break;

  case 1965:
#line 9084 "sql_yacc.yy"
    { Lex->create_view_check= VIEW_CHECK_NONE; }
    break;

  case 1966:
#line 9086 "sql_yacc.yy"
    { Lex->create_view_check= VIEW_CHECK_CASCADED; }
    break;

  case 1967:
#line 9088 "sql_yacc.yy"
    { Lex->create_view_check= VIEW_CHECK_CASCADED; }
    break;

  case 1968:
#line 9090 "sql_yacc.yy"
    { Lex->create_view_check= VIEW_CHECK_LOCAL; }
    break;

  case 1969:
#line 9102 "sql_yacc.yy"
    {
	  LEX *lex= Lex;
	  sp_head *sp;
	 
	  if (lex->sphead)
	  {
	    my_error(ER_SP_NO_RECURSIVE_CREATE, MYF(0), "TRIGGER");
	    YYABORT;
	  }
	
	  if (!(sp= new sp_head()))
	    YYABORT;
	  sp->reset_thd_mem_root(YYTHD);
	  sp->init(lex);
	
	  lex->stmt_definition_begin= (yyvsp[-10].simple_string);
          lex->ident.str= (yyvsp[-5].simple_string);
          lex->ident.length= (yyvsp[-2].simple_string) - (yyvsp[-5].simple_string);

	  sp->m_type= TYPE_ENUM_TRIGGER;
	  lex->sphead= sp;
	  lex->spname= (yyvsp[-9].spname);
	  /*
	    We have to turn of CLIENT_MULTI_QUERIES while parsing a
	    stored procedure, otherwise yylex will chop it into pieces
	    at each ';'.
	  */
	  sp->m_old_cmq= YYTHD->client_capabilities & CLIENT_MULTI_QUERIES;
	  YYTHD->client_capabilities &= ~CLIENT_MULTI_QUERIES;
	  
	  bzero((char *)&lex->sp_chistics, sizeof(st_sp_chistics));
	  lex->sphead->m_chistics= &lex->sp_chistics;
	  lex->sphead->m_body_begin= lex->ptr;
          while (my_isspace(system_charset_info, lex->sphead->m_body_begin[0]))
            ++lex->sphead->m_body_begin;
	}
    break;

  case 1970:
#line 9139 "sql_yacc.yy"
    {
	  LEX *lex= Lex;
	  sp_head *sp= lex->sphead;
	  
	  lex->sql_command= SQLCOM_CREATE_TRIGGER;
	  sp->init_strings(YYTHD, lex, (yyvsp[-11].spname));
	  /* Restore flag if it was cleared above */
	  if (sp->m_old_cmq)
	    YYTHD->client_capabilities |= CLIENT_MULTI_QUERIES;
	  sp->restore_thd_mem_root(YYTHD);
	
	  if (sp->is_not_allowed_in_function("trigger"))
	      YYABORT;
	
	  /*
	    We have to do it after parsing trigger body, because some of
	    sp_proc_stmt alternatives are not saving/restoring LEX, so
	    lex->query_tables can be wiped out.
	  */
	  if (!lex->select_lex.add_table_to_list(YYTHD, (yyvsp[-6].table),
	                                         (LEX_STRING*) 0,
	                                         TL_OPTION_UPDATING,
                                                 TL_IGNORE))
	    YYABORT;
	}
    break;

  case 1971:
#line 9174 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  lex->udf.type= (yyvsp[-3].udf_type);
	  lex->stmt_definition_begin= (yyvsp[-2].simple_string);
	  lex->spname= (yyvsp[0].spname);
	}
    break;

  case 1972:
#line 9181 "sql_yacc.yy"
    {}
    break;

  case 1973:
#line 9183 "sql_yacc.yy"
    {
	  LEX *lex= Lex;
	  sp_head *sp;

	  if (lex->sphead)
	  {
	    my_error(ER_SP_NO_RECURSIVE_CREATE, MYF(0), "PROCEDURE");
	    YYABORT;
	  }
	  
	  lex->stmt_definition_begin= (yyvsp[-1].simple_string);
	  
	  /* Order is important here: new - reset - init */
	  sp= new sp_head();
	  sp->reset_thd_mem_root(YYTHD);
	  sp->init(lex);

	  sp->m_type= TYPE_ENUM_PROCEDURE;
	  lex->sphead= sp;
	  /*
	   * We have to turn of CLIENT_MULTI_QUERIES while parsing a
	   * stored procedure, otherwise yylex will chop it into pieces
	   * at each ';'.
	   */
	  sp->m_old_cmq= YYTHD->client_capabilities & CLIENT_MULTI_QUERIES;
	  YYTHD->client_capabilities &= (~CLIENT_MULTI_QUERIES);
	}
    break;

  case 1974:
#line 9211 "sql_yacc.yy"
    {
	  LEX *lex= Lex;

	  lex->sphead->m_param_begin= lex->tok_start+1;
	}
    break;

  case 1975:
#line 9218 "sql_yacc.yy"
    {
	  LEX *lex= Lex;

	  lex->sphead->m_param_end= lex->tok_start;
	  bzero((char *)&lex->sp_chistics, sizeof(st_sp_chistics));
	}
    break;

  case 1976:
#line 9225 "sql_yacc.yy"
    {
	  LEX *lex= Lex;

	  lex->sphead->m_chistics= &lex->sp_chistics;
	  lex->sphead->m_body_begin= lex->tok_start;
	}
    break;

  case 1977:
#line 9232 "sql_yacc.yy"
    {
	  LEX *lex= Lex;
	  sp_head *sp= lex->sphead;

	  sp->init_strings(YYTHD, lex, (yyvsp[-9].spname));
	  lex->sql_command= SQLCOM_CREATE_PROCEDURE;
	  /* Restore flag if it was cleared above */
	  if (sp->m_old_cmq)
	    YYTHD->client_capabilities |= CLIENT_MULTI_QUERIES;
	  sp->restore_thd_mem_root(YYTHD);
	}
    break;

  case 1978:
#line 9248 "sql_yacc.yy"
    {
        Lex->sql_command = SQLCOM_XA_START;
      }
    break;

  case 1979:
#line 9252 "sql_yacc.yy"
    {
        Lex->sql_command = SQLCOM_XA_END;
      }
    break;

  case 1980:
#line 9256 "sql_yacc.yy"
    {
        Lex->sql_command = SQLCOM_XA_PREPARE;
      }
    break;

  case 1981:
#line 9260 "sql_yacc.yy"
    {
        Lex->sql_command = SQLCOM_XA_COMMIT;
      }
    break;

  case 1982:
#line 9264 "sql_yacc.yy"
    {
        Lex->sql_command = SQLCOM_XA_ROLLBACK;
      }
    break;

  case 1983:
#line 9268 "sql_yacc.yy"
    {
        Lex->sql_command = SQLCOM_XA_RECOVER;
      }
    break;

  case 1984:
#line 9274 "sql_yacc.yy"
    {
       YYERROR_UNLESS((yyvsp[0].string)->length() <= MAXGTRIDSIZE);
       if (!(Lex->xid=(XID *)YYTHD->alloc(sizeof(XID))))
         YYABORT;
       Lex->xid->set(1L, (yyvsp[0].string)->ptr(), (yyvsp[0].string)->length(), 0, 0);
     }
    break;

  case 1985:
#line 9281 "sql_yacc.yy"
    {
       YYERROR_UNLESS((yyvsp[-2].string)->length() <= MAXGTRIDSIZE && (yyvsp[0].string)->length() <= MAXBQUALSIZE);
       if (!(Lex->xid=(XID *)YYTHD->alloc(sizeof(XID))))
         YYABORT;
       Lex->xid->set(1L, (yyvsp[-2].string)->ptr(), (yyvsp[-2].string)->length(), (yyvsp[0].string)->ptr(), (yyvsp[0].string)->length());
     }
    break;

  case 1986:
#line 9288 "sql_yacc.yy"
    {
       YYERROR_UNLESS((yyvsp[-4].string)->length() <= MAXGTRIDSIZE && (yyvsp[-2].string)->length() <= MAXBQUALSIZE);
       if (!(Lex->xid=(XID *)YYTHD->alloc(sizeof(XID))))
         YYABORT;
       Lex->xid->set((yyvsp[0].ulong_num), (yyvsp[-4].string)->ptr(), (yyvsp[-4].string)->length(), (yyvsp[-2].string)->ptr(), (yyvsp[-2].string)->length());
     }
    break;

  case 1987:
#line 9296 "sql_yacc.yy"
    {}
    break;

  case 1988:
#line 9297 "sql_yacc.yy"
    {}
    break;

  case 1989:
#line 9301 "sql_yacc.yy"
    { Lex->xa_opt=XA_NONE;        }
    break;

  case 1990:
#line 9302 "sql_yacc.yy"
    { Lex->xa_opt=XA_JOIN;        }
    break;

  case 1991:
#line 9303 "sql_yacc.yy"
    { Lex->xa_opt=XA_RESUME;      }
    break;

  case 1992:
#line 9307 "sql_yacc.yy"
    { Lex->xa_opt=XA_NONE;        }
    break;

  case 1993:
#line 9308 "sql_yacc.yy"
    { Lex->xa_opt=XA_ONE_PHASE;   }
    break;

  case 1994:
#line 9312 "sql_yacc.yy"
    { Lex->xa_opt=XA_NONE;        }
    break;

  case 1995:
#line 9313 "sql_yacc.yy"
    { Lex->xa_opt=XA_SUSPEND;     }
    break;

  case 1997:
#line 9318 "sql_yacc.yy"
    { }
    break;

  case 1998:
#line 9319 "sql_yacc.yy"
    { Lex->xa_opt=XA_FOR_MIGRATE; }
    break;


    }

/* Line 1037 of yacc.c.  */
#line 26512 "sql_yacc.cc"

  yyvsp -= yylen;
  yyssp -= yylen;


  YY_STACK_PRINT (yyss, yyssp);

  *++yyvsp = yyval;


  /* Now `shift' the result of the reduction.  Determine what state
     that goes to, based on the state we popped back to and the rule
     number reduced by.  */

  yyn = yyr1[yyn];

  yystate = yypgoto[yyn - YYNTOKENS] + *yyssp;
  if (0 <= yystate && yystate <= YYLAST && yycheck[yystate] == *yyssp)
    yystate = yytable[yystate];
  else
    yystate = yydefgoto[yyn - YYNTOKENS];

  goto yynewstate;


/*------------------------------------.
| yyerrlab -- here on detecting error |
`------------------------------------*/
yyerrlab:
  /* If not already recovering from an error, report this error.  */
  if (!yyerrstatus)
    {
      ++yynerrs;
#if YYERROR_VERBOSE
      yyn = yypact[yystate];

      if (YYPACT_NINF < yyn && yyn < YYLAST)
	{
	  YYSIZE_T yysize = 0;
	  int yytype = YYTRANSLATE (yychar);
	  const char* yyprefix;
	  char *yymsg;
	  int yyx;

	  /* Start YYX at -YYN if negative to avoid negative indexes in
	     YYCHECK.  */
	  int yyxbegin = yyn < 0 ? -yyn : 0;

	  /* Stay within bounds of both yycheck and yytname.  */
	  int yychecklim = YYLAST - yyn;
	  int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
	  int yycount = 0;

	  yyprefix = ", expecting ";
	  for (yyx = yyxbegin; yyx < yyxend; ++yyx)
	    if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR)
	      {
		yysize += yystrlen (yyprefix) + yystrlen (yytname [yyx]);
		yycount += 1;
		if (yycount == 5)
		  {
		    yysize = 0;
		    break;
		  }
	      }
	  yysize += (sizeof ("syntax error, unexpected ")
		     + yystrlen (yytname[yytype]));
	  yymsg = (char *) YYSTACK_ALLOC (yysize);
	  if (yymsg != 0)
	    {
	      char *yyp = yystpcpy (yymsg, "syntax error, unexpected ");
	      yyp = yystpcpy (yyp, yytname[yytype]);

	      if (yycount < 5)
		{
		  yyprefix = ", expecting ";
		  for (yyx = yyxbegin; yyx < yyxend; ++yyx)
		    if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR)
		      {
			yyp = yystpcpy (yyp, yyprefix);
			yyp = yystpcpy (yyp, yytname[yyx]);
			yyprefix = " or ";
		      }
		}
	      yyerror (yymsg);
	      YYSTACK_FREE (yymsg);
	    }
	  else
	    yyerror ("syntax error; also virtual memory exhausted");
	}
      else
#endif /* YYERROR_VERBOSE */
	yyerror ("syntax error");
    }



  if (yyerrstatus == 3)
    {
      /* If just tried and failed to reuse look-ahead token after an
	 error, discard it.  */

      if (yychar <= YYEOF)
        {
          /* If at end of input, pop the error token,
	     then the rest of the stack, then return failure.  */
	  if (yychar == YYEOF)
	     for (;;)
	       {

		 YYPOPSTACK;
		 if (yyssp == yyss)
		   YYABORT;
		 yydestruct ("Error: popping",
                             yystos[*yyssp], yyvsp);
	       }
        }
      else
	{
	  yydestruct ("Error: discarding", yytoken, &yylval);
	  yychar = YYEMPTY;
	}
    }

  /* Else will try to reuse look-ahead token after shifting the error
     token.  */
  goto yyerrlab1;


/*---------------------------------------------------.
| yyerrorlab -- error raised explicitly by YYERROR.  |
`---------------------------------------------------*/
yyerrorlab:

#ifdef __GNUC__
  /* Pacify GCC when the user code never invokes YYERROR and the label
     yyerrorlab therefore never appears in user code.  */
  if (0)
     goto yyerrorlab;
#endif

yyvsp -= yylen;
  yyssp -= yylen;
  yystate = *yyssp;
  goto yyerrlab1;


/*-------------------------------------------------------------.
| yyerrlab1 -- common code for both syntax error and YYERROR.  |
`-------------------------------------------------------------*/
yyerrlab1:
  yyerrstatus = 3;	/* Each real token shifted decrements this.  */

  for (;;)
    {
      yyn = yypact[yystate];
      if (yyn != YYPACT_NINF)
	{
	  yyn += YYTERROR;
	  if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYTERROR)
	    {
	      yyn = yytable[yyn];
	      if (0 < yyn)
		break;
	    }
	}

      /* Pop the current state because it cannot handle the error token.  */
      if (yyssp == yyss)
	YYABORT;


      yydestruct ("Error: popping", yystos[yystate], yyvsp);
      YYPOPSTACK;
      yystate = *yyssp;
      YY_STACK_PRINT (yyss, yyssp);
    }

  if (yyn == YYFINAL)
    YYACCEPT;

  *++yyvsp = yylval;


  /* Shift the error token. */
  YY_SYMBOL_PRINT ("Shifting", yystos[yyn], yyvsp, yylsp);

  yystate = yyn;
  goto yynewstate;


/*-------------------------------------.
| yyacceptlab -- YYACCEPT comes here.  |
`-------------------------------------*/
yyacceptlab:
  yyresult = 0;
  goto yyreturn;

/*-----------------------------------.
| yyabortlab -- YYABORT comes here.  |
`-----------------------------------*/
yyabortlab:
  yydestruct ("Error: discarding lookahead",
              yytoken, &yylval);
  yychar = YYEMPTY;
  yyresult = 1;
  goto yyreturn;

#ifndef yyoverflow
/*----------------------------------------------.
| yyoverflowlab -- parser overflow comes here.  |
`----------------------------------------------*/
yyoverflowlab:
  yyerror ("parser stack overflow");
  yyresult = 2;
  /* Fall through.  */
#endif

yyreturn:
#ifndef yyoverflow
  if (yyss != yyssa)
    YYSTACK_FREE (yyss);
#endif
  return yyresult;
}



