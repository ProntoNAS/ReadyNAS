Description: fix crash via rar files with zero dictionary size
Origin: upstream, https://github.com/libarchive/libarchive/commit/05caadc7eedbef471ac9610809ba683f0c698700
Origin: upstream, https://github.com/libarchive/libarchive/commit/5e29e82390bccfff514e710c90de8089ab5ef269
Bug: https://github.com/libarchive/libarchive/issues/719

Index: libarchive-3.1.2/libarchive/archive_ppmd7.c
===================================================================
--- libarchive-3.1.2.orig/libarchive/archive_ppmd7.c	2013-01-13 20:43:45.000000000 -0500
+++ libarchive-3.1.2/libarchive/archive_ppmd7.c	2016-07-13 09:19:32.404160651 -0400
@@ -126,6 +126,11 @@
 {
   if (p->Base == 0 || p->Size != size)
   {
+    /* RestartModel() below assumes that p->Size >= UNIT_SIZE
+       (see the calculation of m->MinContext). */
+    if (size < UNIT_SIZE) {
+      return False;
+    }
     Ppmd7_Free(p, alloc);
     p->AlignOffset =
       #ifdef PPMD_32BIT
Index: libarchive-3.1.2/libarchive/archive_read_support_format_rar.c
===================================================================
--- libarchive-3.1.2.orig/libarchive/archive_read_support_format_rar.c	2016-07-13 09:19:15.539950535 -0400
+++ libarchive-3.1.2/libarchive/archive_read_support_format_rar.c	2016-07-13 09:19:29.980130454 -0400
@@ -2049,6 +2049,12 @@
       rar->range_dec.Stream = &rar->bytein;
       __archive_ppmd7_functions.Ppmd7_Construct(&rar->ppmd7_context);
 
+      if (rar->dictionary_size == 0) {
+	      archive_set_error(&a->archive, ARCHIVE_ERRNO_FILE_FORMAT,
+                          "Invalid zero dictionary size");
+	      return (ARCHIVE_FATAL);
+      }
+
       if (!__archive_ppmd7_functions.Ppmd7_Alloc(&rar->ppmd7_context,
         rar->dictionary_size, &g_szalloc))
       {
