Backport of:

From 9e0689cff30f64defb2691003143a7ad3126c74a Mon Sep 17 00:00:00 2001
From: Tim Kientzle <kientzle@acm.org>
Date: Sat, 7 Feb 2015 19:03:43 -0800
Subject: [PATCH] Issue 406: Segfault on malformed Zip archive

Issue here was reading a size field as a signed number
and then using that as an offset.  Fixed by correctly
masking the size value to an unsigned result.

Includes test based on the archive provided in the issue report.
---
 Makefile.am                                        |  2 +
 libarchive/archive_read_support_format_zip.c       |  4 +-
 libarchive/test/CMakeLists.txt                     |  1 +
 libarchive/test/test_read_format_zip_malformed.c   | 61 ++++++++++++++++++++++
 .../test/test_read_format_zip_malformed1.zip.uu    |  5 ++
 5 files changed, 71 insertions(+), 2 deletions(-)
 create mode 100644 libarchive/test/test_read_format_zip_malformed.c
 create mode 100644 libarchive/test/test_read_format_zip_malformed1.zip.uu

Index: libarchive-3.1.2/Makefile.am
===================================================================
--- libarchive-3.1.2.orig/Makefile.am	2016-07-13 11:31:27.978447322 -0400
+++ libarchive-3.1.2/Makefile.am	2016-07-13 11:31:27.974447272 -0400
@@ -428,6 +428,7 @@
 	libarchive/test/test_read_format_zip_comment_stored.c	\
 	libarchive/test/test_read_format_zip_filename.c		\
 	libarchive/test/test_read_format_zip_mac_metadata.c	\
+	libarchive/test/test_read_format_zip_malformed.c	\
 	libarchive/test/test_read_format_zip_sfx.c		\
 	libarchive/test/test_read_large.c			\
 	libarchive/test/test_read_pax_truncated.c		\
@@ -684,6 +685,7 @@
 	libarchive/test/test_read_format_zip_filename_utf8_ru.zip.uu	\
 	libarchive/test/test_read_format_zip_length_at_end.zip.uu	\
 	libarchive/test/test_read_format_zip_mac_metadata.zip.uu	\
+	libarchive/test/test_read_format_zip_malformed1.zip.uu		\
 	libarchive/test/test_read_format_zip_sfx.uu			\
 	libarchive/test/test_read_format_zip_symlink.zip.uu		\
 	libarchive/test/test_read_format_zip_ux.zip.uu			\
Index: libarchive-3.1.2/libarchive/archive_read_support_format_zip.c
===================================================================
--- libarchive-3.1.2.orig/libarchive/archive_read_support_format_zip.c	2016-07-13 11:31:27.978447322 -0400
+++ libarchive-3.1.2/libarchive/archive_read_support_format_zip.c	2016-07-13 11:31:27.974447272 -0400
@@ -1714,7 +1714,7 @@
 			if (datasize >= 1 && p[offset] == 1) {/* version=1 */
 				if (datasize >= 4) {
 					/* get a uid size. */
-					uidsize = p[offset+1];
+					uidsize = 0xff & (int)p[offset+1];
 					if (uidsize == 2)
 						zip_entry->uid =
 						    archive_le16dec(
@@ -1726,7 +1726,7 @@
 				}
 				if (datasize >= (2 + uidsize + 3)) {
 					/* get a gid size. */
-					gidsize = p[offset+2+uidsize];
+					gidsize = 0xff & (int)p[offset+2+uidsize];
 					if (gidsize == 2)
 						zip_entry->gid =
 						    archive_le16dec(
Index: libarchive-3.1.2/libarchive/test/CMakeLists.txt
===================================================================
--- libarchive-3.1.2.orig/libarchive/test/CMakeLists.txt	2016-07-13 11:31:27.978447322 -0400
+++ libarchive-3.1.2/libarchive/test/CMakeLists.txt	2016-07-13 11:31:27.974447272 -0400
@@ -143,6 +143,7 @@
     test_read_format_zip_comment_stored.c
     test_read_format_zip_filename.c
     test_read_format_zip_mac_metadata.c
+    test_read_format_zip_malformed.c
     test_read_format_zip_sfx.c
     test_read_large.c
     test_read_pax_truncated.c
Index: libarchive-3.1.2/libarchive/test/test_read_format_zip_malformed.c
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ libarchive-3.1.2/libarchive/test/test_read_format_zip_malformed.c	2016-07-13 11:31:27.974447272 -0400
@@ -0,0 +1,61 @@
+/*-
+ * Copyright (c) 2003-2007 Tim Kientzle
+ * Copyright (c) 2011 Michihiro NAKAJIMA
+ * All rights reserved.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ * 1. Redistributions of source code must retain the above copyright
+ *    notice, this list of conditions and the following disclaimer.
+ * 2. Redistributions in binary form must reproduce the above copyright
+ *    notice, this list of conditions and the following disclaimer in the
+ *    documentation and/or other materials provided with the distribution.
+ *
+ * THIS SOFTWARE IS PROVIDED BY THE AUTHOR(S) ``AS IS'' AND ANY EXPRESS OR
+ * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
+ * IN NO EVENT SHALL THE AUTHOR(S) BE LIABLE FOR ANY DIRECT, INDIRECT,
+ * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
+ * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
+ * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
+ * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
+ * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+ */
+#include "test.h"
+__FBSDID("$FreeBSD$");
+
+static void
+test_malformed1(void)
+{
+	const char *refname = "test_read_format_zip_malformed1.zip";
+	struct archive *a;
+	struct archive_entry *ae;
+	char *p;
+	size_t s;
+
+	extract_reference_file(refname);
+
+	/* Verify with seeking reader. */
+	assert((a = archive_read_new()) != NULL);
+	assertEqualIntA(a, ARCHIVE_OK, archive_read_support_filter_all(a));
+	assertEqualIntA(a, ARCHIVE_OK, archive_read_support_format_all(a));
+	assertEqualIntA(a, ARCHIVE_OK, archive_read_open_filename(a, refname, 10240));
+	assertEqualIntA(a, ARCHIVE_OK, archive_read_next_header(a, &ae));
+	assertEqualIntA(a, ARCHIVE_OK, archive_read_free(a));
+
+	/* Verify with streaming reader. */
+	p = slurpfile(&s, refname);
+	assert((a = archive_read_new()) != NULL);
+	assertEqualIntA(a, ARCHIVE_OK, archive_read_support_filter_all(a));
+	assertEqualIntA(a, ARCHIVE_OK, archive_read_support_format_all(a));
+	assertEqualIntA(a, ARCHIVE_OK, read_open_memory(a, p, s, 31));
+	assertEqualIntA(a, ARCHIVE_OK, archive_read_next_header(a, &ae));
+	assertEqualIntA(a, ARCHIVE_OK, archive_read_free(a));
+}
+
+DEFINE_TEST(test_read_format_zip_malformed)
+{
+	test_malformed1();
+}
Index: libarchive-3.1.2/libarchive/test/test_read_format_zip_malformed1.zip.uu
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ libarchive-3.1.2/libarchive/test/test_read_format_zip_malformed1.zip.uu	2016-07-13 11:31:27.974447272 -0400
@@ -0,0 +1,5 @@
+begin 644 test_read_format_zip_malformed1.zip
+M4$L#!#`P,#`P,#`P,#`P,#`P,#`P,#`P,#`$`!P`,#`P,#`P"0`P,#`P,#`P
+1,#!U>`L``80P,#`P,#`P,#``
+`
+end
